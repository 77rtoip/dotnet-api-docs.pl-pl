<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="888fd-101">Klasa abstrakcyjna, która definiuje zachowanie konwersji do serializacji z reprezentacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="888fd-101">Abstract class that defines conversion behavior for serialization from an object representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-102">Ciąg, który zwraca konwerter używany do serializacji musi być bez utraty i konwerter musi zawsze zwracają te same parametry dla określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="888fd-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="888fd-103">Jeśli konwerter typów (pochodną <xref:System.ComponentModel.TypeConverter>) nie spełnia te wymagania w jego `ConvertTo` implementacje ciąg w danych wyjściowych, niestandardowego <xref:System.Windows.Markup.ValueSerializer> musi być zadeklarowany.</span><span class="sxs-lookup"><span data-stu-id="888fd-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="888fd-104">Albo <xref:System.Windows.Markup.ValueSerializer> powinna spełniać wymagania, lub wartość null <xref:System.Windows.Markup.ValueSerializer> powinna być skojarzona z typem.</span><span class="sxs-lookup"><span data-stu-id="888fd-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="888fd-105">A <xref:System.Windows.Markup.ValueSerializer> jest skojarzona z typem, stosując <xref:System.Windows.Markup.ValueSerializerAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="888fd-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="888fd-106">Wartość null <xref:System.Windows.Markup.ValueSerializer> wskazuje konwertera typu powinny być ignorowane w przypadku konwersji przekonwertować na ciąg z wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="888fd-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="888fd-107">Implementacja <xref:System.Windows.Markup.ValueSerializer> unikać zgłaszanie wyjątków.</span><span class="sxs-lookup"><span data-stu-id="888fd-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="888fd-108">Wszelkie wyjątki zgłaszane można zakończyć serializacji.</span><span class="sxs-lookup"><span data-stu-id="888fd-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="888fd-109"><xref:System.Windows.Markup.IValueSerializerContext> Aby uzyskać <xref:System.Windows.Markup.ValueSerializer> i jego interfejsy API jest odpowiednikiem <xref:System.ComponentModel.ITypeDescriptorContext> dla <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="888fd-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="888fd-110">W rzeczywistości <xref:System.Windows.Markup.IValueSerializerContext> dziedziczy <xref:System.ComponentModel.ITypeDescriptorContext>.</span><span class="sxs-lookup"><span data-stu-id="888fd-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="888fd-111">Gdy <xref:System.Windows.Markup.ValueSerializer> jest wywoływana przez klasę pochodną interfejsu API, (zwykle proces serializator) wywołujący kontekstu, która może zapewnić pewnych usług.</span><span class="sxs-lookup"><span data-stu-id="888fd-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="888fd-112">Ze względu na ogólne wskazówki który <xref:System.Windows.Markup.ValueSerializer> musi nie zgłaszają wyjątki.</span><span class="sxs-lookup"><span data-stu-id="888fd-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="888fd-113">Nie można zwrócić określonej usługi z kontekstu także nie może zostać zwrócone wszystkie wyjątki.</span><span class="sxs-lookup"><span data-stu-id="888fd-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="888fd-114">Ta klasa były dostępne w programie WPF określonego zestawu WindowsBase w poprzednich wersjach programu .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="888fd-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="888fd-115">W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> znajduje się w zestawie System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="888fd-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="888fd-116">Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="888fd-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="888fd-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.ValueSerializer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="888fd-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-118">Treść tego konstruktora jest pusta. <xref:System.Windows.Markup.ValueSerializer> klasa nie zawiera żadnych wartości, które wymagają inicjalizacji.</span><span class="sxs-lookup"><span data-stu-id="888fd-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="888fd-119">Ciąg, który ma zostać obliczone dla konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-119">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="888fd-120">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-120">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="888fd-121">W przypadku przesłonięcia w klasie pochodnej, określa, czy określony <see cref="T:System.String" /> można przekonwertować na wystąpienie typu który wykonania <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługuje.</span><span class="sxs-lookup"><span data-stu-id="888fd-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns>
          <span data-ttu-id="888fd-122"><see langword="true" /> Jeśli można przekonwertować wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-122"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-123">Podstawowa implementacja zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="888fd-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="888fd-124">Obiekt, który ma zostać obliczone dla konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-124">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="888fd-125">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-125">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="888fd-126">W przypadku przesłonięcia w klasie pochodnej, określa, czy określony obiekt mogą być konwertowane na <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns>
          <span data-ttu-id="888fd-127"><see langword="true" /> Jeśli <paramref name="value" /> mogą być konwertowane na <see cref="T:System.String" />; w przeciwnym razie <see langword="false." /></span><span class="sxs-lookup"><span data-stu-id="888fd-127"><see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-128">Podstawowa implementacja zawsze zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="888fd-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="888fd-129">Ciąg do konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-129">The string to convert.</span></span></param>
        <param name="context"><span data-ttu-id="888fd-130">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-130">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="888fd-131">W przypadku przesłonięcia w klasie pochodnej, konwertuje <see cref="T:System.String" /> do wystąpienia typu który wykonania <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługuje.</span><span class="sxs-lookup"><span data-stu-id="888fd-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="888fd-132">Nowe wystąpienie typu który wykonania <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługuje oparte na podane <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-133">Zawsze Podstawowa implementacja zwraca wyjątek.</span><span class="sxs-lookup"><span data-stu-id="888fd-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="888fd-134"><paramref name="value" /> Nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="888fd-134"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="888fd-135">Unikaj zgłaszanie wyjątków z implementacji.</span><span class="sxs-lookup"><span data-stu-id="888fd-135">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="888fd-136">Zobacz <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="888fd-137">Obiekt, który można przekonwertować na ciąg.</span><span class="sxs-lookup"><span data-stu-id="888fd-137">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="888fd-138">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-138">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="888fd-139">W przypadku przesłonięcia w klasie pochodnej, konwertuje określony obiekt do <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="888fd-140">Reprezentacja ciągu określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="888fd-140">A string representation of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-141">Zawsze Podstawowa implementacja zwraca wyjątek.</span><span class="sxs-lookup"><span data-stu-id="888fd-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="888fd-142"><paramref name="value" /> Nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="888fd-142"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="888fd-143">Unikaj zgłaszanie wyjątków z implementacji.</span><span class="sxs-lookup"><span data-stu-id="888fd-143">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="888fd-144">Zobacz <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="888fd-145">Obiekt, który nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="888fd-145">The object that could not be converted.</span></span></param>
        <summary><span data-ttu-id="888fd-146">Zwraca wyjątek, aby zgłosić, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-146">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="888fd-147"><see cref="T:System.Exception" /> Obiekt wyjątku, który ma zostać zgłoszony, gdy <see langword="ConvertFrom" /> nie można przeprowadzić konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-148">Rzeczywiste `throw` — słowo kluczowe nie jest wywoływany przez tę metodę, dlatego jest typowy sposób `throw GetConvertFromException` (z parametrami podano).</span><span class="sxs-lookup"><span data-stu-id="888fd-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="888fd-149">Określony wyjątek zwrócony <xref:System.InvalidOperationException>, z `value` przekazano komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="888fd-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="888fd-150">Wzorzec użycia są takie same jak narzędzia wyjątek w <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="888fd-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="888fd-151">Obiekt, który nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="888fd-151">The object that could not be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="888fd-152">Typ reprezentujący typ konwersji próbował przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="888fd-152">A type that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="888fd-153">Zwraca wyjątek, aby zgłosić, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-153">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="888fd-154"><see cref="T:System.Exception" /> Obiekt wyjątku, który ma zostać zgłoszony, gdy <see langword="ConvertTo" /> nie można przeprowadzić konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-155">Rzeczywiste `throw` — słowo kluczowe nie jest wywoływany przez tę metodę, dlatego jest typowy sposób `throw GetConvertToException` (z `value` udostępniony parametr).</span><span class="sxs-lookup"><span data-stu-id="888fd-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="888fd-156">Określony wyjątek zwrócony <xref:System.InvalidOperationException>, z `value` przekazano komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="888fd-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="888fd-157">Wzorzec użycia są takie same jak narzędzia wyjątek w <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="888fd-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="888fd-158">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> dla obiekt.</span><span class="sxs-lookup"><span data-stu-id="888fd-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="888fd-159">Deskryptor właściwości CLR dla właściwości można było serializować.</span><span class="sxs-lookup"><span data-stu-id="888fd-159">The CLR property descriptor for the property to be serialized.</span></span></param>
        <summary><span data-ttu-id="888fd-160">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> zadeklarowanym dla właściwości, przekazując deskryptor właściwości CLR dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="888fd-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span></span></summary>
        <returns><span data-ttu-id="888fd-161">Serializator skojarzone z określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="888fd-161">The serializer associated with the specified property.</span></span> <span data-ttu-id="888fd-162">Może zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-162">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-163">A <xref:System.Windows.Markup.ValueSerializer> określonej dla właściwości lub typu, który jest używany jako wartość właściwości, stosując <xref:System.Windows.Markup.ValueSerializerAttribute> atrybutu w deklaracji właściwości lub typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="888fd-164"><xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> Metoda jest metodą Narzędzie odczytuje informacje o systemie typu CLR, która zwraca nową <xref:System.Windows.Markup.ValueSerializer> klasy na podstawie atrybutu Jeśli znaleziono właściwość lub jeśli następnie znaleziono go na typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="888fd-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="888fd-165">`null` może być zwrócony, jeśli istnieje nie takie serializatora.</span><span class="sxs-lookup"><span data-stu-id="888fd-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="888fd-166">`null` Ponadto może być zwrócony Jeśli typ lub właściwość celowo ma atrybut o wartości null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="888fd-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="888fd-167">Inny tryb który <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> obsługuje zwraca wewnętrznej `TypeConverterValueSerializer` klasy, która jest <xref:System.Windows.Markup.ValueSerializer> implementację, która opakowuje <xref:System.ComponentModel.TypeConverter> i wykonuje translację `Convert` metody `Convert*String` metody (na przykład <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>jest wywoływana z danych wejściowych <xref:System.String> wpisz i umożliwia to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="888fd-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="888fd-168">Można to zrobić tylko w przypadkach, gdy są spełnione wszystkie z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="888fd-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="888fd-169">A <xref:System.ComponentModel.TypeConverterAttribute> znajduje się na odpowiednich właściwość lub typ odpowiednie właściwości.</span><span class="sxs-lookup"><span data-stu-id="888fd-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="888fd-170">Wskazany <xref:System.ComponentModel.TypeConverter> można pomyślnie wykonane.</span><span class="sxs-lookup"><span data-stu-id="888fd-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="888fd-171"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>o nazwie, odwołuje się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="888fd-172"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>o nazwie, odwołuje się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="888fd-173"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>o nazwie, odwołuje się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="888fd-174">Specjalne przypadki są następujące: <xref:System.DateTime> typy zwracane <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> typy zwracać serializator wewnętrznych, ale funkcjonalności (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="888fd-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="888fd-175"><paramref name="descriptor" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-175"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="888fd-176">Typ do pobrania <see cref="T:System.Windows.Markup.ValueSerializer" /> dla.</span><span class="sxs-lookup"><span data-stu-id="888fd-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <summary><span data-ttu-id="888fd-177">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> zgłoszone dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span></span></summary>
        <returns><span data-ttu-id="888fd-178">Serializator skojarzone z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="888fd-178">The serializer associated with the specified type.</span></span> <span data-ttu-id="888fd-179">Może zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-179">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-180">A <xref:System.Windows.Markup.ValueSerializer> dla typu jest wskazane przez zastosowanie <xref:System.Windows.Markup.ValueSerializerAttribute> atrybutu w deklaracji typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="888fd-181"><xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> Metoda jest metodą Narzędzie odczytuje informacje o systemie typu CLR, która zwraca nową <xref:System.Windows.Markup.ValueSerializer> klasy na podstawie atrybutu Jeśli znalezione na określonym `type`.</span><span class="sxs-lookup"><span data-stu-id="888fd-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="888fd-182">`null` może być zwrócony, jeśli istnieje nie takie serializatora.</span><span class="sxs-lookup"><span data-stu-id="888fd-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="888fd-183">`null` również może być zwrócony Jeśli typ ma atrybut celowo wartości null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="888fd-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="888fd-184">Inny tryb który <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> obsługuje zwraca wewnętrznej `TypeConverterValueSerializer` klasy, która jest <xref:System.Windows.Markup.ValueSerializer> implementację, która opakowuje <xref:System.ComponentModel.TypeConverter> i wykonuje translację `Convert` metody `Convert*String` metody (na przykład <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>jest wywoływana z danych wejściowych <xref:System.String> wpisz i umożliwia to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="888fd-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="888fd-185">Można to zrobić tylko w przypadkach, gdy są spełnione wszystkie z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="888fd-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="888fd-186">A <xref:System.ComponentModel.TypeConverterAttribute> znajduje się na `type`.</span><span class="sxs-lookup"><span data-stu-id="888fd-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="888fd-187">Wskazany <xref:System.ComponentModel.TypeConverter> można pomyślnie wykonane.</span><span class="sxs-lookup"><span data-stu-id="888fd-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="888fd-188"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>o nazwie, odwołuje się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="888fd-189"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>o nazwie, odwołuje się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="888fd-190"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>o nazwie, odwołuje się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="888fd-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="888fd-191">Specjalne przypadki są następujące: <xref:System.DateTime> typy zwracane <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> typy zwracać serializator wewnętrznych, ale funkcjonalności (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="888fd-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="888fd-192"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-192"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="888fd-193">Deskryptor właściwości można było serializować.</span><span class="sxs-lookup"><span data-stu-id="888fd-193">Descriptor for the property to be serialized.</span></span></param>
        <param name="context"><span data-ttu-id="888fd-194">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-194">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="888fd-195">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> zgłoszone dla określonej właściwości przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="888fd-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="888fd-196">Serializator skojarzone z określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="888fd-196">The serializer associated with the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-197">Zamiast polegania wyłącznie na atrybuty zgłoszone w systemie typów CLR, używa tego przeciążenia `context` jako usługa i wywołuje implementacji usługi <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="888fd-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="888fd-198"><xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> Implementacji zwykle może również polegać na `descriptor`, ale mogą implementować specjalnego zachowania w przypadku niektórych kontekstach.</span><span class="sxs-lookup"><span data-stu-id="888fd-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="888fd-199">Ta metoda powinna być wywoływana, gdy obiekt wywołujący ma dostępne <xref:System.Windows.Markup.IValueSerializerContext> z usługi.</span><span class="sxs-lookup"><span data-stu-id="888fd-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="888fd-200">To zapewni, że zostały prawidłowo <xref:System.Windows.Markup.ValueSerializer> jest zwracana dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="888fd-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="888fd-201">Jeśli kontekst zwraca `null` z jego <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> z określonym `descriptor`, lub jeśli kontekst określisz `null`, to zachowanie jest takie same jak wywołanie <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="888fd-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="888fd-202"><paramref name="descriptor" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-202"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="888fd-203">Typ do pobrania <see cref="T:System.Windows.Markup.ValueSerializer" /> dla.</span><span class="sxs-lookup"><span data-stu-id="888fd-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <param name="context"><span data-ttu-id="888fd-204">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-204">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="888fd-205">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> zgłoszone dla określonego typu, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="888fd-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="888fd-206">Serializator skojarzone z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="888fd-206">The serializer associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-207">Zamiast polegania wyłącznie na atrybuty zgłoszone w systemie typów CLR, używa tego przeciążenia `context` jako usługa i wywołuje implementacji usługi <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="888fd-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="888fd-208"><xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> Implementacji zwykle może również polegać na `type`, ale mogą implementować specjalnego zachowania w przypadku niektórych kontekstach.</span><span class="sxs-lookup"><span data-stu-id="888fd-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="888fd-209">Ta metoda powinna być wywoływana, gdy obiekt wywołujący ma dostępne <xref:System.Windows.Markup.IValueSerializerContext> z usługi.</span><span class="sxs-lookup"><span data-stu-id="888fd-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="888fd-210">To zapewni, że zostały prawidłowo <xref:System.Windows.Markup.ValueSerializer> jest zwracana dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="888fd-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="888fd-211">Jeśli kontekst zwraca `null` z jego <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> z określonym `type`, lub jeśli kontekst określisz `null`, to zachowanie jest takie same jak wywołanie <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="888fd-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="888fd-212"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-212"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="888fd-213">Wartość serializowana.</span><span class="sxs-lookup"><span data-stu-id="888fd-213">The value being serialized.</span></span></param>
        <param name="context"><span data-ttu-id="888fd-214">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="888fd-214">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="888fd-215">Pobiera wyliczenie typów odwołuje się <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="888fd-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></summary>
        <returns><span data-ttu-id="888fd-216">Typy przekonwertować przez ten serializator.</span><span class="sxs-lookup"><span data-stu-id="888fd-216">The types converted by this serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="888fd-217">Wszystkie typy <xref:System.Windows.Markup.ValueSerializer> konwertuje powinny znajdować się w zwracanych wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="888fd-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="888fd-218">Dzięki temu serializatora do upewnij się, że serializator dezaktywowanie ma za mało informacji o typach, konwertuje ten serializator.</span><span class="sxs-lookup"><span data-stu-id="888fd-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="888fd-219">Tej metody jest zaawansowanym scenariuszu.</span><span class="sxs-lookup"><span data-stu-id="888fd-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="888fd-220">Zastępowanie powinien mieć tylko niezbędne w przypadku wdrażania systemu gdzie dostępne kontekst schematu XAML relacje właściwości ownertype system typów CLR nie będą zgłaszać wystarczających informacji.</span><span class="sxs-lookup"><span data-stu-id="888fd-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="888fd-221">Uwagi dotyczące użycia WPF</span><span class="sxs-lookup"><span data-stu-id="888fd-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="888fd-222">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] System właściwości implementuje serializator wartość wewnętrznego zastępujący <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> ponieważ koncepcji, czy może być dodany właścicieli ma właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="888fd-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="888fd-223"> wyrażenia również mieć specjalne obsługi wewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="888fd-223"> expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>