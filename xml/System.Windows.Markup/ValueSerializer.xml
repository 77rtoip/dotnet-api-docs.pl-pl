<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="531f9d9ba781b72f2ffeebff4f24830e253106be" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69166926" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="953fa-101">Klasa abstrakcyjna, która definiuje zachowanie konwersji dla serializacji z reprezentacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="953fa-101">Abstract class that defines conversion behavior for serialization from an object representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-102">Ciąg zwracany przez konwerter dla serializacji musi być krótszy, a konwerter musi zawsze zwracać ten sam ciąg dla określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="953fa-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="953fa-103">Jeśli konwerter typów (pochodny od <xref:System.ComponentModel.TypeConverter>) nie spełnia tych wymagań `ConvertTo` w implementacjach ciągów wyjściowych, musi być zadeklarowany jako niestandardowy <xref:System.Windows.Markup.ValueSerializer> .</span><span class="sxs-lookup"><span data-stu-id="953fa-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="953fa-104">Powinien spełniać wymagania lub wartość null <xref:System.Windows.Markup.ValueSerializer> powinna być skojarzona z typem. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="953fa-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="953fa-105">A <xref:System.Windows.Markup.ValueSerializer> jest skojarzony z typem przez <xref:System.Windows.Markup.ValueSerializerAttribute> zastosowanie atrybutu.</span><span class="sxs-lookup"><span data-stu-id="953fa-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="953fa-106">Wartość null <xref:System.Windows.Markup.ValueSerializer> wskazuje, że konwerter typów powinien być ignorowany w przypadku konwersji konwersji na ciąg z grafu obiektów.</span><span class="sxs-lookup"><span data-stu-id="953fa-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="953fa-107"><xref:System.Windows.Markup.ValueSerializer> Implementacja powinna unikać zgłaszania wyjątków.</span><span class="sxs-lookup"><span data-stu-id="953fa-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="953fa-108">Wszystkie zgłoszone wyjątki mogą kończyć serializację.</span><span class="sxs-lookup"><span data-stu-id="953fa-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="953fa-109"><xref:System.Windows.Markup.IValueSerializerContext>dla i jego interfejsy API są analogiczne <xref:System.ComponentModel.ITypeDescriptorContext> do dla <xref:System.ComponentModel.TypeConverter>. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="953fa-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="953fa-110">W rzeczywistości <xref:System.Windows.Markup.IValueSerializerContext> dziedziczy <xref:System.ComponentModel.ITypeDescriptorContext>.</span><span class="sxs-lookup"><span data-stu-id="953fa-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="953fa-111">Gdy wywoływany jest interfejs API klasy pochodnej,wywołujący(zazwyczajjesttoprocesserializatora)przekazujekontekst,którymożezapewnićpewneusługi.<xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="953fa-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="953fa-112">Ze względu na ogólne wskazówki, <xref:System.Windows.Markup.ValueSerializer> które nie mogą generować wyjątków.</span><span class="sxs-lookup"><span data-stu-id="953fa-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="953fa-113">Niepowodzenie zwrócenia określonej usługi z kontekstu nie może również generować żadnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="953fa-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="953fa-114">W poprzednich wersjach .NET Framework Ta klasa istniała w zestawie specyficznym dla WPF 'Windowsbase.</span><span class="sxs-lookup"><span data-stu-id="953fa-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="953fa-115">W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]programie <xref:System.Windows.Markup.ValueSerializer> , znajduje się w zestawie System. XAML.</span><span class="sxs-lookup"><span data-stu-id="953fa-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="953fa-116">Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="953fa-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="953fa-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.ValueSerializer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="953fa-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-118">Treść tego konstruktora jest pusta; <xref:System.Windows.Markup.ValueSerializer> Klasa nie zawiera żadnych wartości, które wymagają inicjalizacji.</span><span class="sxs-lookup"><span data-stu-id="953fa-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="953fa-119">Ciąg do obliczenia dla konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-119">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="953fa-120">Informacje kontekstowe, które są używane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-120">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="953fa-121">Gdy jest zastępowany w klasie pochodnej, określa, czy <see cref="T:System.String" /> określony element może być konwertowany do wystąpienia typu <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługiwanego przez implementację.</span><span class="sxs-lookup"><span data-stu-id="953fa-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="953fa-122"><see langword="true" />Jeśli wartość może zostać przekonwertowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="953fa-122"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-123">Podstawowa implementacja zawsze zwraca wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="953fa-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="953fa-124">Obiekt do obliczenia dla konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-124">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="953fa-125">Informacje kontekstowe, które są używane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-125">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="953fa-126">Gdy jest zastępowany w klasie pochodnej, określa, czy określony obiekt może być konwertowany na <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="953fa-127"><see langword="true" />Jeśli można dokonać konwersji na; w przeciwnym razie, <see cref="T:System.String" /> <paramref name="value" /><see langword="false." /></span><span class="sxs-lookup"><span data-stu-id="953fa-127"><see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-128">Podstawowa implementacja zawsze zwraca wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="953fa-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="953fa-129">Ciąg do konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-129">The string to convert.</span></span></param>
        <param name="context"><span data-ttu-id="953fa-130">Informacje kontekstowe, które są używane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-130">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="953fa-131">Gdy jest zastępowany w klasie pochodnej, konwertuje <see cref="T:System.String" /> do wystąpienia typu, który <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługuje implementacja.</span><span class="sxs-lookup"><span data-stu-id="953fa-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="953fa-132">Nowe wystąpienie typu, które <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługuje implementacja, na podstawie podanego <paramref name="value" />elementu.</span><span class="sxs-lookup"><span data-stu-id="953fa-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-133">Implementacja podstawowa zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="953fa-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="953fa-134"><paramref name="value" />nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="953fa-134"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="953fa-135">Unikaj zgłaszania wyjątków od implementacji.</span><span class="sxs-lookup"><span data-stu-id="953fa-135">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="953fa-136">Zobacz <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="953fa-137">Obiekt do przekonwertowania na ciąg.</span><span class="sxs-lookup"><span data-stu-id="953fa-137">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="953fa-138">Informacje kontekstowe, które są używane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-138">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="953fa-139">Gdy jest zastępowany w klasie pochodnej, konwertuje określony obiekt na <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="953fa-140">Reprezentacja określonego obiektu w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="953fa-140">A string representation of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-141">Implementacja podstawowa zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="953fa-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="953fa-142"><paramref name="value" />nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="953fa-142"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="953fa-143">Unikaj zgłaszania wyjątków od implementacji.</span><span class="sxs-lookup"><span data-stu-id="953fa-143">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="953fa-144">Zobacz <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="953fa-145">Obiekt, którego nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="953fa-145">The object that could not be converted.</span></span></param>
        <summary><span data-ttu-id="953fa-146">Zwraca wyjątek, który ma zostać zgłoszony, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-146">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="953fa-147">Obiekt, dla którego ma zostać zgłoszony wyjątek, <see langword="ConvertFrom" /> gdy nie można wykonać konwersji. <see cref="T:System.Exception" /></span><span class="sxs-lookup"><span data-stu-id="953fa-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-148">Rzeczywiste `throw` słowo kluczowe nie jest wywoływane przez tę metodę, w związku z czym typowe `throw GetConvertFromException` użycie to (z podanymi parametrami).</span><span class="sxs-lookup"><span data-stu-id="953fa-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="953fa-149">Zwrócony wyjątek ma <xref:System.InvalidOperationException>wartość z przekazaniem komunikatu o `value` wyjątku.</span><span class="sxs-lookup"><span data-stu-id="953fa-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="953fa-150">Wzorzec użycia jest taki sam jak w przypadku narzędzi wyjątków w programie <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="953fa-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="destinationType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="953fa-151">Obiekt, którego nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="953fa-151">The object that could not be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="953fa-152">Typ, który reprezentuje typ konwersji, na który próbujesz skonwertować.</span><span class="sxs-lookup"><span data-stu-id="953fa-152">A type that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="953fa-153">Zwraca wyjątek, który ma zostać zgłoszony, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-153">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="953fa-154">Obiekt, dla którego ma zostać zgłoszony wyjątek, <see langword="ConvertTo" /> gdy nie można wykonać konwersji. <see cref="T:System.Exception" /></span><span class="sxs-lookup"><span data-stu-id="953fa-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-155">Rzeczywiste `throw` słowo kluczowe nie jest wywoływane przez tę metodę, dlatego typowe użycie to `throw GetConvertToException` (z `value` podanym parametrem).</span><span class="sxs-lookup"><span data-stu-id="953fa-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="953fa-156">Zwrócony wyjątek ma <xref:System.InvalidOperationException>wartość z przekazaniem komunikatu o `value` wyjątku.</span><span class="sxs-lookup"><span data-stu-id="953fa-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="953fa-157">Wzorzec użycia jest taki sam jak w przypadku narzędzi wyjątków w programie <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="953fa-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="953fa-158">Pobiera obiekt <see cref="T:System.Windows.Markup.ValueSerializer" /> dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="953fa-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="953fa-159">Deskryptor właściwości CLR dla właściwości, która ma zostać zserializowana.</span><span class="sxs-lookup"><span data-stu-id="953fa-159">The CLR property descriptor for the property to be serialized.</span></span></param>
        <summary><span data-ttu-id="953fa-160"><see cref="T:System.Windows.Markup.ValueSerializer" /> Pobiera zadeklarowany dla właściwości przez przekazanie deskryptora właściwości CLR dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="953fa-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span></span></summary>
        <returns><span data-ttu-id="953fa-161">Serializator skojarzony z określoną właściwością.</span><span class="sxs-lookup"><span data-stu-id="953fa-161">The serializer associated with the specified property.</span></span> <span data-ttu-id="953fa-162">Może zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-162">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-163">Dla właściwości lub dla typu, który jest używany jako wartość właściwości, jest wskazywany przez <xref:System.Windows.Markup.ValueSerializerAttribute> zastosowanie atrybutu właściwości lub deklaracji typu. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="953fa-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="953fa-164">Metoda jest metodą narzędziową, która odczytuje informacje o systemie typu CLR i zwraca nową <xref:System.Windows.Markup.ValueSerializer> klasę na podstawie atrybutu, jeśli znajduje się on na właściwości, lub jeśli znaleziono w typie właściwości. <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A></span><span class="sxs-lookup"><span data-stu-id="953fa-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="953fa-165">`null`może zostać zwrócona, jeśli taki serializator nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="953fa-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="953fa-166">`null`może być również zwracany, jeśli typ lub właściwość zostanie świadomie przypisana wartością <xref:System.Windows.Markup.ValueSerializerAttribute>null.</span><span class="sxs-lookup"><span data-stu-id="953fa-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="953fa-167">Inny tryb, <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> który obsługuje zwraca <xref:System.Windows.Markup.ValueSerializer> klasę wewnętrzną `TypeConverterValueSerializer` , która jest implementacją, `Convert` która zawija <xref:System.ComponentModel.TypeConverter> i tłumaczy metody na `Convert*String` metody (na przykład <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>jest wywoływana z <xref:System.String> typem wejściowym i tłumaczy na <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="953fa-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="953fa-168">Jest to wykonywane tylko w przypadku, gdy spełnione są wszystkie następujące warunki:</span><span class="sxs-lookup"><span data-stu-id="953fa-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="953fa-169"><xref:System.ComponentModel.TypeConverterAttribute> Znajduje się w odpowiedniej właściwości lub typ odpowiedniej właściwości.</span><span class="sxs-lookup"><span data-stu-id="953fa-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="953fa-170">Wskazane <xref:System.ComponentModel.TypeConverter> może być pomyślne skonstruowanie.</span><span class="sxs-lookup"><span data-stu-id="953fa-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="953fa-171">Funkcja Return `true` zwraca <xref:System.String> wartość ,którawywołujeodwołaniedotypu.<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="953fa-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="953fa-172">Funkcja Return `true` zwraca <xref:System.String> wartość ,którawywołujeodwołaniedotypu.<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType> <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="953fa-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="953fa-173">Funkcja Return `true` zwraca <xref:System.String> wartość ,którawywołujeodwołaniedotypu.<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType> <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="953fa-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="953fa-174">Poniżej przedstawiono specjalne przypadki: <xref:System.DateTime> typy zwracają a; <xref:System.Windows.Markup.DateTimeValueSerializer> typy zwracają wewnętrzny, ale serializator funkcjonalny`StringValueSerializer`(). <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="953fa-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="953fa-175"><paramref name="descriptor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-175"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="953fa-176">Typ, dla którego ma <see cref="T:System.Windows.Markup.ValueSerializer" /> zostać uzyskana wartość.</span><span class="sxs-lookup"><span data-stu-id="953fa-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <summary><span data-ttu-id="953fa-177"><see cref="T:System.Windows.Markup.ValueSerializer" /> Pobiera zadeklarowany dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="953fa-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span></span></summary>
        <returns><span data-ttu-id="953fa-178">Serializator skojarzony z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="953fa-178">The serializer associated with the specified type.</span></span> <span data-ttu-id="953fa-179">Może zwrócić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-179">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-180">A <xref:System.Windows.Markup.ValueSerializer> dla typu jest wskazywany przez <xref:System.Windows.Markup.ValueSerializerAttribute> zastosowanie atrybutu w deklaracji typu.</span><span class="sxs-lookup"><span data-stu-id="953fa-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="953fa-181">Metoda jest metodą narzędziową, która odczytuje informacje o systemie typu CLR i zwraca nową <xref:System.Windows.Markup.ValueSerializer> klasę na podstawie atrybutu, jeśli znajduje się on w określonym `type`. <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A></span><span class="sxs-lookup"><span data-stu-id="953fa-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="953fa-182">`null`może zostać zwrócona, jeśli taki serializator nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="953fa-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="953fa-183">`null`może być również zwracany, jeśli typ jest świadomie przypisany do wartości <xref:System.Windows.Markup.ValueSerializerAttribute>null.</span><span class="sxs-lookup"><span data-stu-id="953fa-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="953fa-184">Inny tryb, <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> który obsługuje zwraca <xref:System.Windows.Markup.ValueSerializer> klasę wewnętrzną `TypeConverterValueSerializer` , która jest implementacją, `Convert` która zawija <xref:System.ComponentModel.TypeConverter> i tłumaczy metody na `Convert*String` metody (na przykład <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>jest wywoływana z <xref:System.String> typem wejściowym i tłumaczy na <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="953fa-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="953fa-185">Jest to wykonywane tylko w przypadku, gdy spełnione są wszystkie następujące warunki:</span><span class="sxs-lookup"><span data-stu-id="953fa-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="953fa-186">Znajduje się w `type`. <xref:System.ComponentModel.TypeConverterAttribute></span><span class="sxs-lookup"><span data-stu-id="953fa-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="953fa-187">Wskazane <xref:System.ComponentModel.TypeConverter> może być pomyślne skonstruowanie.</span><span class="sxs-lookup"><span data-stu-id="953fa-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="953fa-188">Funkcja Return `true` zwraca <xref:System.String> wartość ,którawywołujeodwołaniedotypu.<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="953fa-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="953fa-189">Funkcja Return `true` zwraca <xref:System.String> wartość ,którawywołujeodwołaniedotypu.<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType> <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="953fa-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="953fa-190">Funkcja Return `true` zwraca <xref:System.String> wartość ,którawywołujeodwołaniedotypu.<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType> <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="953fa-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="953fa-191">Poniżej przedstawiono specjalne przypadki: <xref:System.DateTime> typy zwracają a; <xref:System.Windows.Markup.DateTimeValueSerializer> typy zwracają wewnętrzny, ale serializator funkcjonalny`StringValueSerializer`(). <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="953fa-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="953fa-192"><paramref name="type" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-192"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="953fa-193">Deskryptor dla właściwości, która ma zostać zserializowana.</span><span class="sxs-lookup"><span data-stu-id="953fa-193">Descriptor for the property to be serialized.</span></span></param>
        <param name="context"><span data-ttu-id="953fa-194">Informacje kontekstowe, które są używane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-194">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="953fa-195"><see cref="T:System.Windows.Markup.ValueSerializer" /> Pobiera zadeklarowaną dla określonej właściwości, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="953fa-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="953fa-196">Serializator skojarzony z określoną właściwością.</span><span class="sxs-lookup"><span data-stu-id="953fa-196">The serializer associated with the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-197">Zamiast polegać na czystym poleganiu na atrybutach raportowanych w systemie typów CLR, Przeciążenie `context` wykorzystuje jako usługę i wywołuje <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>implementację usługi.</span><span class="sxs-lookup"><span data-stu-id="953fa-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="953fa-198">Implementacja zazwyczaj polega `descriptor`na, ale może zaimplementować specjalne zachowanie dla określonych kontekstów. <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="953fa-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="953fa-199">Ta metoda powinna być wywoływana, gdy obiekt wywołujący jest <xref:System.Windows.Markup.IValueSerializerContext> dostępny z usługi.</span><span class="sxs-lookup"><span data-stu-id="953fa-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="953fa-200">Zapewni to poprawne <xref:System.Windows.Markup.ValueSerializer> zwrócenie dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="953fa-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="953fa-201">Jeśli kontekst powróci `null` <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> do określonego `descriptor`elementu lub jeśli określony kontekst to `null`, zachowanie jest identyczne z wywołaniem <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="953fa-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="953fa-202"><paramref name="descriptor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-202"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="953fa-203">Typ, dla którego ma <see cref="T:System.Windows.Markup.ValueSerializer" /> zostać uzyskana wartość.</span><span class="sxs-lookup"><span data-stu-id="953fa-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <param name="context"><span data-ttu-id="953fa-204">Informacje kontekstowe, które są używane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-204">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="953fa-205"><see cref="T:System.Windows.Markup.ValueSerializer" /> Pobiera zadeklarowany dla określonego typu, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="953fa-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="953fa-206">Serializator skojarzony z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="953fa-206">The serializer associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-207">Zamiast polegać na czystym poleganiu na atrybutach raportowanych w systemie typów CLR, Przeciążenie `context` wykorzystuje jako usługę i wywołuje <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>implementację usługi.</span><span class="sxs-lookup"><span data-stu-id="953fa-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="953fa-208">Implementacja zazwyczaj polega `type`na, ale może zaimplementować specjalne zachowanie dla określonych kontekstów. <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="953fa-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="953fa-209">Ta metoda powinna być wywoływana, gdy obiekt wywołujący jest <xref:System.Windows.Markup.IValueSerializerContext> dostępny z usługi.</span><span class="sxs-lookup"><span data-stu-id="953fa-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="953fa-210">Zapewni to poprawne <xref:System.Windows.Markup.ValueSerializer> zwrócenie dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="953fa-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="953fa-211">Jeśli kontekst powróci `null` <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> do określonego `type`elementu lub jeśli określony kontekst to `null`, zachowanie jest identyczne z wywołaniem <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="953fa-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="953fa-212"><paramref name="type" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="953fa-212"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="953fa-213">Serializowana wartość.</span><span class="sxs-lookup"><span data-stu-id="953fa-213">The value being serialized.</span></span></param>
        <param name="context"><span data-ttu-id="953fa-214">Informacje kontekstowe, które są używane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="953fa-214">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="953fa-215">Pobiera Wyliczenie typów, do których odwołuje <see cref="T:System.Windows.Markup.ValueSerializer" />się.</span><span class="sxs-lookup"><span data-stu-id="953fa-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></summary>
        <returns><span data-ttu-id="953fa-216">Typy konwertowane przez ten serializator.</span><span class="sxs-lookup"><span data-stu-id="953fa-216">The types converted by this serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="953fa-217">Wszystkie typy, <xref:System.Windows.Markup.ValueSerializer> które są konwertowane, powinny być zawarte w zwracanym wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="953fa-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="953fa-218">Dzięki temu serializator zagwarantuje, że Deserializator ma wystarczającą ilość informacji o typach, które ten serializator konwertuje.</span><span class="sxs-lookup"><span data-stu-id="953fa-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="953fa-219">Zastępowanie tej metody jest zaawansowanym scenariuszem.</span><span class="sxs-lookup"><span data-stu-id="953fa-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="953fa-220">Zastępowanie powinno być konieczne tylko w przypadku implementowania systemu, w którym typ CLR SystemType — relacje właściwości dostępne dla kontekstu schematu XAML nie zgłasza wystarczającej ilości informacji.</span><span class="sxs-lookup"><span data-stu-id="953fa-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="953fa-221">Uwagi dotyczące użycia WPF</span><span class="sxs-lookup"><span data-stu-id="953fa-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="953fa-222">System właściwości implementuje serializator wartości wewnętrznej, który zastępuje <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> , ponieważ właściwość zależności ma koncepcję, która może dodawać właścicieli. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="953fa-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="953fa-223">wyrażenia mają również specjalną obsługę wewnętrzną.</span><span class="sxs-lookup"><span data-stu-id="953fa-223">expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
