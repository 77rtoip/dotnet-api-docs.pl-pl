<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67111545063cb8271973fe3a5511c778fbb67cd4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69166582" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Mapuje nazwę elementu XAML na odpowiednie środowisko CLR <see cref="T:System.Type" /> w zestawach.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper>jest częścią zaawansowanego scenariusza WPF, który dostarcza alternatywny <xref:System.Windows.Markup.XamlReader> kontekst <xref:System.Windows.Markup.XamlWriter>dla i. W [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] przypadku aplikacji WPF należy rozważyć zastępowanie <xref:System.Xaml.XamlSchemaContext> tego scenariusza, zamiast próbować użyć <xref:System.Windows.Markup.XamlTypeMapper>.  
  
 <xref:System.Windows.Markup.XamlTypeMapper>może służyć do zapewnienia analizatora XAML z informacjami o mapowaniu niestandardowym za pośrednictwem bardziej bezpośredniej techniki <xref:System.Windows.Markup.XmlnsDefinitionAttribute> niż w przypadku zastosowania wartości w kodzie zestawu. Może to być przydatne do konsolidacji wszystkich przestrzeni nazw środowiska CLR w zestawie lub dla odwołań do typów, które są gotowe do użycia w języku XAML w istniejącym zestawie bez konieczności ponownego kompilowania go tylko w celu dodania <xref:System.Windows.Markup.XmlnsDefinitionAttribute> przypisywania.  
  
 Zazwyczaj tworzysz <xref:System.Windows.Markup.XamlTypeMapper> wystąpienie, aby <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> określić wartość właściwości dla <xref:System.Windows.Markup.ParserContext>. Z kolei można korzystać jako kontekstu <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> wywołania. <xref:System.Windows.Markup.ParserContext>  
  
## <a name="default-mapper"></a>Mapowanie domyślne  
 Można uzyskać domyślny Maper przy użyciu <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> właściwości statycznej. Domyślny program mapowania działa tylko na liście zestawów domyślnych. Nie są używane żadne określone informacje o zestawach ( <xref:System.Windows.Markup.XamlTypeMapper> zgodnie z definicją w konstruktorach).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlTypeMapper" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">Tablica nazw zestawów, których <see cref="T:System.Windows.Markup.XamlTypeMapper" /> należy użyć.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Markup.XamlTypeMapper" /> klasy, określając tablicę nazw zestawów <see cref="T:System.Windows.Markup.XamlTypeMapper" /> , które powinny być używane.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">Tablica nazw zestawów, których <see cref="T:System.Windows.Markup.XamlTypeMapper" /> należy użyć.</param>
        <param name="namespaceMaps">Tablica przestrzeni nazw <see cref="T:System.Windows.Markup.XamlTypeMapper" /> powinna być używana.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Markup.XamlTypeMapper" /> klasy, używając określonej tablicy nazw zestawów i określonego mapowania przestrzeni nazw.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Prefiks przestrzeni nazw XML.</param>
        <param name="clrNamespace">Przestrzeń nazw środowiska CLR, która zawiera typy do mapowania.</param>
        <param name="assemblyName">Zestaw, który zawiera przestrzeń nazw CLR.</param>
        <summary>Definiuje mapowanie między przestrzenią nazw XML a przestrzeniami nazw środowiska CLR w zestawach i dodaje <see cref="T:System.Windows.Markup.XamlTypeMapper" /> je do informacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>jest programistycznym sposobem na dodanie mapowania.  Na przykład różne części następującej instrukcji mapowania XAML odpowiadają parametrom <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 `xmlNamespace` Is ,is`clrNamespace` i is`assemblyName` . `SDK` `Samples` `SDKSamples`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" />była<see langword="null" />  
  
—lub— 
 <paramref name="clrNamespace" />była<see langword="null" />  
  
—lub— 
 <paramref name="assemblyName" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ, do którego można uzyskać dostęp.</param>
        <summary>Żąda uprawnień dla <see cref="T:System.Windows.Markup.XamlTypeMapper" /> typu pochodnego, który jest wywoływany w ramach pełnego zaufania w celu uzyskania dostępu do określonego typu wewnętrznego.</summary>
        <returns><see langword="true" />Jeśli można uzyskać dostęp do wewnętrznego typu, w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zostanie zastąpiony przez podklasę `false`, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> zawsze zwraca.  
  
 Gdy jest zastępowany przez podklasę, zachowanie powinno <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> być zwracane `true` w przypadku uzyskania dostępu do typu wewnętrznego; w przeciwnym `false`razie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wystąpienie do użycia, <see cref="T:System.Windows.Markup.XamlTypeMapper" /> Jeśli nie zostało określone.</summary>
        <value>Domyślny typ mapowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny program mapowania działa tylko na liście zestawów domyślnych. Nie są używane żadne określone informacje o zestawach ( <xref:System.Windows.Markup.XamlTypeMapper> zgodnie z definicją w konstruktorach). W bieżącej implementacji domyślna lista zestawów to: `WindowsBase`, `PresentationCore`, `PresentationFramework`.  
  
 Użycie mapowania domyślnego nie oznacza, że nie można używać niestandardowych zestawów/typów w kodzie XAML. Oznacza to, że w przypadku korzystania z typów niestandardowych/zestawów, należy użyć konwencjonalnej techniki języka XAML, aby utworzyć mapowania jako `xmlns` atrybuty na każdej stronie XAML, do której odwołuje się typy/zestawy, w przeciwieństwie do interfejsu API mapowania typów. Aby uzyskać więcej informacji, zobacz [przestrzenie nazw XAML i mapowanie przestrzeni nazw dla języka XAML WPF](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Określony prefiks przestrzeni nazw XML.</param>
        <param name="localName">Nazwa "Local" elementu XAML, dla którego ma zostać uzyskana <see cref="T:System.Type" /> zamapowane. Wartość lokalna w tym kontekście oznacza zamapowane w porównaniu <paramref name="xmlNamespace" />do podanego elementu.</param>
        <summary>Pobiera środowisko CLR <see cref="T:System.Type" /> , do którego jest mapowany dany element XAML, przy użyciu określonego prefiksu przestrzeni nazw XML i nazwy elementu.</summary>
        <returns>Dla obiektu, lub <see langword="null" /> Jeśli nie można rozpoznać mapowania. <see cref="T:System.Type" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie można znaleźć typu, który jest mapowany na podane informacje, `null` jest zwracany.  
  
 Nie dołączaj prefiksu w ramach `localName`. W przypadku dowolnych przedwiązanych informacji o elementach `localName` XAML oddziel go do `xmlNamespace` i składników dla tego wywołania interfejsu API.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" />była<see langword="null" />  
  
—lub— 
 <paramref name="localName" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Krótka nazwa zestawu bez rozszerzenia lub ścieżki określonej (równoważne do <see cref="P:System.Reflection.AssemblyName.Name" />).</param>
        <param name="assemblyPath">Ścieżka pliku zestawu. Ścieżka zestawu musi być pełną ścieżką do pliku zawierającego rozszerzenie pliku.</param>
        <summary>Określa ścieżkę, która ma być używana podczas ładowania zestawu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName" />była<see langword="null" />  
  
—lub— 
 <paramref name="assemblyPath" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><paramref name="assemblyName" />była<see cref="F:System.String.Empty" />  
  
—lub— 
 <paramref name="assemblyPath" />była<see cref="F:System.String.Empty" />  
  
—lub— 
 <paramref name="assemblyPath" />nie jest pełną ścieżką do pliku zawierającego rozszerzenie pliku.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
