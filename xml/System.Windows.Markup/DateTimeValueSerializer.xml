<Type Name="DateTimeValueSerializer" FullName="System.Windows.Markup.DateTimeValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="beb52d81c28840d66829e3ca8ec990f966dba833" /><Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/27/2018" /><Meta Name="ms.locfileid" Value="50176121" /></Metadata><TypeSignature Language="C#" Value="public class DateTimeValueSerializer : System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimeValueSerializer extends System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DateTimeValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimeValueSerializer&#xA;Inherits ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeValueSerializer : System::Windows::Markup::ValueSerializer" />
  <TypeSignature Language="F#" Value="type DateTimeValueSerializer = class&#xA;    inherit ValueSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.ValueSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Konwertuje wystąpień <see cref="T:System.String" /> do i z wystąpienia elementu <see cref="T:System.DateTime" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.ValueSerializer> jest używana zamiast <xref:System.ComponentModel.TypeConverter> w przypadkach, gdzie typ, konwersja będzie wymagać dodatkowy stan. <xref:System.Windows.Markup.DateTimeValueSerializer> nie jest przypisana do typu z <xref:System.Windows.Markup.ValueSerializerAttribute>. Jest to spowodowane <xref:System.DateTime> znajduje się w mscorlib, i mscorlib nie może przyjąć zależności na klasy atrybutów definiujące go nie sam. Zamiast tego użycie <xref:System.Windows.Markup.DateTimeValueSerializer> jest specjalny — z uwzględnieniem wielkości liter w zachowanie procesora XAML w działaniu usług programu .NET Framework XAML.  
  
 W poprzednich wersjach programu .NET Framework ta klasa istnieje w zestawie charakterystyczne dla WPF WindowsBase. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> znajduje się w zestawie System.Xaml. Zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
    <altmember cref="T:System.DateTime" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public override bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">Ciąg, który można obliczyć wartości do konwersji.</param>
        <param name="context">Informacje o kontekście, który jest używany na potrzeby konwersji.</param>
        <summary>Określa, czy określony <see cref="T:System.String" /> można przekonwertować na wystąpienie <see cref="T:System.DateTime" />.</summary>
        <returns><see langword="true" /> Jeśli można przekonwertować daną wartość; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja zawsze zwraca `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public override bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt, który można obliczyć wartości do konwersji.</param>
        <param name="context">Informacje o kontekście, który jest używany na potrzeby konwersji.</param>
        <summary>Określa, jeśli określony obiekt można przekonwertować na <see cref="T:System.String" />.</summary>
        <returns><see langword="true" /> Jeśli <paramref name="value" /> mogą być konwertowane na <see cref="T:System.String" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja zwraca `true` tylko wtedy, gdy przekazany `value` typu <xref:System.DateTime>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public override object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="dateTimeValueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">Ciąg do przekonwertowania na <see cref="T:System.DateTime" />.</param>
        <param name="context">Informacje o kontekście, który jest używany na potrzeby konwersji.</param>
        <summary>Konwertuje <see cref="T:System.String" /> do <see cref="T:System.DateTime" />.</summary>
        <returns>Nowe wystąpienie klasy <see cref="T:System.DateTime" /> oparte na podanym <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca pusty ciąg <xref:System.DateTime.MinValue?displayProperty=nameWithType>.  
  
 Bieżąca implementacja używa <xref:System.DateTime.Parse%2A> wewnętrznie, a także korzysta z następujących <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="value" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public override string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="dateTimeValueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do przekonwertowania na ciąg.</param>
        <param name="context">Informacje o kontekście, który jest używany na potrzeby konwersji.</param>
        <summary>Konwertuje wystąpienie klasy <see cref="T:System.DateTime" /> do <see cref="T:System.String" />.</summary>
        <returns>Reprezentacja ciągu określonego <see cref="T:System.DateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `context` nie jest używany przez tę implementację.  
  
 Ciągów reprezentujących daty, tak jak w programie XAML wartość przetwarzania są oparte na `en-US` kultury. Jest to spowodowane XAML przetwarzania dla kultury informacje są dzielone na koncepcyjnie fazy kompilacji i środowiska wykonawczego i musi być znane reprezentację w całym. Aby uzyskać więcej informacji, zobacz [Przegląd lokalizacja i globalizacja WPF](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).  
  
 Bieżąca implementacja używa ciąg formatu, który jest uwzględniany w zależności od tego, czy podane aspektów <xref:System.DateTime> mają wartości. Na przykład, jeśli nie ma wartości w <xref:System.TimeSpan.TotalSeconds%2A>, ciąg formatu, który znajduje się w formularzu `yyyy-MM-dd` zamiast zapisywać poziomie szczegółowości pełnej wartości zerowych dla składnika godziny.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="value" /> nie jest <see cref="T:System.DateTime" /> lub <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>