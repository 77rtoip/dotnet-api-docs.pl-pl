<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7412669d16ca6897e348def6cc8c79c20d146f1f" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64202296" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapytania dotyczące tego, czy określona właściwość powinny być traktowane jako otoczenia w bieżącym zakresie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mechanizm zmieniono właściwość ma na celu poprawę czas analizy poprzez informowanie zapisywania obiektu XAML, aby uniknąć wystąpienia niektórych obiektów, w przypadkach, gdy wiadomo, że obiekty są wartości, które są tymczasowe i nie są użyteczne dla typowy czas wykonywania aplikacja. Zwykle wyszukiwań XAML lub przetwarzania XAML akcesor pobierania właściwości musi utworzyć takie obiekty, aby wypełnić reprezentację obiektu wykresu, wartościami gotowych do użycia.  
  
 <xref:System.Windows.Markup.IQueryAmbient> ma jeden element członkowski: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient> równoległe mechanizm <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient> jest wyspecjalizowane mechanizm, który pozwala uniknąć przy użyciu odbicia, aby sprawdzić informacje, a także act situationally (danego obiektu można wybrać do raportu `true` lub `false` dla <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), podczas gdy ten atrybut jest zasadniczo statyczna Analiza). <xref:System.Windows.Markup.AmbientAttribute> ogólny mechanizm, który może służyć przez autorów obiektu XAML i zazwyczaj skorelowany dedykowanych właściwości systemie typu XAML <xref:System.Xaml.XamlMember.IsAmbient%2A> i <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>Implementacje IQueryAmbient WPF  
 W środowisku WPF <xref:System.Windows.Markup.IQueryAmbient> jest używana w procesie wyszukiwania słownika zasobów. Proces wyszukiwania pobiera kolejnych `Resources` wartości w całym drzewie logicznym WPF, prace nad głównego zakres zasobów, do momentu, klucz zostanie znaleziony, lub stwierdzono, że klucz nie istnieje w zakresie. Zazwyczaj ten sposób wymaga wystąpienia <xref:System.Windows.ResourceDictionary> każdorazowo do odbierania wyników. Deklarowanie zawartości `Resources` jako otoczenia, tak długo, jak `Resources` istnieje optymalizuje ten proces wyszukiwania. W środowisku WPF ten interfejs jest implementowany w następujących przypadkach:  
  
-   <xref:System.Windows.FrameworkElement> implementuje <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> do zwrócenia `true` dla wszystkich nazw właściwości, jeśli zawiera on, istniejący <xref:System.Windows.ResourceDictionary> dla <xref:System.Windows.FrameworkElement.Resources%2A>, i tak długo, jak długo zapytanie nie jest dla <xref:System.Windows.FrameworkElement.Resources%2A> samej właściwości.  
  
-   <xref:System.Windows.Style> implementuje tego samego wzorca dla jego <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application> implementuje tego samego wzorca dla jego <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement> implementuje tego samego wzorca dla jego <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate> implementuje tego samego wzorca dla jego <xref:System.Windows.FrameworkTemplate.Resources%2A>. Również raporty <xref:System.Windows.FrameworkTemplate.Template%2A> zawartości zgodnie z otoczenia, ale zwraca `false` Jeśli wykonanie zapytania dotyczącego <xref:System.Windows.FrameworkTemplate.Template%2A> sam.  
  
-   W każdym z tych przypadków, odpowiedni `Resources` właściwości (i <xref:System.Windows.FrameworkTemplate.Template%2A>) są określane jako <xref:System.Windows.Markup.AmbientAttribute>. Jest to typowy sposób użycia zapytania dla właściwości, które nie są <xref:System.Windows.Markup.AmbientAttribute> opartego na atrybutach właściwości obiektu, który definiuje interfejs. Innymi słowy tak długo, jak słownik zasobów istnieje w celu zapewnienia potencjalnych wartości w czasie wykonywania, podczas tworzenia wykresu obiektu, innych właściwości, oprócz słownika zasobów, kontener właściwości mogą być traktowane jako otoczenia.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości, aby sprawdzić stan otoczenie.</param>
        <summary>Zapytania dotyczące tego, czy określona właściwość o nazwie jest uznawana za otoczenia w bieżącym zakresie.</summary>
        <returns><see langword="true" /> Jeśli żądana właściwość jest uznawana za otoczenia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>