<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b1419b6b996eab65fbdcda1f6ed9782df12197d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502767" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapytania dotyczące tego, czy określona właściwość powinny być traktowane jako otoczenia w bieżącym zakresie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mechanizm — właściwość otoczenia ma na celu poprawę czasu przetwarzania informuje Edytor obiektu XAML, aby uniknąć tworzenia wystąpienia niektórych obiektów w przypadkach, gdy wiadomo, że obiekty są wartości, które są tymczasowe i nie jest przydatne w czasie wykonywania typowych aplikacja. Zwykle wyszukiwań XAML lub XAML przetwarzania metody dostępu get właściwości potrzebny do utworzenia wystąpienia takich obiektów, aby wypełnić reprezentację Graf obiektu wartościami gotowe do użycia.  
  
 <xref:System.Windows.Markup.IQueryAmbient> jeden element członkowski: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient> mechanizm równoległych do <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient> to specjalne mechanizm pozwalający na uniknięcie przy użyciu odbicia w celu określenia informacji i może również act situationally (danego obiektu można wybrać raport `true` lub `false` dla <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), a atrybut jest zasadniczo statyczne Analiza). <xref:System.Windows.Markup.AmbientAttribute> mechanizm ogólne, które mogą być używane przez autorów obiektu XAML i zwykle skorelowany dedykowanych właściwości system typu XAML <xref:System.Xaml.XamlMember.IsAmbient%2A> i <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>Implementacje IQueryAmbient WPF  
 Na platformie WPF <xref:System.Windows.Markup.IQueryAmbient> jest używany przez proces wyszukiwania słownika zasobów. Proces wyszukiwania pobiera kolejnych `Resources` wartości w drzewie logicznym WPF, prace nad głównego zakresu zasobów do momentu klucz został znaleziony lub stwierdzono, że klucz nie istnieje w zakresie. Zazwyczaj w ten sposób wymaga tworzenia wystąpienia <xref:System.Windows.ResourceDictionary> każdego czas odebrania wyniki. Deklarowanie zawartość `Resources` jako otoczenia tak długo jak `Resources` istnieje optymalizuje ten proces wyszukiwania. Na platformie WPF ten interfejs jest wdrażany w następujących przypadkach:  
  
-   <xref:System.Windows.FrameworkElement> implementuje <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> do zwrócenia `true` dla wszystkich nazw właściwości, jeśli zawiera on istniejące <xref:System.Windows.ResourceDictionary> dla <xref:System.Windows.FrameworkElement.Resources%2A>, i tak długo, jak zapytanie nie jest dla <xref:System.Windows.FrameworkElement.Resources%2A> samej właściwości.  
  
-   <xref:System.Windows.Style> implementuje tego samego wzorca dla jego <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application> implementuje tego samego wzorca dla jego <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement> implementuje tego samego wzorca dla jego <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate> implementuje tego samego wzorca dla jego <xref:System.Windows.FrameworkTemplate.Resources%2A>. Również raporty <xref:System.Windows.FrameworkTemplate.Template%2A> zawartości zgodnie z otaczającym, ale zwraca `false` Jeśli wykonanie zapytania dotyczącego <xref:System.Windows.FrameworkTemplate.Template%2A> samej siebie.  
  
-   W każdym z tych przypadków, odpowiedniego `Resources` właściwości (i <xref:System.Windows.FrameworkTemplate.Template%2A>) są przypisane jako <xref:System.Windows.Markup.AmbientAttribute>. Typowy sposób ma zapytanie dla właściwości, które nie są <xref:System.Windows.Markup.AmbientAttribute> przypisanych właściwości obiektu, który definiuje interfejs. Innymi słowy pod warunkiem słownik zasobów istnieje w celu zapewnienia potencjalnych wartości w czasie wykonywania, po utworzeniu wykres obiektu, inne właściwości poza kontener właściwości słownika zasobów może być traktowana jako otoczenia.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości, aby sprawdzić stan otoczenie.</param>
        <summary>Zapytania dotyczące tego, czy określona właściwość o nazwie jest uznawana za otoczenia w bieżącym zakresie.</summary>
        <returns>
          <see langword="true" /> Jeśli żądanej właściwości mogą być uważane za otoczenia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>