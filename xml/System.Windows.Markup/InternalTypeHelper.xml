<Type Name="InternalTypeHelper" FullName="System.Windows.Markup.InternalTypeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9e85d825fadfb812a649b399d3ed1ee5852fbc1" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48714170" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InternalTypeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InternalTypeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.InternalTypeHelper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InternalTypeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalTypeHelper abstract" />
  <TypeSignature Language="F#" Value="type InternalTypeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Abstrakcyjna klasa jest używana wewnętrznie przez kompilator WPF XAML w celu obsługi wewnętrznych typów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.InternalTypeHelper> Klasy nie jest przeznaczona do użytku przez coś innego niż kompilator znaczników WPF XAML.  
  
 Podczas kompilowania pliku XAML, można użyć typów publicznych, ale umożliwia również typy wewnętrzne zastrzeżeniem te same ograniczenia, które istnieją w kodzie dostępu do wewnętrznych typów. <xref:System.Windows.Markup.InternalTypeHelper> Włączenie obsługi typów poziomu dostępu wewnętrznego dla znaczników. Obejmuje to kompilatora tworzenia wygenerowanej klasy, która pochodzi od klasy <xref:System.Windows.Markup.InternalTypeHelper> i implementuje jej członków. Wygenerowanej klasy istnieje w kontekście zabezpieczeń i dostępem w taki sposób, że tego samego zestawu lub innych zestawów specjalnie przypisane w celu zapewnienia dostępu współdzielonego wewnętrznego można odwoływać się do wygenerowanej klasy, a tym samym typy wewnętrzne.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/544296d4-f38e-4498-af49-c9f4dad28964">Zagadnienia dotyczące zabezpieczeń XAML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalTypeHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InternalTypeHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.InternalTypeHelper" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="protected internal abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddEventHandler(class System.Reflection.EventInfo eventInfo, object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void AddEventHandler(System::Reflection::EventInfo ^ eventInfo, System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddEventHandler : System.Reflection.EventInfo * obj * Delegate -&gt; unit" Usage="internalTypeHelper.AddEventHandler (eventInfo, target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="eventInfo">Informacji o zdarzeniach dotyczących zdarzeń (informacje o odbicia środowiska CLR).</param>
        <param name="target">Obiekt docelowy, gdzie program obsługi jest dołączony.</param>
        <param name="handler">Program obsługi zdarzeń.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej (wygenerowanego), dołącza delegata obsługi zdarzeń do wewnętrznego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.InternalTypeHelper> Klasy nie jest przeznaczona do użytku przez coś innego niż kompilator znaczników WPF XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="protected internal abstract Delegate CreateDelegate (Type delegateType, object target, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Delegate CreateDelegate(class System.Type delegateType, object target, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function CreateDelegate (delegateType As Type, target As Object, handler As String) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract Delegate ^ CreateDelegate(Type ^ delegateType, System::Object ^ target, System::String ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member CreateDelegate : Type * obj * string -&gt; Delegate" Usage="internalTypeHelper.CreateDelegate (delegateType, target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <see cref="T:System.Type" /> Delegata.</param>
        <param name="target">Obiekt docelowy, gdzie program obsługi jest dołączony.</param>
        <param name="handler">Nazwa wdrożenia programu obsługi.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej (wygenerowanego), tworzy delegata zdarzenia odwołuje się do metody niepublicznej obsługi.</summary>
        <returns>Odwołanie delegata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.InternalTypeHelper> Klasy nie jest przeznaczona do użytku przez coś innego niż kompilator znaczników WPF XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ CreateInstance(Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Globalization.CultureInfo -&gt; obj" Usage="internalTypeHelper.CreateInstance (type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> Do utworzenia.</param>
        <param name="culture">Określone informacje o ustawieniach kulturowych.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej (wygenerowanego), tworzy wystąpienie typu wewnętrznego.</summary>
        <returns>Utworzone wystąpienie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.InternalTypeHelper> Klasy nie jest przeznaczona do użytku przez coś innego niż kompilator znaczników WPF XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ GetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : System.Reflection.PropertyInfo * obj * System.Globalization.CultureInfo -&gt; obj" Usage="internalTypeHelper.GetPropertyValue (propertyInfo, target, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Informacje dotyczące właściwości, które można pobrać właściwości.</param>
        <param name="target">Obiekt, który przechowuje wartość żądanej właściwości.</param>
        <param name="culture">Określone informacje o ustawieniach kulturowych.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej (wygenerowanego), pobiera wartość właściwości wewnętrznej w obiekcie docelowym</summary>
        <returns>Wartość właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.InternalTypeHelper> Klasy nie jest przeznaczona do użytku przez coś innego niż kompilator znaczników WPF XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValue : System.Reflection.PropertyInfo * obj * obj * System.Globalization.CultureInfo -&gt; unit" Usage="internalTypeHelper.SetPropertyValue (propertyInfo, target, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">Informacje dotyczące właściwości do ustawienia właściwości.</param>
        <param name="target">Obiekt, który przechowuje wartość żądanej właściwości.</param>
        <param name="value">Wartość do ustawienia.</param>
        <param name="culture">Określone informacje o ustawieniach kulturowych.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej (wygenerowanego), ustawia wartość wewnętrznego właściwości w obiekcie docelowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.InternalTypeHelper> Klasy nie jest przeznaczona do użytku przez coś innego niż kompilator znaczników WPF XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>