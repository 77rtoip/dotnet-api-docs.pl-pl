<Type Name="UsableDuringInitializationAttribute" FullName="System.Windows.Markup.UsableDuringInitializationAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6ca0668325b13de16e39ddaf49375b0407e5619" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39820089" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UsableDuringInitializationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UsableDuringInitializationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.UsableDuringInitializationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UsableDuringInitializationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class UsableDuringInitializationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type UsableDuringInitializationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f4e86-101">Wskazuje, czy ten typ jest wbudowana góra dół podczas tworzenia wykresu obiektu XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f4e86-101">Indicates whether this type is built top-down during XAML object graph creation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4e86-102">Góra dół to metaforyczna nazwa przybliżony XAML procesora zachowanie podczas tworzenia wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="f4e86-102">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="f4e86-103">Podczas kompilowania z góry na dół, tworzenia wystąpienia klasy, dołączony do obiektu nadrzędnego, i następnie ustawił jego właściwości.</span><span class="sxs-lookup"><span data-stu-id="f4e86-103">When built top-down, a class is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="f4e86-104">Konstrukcja góra dół unika wywoływania obsługi zmiany właściwości wiele razy.</span><span class="sxs-lookup"><span data-stu-id="f4e86-104">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="f4e86-105">Takie obsługi będzie emulatora ripple się wykres obiektu i w związku z tym wyeliminowanie wielu wywołań obsługi udostępnia zoptymalizować wydajność uruchamiania wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="f4e86-105">Such handling will ripple up the object graph and therefore eliminating the multiple handler calls provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="f4e86-106">W poprzednich wersjach programu .NET Framework ta klasa istnieje w zestawie charakterystyczne dla WPF WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="f4e86-106">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="f4e86-107">W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.UsableDuringInitializationAttribute> znajduje się w zestawie System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="f4e86-107">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.UsableDuringInitializationAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="f4e86-108">Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="f4e86-108">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="f4e86-109">Uwagi dotyczące użytkowania WPF</span><span class="sxs-lookup"><span data-stu-id="f4e86-109">WPF Usage Notes</span></span>  
 <span data-ttu-id="f4e86-110">W programie WPF XAML dla [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] i [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], góra dół konstrukcji została wbudowana w XAML przetwarzania dla niektórych klas.</span><span class="sxs-lookup"><span data-stu-id="f4e86-110">In WPF XAML for [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], top-down construction was built in to the XAML processing for certain classes.</span></span> <span data-ttu-id="f4e86-111"><xref:System.Windows.Markup.UsableDuringInitializationAttribute> Atrybut rozmieszczony raportowania zachowanie góra dół [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="f4e86-111">The <xref:System.Windows.Markup.UsableDuringInitializationAttribute> attribute formalizes the reporting of the top-down behavior in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FrameworkElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsableDuringInitializationAttribute (bool usable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool usable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (usable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UsableDuringInitializationAttribute(bool usable);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.UsableDuringInitializationAttribute : bool -&gt; System.Windows.Markup.UsableDuringInitializationAttribute" Usage="new System.Windows.Markup.UsableDuringInitializationAttribute usable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="usable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="usable">
          <span data-ttu-id="f4e86-112">Określa, czy podczas inicjowania klasy skojarzonej jest gotowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4e86-112">Defines whether the associated class is usable during initialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4e86-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4e86-113">Initializes a new instance of the <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4e86-114">Atrybut ten dziedziczy.</span><span class="sxs-lookup"><span data-stu-id="f4e86-114">This attribute inherits.</span></span> <span data-ttu-id="f4e86-115">Dla aplikacji początkowej będzie zazwyczaj stosuje się jako `[UsableDuringInitialization(true)]`, ale można następnie ustawić `[UsableDuringInitialization(false)]` w klasie pochodnej, aby zmienić klasy pochodnej raportowania zachowania.</span><span class="sxs-lookup"><span data-stu-id="f4e86-115">For the initial application you would typically apply as `[UsableDuringInitialization(true)]`, but you could then set `[UsableDuringInitialization(false)]` on a derived class to change the derived class reporting of the behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Usable">
      <MemberSignature Language="C#" Value="public bool Usable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Usable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Usable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Usable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Usable : bool" Usage="System.Windows.Markup.UsableDuringInitializationAttribute.Usable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4e86-116">Pobiera wartość wskazującą, czy podczas inicjowania klasy skojarzonej jest gotowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4e86-116">Gets a value that indicates whether the associated class is usable during initialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4e86-117">
            <see langword="true" /> Jeśli klasy skojarzonej jest użyteczny podczas inicjowania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4e86-117">
              <see langword="true" /> if the associated class is usable during initialization; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>