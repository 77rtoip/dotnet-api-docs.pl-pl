<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="916db8f42bff0514d0ec78ebceff451e98bd1513" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37503058" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że właściwość lub typ powinny być traktowane jako otoczenia. Koncepcja otoczenia odnosi się do jak procesory XAML można ustalić typu właściciele elementów członkowskich.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmieniono właściwość jest właściwością, w którym oczekiwaną wartością jest udostępnienie w kontekście analizator składni podczas tworzenia wykresu obiektu, ale w przypadku typowej składowej typu wyszukiwania jest wstrzymana na potrzeby natychmiastowego XAML zestawu węzłów tworzonych. Istnieją dwa główne scenariusze otoczenia pojęcia:  
  
-   Niektórych właściwości tego samego obiektu wpływ i kwalifikuje się działanie tego wyszukiwania właściwości obiektu.  
  
-   Właściwość reprezentuje mechanizm większe opóźnienia i otoczenia możliwości wyszukiwania wartość elementu członkowskiego dotyczyć wszystkich obiektów zawartych w bieżącym obiekcie.  
  
 Ten atrybut może odnosić się do określonych właściwości, które mają oczekiwano kontenerów, które można włączyć w zachowanie wyszukiwania właściwości otoczenia lub mogą być stosowane do klasy, aby włączyć zachowanie właściwości otoczenia we wszystkich przypadkach tego typu wartości dla właściwości.  
  
 <xref:System.Windows.Markup.AmbientAttribute> można również będą stosowane do metody środowiska CLR, umożliwiają przypisywanie właściwości z możliwością dołączenia XAML jako otoczenia. Jest to potencjalnie konieczne, ponieważ w implementacji środowiska CLR XAML dołączoną właściwość jest zaimplementowana/reprezentowana odbicie jako wzorca dostępu za pomocą `get` i `set` metody. Istnieje nie rzeczywiste właściwość CLR do atrybutu, więc ograniczenie użycia <xref:System.AttributeTargets> do `Property` może nie włączono określająca otoczenia, można dołączyć elementu członkowskiego. Można dołączyć elementu członkowskiego, którą chcesz zgłosić jako otoczenia, atrybut `get` metody dostępu. Nie należy próbować metody atrybutów, które nie są specjalnie metody pomocy technicznej można dołączyć elementy członkowskie.  
  
 W poprzednich wersjach programu .NET Framework ta klasa istnieje w zestawie charakterystyczne dla WPF WindowsBase. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> znajduje się w zestawie System.Xaml. Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 Typy otoczenia (typy gdzie <xref:System.Windows.Markup.AmbientAttribute> jest stosowana na poziomie typu) może służyć w niektórych sytuacjach przetwarzanie XAML, gdzie typ właściwości musi zostać rozpoznane poza kolejnością.  
  
## <a name="object-writer-scenarios"></a>Obiekt składnika zapisywania scenariuszy  
 Jeśli definiujesz zapisywania obiektu XAML i wystąpią, właściwości, metody lub typu gdzie <xref:System.Windows.Markup.AmbientAttribute> jest stosowany, zazwyczaj należy dostęp do usługi do określają zachowanie wyszukiwania zamierzony właściwości otoczenia, który jest potrzebny do zapisywania obiektów. Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Konwertery wartości  
 Typy konwerterów i rozszerzeń znaczników może być konieczne znać otoczenia informacje, aby przetworzyć właściwości, które reprezentują mapowania typów pośrednich, takie jak właściwości, które określają członków lub typów przy użyciu nazw parametrów z lub bez kwalifikacji. W tym scenariuszu <xref:System.Windows.Markup.AmbientAttribute> nie jest przeznaczona do użytku z bezpośrednio logika kodu konwertera wartości. Zamiast konwertera wartości należy polegać na zachowanie przetwarzania modułu zapisującego XAML, które przekazują <xref:System.Xaml.IAmbientProvider> w jego konteksty usług do metod konwertera wartości po wywołaniu.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>Scenariusze AmbientAttribute WPF  
  
-   Właściwość <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) może kwalifikować się wyszukiwanie nazw wymagana właściwość, które są potrzebne, można znaleźć odwołania zapasowego dla nazw właściwości w <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> wartości.  
  
-   Cała zawartość w ramach `Resources` właściwości (elementy <xref:System.Windows.ResourceDictionary>) oraz zawartość szablonu powinny mieć możliwość dostępu do innych elementów równorzędnych jako wartości. Deklarowanie całą `Resources` właściwość jako otoczenia wywołuje logikę, która zapewnia te możliwości w XAML w WPF analizator.  
  
 Zobacz <xref:System.Windows.ResourceDictionary> przykładowy scenariusz dotyczący ustawienie <xref:System.Windows.Markup.AmbientAttribute> na poziomie typu.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.AmbientAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>