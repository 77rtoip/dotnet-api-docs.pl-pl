<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fed5ee82ed23838c0a8baef8d382515ec75d5620" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503273" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że właściwość lub typ powinien być traktowany jako otoczenia. Pojęcie otoczenia odnosi się ustalenie, jak procesory XAML właścicieli typu elementów członkowskich.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmieniono właściwość jest właściwością, której wartość jest powinny być dostępne w kontekście analizatora, podczas tworzenia wykresu obiektu, ale w przypadku wyszukiwania typowych elementu członkowskiego typu została zawieszona celów natychmiastowego węzła XAML ustawić tworzona. Istnieją dwa główne scenariusze otoczenia pojęcia:  
  
-   Niektórych właściwości tego samego obiektu wpływ i kwalifikuje się działanie tego Wyszukaj właściwości obiektu.  
  
-   Właściwość reprezentuje mechanizm większe opóźnienia i rozszerzyć możliwości otoczenia na potrzeby wyszukiwania wartości elementu członkowskiego do wszystkich obiektów zawartych w bieżącym obiekcie.  
  
 Ten atrybut można zastosować do określonych właściwości, które mają oczekiwano kontenerów umożliwiających zachowanie wyszukiwania — właściwość otoczenia lub może odnosić się do klasy, aby włączyć zachowania — właściwość otoczenia we wszystkich przypadkach tego typu wartości dla właściwości.  
  
 <xref:System.Windows.Markup.AmbientAttribute> można również będą stosowane do metody CLR, do obsługi przypisywanie dołączalna właściwość XAML, jako otoczenia. Jest to potencjalnie konieczne, ponieważ w implementacji środowiska CLR XAML dołączona właściwość jest zaimplementowana/reprezentowany do odbicia jako wzorca dostępu z `get` i `set` metody. Nie rzeczywiste właściwość CLR do atrybutu istnieje, dlatego ograniczanie użycia dla <xref:System.AttributeTargets> do `Property` nie umożliwiłyby Określanie dołączalny element członkowski jako otoczenia. Możliwe do dołączenia członka, które chcesz raportować jako otoczenia, atrybut `get` metody dostępu. Nie należy próbować atrybutu metody, które nie są specjalnie obsługi metody możliwe do dołączenia elementy członkowskie.  
  
 Ta klasa były dostępne w programie WPF określonego zestawu WindowsBase w poprzednich wersjach programu .NET Framework. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> znajduje się w zestawie System.Xaml. Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 Typy otoczenia (typy where <xref:System.Windows.Markup.AmbientAttribute> jest stosowana na poziomie typu) może służyć do niektórych sytuacjach przetwarzanie XAML, gdy typ właściwości musi zostać rozpoznane poza kolejnością.  
  
## <a name="object-writer-scenarios"></a>Obiekt składnika zapisywania scenariuszy  
 Jeśli definiujesz Edytor obiektu XAML, występują właściwości, metody lub typu gdzie <xref:System.Windows.Markup.AmbientAttribute> jest stosowana, zazwyczaj konieczne uzyskanie dostępu usługi, aby określić zachowanie wyszukiwania zamierzone — właściwość otoczenia potrzebnego do zapisywania obiektów. Aby uzyskać więcej informacji, zobacz <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Konwertery wartości  
 Typy konwerterów i rozszerzenia znaczników mogą wymagać podania otoczenia informacji w celu przetworzenia właściwości, które reprezentują mapowania typów pośrednie, takie jak właściwości, które określają elementów członkowskich lub typów przez ciąg nazwy z lub bez kwalifikacji. W tym scenariuszu <xref:System.Windows.Markup.AmbientAttribute> nie jest przeznaczona do użycia bezpośrednio dla logiki kodu konwertera wartości. Zamiast konwerter wartości polegać na zachowanie przetwarzania modułu zapisującego XAML, który zostanie przekazany <xref:System.Xaml.IAmbientProvider> w kontekstach jej usługi do metod konwertera wartości po wywołaniu.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>Scenariusze AmbientAttribute WPF  
  
-   Właściwość <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) może kwalifikować się wyszukiwania nazwy wymagana właściwość, które są potrzebne, można znaleźć odniesienia zapasowego dla nazwy właściwości w <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> wartości.  
  
-   Cała zawartość w `Resources` właściwości (elementy <xref:System.Windows.ResourceDictionary>) oraz zawartość szablonu powinny mieć możliwość dostępu do innych elementów równorzędnych jako wartości. Deklarowanie całą `Resources` właściwość otoczenia wywołuje logiki, która umożliwia to w analizatorze składni WPF XAML.  
  
 Zobacz <xref:System.Windows.ResourceDictionary> przykład scenariusza ustawienie <xref:System.Windows.Markup.AmbientAttribute> na poziomie typu.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.AmbientAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>