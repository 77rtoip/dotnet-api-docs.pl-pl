<Type Name="HttpGetClientProtocol" FullName="System.Web.Services.Protocols.HttpGetClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6feedcd72292775d559e2ca6c7da8324172922d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69048857" /></Metadata><TypeSignature Language="C#" Value="public class HttpGetClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpGetClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpGetClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpGetClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpGetClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Klasa bazowa dla serwerów proxy klienta usługi sieci Web XML, które używają protokołu HTTP-GET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy klient usługi sieci Web XML używa protokołu HTTP-GET, parametry są kodowane w adresie URL, a odpowiedź jest zwracana w postaci zwykłego kodu XML.  
  
 Jeśli tworzysz klienta usługi sieci Web XML przy użyciu ASP.NET, Klasa proxy, która wyprowadza pośrednio lub bezpośrednio z <xref:System.Web.Services.Protocols.WebClientProtocol> programu, musi zostać utworzona dla usługi sieci Web XML, która ma zostać wywołana. Gdy klient usługi sieci Web XML wywołuje usługę sieci Web XML przy użyciu protokołu HTTP, należy utworzyć klasę <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>proxy z, która z kolei <xref:System.Web.Services.Protocols.WebClientProtocol>pochodzi od.  
  
 <xref:System.Web.Services.Protocols.HttpGetClientProtocol>i <xref:System.Web.Services.Protocols.HttpPostClientProtocol> pochodzą od <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, zapewniając obsługę wywoływania metody usługi sieci Web XML przy użyciu protokołów HTTP-GET i http-post. Klienci wywołujący usługę sieci Web XML przy użyciu protokołu SOAP <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>powinni pochodzić od.  
  
 Aby uzyskać szczegółowe informacje na temat tworzenia klasy proxy, zobacz [Tworzenie serwera proxy usługi sieci Web XML](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100)).  
  
   
  
## Examples  
 Poniższy przykład jest klasą proxy wygenerowaną przez WSDL. exe dla `Math` usługi sieci Web XML poniżej. Klasa proxy pochodzi od <xref:System.Web.Services.Protocols.HttpGetClientProtocol>klasy abstrakcyjnej. <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 Poniższy przykład to `Math` usługa sieci Web XML, z której została utworzona powyższa Klasa serwera proxy.  
  
 [!code-aspx-csharp[Classic HttpGetClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpGetClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/sourcevb.asmx)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpGetClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpGetClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CPP/httpgetclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CS/httpgetclientprotocol_constructor.cs#1)]
 [!code-vb[HttpGetClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/VB/httpgetclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpGetClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Do użycia podczas <see cref="T:System.Net.WebRequest" />tworzenia. <see cref="T:System.Uri" /></param>
        <summary><see cref="T:System.Net.WebRequest" /> Tworzy wystąpienie dla określonego identyfikatora URI.</summary>
        <returns><see cref="T:System.Net.WebRequest" /> Wystąpienie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje wersję podstawową programu <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> , aby określić, że żądanie HTTP do usługi sieci Web XML jest realizowane przy użyciu protokołu HTTP-GET. Zastępując tę metodę, można wprowadzać dodatkowe dostosowania do <xref:System.Net.WebRequest> obiektu przed utworzeniem żądania usługi sieci Web XML. Na przykład można dodać niestandardowy nagłówek do żądania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="uri" /> Parametr ma wartość null lub ma długość równą zero.</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>
