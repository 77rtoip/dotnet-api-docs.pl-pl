<Type Name="WebClientAsyncResult" FullName="System.Web.Services.Protocols.WebClientAsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2cfc3aeae2ba2d9713dad813ffe2b060f472721" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46596612" /></Metadata><TypeSignature Language="C#" Value="public class WebClientAsyncResult : IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClientAsyncResult extends System.Object implements class System.IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.WebClientAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClientAsyncResult&#xA;Implements IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClientAsyncResult : IAsyncResult" />
  <TypeSignature Language="F#" Value="type WebClientAsyncResult = class&#xA;    interface IAsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b21ff-101">Udostępnia implementację <see cref="T:System.IAsyncResult" /> do użytku przez serwery proxy usługi XML sieci Web w celu implementacji wzorca standardową metodę asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="b21ff-101">Provides an implementation of <see cref="T:System.IAsyncResult" /> for use by XML Web service proxies to implement the standard asynchronous method pattern.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21ff-102">Gdy wywołujesz `BeginMyMethodName` metody, gdzie `MyMethodName` jest to wersja synchroniczna metody dla klasy serwera proxy usługi sieci Web XML, wystąpienie <xref:System.Web.Services.Protocols.WebClientAsyncResult> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="b21ff-102">When you call the `BeginMyMethodName` method, where `MyMethodName` is the synchronous version of the method, on an XML Web service proxy class, an instance of the <xref:System.Web.Services.Protocols.WebClientAsyncResult> is returned.</span></span> <span data-ttu-id="b21ff-103">Następujące standardowe asynchronicznym wzorcem projektowym, danego wystąpienia <xref:System.Web.Services.Protocols.WebClientAsyncResult> później muszą zostać przekazane do `EndMyMethodName` do ukończenia wywołania metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="b21ff-103">Following the standard asynchronous design pattern, that instance of <xref:System.Web.Services.Protocols.WebClientAsyncResult> must later be passed to `EndMyMethodName` to complete the asynchronous method call.</span></span>  
  
 <span data-ttu-id="b21ff-104">Szczegółowe informacje na temat asynchroniczne wywoływanie usługi sieci Web XML, [podczas komunikowania się z XML Web Services asynchronicznie](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="b21ff-104">For details on calling XML Web services asynchronously, see [Communicating with XML Web Services Asynchronously](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IAsyncResult" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)"><span data-ttu-id="b21ff-105">Podczas komunikowania się z usługami internetowymi XML asynchronicznie</span><span class="sxs-lookup"><span data-stu-id="b21ff-105">Communicating with XML Web Services Asynchronously</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientAsyncResult.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="webClientAsyncResult.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b21ff-106">Anulowanie asynchroniczne żądanie usługi sieci Web XML.</span><span class="sxs-lookup"><span data-stu-id="b21ff-106">Cancels an asynchronous XML Web service request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b21ff-107">Żądanie usługi sieci Web XML została anulowana, jeśli obsługuje transportu źródłowego <xref:System.Net.WebRequest.Abort%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="b21ff-107">The XML Web service request is canceled if the underlying transport supports the <xref:System.Net.WebRequest.Abort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b21ff-108">Jeśli odpowiedni `End` następnie wywoływana jest metoda po <xref:System.Web.Services.Protocols.WebClientAsyncResult.Abort%2A> metody <xref:System.Net.WebException> zgłaszany ustawienie <xref:System.Net.WebException.Status%2A> właściwość <xref:System.Net.WebExceptionStatus.RequestCanceled>.</span><span class="sxs-lookup"><span data-stu-id="b21ff-108">If the corresponding `End` method is subsequently called after the <xref:System.Web.Services.Protocols.WebClientAsyncResult.Abort%2A> method, a <xref:System.Net.WebException> is thrown, setting the <xref:System.Net.WebException.Status%2A> property to <xref:System.Net.WebExceptionStatus.RequestCanceled>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.Web.Services.Protocols.WebClientAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b21ff-109">Pobiera obiekt udostępniany w ostatnim parametrze do <see langword="Begin" /> asynchroniczne wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="b21ff-109">Gets the object provided in the last parameter to the <see langword="Begin" /> method asynchronous call.</span></span></summary>
        <value><span data-ttu-id="b21ff-110"><see cref="T:System.Object" /> Podana w ostatnim parametrze do <see langword="Begin" /> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="b21ff-110">The <see cref="T:System.Object" /> provided in the last parameter to the <see langword="Begin" /> method call.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.IAsyncResult.AsyncState" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b21ff-111">Pobiera <see cref="T:System.Threading.WaitHandle" /> umożliwiający poczekaj na zakończenie operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="b21ff-111">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></summary>
        <value><span data-ttu-id="b21ff-112">A <see cref="T:System.Threading.WaitHandle" /> umożliwiający poczekaj na zakończenie operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="b21ff-112">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21ff-113"><xref:System.Threading.WaitHandle> Może służyć do wykonywania <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, lub <xref:System.Threading.WaitHandle.WaitAll%2A> oczekiwania na ukończenie wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="b21ff-113">The <xref:System.Threading.WaitHandle> can be used to perform a <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, or <xref:System.Threading.WaitHandle.WaitAll%2A> to wait for the asynchronous call to complete.</span></span>  
  
 <span data-ttu-id="b21ff-114">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult.AsyncWaitHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="b21ff-114">For more details, see <xref:System.IAsyncResult.AsyncWaitHandle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IAsyncResult.AsyncWaitHandle" />
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b21ff-115">Pobiera wartość wskazującą, czy wywołanie metody Begin została zakończona synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="b21ff-115">Gets a value indicating whether the Begin call completed synchronously.</span></span></summary>
        <value><span data-ttu-id="b21ff-116"><see langword="true" /> Jeśli wywołanie metody Begin została zakończona synchronicznie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b21ff-116"><see langword="true" /> if the Begin call completed synchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b21ff-117">Jeśli <xref:System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously%2A> ustawiono `true` w ramach <xref:System.AsyncCallback> delegata, jest prawdopodobne, że wątek, wywoływana <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> jest bieżący wątek.</span><span class="sxs-lookup"><span data-stu-id="b21ff-117">If <xref:System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously%2A> is set to `true` within the <xref:System.AsyncCallback> delegate, it is probable that the thread that called <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> is the current thread.</span></span> <span data-ttu-id="b21ff-118">W takim przypadku należy ostrożność, co inny Begin asynchronicznego wywołania z metody wywołania zwrotnego, ponieważ może to spowodować stos rośnie bez powiązane, jeśli wywołania będą nadal występować, synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="b21ff-118">In this case, you should be careful about making another asynchronous Begin call from the callback method, since it can cause the stack to grow without bound if the calls continue to complete synchronously.</span></span> <span data-ttu-id="b21ff-119">Zamiast tego można nawiązać połączenia w witrynie oryginalne wywołanie poza metody wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="b21ff-119">Instead, the call should be completed at the original call site, outside the callback method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b21ff-120">Pobiera wartość wskazującą, czy asynchroniczne żądanie usługi sieci Web XML została ukończona.</span><span class="sxs-lookup"><span data-stu-id="b21ff-120">Gets a value indicating whether the asynchronous XML Web service request has completed.</span></span></summary>
        <value><span data-ttu-id="b21ff-121"><see langword="true" /> Jeśli zostało ukończone żądania asynchronicznego usługi XML sieci Web; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b21ff-121"><see langword="true" /> if the asynchronous XML Web service request has completed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>