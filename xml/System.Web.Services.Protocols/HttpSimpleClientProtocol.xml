<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpSimpleClientProtocol.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac524110eb1ffa47f6267659a07e83cab2de1a0dfeb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24110eb1ffa47f6267659a07e83cab2de1a0dfeb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</source>
          <target state="translated">Reprezentuje klasę podstawową dla komunikacji z usługą sieci Web XML przy użyciu prostego powiązań protokołów HTTP GET i POST protokołu HTTP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</source>
          <target state="translated">Ta klasa określa większość implementacji komunikacji z usługi XML sieci Web za pośrednictwem protokołu HTTP za pomocą koderów kodowanie parametrów i wartości zwracane w typowych formatach MIME.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>These encoders derive from the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> class.</source>
          <target state="translated">Następujące kodery pochodzi od <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>By default, a proxy class deriving from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</source>
          <target state="translated">Domyślnie klasy serwera proxy, wynikające z <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> koduje parametry, używając application/x--www-form-urlencoded typu MIME i odpowiedzi w zwykłym kodzie XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Custom mime formatters can be specified using the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> attribute, however, there is no support for integrating this into a service description and proxy generation.</source>
          <target state="translated">Elementy formatujące mime niestandardowych można określić za pomocą <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> atrybutu, jednak nie jest obsługiwane dla integracji to Generowanie opis i serwera proxy usługi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source><ph id="ph1">`Notes to Inheritors:`</ph> When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</source>
          <target state="translated"><ph id="ph1">`Notes to Inheritors:`</ph> Aby zastąpić tę klasę, mogą stać się metody w klasie pochodnej, które są specyficzne dla określonego typu usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</source>
          <target state="translated">Po prostu metody przechwytywania parametry i Wywołaj klasę bazową w pracy z komunikacji z tą lokacją.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>If the introduced methods are asynchronous, call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> methods.</source>
          <target state="translated">Jeśli wprowadzone metody asynchroniczne, wywołaj <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>If the introduced methods are synchronous, call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli wprowadzone metod synchronicznych, wywołaj <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The overridden constructor typically sets the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to the URI of the XML Web service method.</source>
          <target state="translated">Konstruktor przesłoniętych zwykle ustawia <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> właściwości do identyfikatora URI metody usług XML sieci Web.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The Web Services Description Language tool (Wsdl.exe) generates derived classes of <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> for a given Service Description.</source>
          <target state="translated">Narzędzie Web Services Description Language (Wsdl.exe) generuje klas pochodnych <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> dla danego opisu usługi.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">Poniższy przykładowy kod jest generowany przez Wsdl.exe dla klasy serwera proxy <ph id="ph1">`Math`</ph> poniżej usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The proxy class derives from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph>, which derives from the abstract <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> class.</source>
          <target state="translated">Pochodną klasy serwera proxy <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph>, która pochodzi z klasy abstrakcyjnej <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">Poniższy przykładowy kod jest <ph id="ph1">`Math`</ph> usługi XML sieci Web, z którego został utworzony poprzedniego klasy serwera proxy.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>This type is thread safe.</source>
          <target state="translated">Ten typ jest bezpieczny wątkowo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The name of the XML Web service method.</source>
          <target state="translated">Nazwa metody usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The URL to use when creating the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated">Adres URL używany do tworzenia <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An array of objects containing the parameters to pass to the XML Web service method.</source>
          <target state="translated">Tablica obiektów zawierających parametry do przekazania do metody usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">Odpowiada wartości w tablicy kolejności parametrów wywołania metody klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The delegate to call when the asynchronous method call is complete.</source>
          <target state="translated">Delegat do wywołania po ukończeniu asynchronicznego wywołania metody.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated">Jeśli <bpt id="p1">&lt;c&gt;</bpt>wywołania zwrotnego<ept id="p1">&lt;/c&gt;</ept> jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>, delegat nie jest wywoływany.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The additional information supplied by a client.</source>
          <target state="translated">Dodatkowe informacje dostarczane przez klienta.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Starts an asynchronous invocation of a method of an XML Web service.</source>
          <target state="translated">Uruchamia wywołanie asynchroniczne metody usług XML sieci Web.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be passed to the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method to obtain the return values from the XML Web service method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> Mogą zostać przekazane do <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> metody można uzyskać wartości zwracanych przez metodę usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the types of the parameters and return values of the method that is invoking the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph> Parametr jest używany do Znajdź typy parametrów i wartości metody, która wywołuje zwracane <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>It is also used to find custom attributes that may have been added to the method.</source>
          <target state="translated">Służy również do znalezienia atrybutów niestandardowych, które mogły zostać dodane do metody.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> provide additional information on the derived method that is required for the HTTP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph>, i <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> zawierają dodatkowe informacje o Metoda pochodna, która jest wymagana dla protokołu HTTP.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> jest ono przekazywane do <ph id="ph2">`callback`</ph> i znajduje się w <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> zwracanego z <ph id="ph4">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in <ph id="ph1">`callback`</ph>.</source>
          <target state="translated">Jest przydatne w przypadku przekazywania informacji z kontekstu wywołania asynchronicznego do obsługi asynchronicznego wyniku w <ph id="ph1">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">Poniższy przykładowy kod jest formularza sieci Web ASP.NET, która wymaga usługi XML sieci Web o nazwie <ph id="ph1">`Math`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form starts and completes an asynchronous invocation of the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">W ramach <ph id="ph1">`EnterBtn_Click`</ph> funkcji, uruchamiania formularza sieci Web i wykonuje asynchroniczne wywołanie <ph id="ph2">`Add`</ph> metody usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">Poniższy przykład kodu dotyczy klasy serwera proxy generowany przez narzędzie Web Services Description Language (Wsdl.exe) <ph id="ph1">`Math`</ph> poniżej usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`BeginAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method starts an asynchronous invocation of the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">W ramach <ph id="ph1">`BeginAdd`</ph> metody klasy pośredniczącej, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> metoda uruchamia wywołanie asynchroniczne <ph id="ph3">`Add`</ph> metody usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">Poniższy przykładowy kod jest <ph id="ph1">`Math`</ph> usługi XML sieci Web, z którego został utworzony poprzedniego klasy serwera proxy.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">Żądanie osiągnięto komputera serwera, ale nie zostało przetworzone pomyślnie.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> Zwrócony z <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Completes asynchronous invocation of an XML Web service method using HTTP.</source>
          <target state="translated">Kończy wywołanie asynchroniczne metody usług XML sieci Web przy użyciu protokołu HTTP.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An array of objects containing the return value and any by reference or <ph id="ph1">&lt;paramref name="out" /&gt;</ph> parameters for the XML Web service method.</source>
          <target state="translated">Tablica obiektów zawierająca wartości zwracanej i wszystkie przez odwołanie lub <ph id="ph1">&lt;paramref name="out" /&gt;</ph> metody usługi XML sieci Web parametrów.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">Poniższy przykładowy kod jest formularza sieci Web ASP.NET, która wymaga usługi XML sieci Web o nazwie <ph id="ph1">`Math`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form starts and completes an asynchronous invocation of the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">W ramach <ph id="ph1">`EnterBtn_Click`</ph> funkcji, uruchamiania formularza sieci Web i wykonuje asynchroniczne wywołanie <ph id="ph2">`Add`</ph> metody usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">Poniższy przykład kodu dotyczy klasy serwera proxy generowany przez narzędzie Web Services Description Language (Wsdl.exe) <ph id="ph1">`Math`</ph> poniżej usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EndAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method starts an asynchronous invocation of the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">W ramach <ph id="ph1">`EndAdd`</ph> metody klasy pośredniczącej, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> metoda uruchamia wywołanie asynchroniczne <ph id="ph3">`Add`</ph> metody usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the above proxy class was created.</source>
          <target state="translated">Poniższy przykładowy kod jest <ph id="ph1">`Math`</ph> usługi XML sieci Web, z której utworzono powyższe klasy serwera proxy.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is not the return value from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> nie jest wartością zwracaną przez <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The name of the XML Web service method in the derived class that is invoking the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Nazwa metody usługi XML sieci Web w klasie pochodnej, która wywołuje <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The URL of the XML Web service method that the client is requesting.</source>
          <target state="translated">Adres URL metody usługi XML sieci Web, który klient żąda.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>An array of objects containing the parameters to pass to the remote XML Web service.</source>
          <target state="translated">Tablica obiektów zawierających parametry do przekazania do zdalnej usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">Odpowiada wartości w tablicy kolejności parametrów wywołania metody klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Invokes an XML Web service method using HTTP.</source>
          <target state="translated">Wywołuje metodę usługi XML sieci Web przy użyciu protokołu HTTP.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>An array of objects containing the return value and any by-reference or <ph id="ph1">&lt;paramref name="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">Tablica obiektów zawierająca wartości zwracanej i wszelkie przez odwołanie lub <ph id="ph1">&lt;paramref name="out" /&gt;</ph> parametry metody klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the types of the parameters and return values of the method that is invoking the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph> Parametr jest używany do Znajdź typy parametrów i wartości metody, która wywołuje zwracane <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>It is also used to find custom attributes which may have been added to the method.</source>
          <target state="translated">Służy również do znalezienia atrybutów niestandardowych, które mogły zostać dodane do metody.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> provide additional information on the derived method that is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> i <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> zawierają dodatkowe informacje o Metoda pochodna, która jest wymagana dla protokołu SOAP.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">Poniższy przykładowy kod jest formularza sieci Web ASP.NET, która wymaga usługi XML sieci Web o nazwie <ph id="ph1">`Math`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form synchronously invokes the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">W ramach <ph id="ph1">`EnterBtn_Click`</ph> funkcji formularza sieci Web wywołuje synchronicznie <ph id="ph2">`Add`</ph> metody usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">Poniższy przykład kodu dotyczy klasy serwera proxy generowany przez narzędzie Web Services Description Language (Wsdl.exe) <ph id="ph1">`Math`</ph> poniżej usługi XML sieci Web.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Within the <ph id="ph1">`Add`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method synchronously invokes the <ph id="ph3">`Add`</ph> Web Service method.</source>
          <target state="translated">W ramach <ph id="ph1">`Add`</ph> metody klasy pośredniczącej, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> synchronicznie wywołuje metodę <ph id="ph3">`Add`</ph> metody usługi sieci Web.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the above proxy class was created.</source>
          <target state="translated">Poniższy przykładowy kod jest <ph id="ph1">`Math`</ph> usługi XML sieci Web, z której utworzono powyższe klasy serwera proxy.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">Żądanie osiągnięto komputera serwera, ale nie zostało przetworzone pomyślnie.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Asynchronicznie wywołuje określoną metodę.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The name of the method to invoke.</source>
          <target state="translated">Nazwa metody do wywołania.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The request URL of the invoked web service.</source>
          <target state="translated">Adres URL żądania usługi sieci web wywołana.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">Parametry do przekazania do metody.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">Delegat wywoływany w przypadku wywołania metody została ukończona.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">Asynchronicznie wywołuje określoną metodę.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The name of the method to invoke.</source>
          <target state="translated">Nazwa metody do wywołania.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The request URL of the invoked web service.</source>
          <target state="translated">Adres URL żądania usługi sieci web wywołana.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">Parametry do przekazania do metody.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">Delegat wywoływany w przypadku wywołania metody została ukończona.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>An object containing associated state information that is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the method has completed.</source>
          <target state="translated">Obiekt zawierający skojarzonych informacji o stanie, który jest przekazywany do <bpt id="p1">&lt;c&gt;</bpt>wywołania zwrotnego<ept id="p1">&lt;/c&gt;</ept> delegować po ukończeniu metody.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>Invokes the specified method asynchronously while maintaining an associated state.</source>
          <target state="translated">Asynchronicznie wywołuje określoną metodę, przy zachowaniu skojarzony stan.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>