<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="543984d441712e59cbc38c02dc486c49a04def76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30585265" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80cd9-101">Udostępnia abstrakcyjną klasę podstawową dla wszystkich czytelników i moduły zapisujące usługi sieci Web i klienci implementowane przy użyciu protokołu HTTP, ale bez protokołu SOAP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80cd9-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cd9-102">Moduły zapisujące usługi sieci Web i czytników serializacji i deserializacji odpowiednio między obiektami parametr lub zwracane metod sieci Web i strumieni żądania lub odpowiedzi HTTP.</span><span class="sxs-lookup"><span data-stu-id="80cd9-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="80cd9-103"><xref:System.Web.Services.Protocols.MimeFormatter> Klasy ustanawia wspólnego interfejsu i funkcje dla składników zapisywania i odczytywania klas, zarówno klient, jak i po stronie serwera.</span><span class="sxs-lookup"><span data-stu-id="80cd9-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="80cd9-104"><xref:System.Web.Services.Protocols.MimeFormatter> Klasa obsługuje wdrożenia programu .NET Framework dla usług sieci Web za pomocą operacji HTTP GET i POST protokołu HTTP.</span><span class="sxs-lookup"><span data-stu-id="80cd9-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="80cd9-105">W operacji HTTP GET parametry żądania są kodowane w żądaniu HTTP URL Uniform Resource Locator ().</span><span class="sxs-lookup"><span data-stu-id="80cd9-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="80cd9-106">W operacji POST protokołu HTTP parametry żądania są kodowane w treści żądania HTTP, podobnie jak w przypadku formularza HTML.</span><span class="sxs-lookup"><span data-stu-id="80cd9-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="80cd9-107">Z obu implementacji zwracana wartość jest wyświetlana w treści odpowiedzi HTTP jako dokument XML protokołu SOAP.</span><span class="sxs-lookup"><span data-stu-id="80cd9-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="80cd9-108">Deweloperzy zazwyczaj nie trzeba korzystać bezpośrednio <xref:System.Web.Services.Protocols.MimeFormatter> lub jej klas podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="80cd9-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="80cd9-109">Zamiast tego podczas narzędzie Wsdl.exe generuje kod serwera proxy klienta zgodnie z implementacji protokołu HTTP GET lub POST protokołu HTTP, ma to zastosowanie <xref:System.Web.Services.Protocols.HttpMethodAttribute> do każdej metody sieci Web i ustawia atrybut <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> i <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> właściwości do odpowiedniego typu pochodne <xref:System.Web.Services.Protocols.MimeFormatter> klasy.</span><span class="sxs-lookup"><span data-stu-id="80cd9-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="80cd9-110">Na serwerze odpowiednie typy pochodne są używane zgodnie z ustawieniami w pliku konfiguracji platformy ASP.NET (Web.config).</span><span class="sxs-lookup"><span data-stu-id="80cd9-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="80cd9-111">Na komputerze klienckim odpowiednie typy pochodne są określane w formacie WSDL.</span><span class="sxs-lookup"><span data-stu-id="80cd9-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80cd9-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="80cd9-113">Typ pochodny <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, z których można utworzyć wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span>
          </span>
        </param>
        <param name="initializer">
          <span data-ttu-id="80cd9-114">Obiekt używany do inicjowania wystąpienia uzyskany wcześniej za pomocą implementacji klasy pochodnej <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80cd9-115">Tworzy i inicjuje wystąpienie konkretną klasę pochodzącą od <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80cd9-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cd9-117"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Metoda tworzy wystąpienie klasy pochodnej i wywołuje implementacji klasy pochodnej z klasy abstrakcyjnej <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80cd9-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="80cd9-118"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Metoda jest wywoływana w czasie przetwarzania żądania lub odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="80cd9-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="80cd9-119">Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80cd9-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="80cd9-120">Inicjator przekazany jako parametr <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> metody są uzyskiwane z innego wystąpienia klasy pochodnej, wywołując <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> metody podczas inicjowania klienta lub usługi.</span><span class="sxs-lookup"><span data-stu-id="80cd9-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80cd9-121">Po przesłonięciu w klasie pochodnej zwraca inicjatora dla określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-121">When overridden in a derived class, returns an initializer for the specified method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <span data-ttu-id="80cd9-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> , który określa metody sieci Web, dla którego jest uzyskiwany inicjatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80cd9-123">Po przesłonięciu w klasie pochodnej zwraca inicjatora dla określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-123">When overridden in a derived class, returns an initializer for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80cd9-124">
            <see cref="T:System.Object" /> Zawierający inicjator dla określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cd9-125">Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80cd9-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="80cd9-126">Implementacja klasy pochodnej <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> wystąpienia metoda jest wywoływana podczas inicjowania klienta lub usługi.</span><span class="sxs-lookup"><span data-stu-id="80cd9-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="80cd9-127">Później, w czasie przetwarzania żądania lub odpowiedzi, obiekt inicjator jest przekazywany do statycznego <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> metodę, która tworzy wystąpienie obiektu innej klasy pochodnej, a następnie do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metodę, aby go zainicjować.</span><span class="sxs-lookup"><span data-stu-id="80cd9-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="80cd9-128">Drugi obiekt wykonuje rzeczywiste odczytu lub zapisu.</span><span class="sxs-lookup"><span data-stu-id="80cd9-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="80cd9-129">Typ pochodny <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, — do są uzyskiwane inicjatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="80cd9-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> , który określa metody sieci Web, dla którego jest uzyskiwany inicjatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80cd9-131">Zwraca inicjatora dla określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-131">Returns an initializer for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80cd9-132">A <see cref="T:System.Object" /> obiekt, który zawiera inicjator dla określonej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cd9-133">Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80cd9-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="80cd9-134">Statycznych <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> klasy pochodnej wywołuje metody <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> metody niejawne utworzenie wystąpienia klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="80cd9-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="80cd9-135">W czasie przetwarzania żądania lub odpowiedzi, obiekt inicjator jest przekazywany do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metoda inne wystąpienie klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="80cd9-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="80cd9-136">Ostatni obiekt wykonuje rzeczywiste odczytu lub zapisu.</span><span class="sxs-lookup"><span data-stu-id="80cd9-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80cd9-137">W przypadku przesłonięcia w klasie pochodnej zwraca tablicę inicjatora obiektów odpowiadających tablicy wejściowej definicjami metod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">
          <span data-ttu-id="80cd9-138">Tablica where, dla każdej metody obiektu odpowiedni indeks w tablicy inicjatora zwracane są uzyskiwane metody sieci Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80cd9-139">W przypadku przesłonięcia w klasie pochodnej zwraca tablicę inicjatora obiektów odpowiadających tablicy wejściowej definicjami metod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80cd9-140">Tablica obiektów inicjatora odpowiadający tablicy wejściowej z definicjami metod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-140">An array of initializer objects corresponding to the input array of method definitions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cd9-141">Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80cd9-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="80cd9-142"><xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> Wywołuje metody wystąpienia <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> metody wystąpienia dla każdej metody sieci Web wejściowej.</span><span class="sxs-lookup"><span data-stu-id="80cd9-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="80cd9-143">Oznacza to, że wystąpienie klasy pochodnej z <xref:System.Web.Services.Protocols.MimeFormatter> został już utworzony.</span><span class="sxs-lookup"><span data-stu-id="80cd9-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="80cd9-144">W czasie przetwarzania żądania lub odpowiedzi, inicjator jest przekazywana do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metoda inne wystąpienie klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="80cd9-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="80cd9-145">Ostatni obiekt wykonuje rzeczywiste odczytu lub zapisu.</span><span class="sxs-lookup"><span data-stu-id="80cd9-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="80cd9-146">Typ pochodny <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, dla których inicjatory są uzyskiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span>
          </span>
        </param>
        <param name="methodInfos">
          <span data-ttu-id="80cd9-147">Tablica typu <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> , który określa metody sieci Web, dla których są uzyskiwane inicjatory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80cd9-148">Zwraca tablicę inicjatora obiektów odpowiadających tablicy wejściowej definicjami metod dla określonej klasy pochodne <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80cd9-149">Tablica obiektów inicjatora odpowiadający tablicy wejściowej definicji metody dla określonej klasy pochodne <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cd9-150">Inicjator jest przekazany jako parametr obiekt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="80cd9-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="80cd9-151">Statycznych <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> metoda powoduje wywołanie <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> metoda należąca do klasy pochodnej, określony przez `type` parametru.</span><span class="sxs-lookup"><span data-stu-id="80cd9-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">
          <span data-ttu-id="80cd9-152">Obiekt typu odpowiedniego do określonej klasy, która implementuje metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-152">An object of a type appropriate to the particular class that is implementing the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80cd9-153">W przypadku przesłonięcia w klasie pochodnej inicjuje wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80cd9-153">When overridden in a derived class, initializes an instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cd9-154"><xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Metoda jest wywoływana w czasie przetwarzania żądania lub odpowiedzi; jednak inicjatora są uzyskiwane przez wywołanie metody <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> metody w innym wystąpieniu podczas inicjowania klienta lub usługi.</span><span class="sxs-lookup"><span data-stu-id="80cd9-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>