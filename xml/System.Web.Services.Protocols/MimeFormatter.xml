<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3567a890d743e97411185cd8ae5cc15f129a10c9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69257540" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia abstrakcyjną klasę bazową dla wszystkich czytelników i autorów dla usług sieci Web i klientów wdrożonych przy użyciu protokołu HTTP, ale bez protokołu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduły zapisujące usługi sieci Web i czytelnicy piszą i deserializacji odpowiednio między parametrem lub zwracanymi obiektami metod sieci Web a strumieniami żądania lub odpowiedzi HTTP. <xref:System.Web.Services.Protocols.MimeFormatter> Klasa tworzy wspólny interfejs i funkcjonalność dla klas czytnika i składników zapisywania, zarówno w klienta, jak i po stronie usługi.  
  
 <xref:System.Web.Services.Protocols.MimeFormatter> Klasa obsługuje implementacje .NET Framework usług sieci Web za pośrednictwem operacji HTTP-GET i http-post. W protokole HTTP — parametry żądania operacji GET są kodowane w adresie URL (Uniform Resource Locator) żądania HTTP. W operacjach POST protokołu HTTP parametry żądania są kodowane w treści żądania HTTP, podobnie jak w przypadku formularza HTML. W przypadku obu implementacji wartość zwracana pojawia się w treści odpowiedzi HTTP jako dokumentu XML innego niż SOAP.  
  
 Deweloper zazwyczaj nie musi bezpośrednio używać <xref:System.Web.Services.Protocols.MimeFormatter> ani jego klas podrzędnych. Zamiast tego, gdy narzędzie WSDL. exe generuje kod serwera proxy klienta zgodnie z implementacją HTTP-GET lub http-post, stosuje <xref:System.Web.Services.Protocols.HttpMethodAttribute> do każdej metody sieci Web i ustawia <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> atrybut i <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> właściwości na odpowiedni typ. pochodny od <xref:System.Web.Services.Protocols.MimeFormatter> klasy. Na serwerze są używane odpowiednie typy pochodne zgodnie z ustawieniami w pliku konfiguracji ASP.NET (Web. config). Na kliencie odpowiednie typy pochodne są określane na podstawie WSDL.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">Typ pochodny <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, z którego ma zostać utworzone wystąpienie.</param>
        <param name="initializer">Obiekt używany do inicjowania wystąpienia uzyskanego wcześniej za pomocą <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> metody implementacji klasy pochodnej.</param>
        <summary>Tworzy i Inicjuje wystąpienie klasy konkretnej pochodnej od <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
        <returns>Element <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda tworzy wystąpienie klasy pochodnej i wywołuje implementację klasy pochodnej metody abstrakcyjnej <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>. <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Metoda jest wywoływana w momencie przetwarzania żądania lub odpowiedzi.  
  
 Inicjator jest obiektem przekazaną jako parametr do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody. Inicjator przeszedł jako parametr do <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> metody jest uzyskiwany z innego wystąpienia klasy pochodnej przez <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> wywoływanie metody podczas inicjowania klienta lub usługi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca inicjator dla określonej metody.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Element <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> określający metodę sieci Web, dla której zostanie uzyskany inicjator.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca inicjator dla określonej metody.</summary>
        <returns><see cref="T:System.Object" /> Zawierający inicjator dla określonej metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjator jest obiektem przekazaną jako parametr do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.  
  
 Implementacja <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> metody instancji klasy pochodnej jest wywoływana podczas inicjowania klienta lub usługi. Później w momencie przetworzenia żądania lub odpowiedzi obiekt inicjatora jest przesyłany do metody statycznej <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> , która tworzy wystąpienie innego obiektu klasy pochodnej, a następnie <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> do metody jej inicjalizacji. Drugi obiekt wykonuje rzeczywistą odczyt lub zapis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">Typ pochodny <see cref="T:System.Web.Services.Protocols.MimeFormatter" />elementu, dla którego zostanie uzyskany inicjator.</param>
        <param name="methodInfo">Element <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> określający metodę sieci Web, dla której zostanie uzyskany inicjator.</param>
        <summary>Zwraca inicjator dla określonej metody.</summary>
        <returns><see cref="T:System.Object" /> Obiekt, który zawiera inicjator dla określonej metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjator jest obiektem przekazaną jako parametr do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.  
  
 Metoda statyczna <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> wywołuje <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> metodę klasy pochodnej, niejawnie tworząc wystąpienie klasy pochodnej. W momencie przetwarzania żądania lub odpowiedzi obiekt inicjatora jest przenoszona do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody innego wystąpienia klasy pochodnej. Ten ostatni obiekt wykonuje rzeczywistą odczyt lub zapis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca tablicę obiektów inicjatora odpowiadającą wejściowej tablicy definicji metod.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">Tablica metod sieci Web, gdzie, dla każdej metody, obiekt odpowiedniego indeksu w zwracanej tablicy inicjatora jest uzyskiwany.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca tablicę obiektów inicjatora odpowiadającą wejściowej tablicy definicji metod.</summary>
        <returns>Tablica obiektów inicjatora odpowiadająca tablicy wejściowej definicji metod.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjator jest obiektem przekazaną jako parametr do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.  
  
 Metoda <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> wywołuje metodę wystąpienia dla każdej wejściowej metody sieci Web. Oznacza to, że wystąpienie klasy pochodnej od <xref:System.Web.Services.Protocols.MimeFormatter> zostało już utworzone. W momencie przetwarzania żądania lub odpowiedzi inicjator jest przenoszona do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody innego wystąpienia klasy pochodnej. Ten ostatni obiekt wykonuje rzeczywistą odczyt lub zapis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">Typ pochodzący od <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, dla którego są uzyskiwane inicjatory.</param>
        <param name="methodInfos">Tablica typu <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> , która określa metody sieci Web, dla których są uzyskiwane inicjatory.</param>
        <summary>Zwraca tablicę obiektów inicjatora odpowiadającą wejściowej tablicy definicji metod dla określonej klasy pochodnej <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
        <returns>Tablica obiektów inicjatora odpowiadająca tablicy wejściowej definicji metod dla określonej klasy pochodnej <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicjator jest obiektem przekazaną jako parametr do <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> metody.  
  
 Metoda statyczna <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> powoduje wywołanie <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> metody należącej do klasy `type` pochodnej określonej przez parametr.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">Obiekt typu właściwego dla konkretnej klasy implementującej metodę.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, Inicjuje wystąpienie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana w momencie przetwarzania żądania lub odpowiedzi; jednak inicjator jest uzyskiwany przez <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> wywołanie metody w innym wystąpieniu podczas inicjowania klienta lub usługi. <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
