<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0d9266b3dc5962906f3245b68c5dd22026399dd" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58874375" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <TypeSignature Language="F#" Value="type SoapExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Klasa podstawowa dla rozszerzeń protokołu SOAP usług sieci Web XML utworzone za pomocą programu ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET umożliwia infrastrukturze związane z protokołu SOAP ma zostać utworzony za pomocą mechanizmu rozszerzalności. Architektura rozszerzenia protokołu SOAP ASP.NET dotyczy tego rozszerzenia, które można sprawdzić lub zmodyfikować komunikat w określonych etapów w ramach przetwarzania po stronie klienta lub serwera wiadomości.  
  
 Rozszerzenia protokołu SOAP ASP.NET pochodzić od <xref:System.Web.Services.Protocols.SoapExtension> klasy. <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> i <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> metody zapewniają alternatywne mechanizmy inicjowanie rozszerzenie SOAP w celu zwiększenia wydajności. <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> właśnie jest sercem większość rozszerzeń protokołu SOAP, jak metoda jest wywoływana na każdym etapie zdefiniowane w <xref:System.Web.Services.Protocols.SoapMessageStage>, umożliwiając rozszerzenie SOAP wykonać żądane zachowanie określonego rozszerzenia protokołu SOAP. Dla rozszerzenia protokołu SOAP, które należy zmodyfikować żądania SOAP lub odpowiedź SOAP <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> stanowi przy tym okazję do odbierania danych proponowane być przesyłane przez sieć.  
  
   
  
## Examples  
 Następujące `TraceExtension` rozszerzenie SOAP generuje żądanie protokołu SOAP i odpowiedź SOAP do określonego pliku, gdy jest stosowany do metody usługi sieci Web XML. Jeśli następujące rozszerzenie protokołu SOAP jest zainstalowany do uruchamiania przy użyciu usługi sieci Web XML, konto ASPNET musi mieć uprawnienia do zapisu do katalogu, w którym są zapisywane w pliku dziennika.  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Protocols.SoapExtension" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ChainStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.ChainStream : System.IO.Stream -&gt; System.IO.Stream" Usage="soapExtension.ChainStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Bufor pamięci, zawierający SOAP żądania lub odpowiedzi.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia dostęp do rozszerzenia protokołu SOAP w buforze pamięci zawierające SOAP żądania lub odpowiedzi.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> reprezentujący nowy bufora pamięci, można zmodyfikować tego rozszerzenia protokołu SOAP.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> zapewnia rozszerzenia protokołu SOAP z najwyższym priorytetem zmodyfikować rzeczywistych danych najbliżej komunikatu protokołu SOAP, wysyłane lub zwrócone przez sieć.  
  
 Rozszerzenia protokołu SOAP, należy zapisać odwołań <xref:System.IO.Stream> przekazany do <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> i <xref:System.IO.Stream> zwróciło <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>. Jeśli rozszerzenie jest skonfigurowany do uruchamiania przy użyciu metody usługi sieci XML Web <xref:System.IO.Stream> przekazany do <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> zawiera Zserializowany żądania protokołu SOAP w <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize><xref:System.Web.Services.Protocols.SoapMessageStage>. Podobnie <xref:System.IO.Stream> Odwołanie zwrócone z <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> są zapisywane do chwili serializacji wystąpienia i zawiera więc odpowiedzi protokołu SOAP serializacji <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize><xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje zarówno <xref:System.IO.Stream> przekazany do <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> i <xref:System.IO.Stream> zwróciło <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> w zmiennych elementu członkowskiego `oldStream` i `newStream`, odpowiednio.  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP, można zainicjować danych specyficznych dla metody usługi sieci Web XML w jednym czasie spadek wydajności.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : Type -&gt; obj" Usage="soapExtension.GetInitializer serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Typ klasy wdrażanie usługi sieci Web XML, do którego zastosowano rozszerzenie SOAP.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP, można zainicjować danych specyficznych dla klasy implementującej usługi XML sieci Web na jeden czas spadek wydajności.</summary>
        <returns><see cref="T:System.Object" /> , Rozszerzenie SOAP inicjuje do buforowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przeciążenia <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> która jest wywoływana przez program ASP.NET zależy od tego, jak określono rozszerzenie SOAP. Istnieją dwie metody do określenia rozszerzenia protokołu SOAP:  
  
-   Zastosuj atrybut niestandardowy, wynikające z <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, aby poszczególne metody usługi sieci Web XML.  
  
-   Dodaj odwołanie w plikach konfiguracyjnych w pliku web.config lub app.config.  
  
 Jeśli dodasz odwołanie do jednego z plików konfiguracji, dla wszystkich usług XML sieci Web w zakresie tego pliku konfiguracji jest uruchamiane rozszerzenie SOAP. Podczas określania rozszerzenie SOAP, odwołując się do pliku konfiguracji platformy ASP.NET wywołuje <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> przeciążenia, które przekazuje <xref:System.Type>. Podczas określania rozszerzenia przez zastosowanie atrybutu niestandardowego, wywołuje ASP.NET <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> , przekazuje <xref:System.Web.Services.Protocols.LogicalMethodInfo> i <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.  
  
 Aby uzyskać więcej informacji na temat dodawania rozszerzeń protokołu SOAP do pliku konfiguracji, zobacz [opcje konfiguracji XML sieci Web usług utworzone za pomocą programu ASP.NET](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100)).  
  
   
  
## Examples  
 Poniższy kod demonstruje, jak jeden zapisać określone dane rozszerzenie SOAP w poszczególnych usług sieci Web XML. Jeśli rozszerzenie jest skonfigurowany przy użyciu pliku konfiguracji zamiast atrybutu, rozszerzenie SOAP mogą przechowywać dane dla każdej klasy, do którego zastosowano rozszerzenie SOAP. Ten przykład zapisuje nazwę pliku, w którym się komunikaty protokołu SOAP, wysyłane do i z metody usługi sieci Web XML na podstawie nazwy klasy wdrażania usługi sieci Web XML w pamięci podręcznej. Ten przykład kodu jest częścią pełny kod przykład rozszerzenie protokołu SOAP TraceExtension, które znajdują się w <xref:System.Web.Services.Protocols.SoapExtension> klasa — Przegląd.  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo * System.Web.Services.Protocols.SoapExtensionAttribute -&gt; obj" Usage="soapExtension.GetInitializer (methodInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> reprezentującą określoną funkcję prototypu metody usługi sieci Web XML, do którego zastosowano rozszerzenie SOAP.</param>
        <param name="attribute"><see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> Zastosowany do metody usługi sieci Web XML.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP, można zainicjować danych specyficznych dla metody usługi sieci Web XML przy użyciu zastosowany do metody usługi sieci Web XML w jednym czasie spadek wydajności.</summary>
        <returns><see cref="T:System.Object" /> , Rozszerzenie SOAP inicjuje do buforowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli rozszerzenie jest skonfigurowany przy użyciu, zobacz plik konfiguracji <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> przeciążenie, które akceptuje <xref:System.Type>.  
  
 Rozszerzenie SOAP ma trzy możliwości, aby zainicjować danych i wszystkie one mają różnych celów:  
  
-   Konstruktor klasy — Konstruktor klasy jest wywoływana za każdym razem, gdy rozszerzenie SOAP zostanie uruchomiony i jest zazwyczaj używany do inicjowania zmiennych Członkowskich.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, jednak jest wywoływana tylko raz, po raz pierwszy wysłaniu żądania protokołu SOAP do XML sieci Web services metody. Jeśli zastosowano atrybut niestandardowy do metody usługi sieci Web XML, <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> metoda jest wywoływana. Dzięki temu rozszerzenie SOAP na potrzeby analizowania <xref:System.Web.Services.Protocols.LogicalMethodInfo> metody usługi sieci Web XML prototypu informacji lub uzyskać dostęp do danych specyficznych dla rozszerzenia przekazywane przez klasy z <xref:System.Web.Services.Protocols.SoapExtensionAttribute>. Wartość zwracana jest buforowana przez platformę ASP.NET i przekazywane do kolejnych <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> metody. W związku z tym, inicjowania w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> jest zasadniczo umieszczane na trafień jednorazowe wydajności.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> jest wywoływana za każdym razem, gdy żądania SOAP zostanie podjęta metody usługi sieci Web XML, ale ma przewagę nad konstruktora klasy, w tym <xref:System.Object> inicjowane w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> jest przekazywany do niego.  
  
   
  
## Examples  
 Poniższy kod demonstruje, jak można uzyskać danych dotyczących rozszerzenie SOAP przekazaną za pomocą klasy, która pochodzi od klasy <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, a następnie buforowanie danych przechowywanych w usłudze <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>. Ten przykład kodu jest częścią pełny kod przykład `TraceExtension` rozszerzenie SOAP, które znajdują się w <xref:System.Web.Services.Protocols.SoapExtension> klasa — Przegląd. Ten przykładowy kod, który opiera się na `TraceExtensionAttribute` przekazywany do `attribute` parametru. W przykładzie pełny kod `TraceExtensionAttribute` pochodzi od klasy <xref:System.Web.Services.Protocols.SoapExtensionAttribute> i dodaje `Filename` właściwość, która jest co <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> są przechowywane w pamięci podręcznej.  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="soapExtension.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><see cref="T:System.Object" /> Zwróciło <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> pamięci podręcznej przez platformę ASP.NET.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia to rozszerzenie protokołu SOAP do zainicjowania przy użyciu danych w pamięci podręcznej <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozszerzenie SOAP ma trzy możliwości, aby zainicjować danych i wszystkie one mają różnych celów:  
  
-   Konstruktor klasy — Konstruktor klasy jest wywoływana za każdym razem, gdy rozszerzenie SOAP zostanie uruchomiony i jest zazwyczaj używany do inicjowania zmiennych Członkowskich.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, jednak jest wywoływana tylko raz, po raz pierwszy wysłaniu żądania protokołu SOAP do XML sieci Web services metody. Jeśli zastosowano atrybut niestandardowy do metody usługi sieci Web XML, <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> metoda jest wywoływana. Dzięki temu rozszerzenie SOAP na potrzeby analizowania <xref:System.Web.Services.Protocols.LogicalMethodInfo> metody usługi sieci Web XML prototypu informacji lub uzyskać dostęp do danych specyficznych dla rozszerzenia przekazywane przez klasy z <xref:System.Web.Services.Protocols.SoapExtensionAttribute>. Wartość zwracana jest buforowana przez platformę ASP.NET i przekazywane do kolejnych <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> metody. W związku z tym, inicjowania w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> jest zasadniczo umieszczane na trafień jednorazowe wydajności.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> jest wywoływana za każdym razem, gdy żądania SOAP zostanie podjęta metody usługi sieci Web XML, ale ma przewagę nad konstruktora klasy, w tym <xref:System.Object> inicjowane w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> jest przekazywany do niego.  
  
-  
  
> [!NOTE]
>  Możesz również dodać rozszerzenie SOAP bez pochodząca od <xref:System.Web.Services.Protocols.SoapExtensionAttribute> przy użyciu [ \<soapExtensionTypes > Element](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) w pliku konfiguracji. Aby uzyskać więcej informacji, zobacz [ \<soapExtensionTypes > Element](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) i [komunikatu SOAP modyfikacji przy użyciu rozszerzeń SOAP](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95).  
  
-  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak można użyć danych buforowanych podczas <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> metody.  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Web.Services.Protocols.SoapMessage -&gt; unit" Usage="soapExtension.ProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.Web.Services.Protocols.SoapMessage" /> Do procesu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP otrzymać <see cref="T:System.Web.Services.Protocols.SoapMessage" /> do przetworzenia w każdej <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> jest wywoływana w ogóle <xref:System.Web.Services.Protocols.SoapMessageStage> etapów do rozszerzenia SOAP, które dotyczą zarówno usług sieci Web XML utworzone za pomocą platformy ASP.NET i jej klientów. W każdej <xref:System.Web.Services.Protocols.SoapMessageStage>, wystąpienie klasy pochodzące z <xref:System.Web.Services.Protocols.SoapMessage> jest przekazywany do <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>. Jeśli rozszerzenie jest uruchomiona na kliencie usługi XML sieci Web, a następnie <xref:System.Web.Services.Protocols.SoapClientMessage> obiekt jest przekazywany do <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>; w przeciwnym razie <xref:System.Web.Services.Protocols.SoapServerMessage> przekazanego obiektu.  
  
   
  
## Examples  
 Poniższy przykład jest <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> część rozszerzenie SOAP, która rejestruje SOAP żądań i odpowiedzi protokołu SOAP. Logując się <xref:System.Web.Services.Protocols.SoapMessage> na <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize><xref:System.Web.Services.Protocols.SoapMessageStage>, uzyskuje dostęp do rozszerzenia dla protokołu SOAP <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> do wysłania przez sieć. Jeśli rozszerzenie zostanie zastosowany do metody usługi sieci Web XML utworzone za pomocą programu ASP.NET, a następnie <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> zawiera odpowiedź SOAP z metody usługi sieci Web XML. Jeśli rozszerzenie zostanie zastosowane do klienta usług XML sieci Web, <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> zawiera żądanie protokołu SOAP do metody usługi sieci Web XML.  
  
 Klasycznym przykładem SoapExtension.ProcessMessage nr 1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>