<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43a7853f787820c9771b5f5fdfbc04ecc8cda4cb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30585352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Klasa podstawowa dla rozszerzeń protokołu SOAP usług XML sieci Web utworzony za pomocą programu ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET umożliwia infrastrukturze związanych z protokołu SOAP ma zostać utworzony za pomocą mechanizmu rozszerzalności. Architektura rozszerzenia ASP.NET SOAP dotyczy tego rozszerzenia, które można sprawdzić lub zmodyfikować komunikat etapami określonych w komunikacie przetwarzania po stronie klienta lub serwera.  
  
 Rozszerzenia protokołu SOAP ASP.NET, pochodzi z <xref:System.Web.Services.Protocols.SoapExtension> klasy. <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> i <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> metody udostępniają alternatywnych rozwiązań dla inicjowania rozszerzenie SOAP w celu zwiększenia wydajności. <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> jest centralnym większości rozszerzenia protokołu SOAP, jak metoda jest wywoływana na każdym etapie zdefiniowane w <xref:System.Web.Services.Protocols.SoapMessageStage>, dzięki czemu rozszerzenie SOAP wykonać żądaną zachowanie określonego rozszerzenia protokołu SOAP. Dla rozszerzeń protokołu SOAP, które należy zmodyfikować SOAP żądanie lub odpowiedź SOAP <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> umożliwia odbieranie proponowany danych być przesyłane przez sieć.  
  
   
  
## Examples  
 Następujące `TraceExtension` rozszerzenie SOAP generuje SOAP żądanie i odpowiedź SOAP do określonego pliku, gdy jest stosowany do metody usług XML sieci Web. Jeśli następujące rozszerzenie SOAP jest zainstalowana do uruchamiania z usługi XML sieci Web, konto ASPNET musi mieć uprawnienia do zapisu do katalogu, w którym są zapisywane w pliku dziennika.  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Protocols.SoapExtension" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Bufor pamięci zawierający SOAP żądania lub odpowiedzi.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zezwala na dostęp rozszerzenie SOAP w buforze pamięci zawierające SOAP żądania lub odpowiedzi.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> reprezentujący nowy bufora pamięci to rozszerzenie SOAP można modyfikować.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> zapewnia, że rozszerzenia protokołu SOAP z najwyższym priorytetem można modyfikować danych rzeczywistych najbliżej komunikatu protokołu SOAP, wysyłane lub zwrócony przez sieć.  
  
 Rozszerzenia protokołu SOAP należy zapisać odwołań <xref:System.IO.Stream> przekazany <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> i <xref:System.IO.Stream> zwrócony z <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>. Jeśli rozszerzenie jest skonfigurowany do uruchamiania za pomocą metody usług XML sieci Web <xref:System.IO.Stream> przekazany <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> zawiera seryjnych żądania SOAP w <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. Similarily, <xref:System.IO.Stream> Odwołanie zwrócone z <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> są zapisywane w przypadku serializacji występuje i w związku z tym zawiera seryjnych odpowiedź SOAP w <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 Poniższy przykład jest zapisywany zarówno <xref:System.IO.Stream> przekazany <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> i <xref:System.IO.Stream> zwrócony z <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> w zmiennych Członkowskich `oldStream` i `newStream`odpowiednio.  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP zainicjować danych specyficznych dla metody usługi XML sieci Web w jednej godziny spadek wydajności.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Typ klasy implementacja usługi XML sieci Web, do którego stosowana jest rozszerzenie SOAP.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP zainicjować danych specyficznych dla klasy implementującej usługi XML sieci Web w jednej godziny spadek wydajności.</summary>
        <returns>
          <see cref="T:System.Object" /> Rozszerzenie SOAP inicjujące do buforowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przeciążenia <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> która jest wywoływana przez program ASP.NET zależy od tego, jak określono rozszerzenie SOAP. Istnieją dwie metody do określenia rozszerzenia SOAP:  
  
-   Zastosowanie atrybutu niestandardowego, wynikające z <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, poszczególne metody usługi XML sieci Web.  
  
-   Dodaj odwołanie w plikach konfiguracji web.config lub app.config.  
  
 Jeśli możesz dodać odwołania do jednego z plików konfiguracyjnych rozszerzenie SOAP działa dla wszystkich usług XML sieci Web w zakresie pliku konfiguracji. Podczas określania rozszerzenie SOAP, za pomocą odwołań do pliku konfiguracji ASP.NET wywołuje <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> przeciążenia, które przekazuje w <xref:System.Type>. Podczas określania rozszerzenie przez zastosowanie atrybutu niestandardowego, ASP.NET wywołuje <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> przekazanie jej w <xref:System.Web.Services.Protocols.LogicalMethodInfo> i <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.  
  
 Aby uzyskać więcej informacji na temat dodawania rozszerzenia SOAP do pliku konfiguracji, zobacz [ &#91; \<topic://cpconconfigurationoptionsforaspnetwebservices >&#93;](http://msdn.microsoft.com/library/1f0d71bc-8faa-4730-b500-2a6c7b5d4f6b).  
  
   
  
## Examples  
 Poniższy kod przedstawia, jak jeden zapisać określone dane rozszerzenie SOAP w poszczególnych usługi XML sieci Web. Jeśli rozszerzenie jest skonfigurowany przy użyciu pliku konfiguracji zamiast atrybutu, rozszerzenie SOAP mogą przechowywać dane dla każdej klasy, do którego stosowana jest rozszerzenie SOAP. W tym przykładzie zapisuje nazwę pliku, w którym do rejestrowania wiadomości SOAP wysyłane do i z metody usług XML sieci Web na podstawie nazwy klasy implementacja usługi XML sieci Web do pamięci podręcznej. Ten przykładowy kod jest częścią przykładu pełny kod rozszerzenia TraceExtension SOAP, które znajdują się w <xref:System.Web.Services.Protocols.SoapExtension> Przegląd klasy.  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> reprezentujący prototypu funkcji określonych dla metody usługi XML sieci Web, do którego stosowana jest rozszerzenie SOAP.</param>
        <param name="attribute">
          <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> Zastosować do metody usług XML sieci Web.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP zainicjować danych specyficznych dla metody usługi XML sieci Web przy użyciu atrybutem stosowanym do metod usługi XML sieci Web w jednej godziny spadek wydajności.</summary>
        <returns>
          <see cref="T:System.Object" /> Rozszerzenie SOAP inicjujące do buforowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli rozszerzenie jest skonfigurowana przy użyciu zobacz plik konfiguracji <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> przeciążenia, które akceptuje <xref:System.Type>.  
  
 Rozszerzenie SOAP ma trzy możliwości Inicjuj dane i wszystkie mają różnych celów:  
  
-   Konstruktor klasy — Konstruktor klasy jest wywoływana za każdym razem rozszerzenie SOAP zostanie uruchomiony i jest zwykle używane do zainicjowania zmiennych Członkowskich.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, jednak jest wywoływana tylko raz, po raz pierwszy SOAP żądań sieci Web XML usług metody. Jeśli atrybut niestandardowy jest stosowane do metody usług XML sieci Web, <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> wywołania metody. Dzięki temu rozszerzenie SOAP przejrzeć <xref:System.Web.Services.Protocols.LogicalMethodInfo> metody usług XML sieci Web prototypu informacji lub uzyskać dostępu do danych specyficznych dla rozszerzenia przekazany przez klasy wywodzące się z <xref:System.Web.Services.Protocols.SoapExtensionAttribute>. Zwracana wartość jest buforowany przez platformę ASP.NET i przekazany do kolejnych <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> metody. W związku z tym inicjowania w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> jest zasadniczo hermetyzowany w trafienie jednorazowe wydajności.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> jest wywoływana za każdym razem, gdy żądania SOAP dotyczące metody usług XML sieci Web, ale ma więcej możliwości niż konstruktora klasy, w tym <xref:System.Object> zainicjowany w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> została przekazana do niej.  
  
   
  
## Examples  
 Poniższy kod przedstawia, jak można uzyskać dane specyficzne dla rozszerzenie SOAP przekazano za pomocą klasy, która jest pochodną <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, a następnie buforuje dane w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>. Ten przykładowy kod jest częścią przykładu pełny kod dla `TraceExtension` rozszerzenie SOAP, które znajdują się w <xref:System.Web.Services.Protocols.SoapExtension> Przegląd klasy. Ten przykład kodu wykorzystuje `TraceExtensionAttribute` przekazywany do `attribute` parametru. W przykładzie pełny kod `TraceExtensionAttribute` pochodną <xref:System.Web.Services.Protocols.SoapExtensionAttribute> i dodaje `Filename` właściwość, która jest co <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> przechowuje w pamięci podręcznej.  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">
          <see cref="T:System.Object" /> Zwrócony z <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> przez platformę ASP.NET w pamięci podręcznej.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP się przy użyciu danych w pamięci podręcznej zainicjować <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozszerzenie SOAP ma trzy możliwości Inicjuj dane i wszystkie mają różnych celów:  
  
-   Konstruktor klasy — Konstruktor klasy jest wywoływana za każdym razem rozszerzenie SOAP zostanie uruchomiony i jest zwykle używane do zainicjowania zmiennych Członkowskich.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, jednak jest wywoływana tylko raz, po raz pierwszy SOAP żądań sieci Web XML usług metody. Jeśli atrybut niestandardowy jest stosowane do metody usług XML sieci Web, <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> wywołania metody. Dzięki temu rozszerzenie SOAP przejrzeć <xref:System.Web.Services.Protocols.LogicalMethodInfo> metody usług XML sieci Web prototypu informacji lub uzyskać dostępu do danych specyficznych dla rozszerzenia przekazany przez klasy wywodzące się z <xref:System.Web.Services.Protocols.SoapExtensionAttribute>. Zwracana wartość jest buforowany przez platformę ASP.NET i przekazany do kolejnych <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> metody. W związku z tym inicjowania w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> jest zasadniczo hermetyzowany w trafienie jednorazowe wydajności.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> jest wywoływana za każdym razem, gdy żądania SOAP dotyczące metody usług XML sieci Web, ale ma więcej możliwości niż konstruktora klasy, w tym <xref:System.Object> zainicjowany w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> została przekazana do niej.  
  
-  
  
> [!NOTE]
>  Możesz także dodać rozszerzenie SOAP bez pochodny <xref:System.Web.Services.Protocols.SoapExtensionAttribute> za pomocą [ \<soapExtensionTypes > elementu](http://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) w pliku konfiguracji. Aby uzyskać więcej informacji, zobacz [ \<soapExtensionTypes > Element](http://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) i [komunikatu SOAP modyfikacji przy użyciu rozszerzeń SOAP](http://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95).  
  
-  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak używasz danych w pamięci podręcznej podczas <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> metody.  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.Web.Services.Protocols.SoapMessage" /> Do procesu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP otrzymać <see cref="T:System.Web.Services.Protocols.SoapMessage" /> proces w każdej <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> jest wywoływana w ogóle <xref:System.Web.Services.Protocols.SoapMessageStage> etapy dla rozszerzenia SOAP, które dotyczą zarówno usługi XML sieci Web utworzony za pomocą programu ASP.NET i klientów. W każdej <xref:System.Web.Services.Protocols.SoapMessageStage>, wystąpienia klasy wywodzące się z <xref:System.Web.Services.Protocols.SoapMessage> jest przekazywana do <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>. Jeśli rozszerzenie jest uruchomiona na kliencie usługi XML sieci Web, a następnie <xref:System.Web.Services.Protocols.SoapClientMessage> obiekt został przekazany do <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>; w przeciwnym razie <xref:System.Web.Services.Protocols.SoapServerMessage> przekazano obiekt.  
  
   
  
## Examples  
 Poniżej przedstawiono przykład <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> część rozszerzenie SOAP, który rejestruje SOAP żądań i odpowiedzi protokołu SOAP. Logując się <xref:System.Web.Services.Protocols.SoapMessage> w <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>, dostęp rozszerzenie SOAP <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> do wysłania przez sieć. Jeśli rozszerzenie zostanie zastosowane do metody usług XML sieci Web utworzony za pomocą programu ASP.NET, a następnie <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> zawiera odpowiedź SOAP z metody usług XML sieci Web. Jeśli rozszerzenie zostanie zastosowane do klienta usługi XML sieci Web, <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> zawiera metody usługi sieci Web XML żądania SOAP.  
  
 Przykład SoapExtension.ProcessMessage klasycznego #1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>