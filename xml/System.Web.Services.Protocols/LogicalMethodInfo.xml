<Type Name="LogicalMethodInfo" FullName="System.Web.Services.Protocols.LogicalMethodInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="410aa748009d5104cc131721346c0d92b4398fd4" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874257" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogicalMethodInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogicalMethodInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogicalMethodInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalMethodInfo sealed" />
  <TypeSignature Language="F#" Value="type LogicalMethodInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="43b68-101">Reprezentuje atrybuty i metadanych dla metody usługi sieci Web XML.</span><span class="sxs-lookup"><span data-stu-id="43b68-101">Represents the attributes and metadata for an XML Web service method.</span></span> <span data-ttu-id="43b68-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="43b68-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b68-103"><xref:System.Web.Services.Protocols.LogicalMethodInfo> jest używany przede wszystkim przez rozszerzenie SOAP na potrzeby analizowania szczegóły metody usługi sieci Web XML, za pomocą którego skonfigurowano rozszerzenie SOAP do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="43b68-103"><xref:System.Web.Services.Protocols.LogicalMethodInfo> is used primarily by a SOAP extension to interrogate the details of the XML Web service method with which the SOAP extension is configured to run.</span></span> <span data-ttu-id="43b68-104">W zależności od sposobu skonfigurowania rozszerzenie SOAP, można znaleźć szczegółowe informacje dotyczące metody usługi sieci Web XML w <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> metody <xref:System.Web.Services.Protocols.SoapExtension> przyjmującej <xref:System.Web.Services.Protocols.LogicalMethodInfo>.</span><span class="sxs-lookup"><span data-stu-id="43b68-104">Depending on how the SOAP extension is configured, it can find out details about the XML Web service method in the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method of <xref:System.Web.Services.Protocols.SoapExtension> that takes a <xref:System.Web.Services.Protocols.LogicalMethodInfo>.</span></span> <span data-ttu-id="43b68-105"><xref:System.Web.Services.Protocols.LogicalMethodInfo> Zawiera szczegółowe informacje, takie jak parametry metody usługi sieci Web XML, uzyskując dostęp do <xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> właściwości i wszelkie atrybuty niestandardowe, które zostały zastosowane na użyciu metody usługi sieci Web XML <xref:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="43b68-105">The <xref:System.Web.Services.Protocols.LogicalMethodInfo> provides details such as the XML Web service method's parameters by accessing the <xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> property and any custom attributes applied to the XML Web service method using the <xref:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes%2A> property.</span></span>  
  
 <span data-ttu-id="43b68-106">Zobacz szczegółowe informacje na temat rozszerzeń SOAP <xref:System.Web.Services.Protocols.SoapExtension> klasy lub [komunikatu SOAP modyfikacji przy użyciu rozszerzeń SOAP](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/esw638yk(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="43b68-106">For more details on SOAP extensions see the <xref:System.Web.Services.Protocols.SoapExtension> class or [SOAP Message Modification Using SOAP Extensions](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/esw638yk(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
    <altmember cref="T:System.Reflection.MethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogicalMethodInfo (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogicalMethodInfo(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public LogicalMethodInfo (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (method_info As MethodInfo)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogicalMethodInfo(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (method_info As MethodInfo)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.LogicalMethodInfo : System.Reflection.MethodInfo -&gt; System.Web.Services.Protocols.LogicalMethodInfo" Usage="new System.Web.Services.Protocols.LogicalMethodInfo method_info" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.LogicalMethodInfo : System.Reflection.MethodInfo -&gt; System.Web.Services.Protocols.LogicalMethodInfo" Usage="new System.Web.Services.Protocols.LogicalMethodInfo method_info" FrameworkAlternate="xamarinandroid-7.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="43b68-107">A <see cref="T:System.Reflection.MethodInfo" /> można zainicjować właściwości <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> często <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-107">A <see cref="T:System.Reflection.MethodInfo" /> to initialize the properties of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> common to the <see cref="T:System.Reflection.MethodInfo" />.</span></span></param>
        <param name="method_info"><span data-ttu-id="43b68-108">A <see cref="T:System.Reflection.MethodInfo" /> można zainicjować właściwości <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> często <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-108">A <see cref="T:System.Reflection.MethodInfo" /> to initialize the properties of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> common to the <see cref="T:System.Reflection.MethodInfo" />.</span></span></param>
        <summary><span data-ttu-id="43b68-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> klasy <see cref="T:System.Reflection.MethodInfo" /> przekazany.</span><span class="sxs-lookup"><span data-stu-id="43b68-109">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class with the <see cref="T:System.Reflection.MethodInfo" /> passed in.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43b68-110"><see cref="P:System.Reflection.MethodBase.IsStatic" /> Właściwość <paramref name="methodInfo" /> parametr <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-110">The <see cref="P:System.Reflection.MethodBase.IsStatic" /> property of the <paramref name="methodInfo" /> parameter is <see langword="true" />.</span></span>  
  
<span data-ttu-id="43b68-111">—lub—</span><span class="sxs-lookup"><span data-stu-id="43b68-111">-or-</span></span> 
<span data-ttu-id="43b68-112"><see cref="M:System.Reflection.MethodBase.GetParameters" /> Metody <paramref name="methodInfo" /> parametr nie zawiera wszystkich parametrów, które są wymagane przez metodę reprezentowaną przez wystąpienie <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-112">The <see cref="M:System.Reflection.MethodBase.GetParameters" /> method of the <paramref name="methodInfo" /> parameter does not contain all the parameters required by the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncCallbackParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncCallbackParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncCallbackParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncCallbackParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncCallbackParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncCallbackParameter : System.Reflection.ParameterInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-113">Pobiera informacje o parametrach dla <paramref name="AsyncCallback" /> parametr metody Begin w wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-113">Gets the parameter information for the <paramref name="AsyncCallback" /> parameter of a Begin method in an asynchronous invocation.</span></span></summary>
        <value><span data-ttu-id="43b68-114">A <see cref="T:System.Reflection.ParameterInfo" /> reprezentujący <paramref name="AsyncCallback" /> parametru <see langword="Begin" /> wywołania metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="43b68-114">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <paramref name="AsyncCallback" /> parameter of a <see langword="Begin" /> asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b68-115">Asynchronicznym wzorcem projektowym w środowisko uruchomieniowe języka wspólnego obejmuje wywołania `Begin` metodę, aby uruchomić wywołania metody asynchronicznej i `End` wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-115">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="43b68-116">`Begin` Metoda przyjmuje dwa parametry dodatkowe, oprócz parametrów zdefiniowanych przez to wersja synchroniczna metody: jeden do przechowywania delegata i jeden przechowują informacje o stanie, który ma być przekazywane do pełnomocnika.</span><span class="sxs-lookup"><span data-stu-id="43b68-116">The `Begin` method takes two additional parameters besides the parameters defined by the synchronous version of the method: one to store a delegate and one to store any state information that needs to be passed on to the delegate.</span></span> <span data-ttu-id="43b68-117">Ta właściwość reprezentuje parametr dla delegata, o nazwie parametru `AsyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="43b68-117">This property represents the parameter for the delegate with a parameter name of `AsyncCallback`.</span></span>  
  
 <span data-ttu-id="43b68-118">Aby uzyskać więcej informacji na temat asynchroniczne wywoływanie usługi sieci Web XML, zobacz [podczas komunikowania się z XML Web Services asynchronicznie](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="43b68-118">For more information on invoking XML Web services asynchronously, see [Communicating with XML Web Services Asynchronously](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)"><span data-ttu-id="43b68-119">Podczas komunikowania się z usługami internetowymi XML asynchronicznie</span><span class="sxs-lookup"><span data-stu-id="43b68-119">Communicating with XML Web Services Asynchronously</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsyncResultParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncResultParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncResultParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncResultParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncResultParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResultParameter : System.Reflection.ParameterInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-120">Pobiera wartość zwracaną przez <see langword="Begin" /> wywołania metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="43b68-120">Gets the return value of a <see langword="Begin" /> asynchronous method invocation.</span></span></summary>
        <value><span data-ttu-id="43b68-121">A <see cref="T:System.Reflection.ParameterInfo" /> reprezentujący <see cref="T:System.IAsyncResult" /> zwróciło <see langword="Begin" /> wywołania metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="43b68-121">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <see cref="T:System.IAsyncResult" /> returned from a <see langword="Begin" /> asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b68-122">Asynchronicznym wzorcem projektowym w środowisko uruchomieniowe języka wspólnego obejmuje wywołania `Begin` metodę, aby uruchomić wywołania metody asynchronicznej i `End` wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-122">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="43b68-123">`Begin` Metoda zwykle zwraca natychmiast za pomocą implementacji obiektu <xref:System.IAsyncResult> interfejs, który może być następnie przekazywany do `End` metody w późniejszym czasie, aby ukończyć wywołanie metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="43b68-123">The `Begin` method typically returns immediately with an object implementing the <xref:System.IAsyncResult> interface, which can then be passed to the `End` method at a later time to complete the asynchronous method invocation.</span></span> <span data-ttu-id="43b68-124">Zwrócony obiekt implementujący <xref:System.IAsyncResult> są one reprezentowane przez tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="43b68-124">The returned object implementing the <xref:System.IAsyncResult> interface is represented by this property.</span></span>  
  
 <span data-ttu-id="43b68-125">Aby uzyskać więcej informacji na temat asynchroniczne wywoływanie usługi sieci Web XML, zobacz [podczas komunikowania się z XML Web Services asynchronicznie](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="43b68-125">For more information on invoking XML Web services asynchronously, see [Communicating with XML Web Services Asynchronously](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)"><span data-ttu-id="43b68-126">Podczas komunikowania się z usługami internetowymi XML asynchronicznie</span><span class="sxs-lookup"><span data-stu-id="43b68-126">Communicating with XML Web Services Asynchronously</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AsyncStateParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncStateParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncStateParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncStateParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncStateParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncStateParameter : System.Reflection.ParameterInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-127">Pobiera informacje o parametrach dla <paramref name="AsyncState" /> parametru <see langword="Begin" /> metodę wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-127">Gets the parameter information for the <paramref name="AsyncState" /> parameter of a <see langword="Begin" /> method in an asynchronous invocation.</span></span></summary>
        <value><span data-ttu-id="43b68-128">A <see cref="T:System.Reflection.ParameterInfo" /> reprezentujący <paramref name="AsyncState" /> parametru <see langword="Begin" /> metodę wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-128">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <paramref name="AsyncState" /> parameter of a <see langword="Begin" /> method in an asynchronous invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b68-129">Asynchronicznym wzorcem projektowym w środowisko uruchomieniowe języka wspólnego obejmuje wywołania `Begin` metodę, aby uruchomić wywołania metody asynchronicznej i `End` wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-129">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="43b68-130">`Begin` Metoda przyjmuje dwa parametry dodatkowe, oprócz parametrów zdefiniowanych przez to wersja synchroniczna metody: jeden do przechowywania delegata i jeden przechowują informacje o stanie, który ma być przekazywane do pełnomocnika.</span><span class="sxs-lookup"><span data-stu-id="43b68-130">The `Begin` method takes two additional parameters besides the parameters defined by the synchronous version of the method: one to store a delegate and one to store any state information that needs to be passed on to the delegate.</span></span> <span data-ttu-id="43b68-131">Ta właściwość reprezentuje informacje o stanie, który należy przekazać do obiektu delegowanego.</span><span class="sxs-lookup"><span data-stu-id="43b68-131">This property represents the state information that needs to be passed into the delegate.</span></span>  
  
 <span data-ttu-id="43b68-132">Aby uzyskać więcej informacji na temat asynchroniczne wywoływanie usługi sieci Web XML, zobacz [podczas komunikowania się z XML Web Services asynchronicznie](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="43b68-132">For more information on invoking XML Web services asynchronously, see [Communicating with XML Web Services Asynchronously](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)"><span data-ttu-id="43b68-133">Podczas komunikowania się z usługami internetowymi XML asynchronicznie</span><span class="sxs-lookup"><span data-stu-id="43b68-133">Communicating with XML Web Services Asynchronously</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (object target, object[] values, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginInvoke(object target, object[] values, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (target As Object, values As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ values, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : obj * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="logicalMethodInfo.BeginInvoke (target, values, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="43b68-134">Wystąpienie <see cref="T:System.Object" /> do wywołania metody na.</span><span class="sxs-lookup"><span data-stu-id="43b68-134">The instance of the <see cref="T:System.Object" /> on which to invoke the method on.</span></span></param>
        <param name="values"><span data-ttu-id="43b68-135">Lista argumentów dla wywołanej metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-135">An argument list for the invoked method.</span></span> <span data-ttu-id="43b68-136">Jest to tablica obiektów przy użyciu tego samego liczbę, kolejność i typ jako parametry metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-136">This is an array of objects with the same number, order, and type as the parameters of the method.</span></span> <span data-ttu-id="43b68-137">Jeśli metoda nie wymaga żadnych parametrów, <paramref name="values" /> powinien być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-137">If the method does not require any parameters, <paramref name="values" /> should be <see langword="null" />.</span></span></param>
        <param name="callback"><span data-ttu-id="43b68-138">Delegat do wywołania po ukończeniu asynchronicznego invoke.</span><span class="sxs-lookup"><span data-stu-id="43b68-138">The delegate to call when the asynchronous invoke is complete.</span></span> <span data-ttu-id="43b68-139">Jeśli <paramref name="callback" /> jest <see langword="null" />, delegat nie jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="43b68-139">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="43b68-140">Informacje o stanie, który jest przekazywane do obiektu delegowanego.</span><span class="sxs-lookup"><span data-stu-id="43b68-140">State information that is passed on to the delegate.</span></span></param>
        <summary><span data-ttu-id="43b68-141">Rozpoczyna się asynchroniczne wywołanie metody reprezentowanej przez to <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-141">Begins an asynchronous invocation of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="43b68-142"><see cref="T:System.IAsyncResult" /> Która jest przekazywana do <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" /> można uzyskać wartości zwracanych z wywołań metody zdalnej.</span><span class="sxs-lookup"><span data-stu-id="43b68-142">An <see cref="T:System.IAsyncResult" /> which is passed to <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" /> to obtain the return values from the remote method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CPP/logicalmethodinfo_begininvoke.cpp#1)]
 [!code-csharp[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CS/logicalmethodinfo_begininvoke.cs#1)]
 [!code-vb[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/VB/logicalmethodinfo_begininvoke.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="43b68-143"><paramref name="target" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-143">The <paramref name="target" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="43b68-144">Liczbę, typ i kolejność parametrów w <paramref name="values" /> niezgodny podpis metody wywoływanej metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-144">The number, type, and order of parameters in <paramref name="values" /> do not match the signature of the invoked method.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="43b68-145">Obiekt wywołujący nie ma uprawnień do wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-145">The caller does not have permission to invoke the method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginMethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo BeginMethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo BeginMethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginMethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ BeginMethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginMethodInfo : System.Reflection.MethodInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-146">Pobiera atrybuty i metadanych dla <see langword="Begin" /> metodę wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-146">Gets the attributes and metadata for a <see langword="Begin" /> method in an asynchronous invocation.</span></span></summary>
        <value><span data-ttu-id="43b68-147">A <see cref="T:System.Reflection.MethodInfo" /> reprezentujących atrybuty i metadanych dla <see langword="Begin" /> wywołania metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="43b68-147">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for a <see langword="Begin" /> asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43b68-148">Biorąc pod uwagę tablicę <see cref="T:System.Reflection.MethodInfo" />, tworzy tablicę <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-148">Given an array of <see cref="T:System.Reflection.MethodInfo" />, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] methodInfos);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] methodInfos) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (methodInfos As MethodInfo()) As LogicalMethodInfo()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ methodInfos);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] method_infos);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] method_infos) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method_infos As MethodInfo()) As LogicalMethodInfo()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ method_infos);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo[] -&gt; System.Web.Services.Protocols.LogicalMethodInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Create method_infos" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo[] -&gt; System.Web.Services.Protocols.LogicalMethodInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Create method_infos" FrameworkAlternate="xamarinandroid-7.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_infos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="43b68-149">Tablica <see cref="T:System.Reflection.MethodInfo" /> metody synchronicznego i asynchronicznego, dla której ma zostać utworzone reprezentujących <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="43b68-149">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects.</span></span></param>
        <param name="method_infos"><span data-ttu-id="43b68-150">Tablica <see cref="T:System.Reflection.MethodInfo" /> metody synchronicznego i asynchronicznego, dla której ma zostać utworzone reprezentujących <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="43b68-150">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects.</span></span></param>
        <summary><span data-ttu-id="43b68-151">Biorąc pod uwagę tablicę <see cref="T:System.Reflection.MethodInfo" /> , mogą zawierać informacje o metodach synchronicznego i asynchronicznego, tworzy tablicę <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-151">Given an array of <see cref="T:System.Reflection.MethodInfo" /> that can contain information about both asynchronous and synchronous methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="43b68-152">Tablica <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, reprezentujący metod w <paramref name="methodInfos" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-152">An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within <paramref name="methodInfos" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43b68-153">A <see langword="Begin" /> metody asynchronicznej znajduje się w <paramref name="methodInfos" /> bez odpowiadającego <see langword="End" /> metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-153">A <see langword="Begin" /> asynchronous method is included in <paramref name="methodInfos" /> without a corresponding <see langword="End" /> method.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] methodInfos, System.Web.Services.Protocols.LogicalMethodTypes types);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] methodInfos, valuetype System.Web.Services.Protocols.LogicalMethodTypes types) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (methodInfos As MethodInfo(), types As LogicalMethodTypes) As LogicalMethodInfo()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ methodInfos, System::Web::Services::Protocols::LogicalMethodTypes types);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] method_infos, System.Web.Services.Protocols.LogicalMethodTypes types);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] method_infos, valuetype System.Web.Services.Protocols.LogicalMethodTypes types) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method_infos As MethodInfo(), types As LogicalMethodTypes) As LogicalMethodInfo()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ method_infos, System::Web::Services::Protocols::LogicalMethodTypes types);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo[] * System.Web.Services.Protocols.LogicalMethodTypes -&gt; System.Web.Services.Protocols.LogicalMethodInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Create (method_infos, types)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member Create : System.Reflection.MethodInfo[] * System.Web.Services.Protocols.LogicalMethodTypes -&gt; System.Web.Services.Protocols.LogicalMethodInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Create (method_infos, types)" FrameworkAlternate="xamarinandroid-7.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_infos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="types" Type="System.Web.Services.Protocols.LogicalMethodTypes" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="43b68-154">Tablica <see cref="T:System.Reflection.MethodInfo" /> metody synchronicznego i asynchronicznego, dla której ma zostać utworzone reprezentujących <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="43b68-154">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects.</span></span></param>
        <param name="method_infos"><span data-ttu-id="43b68-155">Tablica <see cref="T:System.Reflection.MethodInfo" /> metody synchronicznego i asynchronicznego, dla której ma zostać utworzone reprezentujących <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="43b68-155">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects.</span></span></param>
        <param name="types"><span data-ttu-id="43b68-156">Bitowa kombinacja <see cref="T:System.Web.Services.Protocols.LogicalMethodTypes" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="43b68-156">A bitwise combination of the <see cref="T:System.Web.Services.Protocols.LogicalMethodTypes" /> values.</span></span> <span data-ttu-id="43b68-157">Określa, czy po prostu asynchronicznego lub synchronicznego metod i / lub są umieszczane w zwróconej tablicy o <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-157">Determines whether just asynchronous or synchronous methods or both are included in the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></param>
        <summary><span data-ttu-id="43b68-158">Biorąc pod uwagę tablicę <see cref="T:System.Reflection.MethodInfo" />, gdzie zwróconej tablicy o <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> można ograniczyć do metody tylko asynchronicznego lub synchronicznego, tworzy tablicę <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-158">Given an array of <see cref="T:System.Reflection.MethodInfo" />, where the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> can be restricted to only asynchronous or synchronous methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="43b68-159">Tablica <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, reprezentujący metod w <paramref name="methodInfos" />, filtrowanie według wartości <paramref name="types" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-159">An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within <paramref name="methodInfos" />, filtered by the value of <paramref name="types" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43b68-160">A <see langword="Begin" /> metody asynchronicznej znajduje się w <paramref name="methodInfos" /> bez odpowiadającego <see langword="End" /> metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-160">A <see langword="Begin" /> asynchronous method is included in <paramref name="methodInfos" /> without a corresponding <see langword="End" /> method.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="CustomAttributeProvider">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider CustomAttributeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider CustomAttributeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomAttributeProvider As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ CustomAttributeProvider { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomAttributeProvider : System.Reflection.ICustomAttributeProvider" Usage="System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-161">Pobiera atrybuty niestandardowe zastosowane do metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-161">Gets the custom attributes applied to the method.</span></span></summary>
        <value><span data-ttu-id="43b68-162"><see cref="T:System.Reflection.ICustomAttributeProvider" /> Atrybuty niestandardowe dla metody reprezentująca.</span><span class="sxs-lookup"><span data-stu-id="43b68-162">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes for the method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-163">Pobiera klasę, która deklaruje metodę reprezentowaną przez bieżące <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-163">Gets the class that declares the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <value><span data-ttu-id="43b68-164"><see cref="T:System.Type" /> Dla klasy, metody reprezentowanej przez zadeklarowanie <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-164">The <see cref="T:System.Type" /> for the class declaring the method represented by the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b68-165"><xref:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType%2A> Właściwość pobiera odwołanie do <xref:System.Type> dla typu, który deklaruje tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="43b68-165">The <xref:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType%2A> property retrieves a reference to a <xref:System.Type> for the type that declares this member.</span></span> <span data-ttu-id="43b68-166">Członek klasy (lub interfejs), jest zadeklarowany lub dziedziczone z klasy podstawowej (lub interfejsu).</span><span class="sxs-lookup"><span data-stu-id="43b68-166">A member of a class (or interface) is either declared or inherited from a base class (or interface).</span></span> <span data-ttu-id="43b68-167">Zwrócony <xref:System.Type> nie może być taka sama jak <xref:System.Type> klasy implementowania usługi XML sieci Web (Jeśli ta klasa jest pochodną klasy bazowej i metodę reprezentowaną przez tę klasę jest zadeklarowany w tej klasy bazowej, a następnie <xref:System.Type> zwracany jest Klasa bazowa).</span><span class="sxs-lookup"><span data-stu-id="43b68-167">The returned <xref:System.Type> might not be the same as the <xref:System.Type> of the class implementing the XML Web service (if that class derives from a base class and the method represented by this class is declared in that base class then the <xref:System.Type> returned is the base class).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object[] EndInvoke (object target, IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] EndInvoke(object target, class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (target As Object, asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(System::Object ^ target, IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : obj * IAsyncResult -&gt; obj[]" Usage="logicalMethodInfo.EndInvoke (target, asyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="43b68-168">Wystąpienie <see cref="T:System.Object" /> do wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-168">The instance of the <see cref="T:System.Object" /> on which to invoke the method.</span></span></param>
        <param name="asyncResult"><span data-ttu-id="43b68-169"><see cref="T:System.IAsyncResult" /> Zwróciło <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-169">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="43b68-170">Asynchroniczne wywołanie metody reprezentowanej przez bieżącą kończy <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-170">Ends an asynchronous invocation of the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="43b68-171">Tablica obiektów zawierająca wartości zwracanej i wszelkie przez odwołanie lub na zewnątrz parametry metody w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="43b68-171">An array of objects containing the return value and any by-reference or out parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CPP/logicalmethodinfo_begininvoke.cpp#2)]
 [!code-csharp[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CS/logicalmethodinfo_begininvoke.cs#2)]
 [!code-vb[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/VB/logicalmethodinfo_begininvoke.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="43b68-172"><paramref name="target" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-172">The <paramref name="target" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="43b68-173">Obiekt wywołujący nie ma uprawnień do wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-173">The caller does not have permission to invoke the method.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="43b68-174">Wywołana metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="43b68-174">The invoked method throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndMethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo EndMethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EndMethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndMethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ EndMethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndMethodInfo : System.Reflection.MethodInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-175">Pobiera atrybuty i metadanych dla <see langword="End" /> metody asynchroniczne wywołanie do metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-175">Gets the attributes and metadata for an <see langword="End" /> method of an asynchronous invocation to a method.</span></span></summary>
        <value><span data-ttu-id="43b68-176">A <see cref="T:System.Reflection.MethodInfo" /> reprezentujących atrybuty i metadanych dla <see langword="End" /> wywołania metody asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="43b68-176">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for an <see langword="End" /> asynchronous method invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public object GetCustomAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCustomAttribute(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetCustomAttribute : Type -&gt; obj" Usage="logicalMethodInfo.GetCustomAttribute type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="43b68-177"><see cref="T:System.Type" /> Dla których są stosowane atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="43b68-177">The <see cref="T:System.Type" /> to which the custom attributes are applied.</span></span></param>
        <summary><span data-ttu-id="43b68-178">Zwraca pierwszy atrybut niestandardowy zastosowany do typu, jeśli wszystkie atrybuty niestandardowe są stosowane do typu.</span><span class="sxs-lookup"><span data-stu-id="43b68-178">Returns the first custom attribute applied to the type, if any custom attributes are applied to the type.</span></span></summary>
        <returns><span data-ttu-id="43b68-179"><see cref="T:System.Object" /> Zawierający pierwszy atrybut niestandardowy dotyczą <paramref name="type" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="43b68-179">An <see cref="T:System.Object" /> containing the first custom attribute applied to the <paramref name="type" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="43b68-180">Nie można załadować typu atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="43b68-180">The custom attribute type can not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] GetCustomAttributes(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetCustomAttributes : Type -&gt; obj[]" Usage="logicalMethodInfo.GetCustomAttributes type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="43b68-181"><see cref="T:System.Type" /> Dla których są stosowane atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="43b68-181">The <see cref="T:System.Type" /> to which the custom attributes are applied.</span></span></param>
        <summary><span data-ttu-id="43b68-182">Zwraca atrybuty niestandardowe zastosowane do określonego typu.</span><span class="sxs-lookup"><span data-stu-id="43b68-182">Returns the custom attributes applied to the specified type.</span></span></summary>
        <returns><span data-ttu-id="43b68-183">Tablica <see cref="T:System.Object" /> zawierający atrybutów niestandardowych zastosowanych do <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-183">An array of <see cref="T:System.Object" /> containing the custom attributes applied to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="43b68-184">Nie można załadować typu atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="43b68-184">The custom attribute type can not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] InParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] InParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InParameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ InParameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InParameters : System.Reflection.ParameterInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-185">Pobiera parametry przekazane do metody reprezentowanej przez wystąpienie <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-185">Gets the parameters passed into the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <value><span data-ttu-id="43b68-186">Tablica typu <see cref="T:System.Reflection.ParameterInfo" /> zawierające parametry przekazywane do metody reprezentowanej przez wystąpienie <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-186">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters passed into the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b68-187">Użyj wystąpienia <xref:System.Reflection.ParameterInfo> do uzyskania informacji o typ danych parametru, wartość domyślna i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="43b68-187">Use an instance of <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="43b68-188"><xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> Zwraca tablicę <xref:System.Reflection.ParameterInfo> obiekty reprezentujące parametry przekazywane do metody, w kolejności.</span><span class="sxs-lookup"><span data-stu-id="43b68-188"><xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> returns an array of <xref:System.Reflection.ParameterInfo> objects representing the parameters passed into a method, in order.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object[] Invoke (object target, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] Invoke(object target, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Invoke(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (target As Object, values As Object()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.Invoke : obj * obj[] -&gt; obj[]" Usage="logicalMethodInfo.Invoke (target, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="43b68-189">Wystąpienie <see cref="T:System.Object" /> było wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-189">The instance of the <see cref="T:System.Object" /> to invoke the method.</span></span></param>
        <param name="values"><span data-ttu-id="43b68-190">Lista argumentów dla wywołanej metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-190">An argument list for the invoked method.</span></span> <span data-ttu-id="43b68-191">Jest to tablica obiektów przy użyciu tego samego liczbę, kolejność i typ jako parametry metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-191">This is an array of objects with the same number, order, and type as the parameters of the method.</span></span> <span data-ttu-id="43b68-192">Jeśli metoda nie wymaga żadnych parametrów, <paramref name="values" /> parametr powinien być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-192">If the method does not require any parameters, the <paramref name="values" /> parameter should be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="43b68-193">Wywołuje metodę reprezentowaną przez bieżące <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-193">Invokes the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="43b68-194">Tablica typu <see cref="T:System.Object" /> reprezentujący wartość zwracaną i out parametry wywoływanej metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-194">An array of type <see cref="T:System.Object" /> representing the return value and out parameters of the invoked method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="43b68-195"><paramref name="target" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-195">The <paramref name="target" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="43b68-196">Liczbę, typ i kolejność parametrów w <paramref name="values" /> parametr niezgodny podpis metody wywoływanej metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-196">The number, type, and order of parameters in the <paramref name="values" /> parameter do not match the signature of the invoked method.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="43b68-197">Obiekt wywołujący nie ma uprawnień do wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-197">The caller does not have permission to invoke the method.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="43b68-198">Wywołana metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="43b68-198">The invoked method throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-199">Pobiera wartość wskazującą, czy metoda jest reprezentowany przez wystąpienie <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> jest wywoływana asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="43b68-199">Gets a value indicating whether the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is invoked asynchronously.</span></span></summary>
        <value><span data-ttu-id="43b68-200"><see langword="true" /> Jeśli metoda jest wywoływana asynchronicznie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-200"><see langword="true" /> if the method is invoked asynchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBeginMethod">
      <MemberSignature Language="C#" Value="public static bool IsBeginMethod (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBeginMethod(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBeginMethod(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static bool IsBeginMethod (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBeginMethod(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBeginMethod (method_info As MethodInfo) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBeginMethod(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBeginMethod (method_info As MethodInfo) As Boolean" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member IsBeginMethod : System.Reflection.MethodInfo -&gt; bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod method_info" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member IsBeginMethod : System.Reflection.MethodInfo -&gt; bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod method_info" FrameworkAlternate="xamarinandroid-7.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="43b68-201"><see cref="T:System.Reflection.MethodInfo" /> Może to być <see langword="Begin" /> metody wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-201">The <see cref="T:System.Reflection.MethodInfo" /> that might be a <see langword="Begin" /> method of an asynchronous invocation.</span></span></param>
        <param name="method_info"><span data-ttu-id="43b68-202"><see cref="T:System.Reflection.MethodInfo" /> Może to być <see langword="Begin" /> metody wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-202">The <see cref="T:System.Reflection.MethodInfo" /> that might be a <see langword="Begin" /> method of an asynchronous invocation.</span></span></param>
        <summary><span data-ttu-id="43b68-203">Zwraca wartość wskazującą, czy metoda przekazanej reprezentuje <see langword="Begin" /> metody wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-203">Returns a value indicating whether the method passed in represents a <see langword="Begin" /> method of an asynchronous invocation.</span></span></summary>
        <returns><span data-ttu-id="43b68-204"><see langword="true" /> Jeśli <paramref name="methodInfo" /> parametr jest <see langword="Begin" /> metody asynchroniczne wywołanie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-204"><see langword="true" /> if the <paramref name="methodInfo" /> parameter is a <see langword="Begin" /> method of an asynchronous invocation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CPP/logicalmethodinfo_isbeginmethod.cpp#1)]
 [!code-csharp[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CS/logicalmethodinfo_isbeginmethod.cs#1)]
 [!code-vb[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/VB/logicalmethodinfo_isbeginmethod.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndMethod">
      <MemberSignature Language="C#" Value="public static bool IsEndMethod (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEndMethod(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEndMethod(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static bool IsEndMethod (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEndMethod(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEndMethod (method_info As MethodInfo) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEndMethod(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEndMethod (method_info As MethodInfo) As Boolean" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="static member IsEndMethod : System.Reflection.MethodInfo -&gt; bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod method_info" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member IsEndMethod : System.Reflection.MethodInfo -&gt; bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod method_info" FrameworkAlternate="xamarinandroid-7.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="43b68-205"><see cref="T:System.Reflection.MethodInfo" /> Może to być <see langword="End" /> metody wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-205">The <see cref="T:System.Reflection.MethodInfo" /> that might be an <see langword="End" /> method of an asynchronous invocation.</span></span></param>
        <param name="method_info"><span data-ttu-id="43b68-206"><see cref="T:System.Reflection.MethodInfo" /> Może to być <see langword="End" /> metody wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-206">The <see cref="T:System.Reflection.MethodInfo" /> that might be an <see langword="End" /> method of an asynchronous invocation.</span></span></param>
        <summary><span data-ttu-id="43b68-207">Zwraca wartość wskazującą, czy metoda przekazanej reprezentuje <see langword="End" /> metody wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="43b68-207">Returns a value indicating whether the method passed in represents an <see langword="End" /> method of an asynchronous invocation.</span></span></summary>
        <returns><span data-ttu-id="43b68-208"><see langword="true" /> Jeśli <paramref name="methodInfo" /> parametr jest <see langword="End" /> metody asynchroniczne wywołanie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-208"><see langword="true" /> if the <paramref name="methodInfo" /> parameter is an <see langword="End" /> method of an asynchronous invocation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CPP/logicalmethodinfo_isbeginmethod.cpp#2)]
 [!code-csharp[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CS/logicalmethodinfo_isbeginmethod.cs#2)]
 [!code-vb[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/VB/logicalmethodinfo_isbeginmethod.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVoid">
      <MemberSignature Language="C#" Value="public bool IsVoid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVoid" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.IsVoid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVoid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVoid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVoid : bool" Usage="System.Web.Services.Protocols.LogicalMethodInfo.IsVoid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-209">Pobiera wartość wskazującą, czy typ zwracany metody jest reprezentowany przez wystąpienie <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> jest <see langword="void" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-209">Gets a value indicating whether the return type for the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is <see langword="void" />.</span></span></summary>
        <value><span data-ttu-id="43b68-210"><see langword="true" /> Jeśli typ zwracany void; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-210"><see langword="true" /> if the return type is void; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ MethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodInfo : System.Reflection.MethodInfo" Usage="System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-211">Pobiera atrybuty i metadanych dla metody synchronicznej.</span><span class="sxs-lookup"><span data-stu-id="43b68-211">Gets the attributes and metadata for a synchronous method.</span></span></summary>
        <value><span data-ttu-id="43b68-212">A <see cref="T:System.Reflection.MethodInfo" /> reprezentujących atrybuty i metadanych dla metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-212">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for a method.</span></span> <span data-ttu-id="43b68-213">Jeśli <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" /> jest <see langword="true" />, a następnie wartość tej właściwości jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-213">If <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" /> is <see langword="true" />, then the value of this property is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#3)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#3)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-214">Pobiera nazwę metody reprezentowanej przez to <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-214">Gets the name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <value><span data-ttu-id="43b68-215">Nazwa metody reprezentowanej przez to <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-215">The name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] OutParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] OutParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutParameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ OutParameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutParameters : System.Reflection.ParameterInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-216">Pobiera parametry wyjściowe dla metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-216">Gets the out parameters for the method.</span></span></summary>
        <value><span data-ttu-id="43b68-217">Tablica <see cref="T:System.Reflection.ParameterInfo" /> reprezentujący poza parametrów dla metody, w kolejności.</span><span class="sxs-lookup"><span data-stu-id="43b68-217">An array of <see cref="T:System.Reflection.ParameterInfo" /> representing the out parameters for the method, in order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b68-218">Użyj <xref:System.Reflection.ParameterInfo> do uzyskania informacji o typ danych parametru, wartość domyślna i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="43b68-218">Use a <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ Parameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Reflection.ParameterInfo[]" Usage="System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-219">Pobiera parametry metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-219">Gets the parameters for the method.</span></span></summary>
        <value><span data-ttu-id="43b68-220">Tablica <see cref="T:System.Reflection.ParameterInfo" /> parametrów dla metody reprezentująca.</span><span class="sxs-lookup"><span data-stu-id="43b68-220">An array of <see cref="T:System.Reflection.ParameterInfo" /> representing the parameters for the method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b68-221">Użyj <xref:System.Reflection.ParameterInfo> do uzyskania informacji o typ danych parametru, wartość domyślna i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="43b68-221">Use a <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="43b68-222"><xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> Zwraca tablicę <xref:System.Reflection.ParameterInfo> obiekty reprezentujące parametry przekazywane do metody, w kolejności.</span><span class="sxs-lookup"><span data-stu-id="43b68-222"><xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> returns an array of <xref:System.Reflection.ParameterInfo> objects representing the parameters passed into a method, in order.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnType : Type" Usage="System.Web.Services.Protocols.LogicalMethodInfo.ReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-223">Pobiera typ zwrotny tej metody.</span><span class="sxs-lookup"><span data-stu-id="43b68-223">Gets the return type of this method.</span></span></summary>
        <value><span data-ttu-id="43b68-224"><see cref="T:System.Type" /> Zwracanego przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="43b68-224">The <see cref="T:System.Type" /> returned by this method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributeProvider">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnTypeCustomAttributeProvider As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ ReturnTypeCustomAttributeProvider { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnTypeCustomAttributeProvider : System.Reflection.ICustomAttributeProvider" Usage="System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b68-225">Pobiera atrybuty niestandardowe dla zwracanego typu.</span><span class="sxs-lookup"><span data-stu-id="43b68-225">Gets the custom attributes for the return type.</span></span></summary>
        <value><span data-ttu-id="43b68-226"><see cref="T:System.Reflection.ICustomAttributeProvider" /> Reprezentujący atrybuty niestandardowe dla zwracanego typu.</span><span class="sxs-lookup"><span data-stu-id="43b68-226">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes for the return type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="logicalMethodInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43b68-227">Zwraca ciąg reprezentujący bieżącą <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-227">Returns a string that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></summary>
        <returns><span data-ttu-id="43b68-228">A <see cref="T:System.String" /> reprezentujący bieżącą <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="43b68-228">A <see cref="T:System.String" /> that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>