<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c706c1af8177916071757d526a6577557a1f625a" /><Meta Name="ms.sourcegitcommit" Value="d273738f2e9a7125fddf20a2da56406d86290ce9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/10/2019" /><Meta Name="ms.locfileid" Value="67725070" /></Metadata><TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type SoapHttpClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa klienta klasy, które serwery proxy dziedziczyć po przy użyciu protokołu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli tworzysz klienta usług XML sieci Web, następnie klasy serwera proxy, pośrednio lub bezpośrednio pochodzi od klasy <xref:System.Web.Services.Protocols.WebClientProtocol> musi zostać utworzony dla usługi sieci Web XML. Gdy klient usługi XML sieci Web wywołuje przy użyciu protokołu SOAP, klasy proxy muszą pochodzić od <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, która jest pochodną <xref:System.Web.Services.Protocols.HttpWebClientProtocol>. <xref:System.Web.Services.Protocols.HttpWebClientProtocol>, z kolei pochodzi od klasy <xref:System.Web.Services.Protocols.WebClientProtocol>.  
  
 Aby komunikować się z usługą sieci Web XML, należy utworzyć klasy proxy, która pochodzi od klasy pośrednio lub bezpośrednio <xref:System.Web.Services.Protocols.WebClientProtocol> dla usługi sieci Web XML, który chcesz wybrać. Zamiast tworzenia klasy proxy ręcznie, należy użyć narzędzia Web Services Description Language (Wsdl.exe), aby utworzyć klasę serwera proxy dla danej usługi sieci Web XML opisu usługi. Podczas generowania klasy serwera proxy dla protokołu SOAP synchroniczne wywołania metody usługi sieci Web XML są nawiązywane za pośrednictwem <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> metody, natomiast wywołania asynchroniczne są wykonywane przy użyciu <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> metody i <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy generowany przez Wsdl.exe dla `Math` usługi XML sieci Web. Pochodną klasy proxy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, która jest pochodną abstrakcyjnej <xref:System.Web.Services.Protocols.WebClientProtocol> klasy.  
  
 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest `Math` usługi XML sieci Web, z której został wygenerowany poprzedniego klasy proxy.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/sourcevb.asmx)]  
  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <block subset="none" type="overrides"><para>Jeśli zastąpisz tę klasę, możesz wprowadzić metody w klasie pochodnej, które są specyficzne dla danego typu usługi XML sieci Web. Metody przechwytywania parametrów i wywołać podstawowej klasy, które wykonają tę pracę z komunikacji z usługą sieci Web XML. Jeśli wprowadzono metody są asynchroniczne, wywołaj <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> metody i <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> metody. Jeśli wprowadzono metody są synchroniczne, wywołaj <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> metody. Zwykle ustawia konstruktora zgodnym z przesłoniętą <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> właściwość adres URL metody usługi sieci Web XML.</para></block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="soapHttpClientProtocol.BeginInvoke (methodName, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">Nazwa metody usługi sieci Web XML w klasie pochodnej, która wywołuje <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> metody.</param>
        <param name="parameters">Tablica obiektów zawierających parametry do przekazania do usługi sieci Web XML. Kolejność wartości w tablicy odpowiadają kolejnością parametrów wywołania metody w klasie pochodnej.</param>
        <param name="callback">Delegat do wywołania po ukończeniu asynchronicznego invoke. Jeśli <paramref name="callback" /> jest <see langword="null" />, delegat nie jest wywoływana.</param>
        <param name="asyncState">Dodatkowe informacje są dostarczane przez obiekt wywołujący.</param>
        <summary>Uruchamia asynchroniczne wywołanie metody usługi sieci Web XML przy użyciu protokołu SOAP.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Przekazana do <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> metodę, aby uzyskać wartości zwracanych z wywołań metody zdalnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowo, użytkownik nie może wywołać <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> metoda bezpośrednio, chyba że tworzysz własne klasy serwera proxy dla usługi sieci Web XML.  
  
 Klasy serwera proxy, wygenerowane za pomocą narzędzia Web Services Description Language (Wsdl.exe) z opisu usługi udostępnia metody usługi sieci Web XML jako nazwy pochodzące z klasy serwera proxy do wywołania metody usługi sieci Web XML, synchronicznie. Do wywołania metody usługi sieci Web XML asynchronicznie, dwie dodatkowe metody są dodawane do klasy serwera proxy dla każdej metody usługi sieci Web XML, jeden z `Begin` Prefiks dodawany do nazwy metody usługi sieci Web XML, a druga za pomocą `End` dodany prefiks.  
  
 Serwer proxy wywołań klasy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> metodę, aby rozpocząć rozmowę asynchronicznego wywołania metody usługi sieci Web XML. Na przykład, jeśli usługi XML sieci Web udostępnia metody usługi sieci Web XML o nazwie `Add`, klasa proxy zawiera metodę o nazwie `BeginAdd`, metody uruchamiania wywołania, aby XML sieci Web usługi. W ramach kodu dla `BeginAdd`, połączenie jest nawiązywane w przypadku <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> metody i wyniki są umieszczane w oczekiwany typ zwracany dla `Add`.  
  
 `methodName` Jest używana do znajdowania atrybutów niestandardowych, które mogły zostać dodane do metody, takie jak <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> zawiera dodatkowe informacje na temat metody pochodnej, która jest wymagana dla protokołu SOAP.  
  
 `asyncState` jest przekazywana do `callback` i wchodzi w skład <xref:System.IAsyncResult> zwrócone z <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> metody. `asyncState` Parametru może służyć do przekazywania informacji o kontekście wywołania asynchronicznego, określone w `callback` parametru delegata, który obsługuje wynik.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy generowany przez narzędzie Web Services Description Language (Wsdl.exe) dla `Math` usługi XML sieci Web. W ramach `BeginAdd` metody klasy proxy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> metoda jest uruchamiana wywołania asynchronicznego, aby `Add` metody usługi sieci Web XML.  
  
 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest `Math` usługi XML sieci Web, z której została utworzona poprzedniego klasy proxy.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Żądanie osiągnięto na komputerze serwera, ale nie została przetworzona pomyślnie.</exception>
        <exception cref="T:System.InvalidOperationException">Żądanie nie jest prawidłowa dla bieżącego stanu obiektu.</exception>
        <exception cref="T:System.Net.WebException">Wystąpił błąd podczas uzyskiwania dostępu do sieci.</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberSignature Language="F#" Value="member this.Discover : unit -&gt; unit" Usage="soapHttpClientProtocol.Discover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dynamicznie wiąże się z usługą sieci Web XML, opisane w dokumencie odnajdywania w <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klient usługi sieci Web XML można dynamicznie powiązać usługi XML sieci Web innych niż ten, do którego odwołuje się przy użyciu klasy serwera proxy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> metody. Zazwyczaj <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> właściwość odwołuje się do podstawowego adresu usługi XML sieci Web. Jednak przed wywołaniem <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> Ustaw metody <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> właściwość adres URL dokumentu odnajdywania. <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> Metoda próbuje odnaleźć dopasowania w dokumencie odnajdywania w celu powiązania zdefiniowanej w klasie serwera proxy, a następnie dynamicznie wiążą do niego. W przypadku powodzenia kolejnych wywołań są kierowane do usługi sieci Web XML, opisane w dokumencie odnajdywania.  
  
 W przypadku klasy proxy został utworzony za pomocą narzędzia Web Services Description Language (Wsdl.exe), klasy proxy definiuje powiązanie implementowany przez metody usługi sieci Web XML, wywołuje ono przy użyciu <xref:System.Web.Services.WebServiceBindingAttribute>. Gdy usługi XML sieci Web implementuje wiele powiązań, Wsdl.exe tworzy klasy serwera proxy dla każdego powiązania. Stosowane do każdej klasy serwera proxy jest <xref:System.Web.Services.WebServiceBindingAttribute> definiuje nazwę powiązania i jego przestrzeń nazw. Dokument, możesz ustawić <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> właściwości musi zawierać odwołanie do usługi sieci Web XML, który implementuje taką samą nazwę powiązania i przestrzeni nazw lub zostanie zgłoszony wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy wygenerowany za pomocą narzędzia Wsdl.exe dla `Math` usługi XML sieci Web. A <xref:System.Web.Services.WebServiceBindingAttribute> jest stosowany do `Math` klasy serwera proxy, ustawienie nazwy powiązania `MathSoap` oraz jego przestrzeń nazw `http://tempuri.org/`.  
  
 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest klientem usługi sieci Web przy użyciu poprzednich klasy proxy. W ramach `EnterBtn_Click` zdarzenia formularza sieci Web, wywołań klienta usług XML sieci Web <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> metoda próby dynamicznie powiązania do adresu URL podanego przez użytkownika.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Nie można odnaleźć powiązania zdefiniowanej w klasie serwera proxy w dokumencie odnajdywania w <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.

—lub— 
Klasa serwera proxy nie ma powiązania zdefiniowane.</exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/fxx6cfx2(v=vs.100)">Odnajdowanie usługi sieci Web XML</related>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj[]" Usage="soapHttpClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Zwróciło <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Kończy wywołanie asynchroniczne metody usług XML sieci Web przy użyciu protokołu SOAP.</summary>
        <returns>Tablica obiektów zawiera wartość zwracaną i wszelkie przez odwołanie lub <see langword="out" /> parametry metody w klasie pochodnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowo, użytkownik nie może wywołać <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> metoda bezpośrednio, chyba że tworzysz własne klasy serwera proxy dla usługi sieci Web XML.  
  
 Klasy serwera proxy, wygenerowany przez narzędzie Web Services Description Language (Wsdl.exe) dla usługi XML sieci Web udostępnia metody usługi sieci Web XML jako nazwy zniżki w stosunku do klasy proxy synchronicznego wywoływania metody usługi sieci Web XML. Asynchronicznie wywoływania metody usługi sieci Web XML, dwie dodatkowe metody są dodawane do klasy serwera proxy dla każdej metody usługi sieci Web XML, jeden z `Begin` Prefiks dodawany do nazwy metody usługi sieci Web XML, a druga za pomocą `End` dodany prefiks.  
  
 Serwer proxy wywołań klasy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> metodę, aby ukończyć wywołanie asynchroniczne wywołanie metody usługi sieci Web XML. Na przykład, jeśli usługi XML sieci Web udostępnia metody usługi sieci Web XML o nazwie `Add`, klasa proxy zawiera metodę o nazwie `EndAdd`, metody ukończenia wywołania asynchronicznego XML sieci Web usługi. W ramach kodu dla `EndAdd` połączenie jest nawiązywane w przypadku <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> metody, a następnie wyniki są umieszczane w oczekiwany typ zwracany dla `Add`.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy generowany przez Wsdl.exe dla `Math` usługi XML sieci Web. W ramach `EndAdd` metody klasy proxy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> metoda ukończeniu asynchronicznego wywołania w celu `Add` metody usługi sieci Web XML.  
  
 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest `Math` usługi XML sieci Web, z której została utworzona poprzedniego klasy proxy.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> nie jest wartość zwrotną z elementu <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> metody.</exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Żądanie osiągnięto na komputerze serwera, ale nie została przetworzona pomyślnie.</exception>
        <exception cref="T:System.InvalidOperationException">Żądanie nie jest prawidłowa dla bieżącego stanu obiektu.</exception>
        <exception cref="T:System.Net.WebException">Wystąpił błąd podczas uzyskiwania dostępu do sieci.</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader&#xA;override this.GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader" Usage="soapHttpClientProtocol.GetReaderForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> zapewniający <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> zainicjować <see cref="T:System.Xml.XmlReader" />.</param>
        <param name="bufferSize">Rozmiar buforu początkowej <see cref="T:System.IO.StreamReader" /> posługują się <see cref="T:System.Xml.XmlReader" />.</param>
        <summary>Zwraca <see cref="T:System.Xml.XmlReader" /> zainicjowane z użyciem <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> właściwość <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parametru.</summary>
        <returns>A <see cref="T:System.Xml.XmlReader" /> zainicjowane z użyciem <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> właściwość <paramref name="message" /> parametru.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="soapHttpClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><see cref="T:System.Uri" /> Do użycia podczas tworzenia <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Tworzy <see cref="T:System.Net.WebRequest" /> dla określonego <paramref name="uri" />.</summary>
        <returns><see cref="T:System.Net.WebRequest" /> Dla określonego identyfikatora URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może zostać zastąpiona w celu dostosowywania <xref:System.Net.WebRequest> przed XML sieci Web zostanie wysłane żądanie usługi. Na przykład można dodać niestandardowy nagłówek żądania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="uri" /> Parametr <see langword="null" />.</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter&#xA;override this.GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter" Usage="soapHttpClientProtocol.GetWriterForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> zapewniający <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> zainicjować <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="bufferSize">Rozmiar buforu początkowej <see cref="T:System.IO.StreamWriter" /> posługują się <see cref="T:System.Xml.XmlWriter" />.</param>
        <summary>Zwraca <see cref="T:System.Xml.XmlWriter" /> zainicjowane z użyciem <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> właściwość <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parametru.</summary>
        <returns>A <see cref="T:System.Xml.XmlWriter" /> zainicjowane z użyciem <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> właściwość <paramref name="message" /> parametru.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName">Nazwa metody usługi sieci Web XML.</param>
        <param name="method_name">Nazwa metody usługi sieci Web XML.</param>
        <param name="parameters">Tablica obiektów zawiera parametry do przekazania do usługi sieci Web XML. Kolejność wartości w tablicy odpowiada kolejności parametrów wywołania metody w klasie pochodnej.</param>
        <summary>Wywołuje metody usługi sieci Web XML, synchronicznie przy użyciu protokołu SOAP.</summary>
        <returns>Tablica obiektów zawiera wartość zwracaną i wszystkie <see langword="reference" /> lub <see langword="out" /> parametry metody w klasie pochodnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie zostanie wywołana <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> metoda bezpośrednio, chyba że opracowujesz własne klasy serwera proxy dla usługi sieci Web XML.  
  
 Klasy serwera proxy, wygenerowany przez narzędzie Web Services Description Language (Wsdl.exe) dla usługi XML sieci Web udostępnia metody usługi sieci Web XML jako nazwy zniżki w stosunku do klasy proxy. Serwer proxy wywołań klasy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> metody do wywołania wywołania metody usługi sieci Web XML. Na przykład, jeśli usługi XML sieci Web udostępnia metody usługi sieci Web XML o nazwie `Add`, klasa proxy zawiera także metodę o nazwie `Add`. W ramach kodu dla `Add` metody w klasie serwera proxy, wykonywane jest wywołanie synchroniczne metody usługi sieci Web XML przy użyciu <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> metody, a następnie wyniki są umieszczane w oczekiwany typ zwracany dla `Add`.  
  
 `methodName` Parametru jest używana do znajdowania atrybutów niestandardowych, które mogły zostać dodane do metody, takie jak <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> zawiera dodatkowe informacje dotyczące metody pochodnej, która jest wymagana dla protokołu SOAP.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy generowany przez Wsdl.exe dla `Math` usługi XML sieci Web. W ramach `Add` metody klasy proxy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> wywołuje metodę `Add` metody usługi sieci Web XML.  
  
 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest `Math` usługi XML sieci Web, z której została utworzona poprzedniego klasy proxy.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Żądanie osiągnięto na komputerze serwera, ale nie została przetworzona pomyślnie.</exception>
        <exception cref="T:System.InvalidOperationException">Żądanie nie jest prawidłowa dla bieżącego stanu obiektu.</exception>
        <exception cref="T:System.Net.WebException">Wystąpił błąd podczas uzyskiwania dostępu do sieci.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Asynchronicznie wywołuje określoną metodę.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName">Nazwa metody do wywołania.</param>
        <param name="parameters">Parametry do przekazania do metody.</param>
        <param name="callback">Delegat wywoływany w przypadku wywołania metody została ukończona.</param>
        <summary>Asynchronicznie wywołuje określoną metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userState" Type="System.Object" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName">Nazwa metody do wywołania.</param>
        <param name="parameters">Parametry do przekazania do metody.</param>
        <param name="callback">Delegat wywoływany w przypadku wywołania metody została ukończona.</param>
        <param name="userState">Obiekt używany do przekazywania informacji o stanie do <paramref name="callback" /> delegować.</param>
        <summary>Asynchronicznie wywołuje określoną metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion with get, set" Usage="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wersję protokołu SOAP, które pozwala wysyłać żądania SOAP do usługi sieci Web XML.</summary>
        <value>Jedną z <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> wartości. Wartość domyślna to <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> Właściwością klasy serwera proxy, generowane przez narzędzie Web Services Description Language (Wsdl.exe) w celu <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> domyślnie, gdy dokument WSDL dla usługi sieci Web XML protokołu SOAP w wersji 1.1. Jednak gdy usługi XML sieci Web obsługuje tylko protokołu SOAP 1.2 zestawy Wsdl.exe <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> właściwość <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>. Aby wybrać wersję protokołu SOAP, podczas generowania klasy proxy przy użyciu Wsdl.exe, użyj `/protocol` przełącznik z `SOAP` lub `SOAP12` ustawienia, aby ustawić <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> właściwości <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> i <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>odpowiednio .  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia wersję protokołu używany do komunikacji z usługą sieci Web XML do protokołu SOAP 1.2.  
  
 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>