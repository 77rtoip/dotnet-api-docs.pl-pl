<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2fc422ceba52ee8a9e860db1f50e003680d4bc27" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69048576" /></Metadata><TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type SoapHttpClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa klienta klasy, z którego pochodzą serwery proxy przy użyciu protokołu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku kompilowania klienta usługi sieci Web XML, należy utworzyć klasę proxy, która pochodząca pośrednio <xref:System.Web.Services.Protocols.WebClientProtocol> lub bezpośrednio z programu musi być utworzona dla usługi sieci Web XML. Gdy klient usługi sieci Web XML używa protokołu SOAP, Klasa proxy musi pochodzić od <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, która pochodzi od. <xref:System.Web.Services.Protocols.HttpWebClientProtocol> <xref:System.Web.Services.Protocols.HttpWebClientProtocol>z kolei pochodzi od <xref:System.Web.Services.Protocols.WebClientProtocol>.  
  
 Aby komunikować się z usługą sieci Web XML, należy utworzyć klasę proxy, która jest pośrednia <xref:System.Web.Services.Protocols.WebClientProtocol> lub bezpośrednio z dla usługi sieci Web XML, która ma być wywoływana. Zamiast ręcznego tworzenia klasy proxy Użyj narzędzia Web Services Description Language (WSDL. exe), aby utworzyć klasę proxy dla danego opisu usługi sieci Web XML. Po wygenerowaniu klasy proxy dla protokołu SOAP wywołania synchroniczne metod usługi sieci Web XML są tworzone za pośrednictwem <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> metody, podczas gdy wywołania asynchroniczne są wykonywane <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> przy użyciu metody i <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy wygenerowaną przez WSDL. exe dla `Math` usługi sieci Web XML. Klasa proxy pochodzi od <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>klasy abstrakcyjnej. <xref:System.Web.Services.Protocols.WebClientProtocol>  
  
 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest `Math` usługą sieci Web XML, z której Wygenerowano poprzednią klasę proxy.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/sourcevb.asmx)]  
  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <block subset="none" type="overrides"><para>Podczas przesłonięcia tej klasy można wprowadzić metody w klasie pochodnej, które są specyficzne dla określonego typu usługi sieci Web XML. Metody przechwytują parametry i wywołują klasę bazową, aby wykonać działania komunikacji z usługą sieci Web XML. Jeśli wprowadzone metody są asynchroniczne, wywołaj <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> metodę <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> i metodę. Jeśli wprowadzone metody są synchroniczne, wywołaj <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> metodę. Zastąpiony Konstruktor zazwyczaj ustawia <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> właściwość na adres URL metody usługi sieci Web XML.</para></block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="soapHttpClientProtocol.BeginInvoke (methodName, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">Nazwa metody usługi sieci Web XML w klasie pochodnej, która wywołuje <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> metodę.</param>
        <param name="parameters">Tablica obiektów zawierających parametry do przekazania do usługi sieci Web XML. Kolejność wartości w tablicy odpowiada kolejności parametrów w metodzie wywołującej klasy pochodnej.</param>
        <param name="callback">Delegat do wywołania, gdy wywołanie asynchroniczne zostało zakończone. Jeśli <paramref name="callback" /> jest<see langword="null" />, delegat nie jest wywoływany.</param>
        <param name="asyncState">Dodatkowe informacje dostarczone przez wywołującego.</param>
        <summary>Uruchamia asynchroniczne wywołanie metody usługi sieci Web XML przy użyciu protokołu SOAP.</summary>
        <returns>Który jest przesyłany <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> do metody w celu uzyskania wartości zwracanych z wywołania metody zdalnej. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie można wywołać <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> metody bezpośrednio, chyba że tworzysz własną klasę proxy dla usługi sieci Web XML.  
  
 Klasa proxy wygenerowana przez narzędzie Web Services Description Language (WSDL. exe) z opisu usługi uwidacznia metody usługi sieci Web XML jako nazwy pochodzące od klasy proxy, aby wywoływać metody usługi sieci Web XML synchronicznie. Aby wywołać metody usługi sieci Web XML asynchronicznie, dwie dodatkowe metody są dodawane do klasy proxy dla każdej metody usługi sieci Web XML, jeden z `Begin` prefiksem dodanym do nazwy metody usługi sieci Web XML i jeden `End` z prefiksem dodanym.  
  
 Klasa proxy wywołuje metodę, <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> aby uruchomić asynchroniczne wywołanie wywołania metody usługi sieci Web XML. Na przykład jeśli usługa sieci Web XML uwidacznia metodę usługi sieci Web XML o nazwie `Add`, Klasa proxy zawiera metodę o nazwie `BeginAdd`, na potrzeby uruchamiania wywołania metody usługi sieci Web XML. W kodzie dla `BeginAdd`, wywołanie jest wykonywane <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> do metody, a wyniki są umieszczane w oczekiwanym typie zwracanym dla `Add`.  
  
 Służy do znajdowania niestandardowych atrybutów, które mogły zostać dodane do metody, <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>na przykład. `methodName` <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>zawiera dodatkowe informacje na temat metody pochodnej, która jest wymagana w przypadku protokołu SOAP.  
  
 `asyncState`jest przekazana `callback` do i jest uwzględniona <xref:System.IAsyncResult> w zwracanej <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> przez metodę. Parametr może służyć do przekazywania informacji dotyczących kontekstu wywołania asynchronicznego, określonego `callback` w parametrze, do delegata, który obsługuje wynik. `asyncState`  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą serwera proxy wygenerowaną przez narzędzie Web Services Description Language (WSDL. exe) dla `Math` usługi sieci Web XML. W metodzie klasy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> proxy Metoda rozpoczyna `Add` asynchroniczne wywołanie metody usługi sieci Web XML. `BeginAdd`  
  
 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest `Math` usługą sieci Web XML, z której została utworzona Poprzednia Klasa proxy.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Żądanie dotarło do komputera serwera, ale nie zostało przetworzone pomyślnie.</exception>
        <exception cref="T:System.InvalidOperationException">Żądanie było nieprawidłowe dla bieżącego stanu obiektu.</exception>
        <exception cref="T:System.Net.WebException">Wystąpił błąd podczas uzyskiwania dostępu do sieci.</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberSignature Language="F#" Value="member this.Discover : unit -&gt; unit" Usage="soapHttpClientProtocol.Discover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dynamicznie wiąże się z usługą sieci Web XML opisaną w dokumencie odnajdywania <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />pod adresem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klient usługi sieci Web XML można dynamicznie powiązać z usługą sieci Web XML inną niż ta, do której istnieje odwołanie w klasie proxy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> przy użyciu metody. <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> Zazwyczaj Właściwość odnosi się do adresu podstawowego usługi sieci Web XML. Jednak przed wywołaniem <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> metody <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> ustaw właściwość na adres URL dokumentu odnajdywania. <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> Metoda próbuje znaleźć dopasowanie w dokumencie odnajdywania do powiązania zdefiniowanego w klasie proxy, a następnie dynamicznie powiązać z nim. Jeśli to się powiedzie, kolejne wywołania metod są kierowane do usługi sieci Web XML opisanej w dokumencie odnajdywania.  
  
 Jeśli Klasa proxy jest tworzona przy użyciu narzędzia Web Services Description Language (WSDL. exe), Klasa proxy definiuje powiązanie zaimplementowane przez metody usługi sieci Web XML, które wywołuje przy użyciu <xref:System.Web.Services.WebServiceBindingAttribute>. Gdy usługa sieci Web XML implementuje wiele powiązań, plik WSDL. exe tworzy klasę proxy dla każdego powiązania. Zastosowano do każdej klasy <xref:System.Web.Services.WebServiceBindingAttribute> proxy, która definiuje nazwę powiązania i jego przestrzeń nazw. Dokument odnajdywania ustawia <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> właściwość na musi zawierać odwołanie do usługi sieci Web XML implementującej tę samą nazwę i przestrzeń nazw powiązania albo wyjątek jest zgłaszany.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy wygenerowaną za pomocą narzędzia WSDL. exe dla `Math` usługi sieci Web XML. Obiekt <xref:System.Web.Services.WebServiceBindingAttribute> jest stosowany `Math` do klasy proxy, w której jest `MathSoap` ustawiana nazwa powiązania i jego `http://tempuri.org/`przestrzeń nazw.  
  
 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest klientem usługi sieci Web przy użyciu powyższej klasy proxy. W ramach <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> zdarzenia formularza sieci Web klient usługi sieci Web XML wywołuje metodę, która podejmuje próbę dynamicznego powiązania z adresem URL dostarczonym przez użytkownika. `EnterBtn_Click`  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">W dokumencie <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />odnajdywania nie znaleziono powiązania zdefiniowanego w klasie proxy.

—lub— 
Klasa proxy nie ma zdefiniowanego powiązania.</exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/fxx6cfx2(v=vs.100)">Odnajdywanie usługi sieci Web XML</related>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj[]" Usage="soapHttpClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Zwracana<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> z metody.</param>
        <summary>Przerywa asynchroniczne wywołanie metody usługi sieci Web XML przy użyciu protokołu SOAP.</summary>
        <returns>Tablica obiektów, która zawiera wartość zwracaną i wszystkie przez odwołanie lub <see langword="out" /> parametry metody klasy pochodnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie można wywołać <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> metody bezpośrednio, chyba że tworzysz własną klasę proxy dla usługi sieci Web XML.  
  
 Klasa proxy generowana przez narzędzie Web Services Description Language (WSDL. exe) dla usługi sieci Web XML uwidacznia metody usługi sieci Web XML jako nazwy z klasy proxy w celu synchronicznego wywoływania metod usługi sieci Web XML. Do asynchronicznego wywoływania metod usługi sieci Web XML, dwie dodatkowe metody są dodawane do klasy proxy dla każdej metody usługi sieci Web XML, jeden z `Begin` prefiksem dodanym do nazwy metody usługi sieci Web XML i jeden `End` z prefiksem dodanym.  
  
 Klasa proxy wywołuje metodę, <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> aby zakończyć asynchroniczne wywołanie wywołania metody usługi sieci Web XML. Na przykład jeśli usługa sieci Web XML uwidacznia metodę usługi sieci Web XML o nazwie `Add`, Klasa proxy zawiera metodę o nazwie `EndAdd`, w celu ukończenia asynchronicznego wywołania metody usługi sieci Web XML. W kodzie dla `EndAdd` wywołania jest wykonywane <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> do metody, a następnie wyniki są umieszczane w oczekiwanym typie zwracanym dla `Add`.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy wygenerowaną przez WSDL. exe dla `Math` usługi sieci Web XML. W metodzie klasy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> proxy Metoda kończy `Add` asynchroniczne wywołanie metody usługi sieci Web XML. `EndAdd`  
  
 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest `Math` usługą sieci Web XML, z której została utworzona Poprzednia Klasa proxy.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" />nie jest wartością zwracaną z <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> metody.</exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Żądanie dotarło do komputera serwera, ale nie zostało przetworzone pomyślnie.</exception>
        <exception cref="T:System.InvalidOperationException">Żądanie było nieprawidłowe dla bieżącego stanu obiektu.</exception>
        <exception cref="T:System.Net.WebException">Wystąpił błąd podczas uzyskiwania dostępu do sieci.</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader&#xA;override this.GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader" Usage="soapHttpClientProtocol.GetReaderForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> , który <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> umożliwia zainicjowanie <see cref="T:System.Xml.XmlReader" />.</param>
        <param name="bufferSize">Początkowy rozmiar <see cref="T:System.IO.StreamReader" /> buforu używany <see cref="T:System.Xml.XmlReader" />przez.</param>
        <summary>Zwraca zainicjowany z właściwością <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />parametru. <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> <see cref="T:System.Xml.XmlReader" /></summary>
        <returns>Zainicjowany z właściwością <paramref name="message" />parametru. <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> <see cref="T:System.Xml.XmlReader" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="soapHttpClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Do użycia podczas <see cref="T:System.Net.WebRequest" />tworzenia. <see cref="T:System.Uri" /></param>
        <summary>Tworzy dla <see cref="T:System.Net.WebRequest" /> określonego <paramref name="uri" />elementu.</summary>
        <returns><see cref="T:System.Net.WebRequest" /> Dla określonego identyfikatora URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę metodę można zastąpić, aby dostosować <xref:System.Net.WebRequest> przed wprowadzeniem żądania usługi sieci Web XML. Na przykład można dodać niestandardowy nagłówek do żądania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Parametr ma wartość <see langword="null" />. <paramref name="uri" /></exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter&#xA;override this.GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter" Usage="soapHttpClientProtocol.GetWriterForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> , który <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> umożliwia zainicjowanie <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="bufferSize">Początkowy rozmiar <see cref="T:System.IO.StreamWriter" /> buforu używany <see cref="T:System.Xml.XmlWriter" />przez.</param>
        <summary>Zwraca zainicjowany z właściwością <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />parametru. <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> <see cref="T:System.Xml.XmlWriter" /></summary>
        <returns>Zainicjowany z właściwością <paramref name="message" />parametru. <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> <see cref="T:System.Xml.XmlWriter" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName">Nazwa metody usługi sieci Web XML.</param>
        <param name="method_name">Nazwa metody usługi sieci Web XML.</param>
        <param name="parameters">Tablica obiektów, która zawiera parametry do przekazania do usługi sieci Web XML. Kolejność wartości w tablicy odnosi się do kolejności parametrów w wywołaniu metody klasy pochodnej.</param>
        <summary>Wywołuje metodę usługi sieci Web XML synchronicznie przy użyciu protokołu SOAP.</summary>
        <returns>Tablica obiektów, która zawiera wartość zwracaną i wszystkie <see langword="reference" /> lub <see langword="out" /> parametry metody klasy pochodnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie jest wywoływana <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> Metoda bezpośrednio, chyba że tworzysz własną klasę proxy dla usługi sieci Web XML.  
  
 Klasa proxy generowana przez narzędzie Web Services Description Language (WSDL. exe) dla usługi sieci Web XML uwidacznia metody usługi sieci Web XML jako nazwy z klasy proxy. Klasa proxy wywołuje metodę, <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> aby wywołać wywołanie metody usługi sieci Web XML. Na przykład jeśli usługa sieci Web XML uwidacznia metodę usługi sieci Web XML o nazwie `Add`, Klasa proxy zawiera również metodę o nazwie. `Add` W kodzie `Add` metody w klasie proxy, wywołanie synchroniczne jest wykonywane do metody usługi sieci Web XML <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> za pomocą metody, a następnie wyniki są umieszczane w oczekiwanym zwracanym typie dla `Add`.  
  
 Ten `methodName` parametr służy do znajdowania niestandardowych atrybutów, które mogły zostać dodane do metody, <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>na przykład. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>zawiera dodatkowe informacje na temat metody pochodnej, która jest wymagana w przypadku protokołu SOAP.  
  
   
  
## Examples  
 Poniższy przykład kodu jest klasą proxy wygenerowaną przez WSDL. exe dla `Math` usługi sieci Web XML. W metodzie klasy <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> proxy metoda wywołuje `Add` metodę usługi sieci Web XML. `Add`  
  
 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 Poniższy przykład kodu jest `Math` usługą sieci Web XML, z której została utworzona Poprzednia Klasa proxy.  
  
 [!code-aspx-csharp[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic SoapHttpClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">Żądanie dotarło do komputera serwera, ale nie zostało przetworzone pomyślnie.</exception>
        <exception cref="T:System.InvalidOperationException">Żądanie było nieprawidłowe dla bieżącego stanu obiektu.</exception>
        <exception cref="T:System.Net.WebException">Wystąpił błąd podczas uzyskiwania dostępu do sieci.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wywołuje metodę asynchronicznie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName">Nazwa metody do wywołania.</param>
        <param name="parameters">Parametry do przekazania do metody.</param>
        <param name="callback">Delegat wywoływany, gdy wywołanie metody zostało zakończone.</param>
        <summary>Wywołuje metodę asynchronicznie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userState" Type="System.Object" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="methodName">Nazwa metody do wywołania.</param>
        <param name="parameters">Parametry do przekazania do metody.</param>
        <param name="callback">Delegat wywoływany, gdy wywołanie metody zostało zakończone.</param>
        <param name="userState">Obiekt służący do przekazywania informacji o stanie do <paramref name="callback" /> delegata.</param>
        <summary>Wywołuje metodę asynchronicznie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion with get, set" Usage="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wersję protokołu SOAP używaną do żądania protokołu SOAP do usługi sieci Web XML.</summary>
        <value>Jedna z <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> wartości. Wartość domyślna to <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest ustawiana w klasie proxy wygenerowanej przez narzędzie Web Services Description Language (WSDL. exe <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> ) domyślnie, gdy dokument WSDL usługi sieci Web XML obsługuje protokół SOAP w wersji 1,1. <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> Jednak gdy usługa sieci Web XML obsługuje tylko protokół SOAP 1,2, WSDL. exe ustawia <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> właściwość na. <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12> Aby wybrać wersję protokołu SOAP podczas generowania klasy proxy przy użyciu języka WSDL. exe, użyj `/protocol` przełącznika `SOAP` z ustawieniami <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> lub `SOAP12` , aby ustawić właściwość na <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> i <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>, odpowiednio .  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia wersję protokołu używanego do komunikacji z usługą sieci Web XML do protokołu SOAP 1,2.  
  
 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>
