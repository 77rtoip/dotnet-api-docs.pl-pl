<Type Name="TagRegex" FullName="System.Web.RegularExpressions.TagRegex">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fa44b3377ffe867b0f5acb236deca583088fe7f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597576" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TagRegex : System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TagRegex extends System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="DocId" Value="T:System.Web.RegularExpressions.TagRegex" />
  <TypeSignature Language="VB.NET" Value="Public Class TagRegex&#xA;Inherits Regex" />
  <TypeSignature Language="C++ CLI" Value="public ref class TagRegex : System::Text::RegularExpressions::Regex" />
  <TypeSignature Language="F#" Value="type TagRegex = class&#xA;    inherit Regex" />
  <AssemblyInfo>
    <AssemblyName>System.Web.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Regex</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera wyrażenie regularne, aby przeanalizować otwierający tag w elemencie HTML, XML element lub tag kontroli serwera sieci Web ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.RegularExpressions.TagRegex> Klasy zawiera wyrażenie regularne ASP.NET jest używana wewnętrznie do analizy otwierający tag HTML element, XML element lub sieci Web ASP.NET tag kontroli serwera, w przypadku aplikacji, które odnoszą się do [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] lub nowszy. Program ASP.NET używa <xref:System.Web.RegularExpressions.TagRegex35?displayProperty=nameWithType> klasy dla aplikacji przeznaczonych [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] i starszych wersji.  
  
> [!NOTE]
>  <xref:System.Web.RegularExpressions> Klas jest używana wewnętrznie przez program .NET Framework przeanalizować stron ASP.NET.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
    <altmember cref="T:System.Web.RegularExpressions.TagRegex35" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.RegularExpressions.TagRegex" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagRegex ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.RegularExpressions.TagRegex.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagRegex();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.RegularExpressions.TagRegex" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagRegex (TimeSpan A_1);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype System.TimeSpan A_1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.RegularExpressions.TagRegex.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (A_1 As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagRegex(TimeSpan A_1);" />
      <MemberSignature Language="F#" Value="new System.Web.RegularExpressions.TagRegex : TimeSpan -&gt; System.Web.RegularExpressions.TagRegex" Usage="new System.Web.RegularExpressions.TagRegex A_1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="A_1" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="A_1">Interwał limitu czasu, lub <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> Jeśli dopasowywanie operacje powinny nie upłynął limit czasu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.RegularExpressions.TagRegex" /> klasy z określoną wartość limitu czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `A_1` Parametr reprezentuje maksymalny czas, w którym aparat wyrażeń regularnych próbuje znaleźć dopasowanie, zanim upłynie limit czasu operacji, a co <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> generowany jest wyrażenie.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>