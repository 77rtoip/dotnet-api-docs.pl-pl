<Type Name="SqlClientPermission" FullName="System.Data.SqlClient.SqlClientPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7d1314bc7bcb7cb2653361bfb5af05c16189967" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30446301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlClientPermission : System.Data.Common.DBDataPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlClientPermission extends System.Data.Common.DBDataPermission" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlClientPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlClientPermission&#xA;Inherits DBDataPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlClientPermission sealed : System::Data::Common::DBDataPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DBDataPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0c2ce-101">Umożliwia dostawcy danych programu .NET Framework dla programu SQL Server upewnić się, że użytkownik ma wystarczające, aby uzyskiwać dostęp do źródła danych poziomu zabezpieczeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c2ce-101">Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c2ce-102"><xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> Właściwość ma wyższy priorytet niż <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-102">The <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> property takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property.</span></span> <span data-ttu-id="0c2ce-103">W związku z tym Jeśli ustawisz <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> do `false`, należy także ustawić <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> do `false` aby uniemożliwić użytkownikowi połączenie przy użyciu pustego hasła.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-103">Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> to `false` to prevent a user from making a connection using a blank password.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c2ce-104">Korzystając z uprawnień zabezpieczeń dostępu kodu dla ADO.NET, poprawne wzorzec jest rozpoczynać się od przypadku najbardziej restrykcyjne (nie uprawnienia we wszystkich), a następnie dodaj określone uprawnienia, które są wymagane dla określonego zadania, które musi wykonać kod.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-104">When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</span></span> <span data-ttu-id="0c2ce-105">Wzorzec przeciwnej, następnie odrzuciła określone uprawnienia, począwszy od wszystkie uprawnienia nie jest bezpieczne, ponieważ istnieje wiele sposobów wyrażenia te same parametry połączenia.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-105">The opposite pattern, starting with all permissions and then denying a specific permission, is not secure, because there are many ways of expressing the same connection string.</span></span> <span data-ttu-id="0c2ce-106">Na przykład, jeśli rozpoczynać wszystkie uprawnienia, a następnie spróbuj zezwolić na korzystanie z parametrów połączenia "serwera = someserver", ciąg "server=someserver.mycompany.com" nadal będzie dozwolony.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-106">For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</span></span> <span data-ttu-id="0c2ce-107">Należy zawsze uruchomić przyznając w ogóle nie ma uprawnień, można zmniejszyć prawdopodobieństwo, że istnieją luk w zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-107">By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c2ce-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlClientPermission" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-108">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission() has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c2ce-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlClientPermission" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-109">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="0c2ce-110">Jeden z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-110">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c2ce-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlClientPermission" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-111">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state, bool allowBlankPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState, allowBlankPassword As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlClientPermission(System::Security::Permissions::PermissionState state, bool allowBlankPassword);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("SqlClientPermission(PermissionState state, Boolean allowBlankPassword) has been deprecated.  Use the SqlClientPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
        <Parameter Name="allowBlankPassword" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="0c2ce-112">Jeden z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-112">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          </span>
        </param>
        <param name="allowBlankPassword">
          <span data-ttu-id="0c2ce-113">Wskazuje, czy puste hasło jest dozwolone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-113">Indicates whether a blank password is allowed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c2ce-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlClientPermission" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-114">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c2ce-115"><xref:System.Security.Permissions.PermissionState> Wyliczenie ma pierwszeństwo przed <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-115">The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property.</span></span> <span data-ttu-id="0c2ce-116">W związku z tym Jeśli ustawisz <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> do `false`, należy także ustawić <xref:System.Security.Permissions.PermissionState> do `None` aby uniemożliwić użytkownikowi połączenie przy użyciu pustego hasła.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-116">Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.</span></span> <span data-ttu-id="0c2ce-117">Na przykład pokazuje sposób użycia żądania kontroli zabezpieczeń, zobacz [zabezpieczenia dostępu kodu i ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span><span class="sxs-lookup"><span data-stu-id="0c2ce-117">For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(string connectionString, string restrictions, valuetype System.Data.KeyRestrictionBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (connectionString As String, restrictions As String, behavior As KeyRestrictionBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::String ^ connectionString, System::String ^ restrictions, System::Data::KeyRestrictionBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="restrictions" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.KeyRestrictionBehavior" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="0c2ce-118">Parametry połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-118">The connection string.</span>
          </span>
        </param>
        <param name="restrictions">
          <span data-ttu-id="0c2ce-119">Ograniczenia klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-119">The key restrictions.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="0c2ce-120">Jeden z <see cref="T:System.Data.KeyRestrictionBehavior" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-120">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> enumerations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c2ce-121">Dodaje nowe parametry połączenia i zestaw ograniczeniami słów kluczowych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-121">Adds a new connection string and a set of restricted keywords to the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c2ce-122">Użyj tej metody, aby skonfigurować parametry połączenia, które są dozwolone przez obiekt określone uprawnienie.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-122">Use this method to configure which connection strings are allowed by a particular permission object.</span></span> <span data-ttu-id="0c2ce-123">Na przykład można użyć następującego fragmentu kodu, jeśli chcesz zezwolić tylko określony ciąg połączenia i niczego poza:</span><span class="sxs-lookup"><span data-stu-id="0c2ce-123">For example, use the following code fragment if you want to only allow a specific connection string and nothing else:</span></span>  
  
 `permission.Add("server=MyServer; database=MyDatabase; Integrated Security=true", "", KeyRestrictionBehavior.AllowOnly)`  
  
 <span data-ttu-id="0c2ce-124">Poniższy przykład umożliwia skonfigurowanie parametrów połączenia, które korzysta z dowolną bazą danych, ale tylko na serwerze MójSerwer, o nazwie o dowolnej kombinacji użytkownika i hasła i nie inne słowa kluczowe parametrów połączenia:</span><span class="sxs-lookup"><span data-stu-id="0c2ce-124">The following example allows connection strings that use any database, but only on the server named MyServer, with any user and password combination and containing no other connection string keywords:</span></span>  
  
 `permission.Add("server=MyServer;", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
 <span data-ttu-id="0c2ce-125">W poniższym przykładzie używa tego samego scenariusz jako powyżej, ale pozwala na serwer partnerski trybu failover, używaną podczas nawiązywania połączenia z serwerów skonfigurowanych pod kątem dublowania:</span><span class="sxs-lookup"><span data-stu-id="0c2ce-125">The following example uses the same scenario as above but allows for a failover partner that can be used when connecting to servers configured for mirroring:</span></span>  
  
 `permission.Add("server=MyServer; failover partner=MyMirrorServer", "database=; user id=; password=;", KeyRestrictionBehavior.AllowOnly)`  
  
> [!NOTE]
>  <span data-ttu-id="0c2ce-126">Korzystając z uprawnień zabezpieczeń dostępu kodu dla ADO.NET, poprawne wzorzec jest rozpoczynać się od przypadku najbardziej restrykcyjne (nie uprawnienia we wszystkich), a następnie dodaj określone uprawnienia, które są wymagane dla określonego zadania, które musi wykonać kod.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-126">When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</span></span> <span data-ttu-id="0c2ce-127">Wzorzec przeciwnej, począwszy od wszystkie uprawnienia, a następnie ponawiając odrzucanie określone uprawnienia nie jest bezpieczne, ponieważ istnieje wiele sposobów wyrażenia te same parametry połączenia.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-127">The opposite pattern, starting with all permissions and then trying to deny a specific permission, is not secure, because there are many ways of expressing the same connection string.</span></span> <span data-ttu-id="0c2ce-128">Na przykład, jeśli rozpoczynać wszystkie uprawnienia, a następnie spróbuj zezwolić na korzystanie z parametrów połączenia "serwera = someserver", ciąg "server=someserver.mycompany.com" nadal będzie dozwolony.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-128">For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</span></span> <span data-ttu-id="0c2ce-129">Należy zawsze uruchomić przyznając w ogóle nie ma uprawnień, można zmniejszyć prawdopodobieństwo, że istnieją luk w zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="0c2ce-129">By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlClientPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c2ce-130">Zwraca <see cref="T:System.Data.SqlClient.SqlClientPermission" /> jako <see cref="T:System.Security.IPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-130">Returns the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> as an <see cref="T:System.Security.IPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c2ce-131">Kopię bieżącego obiektu uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c2ce-131">A copy of the current permission object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>