<Type Name="SqlTransaction" FullName="System.Data.SqlClient.SqlTransaction">
  <TypeSignature Language="C#" Value="public sealed class SqlTransaction : System.Data.Common.DbTransaction, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTransaction extends System.Data.Common.DbTransaction implements class System.Data.IDbTransaction, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTransaction&#xA;Inherits DbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTransaction sealed : System::Data::Common::DbTransaction, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2410a-101">Reprezentuje transakcji języka Transact-SQL w bazie danych programu SQL Server.</span><span class="sxs-lookup"><span data-stu-id="2410a-101">Represents a Transact-SQL transaction to be made in a SQL Server database.</span></span> <span data-ttu-id="2410a-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="2410a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2410a-103">Aplikacja tworzy <xref:System.Data.SqlClient.SqlTransaction> obiektu przez wywołanie metody <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> na <xref:System.Data.SqlClient.SqlConnection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2410a-103">The application creates a <xref:System.Data.SqlClient.SqlTransaction> object by calling <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> on the <xref:System.Data.SqlClient.SqlConnection> object.</span></span> <span data-ttu-id="2410a-104">Wszystkie kolejne operacje skojarzony z transakcją (na przykład, zatwierdzanie lub przerywanie transakcji), są wykonywane na <xref:System.Data.SqlClient.SqlTransaction> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2410a-104">All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <xref:System.Data.SqlClient.SqlTransaction> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2410a-105">`Try`/`Catch` Obsługa wyjątków zawsze należy używać podczas zatwierdzania lub wycofywania <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="2410a-105">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="2410a-106">Zarówno <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Generowanie <xref:System.InvalidOperationException> Jeśli połączenie zostanie przerwane lub jeśli transakcja została już wycofana na serwerze.</span><span class="sxs-lookup"><span data-stu-id="2410a-106">Both <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generate an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="2410a-107">Aby uzyskać więcej informacji o transakcji programu SQL Server, zobacz [jawnych transakcji](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) i [kodowania wydajne transakcji](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span><span class="sxs-lookup"><span data-stu-id="2410a-107">For more information on SQL Server transactions, see [Explicit Transactions](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx) and [Coding Efficient Transactions](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2410a-108">Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="2410a-108">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="2410a-109">Ponadto przedstawiono sposób użycia <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2410a-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="2410a-110">Transakcja zostanie wycofana każdy błąd, lub jeśli jego usunięcia nie jest pierwszym zatwierdzone.</span><span class="sxs-lookup"><span data-stu-id="2410a-110">The transaction is rolled back on any error, or if it is disposed without first being committed.</span></span> <span data-ttu-id="2410a-111">`Try`/`Catch` Obsługa błędów jest używany do obsługi błędów w trakcie próby przekazać ani wycofać transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-111">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Commit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2410a-112">Zatwierdza transakcji bazy danych.</span><span class="sxs-lookup"><span data-stu-id="2410a-112">Commits the database transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2410a-113"><xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Metoda jest odpowiednikiem instrukcji języka Transact-SQL COMMIT TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="2410a-113">The <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</span></span> <span data-ttu-id="2410a-114">Nie można wycofać transakcji po jej został przekazany, ponieważ wszystkie modyfikacje stały się stałą częścią bazy danych.</span><span class="sxs-lookup"><span data-stu-id="2410a-114">You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</span></span> <span data-ttu-id="2410a-115">Aby uzyskać więcej informacji zobacz dokumentację SQL Server — książki Online.</span><span class="sxs-lookup"><span data-stu-id="2410a-115">For more information, see SQL Server Books Online.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2410a-116">`Try`/`Catch` Obsługa wyjątków zawsze należy używać podczas zatwierdzania lub wycofywania <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="2410a-116">`Try`/`Catch` exception handling should always be used when committing or rolling back a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="2410a-117">Zarówno `Commit` i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generuje <xref:System.InvalidOperationException> Jeśli połączenie zostanie przerwane lub jeśli transakcja została już wycofana na serwerze.</span><span class="sxs-lookup"><span data-stu-id="2410a-117">Both `Commit` and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="2410a-118">Aby uzyskać więcej informacji o transakcji programu SQL Server zobacz "Jawnych transakcji" i "kodowania wydajne" w dokumentacji SQL Server — książki Online.</span><span class="sxs-lookup"><span data-stu-id="2410a-118">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2410a-119">Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="2410a-119">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="2410a-120">Ponadto przedstawiono sposób użycia <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2410a-120">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="2410a-121">Transakcja zostanie wycofana każdy błąd.</span><span class="sxs-lookup"><span data-stu-id="2410a-121">The transaction is rolled back on any error.</span></span> <span data-ttu-id="2410a-122">`Try`/`Catch` Obsługa błędów jest używany do obsługi błędów w trakcie próby przekazać ani wycofać transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-122">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="2410a-123">Wystąpił błąd podczas próby zatwierdzenia transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-123">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2410a-124">Transakcja została już zatwierdzona lub wycofana.</span><span class="sxs-lookup"><span data-stu-id="2410a-124">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="2410a-125">—lub—</span><span class="sxs-lookup"><span data-stu-id="2410a-125">-or-</span></span>  
  
 <span data-ttu-id="2410a-126">Połączenie zostało zerwane.</span><span class="sxs-lookup"><span data-stu-id="2410a-126">The connection is broken.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2410a-127">Pobiera <see cref="T:System.Data.SqlClient.SqlConnection" /> obiekt skojarzony z transakcją, lub <see langword="null" /> Jeśli transakcja nie jest już prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="2410a-127">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span></span></summary>
        <value><span data-ttu-id="2410a-128"><see cref="T:System.Data.SqlClient.SqlConnection" /> Obiekt skojarzony z transakcją.</span><span class="sxs-lookup"><span data-stu-id="2410a-128">The <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2410a-129">Pojedynczej aplikacji może mieć wiele połączeń bazy danych, z których każde z nich zero lub więcej transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-129">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="2410a-130">Ta właściwość umożliwia określenie obiektu połączenia skojarzonego z danej transakcji utworzony przez <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span><span class="sxs-lookup"><span data-stu-id="2410a-130">This property lets you determine the connection object associated with a particular transaction created by <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbTransaction.IsolationLevel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2410a-131">Określa <see cref="T:System.Data.IsolationLevel" /> dla tej transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-131">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span></summary>
        <value><span data-ttu-id="2410a-132"><see cref="T:System.Data.IsolationLevel" /> Dla tej transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-132">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span> <span data-ttu-id="2410a-133">Wartość domyślna to <see langword="ReadCommitted" />.</span><span class="sxs-lookup"><span data-stu-id="2410a-133">The default is <see langword="ReadCommitted" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2410a-134">Transakcje równoległe są nieobsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2410a-134">Parallel transactions are not supported.</span></span> <span data-ttu-id="2410a-135">W związku z tym <xref:System.Data.IsolationLevel> ma zastosowanie do całej transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-135">Therefore, the <xref:System.Data.IsolationLevel> applies to the whole transaction.</span></span>  
  
 <span data-ttu-id="2410a-136">Aby uzyskać więcej informacji na poziomie izolacji programu SQL Server zobacz "Izolacji poziomy w aparat bazy danych" w dokumentacji SQL Server — książki Online.</span><span class="sxs-lookup"><span data-stu-id="2410a-136">For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rollback">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2410a-137">Przywraca transakcji w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="2410a-137">Rolls back a transaction from a pending state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbTransaction.Rollback</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2410a-138">Przywraca transakcji w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="2410a-138">Rolls back a transaction from a pending state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2410a-139"><xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Metoda jest odpowiednikiem instrukcji języka Transact-SQL ROLLBACK TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="2410a-139">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="2410a-140">Aby uzyskać więcej informacji zobacz dokumentację SQL Server — książki Online.</span><span class="sxs-lookup"><span data-stu-id="2410a-140">For more information, see SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="2410a-141">Transakcja tylko można wycofać w stanie oczekiwania (po <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> została wywołana, ale przed wysłaniem <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> nosi nazwę).</span><span class="sxs-lookup"><span data-stu-id="2410a-141">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="2410a-142">Transakcja została wycofana ponownie w przypadku zostanie usunięty przed `Commit` lub `Rollback` jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2410a-142">The transaction is rolled back in the event it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2410a-143">`Try`/`Catch` Obsługa wyjątków zawsze należy używać podczas wycofywania transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-143">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="2410a-144">A `Rollback` generuje <xref:System.InvalidOperationException> Jeśli połączenie zostanie przerwane lub jeśli transakcja została już wycofana na serwerze.</span><span class="sxs-lookup"><span data-stu-id="2410a-144">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="2410a-145">Aby uzyskać więcej informacji o transakcji programu SQL Server zobacz "Jawnych transakcji" i "kodowania wydajne" w dokumentacji SQL Server — książki Online.</span><span class="sxs-lookup"><span data-stu-id="2410a-145">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2410a-146">Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="2410a-146">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="2410a-147">Ponadto przedstawiono sposób użycia <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2410a-147">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="2410a-148">Transakcja zostanie wycofana każdy błąd.</span><span class="sxs-lookup"><span data-stu-id="2410a-148">The transaction is rolled back on any error.</span></span> <span data-ttu-id="2410a-149">`Try`/`Catch` Obsługa błędów jest używany do obsługi błędów w trakcie próby przekazać ani wycofać transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-149">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="2410a-150">Wystąpił błąd podczas próby zatwierdzenia transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-150">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2410a-151">Transakcja została już zatwierdzona lub wycofana.</span><span class="sxs-lookup"><span data-stu-id="2410a-151">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="2410a-152">—lub—</span><span class="sxs-lookup"><span data-stu-id="2410a-152">-or-</span></span>  
  
 <span data-ttu-id="2410a-153">Połączenie zostało zerwane.</span><span class="sxs-lookup"><span data-stu-id="2410a-153">The connection is broken.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rollback(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (transactionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::String ^ transactionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName"><span data-ttu-id="2410a-154">Nazwa transakcji, aby wycofać lub punktu zapisu, do którego należy przywrócić.</span><span class="sxs-lookup"><span data-stu-id="2410a-154">The name of the transaction to roll back, or the savepoint to which to roll back.</span></span></param>
        <summary><span data-ttu-id="2410a-155">Przywraca transakcji w stanie oczekiwania i transakcji lub nazwa punktu zapisu.</span><span class="sxs-lookup"><span data-stu-id="2410a-155">Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2410a-156"><xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> Metoda jest odpowiednikiem instrukcji języka Transact-SQL ROLLBACK TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="2410a-156">The <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</span></span> <span data-ttu-id="2410a-157">Aby uzyskać więcej informacji zobacz "Jawnych transakcji" i "Punktów zapisu transakcji" w dokumentacji SQL Server — książki Online.</span><span class="sxs-lookup"><span data-stu-id="2410a-157">For more information, see "Explicit Transactions" and "Transaction Savepoints" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="2410a-158">Transakcja tylko można wycofać w stanie oczekiwania (po <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> została wywołana, ale przed wysłaniem <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> nosi nazwę).</span><span class="sxs-lookup"><span data-stu-id="2410a-158">The transaction can only be rolled back from a pending state (after <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="2410a-159">Transakcja została wycofana, jeśli zostanie usunięty przed `Commit` lub `Rollback` jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2410a-159">The transaction is rolled back if it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2410a-160">`Try`/`Catch` Obsługa wyjątków zawsze należy używać podczas wycofywania transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-160">`Try`/`Catch` exception handling should always be used when rolling back a transaction.</span></span> <span data-ttu-id="2410a-161">A `Rollback` generuje <xref:System.InvalidOperationException> Jeśli połączenie zostanie przerwane lub jeśli transakcja została już wycofana na serwerze.</span><span class="sxs-lookup"><span data-stu-id="2410a-161">A `Rollback` generates an <xref:System.InvalidOperationException> if the connection is terminated or if the transaction has already been rolled back on the server.</span></span>  
  
 <span data-ttu-id="2410a-162">Aby uzyskać więcej informacji o transakcji programu SQL Server zobacz "Jawnych transakcji" i "kodowania wydajne" w dokumentacji SQL Server — książki Online.</span><span class="sxs-lookup"><span data-stu-id="2410a-162">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2410a-163">Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="2410a-163">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="2410a-164">Ponadto przedstawiono sposób użycia <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2410a-164">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span> <span data-ttu-id="2410a-165">Transakcja zostanie wycofana każdy błąd.</span><span class="sxs-lookup"><span data-stu-id="2410a-165">The transaction is rolled back on any error.</span></span> <span data-ttu-id="2410a-166">`Try`/`Catch` Obsługa błędów jest używany do obsługi błędów w trakcie próby przekazać ani wycofać transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-166">`Try`/`Catch` error handling is used to handle any errors when attempting to commit or roll back the transaction.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2410a-167">Nazwa transakcji nie została określona.</span><span class="sxs-lookup"><span data-stu-id="2410a-167">No transaction name was specified.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2410a-168">Transakcja została już zatwierdzona lub wycofana.</span><span class="sxs-lookup"><span data-stu-id="2410a-168">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="2410a-169">—lub—</span><span class="sxs-lookup"><span data-stu-id="2410a-169">-or-</span></span>  
  
 <span data-ttu-id="2410a-170">Połączenie zostało zerwane.</span><span class="sxs-lookup"><span data-stu-id="2410a-170">The connection is broken.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string savePointName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string savePointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (savePointName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ savePointName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savePointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="savePointName"><span data-ttu-id="2410a-171">Nazwa punktu zapisu.</span><span class="sxs-lookup"><span data-stu-id="2410a-171">The name of the savepoint.</span></span></param>
        <summary><span data-ttu-id="2410a-172">Tworzy punktu zapisu w transakcji, który może służyć do przywrócenia część transakcji i określa nazwę punktu zapisu.</span><span class="sxs-lookup"><span data-stu-id="2410a-172">Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2410a-173"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> Metoda jest odpowiednikiem instrukcji języka Transact-SQL SAVE TRANSACTION.</span><span class="sxs-lookup"><span data-stu-id="2410a-173"><xref:System.Data.SqlClient.SqlTransaction.Save%2A> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</span></span>  
  
 <span data-ttu-id="2410a-174">Wartość używana w `savePoint` parametr może mieć taką samą wartość, używane w `transactionName` parametru niektóre implementacje <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2410a-174">The value used in the `savePoint` parameter can be the same value used in the `transactionName` parameter of some implementations of the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> method.</span></span>  
  
 <span data-ttu-id="2410a-175">Punktów zapisu oferuje mechanizmu wycofać części transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-175">Savepoints offer a mechanism to roll back parts of transactions.</span></span> <span data-ttu-id="2410a-176">Tworzenia punktu zapisu przy użyciu <xref:System.Data.SqlClient.SqlTransaction.Save%2A> — metoda, a następnie kontynuować wywołania <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> sposób Przywracanie do punktu zapisu zamiast wycofania na początku transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-176">You create a savepoint using the <xref:System.Data.SqlClient.SqlTransaction.Save%2A> method, and then later call the <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method to roll back to the savepoint instead of rolling back to the start of the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="2410a-177">Wystąpił błąd podczas próby zatwierdzenia transakcji.</span><span class="sxs-lookup"><span data-stu-id="2410a-177">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2410a-178">Transakcja została już zatwierdzona lub wycofana.</span><span class="sxs-lookup"><span data-stu-id="2410a-178">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="2410a-179">—lub—</span><span class="sxs-lookup"><span data-stu-id="2410a-179">-or-</span></span>  
  
 <span data-ttu-id="2410a-180">Połączenie zostało zerwane.</span><span class="sxs-lookup"><span data-stu-id="2410a-180">The connection is broken.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>