<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a356fc9d0dd9b21ce527aee55e39405788770d33" /><Meta Name="ms.sourcegitcommit" Value="81833381d2d0b5a8c55f71b43f00769fd38298af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/17/2019" /><Meta Name="ms.locfileid" Value="69571778" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface IDbConnection&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje połączenie z bazą danych SQL Server. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection> Obiekt reprezentuje unikatową sesję do SQL Servergo źródła danych. W przypadku systemu bazy danych klienta/serwera jest on odpowiednikiem połączenia sieciowego z serwerem. <xref:System.Data.SqlClient.SqlConnection>Program jest używany razem <xref:System.Data.SqlClient.SqlDataAdapter> z <xref:System.Data.SqlClient.SqlCommand> i w celu zwiększenia wydajności podczas łączenia się z bazą danych Microsoft SQL Server. W przypadku wszystkich produktów innych firm SQL Server i innych obsługiwanych przez OLE DB źródeł danych Użyj <xref:System.Data.OleDb.OleDbConnection>programu.  
  
 Podczas tworzenia wystąpienia elementu <xref:System.Data.SqlClient.SqlConnection>, wszystkie właściwości są ustawiane na wartości początkowe. Aby uzyskać listę tych wartości, zobacz <xref:System.Data.SqlClient.SqlConnection> Konstruktor.  
  
 Aby <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> uzyskać listę słów kluczowych w parametrach połączenia, zobacz.  
  
 <xref:System.Data.SqlClient.SqlConnection> Jeśli wykracza poza zakres, nie zostanie zamknięty. W związku z tym należy jawnie zamknąć połączenie przez wywołanie `Close` metody `Dispose`lub. `Close`i `Dispose` są funkcjonalnie równoważne. Jeśli wartość `Pooling` puli połączeń jest ustawiona na `true` lub `yes`, połączenie podstawowe zostanie zwrócone z powrotem do puli połączeń. Z drugiej strony, jeśli `Pooling` jest ustawiona na `false` lub `no`, podstawowe połączenie z serwerem jest w rzeczywistości zamknięte.  
  
> [!NOTE]
>  Zdarzenia logowania i wylogowywania nie będą zgłaszane na serwerze, gdy połączenie zostanie pobrane z lub zwrócone do puli połączeń, ponieważ połączenie nie jest faktycznie zamknięte, gdy zostanie zwrócone do puli połączeń. Aby uzyskać więcej informacji, zobacz SQL Servering pooling [(ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Aby upewnić się, że połączenia są zawsze zamknięte, otwórz połączenie wewnątrz `using` bloku, jak pokazano w poniższym fragmencie kodu. Dzięki temu połączenie jest automatycznie zamykane, gdy kod opuszcza blok.  
  
```vb  
Using connection As New SqlConnection(connectionString)  
    connection.Open()  
    ' Do work here; connection closed on following line.  
End Using  
  
```  
  
```csharp  
using (SqlConnection connection = new SqlConnection(connectionString))  
    {  
        connection.Open();  
        // Do work here; connection closed on following line.  
    }  
```  
  
> [!NOTE]
>  Aby wdrożyć aplikacje o wysokiej wydajności, należy użyć puli połączeń. W przypadku korzystania z .NET Framework Dostawca danych do SQL Server nie ma potrzeby włączania puli połączeń, ponieważ dostawca ten zarządza automatycznie, chociaż można modyfikować niektóre ustawienia. Aby uzyskać więcej informacji, zobacz SQL Servering pooling [(ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Jeśli jest generowany przez metodę <xref:System.Data.SqlClient.SqlCommand>wykonującą, <xref:System.Data.SqlClient.SqlConnection> pozostaje otwarty, gdy poziom ważności wynosi 19 lub mniej. <xref:System.Data.SqlClient.SqlException> Gdy poziom ważności wynosi 20 lub więcej, serwer zazwyczaj zamyka <xref:System.Data.SqlClient.SqlConnection>. Użytkownik może jednak ponownie otworzyć połączenie i kontynuować pracę.  
  
 Aplikacja, która tworzy wystąpienie <xref:System.Data.SqlClient.SqlConnection> obiektu, może wymagać, aby wszyscy niebezpośrednie i pośrednie wywołujące mieli wystarczające uprawnienia do kodu przez ustawienie deklaratywnych lub bezwzględnych wymagań w zakresie zabezpieczeń. <xref:System.Data.SqlClient.SqlConnection>wykonuje wymagania dotyczące zabezpieczeń przy <xref:System.Data.SqlClient.SqlClientPermission> użyciu obiektu. Użytkownicy mogą sprawdzić, czy ich kod ma wystarczające uprawnienia przy użyciu <xref:System.Data.SqlClient.SqlClientPermissionAttribute> obiektu. Użytkownicy i Administratorzy mogą również używać [Caspol. exe (Narzędzie zasad zabezpieczeń dostępu kodu)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) do modyfikowania zasad zabezpieczeń na poziomie komputera, użytkownika i przedsiębiorstwa. Aby uzyskać więcej informacji, zobacz [zabezpieczenia w programie .NET](~/docs/standard/security/index.md). Aby zapoznać się z przykładem dotyczącym sposobu korzystania z wymagań dotyczących zabezpieczeń, zobacz [zabezpieczenia dostępu kodu i ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Aby uzyskać więcej informacji na temat obsługi ostrzeżeń i komunikatów informacyjnych z serwera, zobacz [zdarzenia połączenia](~/docs/framework/data/adonet/connection-events.md). Aby uzyskać więcej informacji na temat błędów aparatu SQL Server i komunikatów o błędach, zobacz [zdarzenia i błędy aparatu bazy danych](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
> [!CAUTION]
>  Zamiast pamięci współdzielonej można wymusić protokół TCP. Można to zrobić przez prefiks protokołu TCP: do nazwy serwera w parametrach połączenia lub można użyć localhost.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> <xref:System.Data.SqlClient.SqlConnection>i. Jest otwarty i ustawiany <xref:System.Data.SqlClient.SqlCommand.Connection%2A> jako dla <xref:System.Data.SqlClient.SqlCommand>. <xref:System.Data.SqlClient.SqlConnection> Przykład następnie wywołuje <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. Aby to osiągnąć, <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> zostaje przeniesiona wartość parametrów połączenia i ciąg zapytania, który [!INCLUDE[tsql](~/includes/tsql-md.md)] jest instrukcją INSERT. Połączenie jest zamykane automatycznie, gdy kod opuszcza blok przy użyciu.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlConnection" /> klasy.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlConnection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy tworzone <xref:System.Data.SqlClient.SqlConnection> jest nowe wystąpienie, właściwości odczytu/zapisu są ustawiane na następujące wartości początkowe, chyba że są one jawnie ustawiane przy użyciu skojarzonych z nimi słów <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> kluczowych we właściwości.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|pusty ciąg ("")|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|pusty ciąg ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|pusty ciąg ("")|  
  
 Wartości tych właściwości można zmienić tylko przy użyciu <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwości. <xref:System.Data.SqlClient.SqlConnectionStringBuilder> Klasa zawiera funkcje do tworzenia zawartości parametrów połączenia i zarządzania nią.  
  
   
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Połączenie używane do otwierania bazy danych SQL Server.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.SqlClient.SqlConnection" /> klasy, gdy podano ciąg, który zawiera ciąg połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy tworzone <xref:System.Data.SqlClient.SqlConnection> jest nowe wystąpienie, właściwości odczytu/zapisu są ustawiane na następujące wartości początkowe, chyba że są one jawnie ustawiane przy użyciu skojarzonych z nimi słów <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> kluczowych we właściwości.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|pusty ciąg ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|pusty ciąg ("")|  
  
 Wartości tych właściwości można zmienić tylko przy użyciu <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwości. <xref:System.Data.SqlClient.SqlConnection> Klasa zawiera funkcje do tworzenia zawartości parametrów połączenia i zarządzania nią.  
  
   
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, credential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, cred)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia, które nie używają żadnego z następujących słów kluczowych parametrów połączenia <see langword="Integrated Security = true" />:, <see langword="UserId" />, lub <see langword="Password" />;, które nie używają <see langword="ContextConnection = true" />.</param>
        <param name="credential">Element <see cref="T:System.Data.SqlClient.SqlCredential" /> obiektu. Jeśli <paramref name="credential" /> ma wartość null <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> , <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />jest funkcjonalnie odpowiednik.</param>
        <param name="cred">To be added.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.SqlClient.SqlConnection" /> klasy, używając parametrów połączenia, które nie są używane <see langword="Integrated Security = true" /> , i <see cref="T:System.Data.SqlClient.SqlCredential" /> obiektu, który zawiera identyfikator użytkownika i hasło.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia token dostępu dla połączenia.</summary>
        <value>Token dostępu dla połączenia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="sqlConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Uruchamia transakcję bazy danych.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia transakcję bazy danych.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie mapuje na SQL Server implementację BEGIN TRANSACTION.  
  
 Musisz jawnie zatwierdzić lub wycofać transakcję <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> przy <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> użyciu metody lub. Aby upewnić się, że Dostawca danych .NET Framework dla modelu zarządzania transakcjami SQL Server działa prawidłowo, należy unikać używania innych modeli zarządzania transakcjami, takich jak dostarczone przez SQL Server.  
  
> [!NOTE]
>  Jeśli nie określisz poziomu izolacji, zostanie użyty domyślny poziom izolacji. Aby określić poziom izolacji przy użyciu <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> metody, Użyj przeciążenia, które `iso` przyjmuje parametr (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>). Poziom izolacji ustawiony dla transakcji zachowuje się po zakończeniu transakcji i do momentu zamknięcia lub usunięcia połączenia. Ustawienie poziomu izolacji na **migawkę** w bazie danych, w której nie włączono poziomu izolacji migawki, nie zgłasza wyjątku. Transakcja zostanie ukończona przy użyciu domyślnego poziomu izolacji.  
  
> [!CAUTION]
>  Jeśli transakcja jest uruchomiona, a na serwerze wystąpi błąd o poziomie 16 lub wyższym, transakcja nie zostanie wycofana do momentu <xref:System.Data.SqlClient.SqlDataReader.Read%2A> wywołania metody. Nie zgłoszono wyjątku w **ExecuteReader**.  
  
> [!CAUTION]
>  Gdy zapytanie zwraca dużą ilość danych i wywołań `BeginTransaction` <xref:System.Data.SqlClient.SqlException> , jest generowane, ponieważ SQL Server nie zezwala na transakcje równoległe podczas korzystania z usługi Mars. Aby uniknąć tego problemu, należy zawsze skojarzyć transakcję z poleceniem, połączeniem lub zarówno przed otwarciem dowolnego czytnika.  
  
 Aby uzyskać więcej informacji na temat SQL Server transakcji, zobacz [transakcje (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction>i. Pokazano również <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> , jak używać metod, ai.<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Transakcje równoległe są niedozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS).</exception>
        <exception cref="T:System.InvalidOperationException">Transakcje równoległe nie są obsługiwane.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje i współbieżność</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">Poziom izolacji, pod którym należy uruchomić transakcję.</param>
        <summary>Uruchamia transakcję bazy danych o określonym poziomie izolacji.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie mapuje na SQL Server implementację BEGIN TRANSACTION.  
  
 Musisz jawnie zatwierdzić lub wycofać transakcję <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> przy <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> użyciu metody lub. Aby upewnić się, że Dostawca danych .NET Framework dla modelu zarządzania transakcjami SQL Server działa prawidłowo, należy unikać używania innych modeli zarządzania transakcjami, takich jak dostarczone przez SQL Server.  
  
> [!NOTE]
> Gdy transakcja zostanie przekazana lub wycofana, poziom izolacji transakcji utrzymuje wszystkie kolejne polecenia, które są w trybie automatycznego zatwierdzania (SQL Server wartość domyślna). Może to dawać nieoczekiwane wyniki, takie jak poziom izolacji odczytanego odczytu i blokowania innych użytkowników poza wierszem. Aby zresetować poziom izolacji do wartości domyślnej (Read Committed), wykonaj [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcję SET Transaction level izolacji Read committedd lub Call <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> , a następnie bezpośrednio przez <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>. Aby uzyskać więcej informacji na SQL Server poziomów izolacji, zobacz [poziomy izolacji transakcji](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Aby uzyskać więcej informacji na temat SQL Server transakcji, zobacz [transakcje (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Gdy zapytanie zwraca dużą ilość danych i wywołań `BeginTransaction` <xref:System.Data.SqlClient.SqlException> , jest generowane, ponieważ SQL Server nie zezwala na transakcje równoległe podczas korzystania z usługi Mars. Aby uniknąć tego problemu, należy zawsze skojarzyć transakcję z poleceniem, połączeniem lub zarówno przed otwarciem dowolnego czytnika.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction>i. Pokazano również <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> , jak używać metod, ai.<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Transakcje równoległe są niedozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS).</exception>
        <exception cref="T:System.InvalidOperationException">Transakcje równoległe nie są obsługiwane.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">Nazwa transakcji.</param>
        <summary>Uruchamia transakcję bazy danych o określonej nazwie transakcji.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie mapuje na SQL Server implementację BEGIN TRANSACTION.  
  
 Długość `transactionName` parametru nie może przekraczać 32 znaków; w przeciwnym razie zostanie zgłoszony wyjątek.  
  
 Wartość w `transactionName` parametrze może być używana w późniejszych wywołaniach <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> do i <xref:System.Data.SqlClient.SqlTransaction.Save%2A> w `savePoint` parametrze metody.  
  
 Musisz jawnie zatwierdzić lub wycofać transakcję <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> przy <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> użyciu metody lub. Aby upewnić się, [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] że dostawca danych modelu zarządzania transakcjami SQL Server działa prawidłowo, należy unikać używania innych modeli zarządzania transakcjami, takich jak dostarczone przez SQL Server.  
  
 Aby uzyskać więcej informacji na temat SQL Server transakcji, zobacz [transakcje (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Gdy zapytanie zwraca dużą ilość danych i wywołań `BeginTransaction` <xref:System.Data.SqlClient.SqlException> , jest generowane, ponieważ SQL Server nie zezwala na transakcje równoległe podczas korzystania z usługi Mars. Aby uniknąć tego problemu, należy zawsze skojarzyć transakcję z poleceniem, połączeniem lub zarówno przed otwarciem dowolnego czytnika.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction>i. Pokazano również <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> , jak używać metod, ai.<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Transakcje równoległe są niedozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS).</exception>
        <exception cref="T:System.InvalidOperationException">Transakcje równoległe nie są obsługiwane.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">Poziom izolacji, pod którym należy uruchomić transakcję.</param>
        <param name="transactionName">Nazwa transakcji.</param>
        <summary>Uruchamia transakcję bazy danych z określonym poziomem izolacji i nazwą transakcji.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie mapuje na SQL Server implementację BEGIN TRANSACTION.  
  
 Wartość w `transactionName` parametrze może być używana w późniejszych wywołaniach <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> do i <xref:System.Data.SqlClient.SqlTransaction.Save%2A> w `savePoint` parametrze metody.  
  
 Musisz jawnie zatwierdzić lub wycofać transakcję <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> przy <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> użyciu metody lub. Aby upewnić się, że model zarządzania transakcjami SQL Server działa prawidłowo, należy unikać używania innych modeli zarządzania transakcjami, takich jak dostarczone przez SQL Server.  
  
> [!NOTE]
>  Gdy transakcja zostanie przekazana lub wycofana, poziom izolacji transakcji utrzymuje wszystkie kolejne polecenia, które są w trybie automatycznego zatwierdzania (SQL Server wartość domyślna). Może to dawać nieoczekiwane wyniki, takie jak poziom izolacji odczytanego odczytu i blokowania innych użytkowników poza wierszem. Aby zresetować poziom izolacji do wartości domyślnej (Read Committed), wykonaj [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcję SET Transaction level izolacji Read committedd lub Call <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> , a następnie bezpośrednio przez <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>. Aby uzyskać więcej informacji na SQL Server poziomów izolacji, zobacz [poziomy izolacji transakcji](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Aby uzyskać więcej informacji na temat SQL Server transakcji, zobacz [transakcje (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Gdy zapytanie zwraca dużą ilość danych i wywołań `BeginTransaction` <xref:System.Data.SqlClient.SqlException> , jest generowane, ponieważ SQL Server nie zezwala na transakcje równoległe podczas korzystania z usługi Mars. Aby uniknąć tego problemu, należy zawsze skojarzyć transakcję z poleceniem, połączeniem lub zarówno przed otwarciem dowolnego czytnika.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlTransaction>i. Pokazano również <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> , jak używać metod, ai.<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Transakcje równoległe są niedozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS).</exception>
        <exception cref="T:System.InvalidOperationException">Transakcje równoległe nie są obsługiwane.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">Nazwa bazy danych, która ma być używana zamiast bieżącej bazy danych.</param>
        <summary>Zmienia bieżącą bazę danych dla otwartej <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość podana w `database` parametrze musi być prawidłową nazwą bazy danych. `database` Parametr nie może zawierać wartości null, pustego ciągu ani ciągu z tylko pustymi znakami.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i wyświetla niektóre właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nazwa bazy danych jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">Połączenie nie jest otwarte.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Nie można zmienić bazy danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zmienia SQL Server hasło.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * string -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="newPassword" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia, które zawierają wystarczające informacje, aby połączyć się z żądanym serwerem. Parametry połączenia muszą zawierać identyfikator użytkownika i bieżące hasło.</param>
        <param name="newPassword">Nowe hasło do ustawienia. To hasło musi być zgodne z wszelkimi zasadami zabezpieczeń haseł ustawionymi na serwerze, włącznie z długością minimalną, wymaganiami dotyczącymi określonych znaków itd.</param>
        <summary>Zmienia SQL Server hasło dla użytkownika wskazanego w parametrach połączenia na dostarczone nowe hasło.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku korzystania z SQL Server w systemie Windows Server Deweloperzy mogą korzystać z funkcji, które umożliwiają aplikacji klienckiej podanie zarówno bieżącego, jak i nowego hasła, aby zmienić istniejące hasło. Aplikacje mogą zaimplementować funkcje, takie jak monitowanie użytkownika o podanie nowego hasła podczas początkowego logowania, jeśli stary już wygasł, a ta operacja może zostać wykonana bez interwencji administratora.  
  
 Metoda zmienia SQL Server hasło dla użytkownika wskazanego w `connectionString` podanym parametrze do wartości podanej w `newPassword` parametrze. <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> Jeśli parametry połączenia zawierają opcję Zabezpieczenia zintegrowane (czyli "Integrated Security = true" lub "odpowiednik"), zgłaszany jest wyjątek.  
  
 Aby określić, że hasło wygasło, wywołanie <xref:System.Data.SqlClient.SqlConnection.Open%2A> metody <xref:System.Data.SqlClient.SqlException>wywołuje metodę. Aby wskazać, że hasło zawarte w parametrach połączenia musi być resetowana, <xref:System.Data.SqlClient.SqlException.Number%2A> Właściwość wyjątku zawiera wartość stanu 18487 lub 18488. Pierwsza wartość (18487) wskazuje, że hasło wygasło, a sekunda (18488) wskazuje, że hasło musi być resetowane przed zalogowaniem się.  
  
 Ta metoda otwiera własne połączenie z serwerem, żąda zmiany hasła i zamyka połączenie zaraz po jego zakończeniu. To połączenie nie jest pobierane ani nie zostało zwrócone do SQL Server puli połączeń.  
  
   
  
## Examples  
 Poniżej przedstawiono prosty przykład zmiany hasła:  
  
```csharp
class Program {  
   static void Main(string[] args) {  
      System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password");  
   }  
}  
  
```  
  
```vb
Module Module1  
    Sub Main()  
System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password")  
    End Sub  
End Module  
  
```  
  
 W poniższej aplikacji konsolowej przedstawiono problemy związane z zmianami hasła użytkownika, ponieważ bieżące hasło wygasło.  
  
 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Parametry połączenia obejmują opcję korzystania ze zintegrowanych zabezpieczeń.  
  
Lub 
<paramref name="newPassword" /> Przekracza 128 znaków.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> Albo<paramref name="newPassword" /> parametr ma wartość null.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Parametry połączenia (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newPassword) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newPassword As SecureString)" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newPassword)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-3.0" />
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newSecurePassword)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newPassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia, które zawierają wystarczające informacje, aby połączyć się z serwerem. Parametry połączenia nie powinny używać żadnego z następujących słów kluczowych parametrów połączenia <see langword="Integrated Security = true" />:, <see langword="UserId" />, lub <see langword="Password" />; lub <see langword="ContextConnection = true" />.</param>
        <param name="credential">Element <see cref="T:System.Data.SqlClient.SqlCredential" /> obiektu.</param>
        <param name="newPassword">Nowe hasło.<paramref name="newPassword" /> musi być tylko do odczytu. Hasło musi być również zgodne z wszelkimi zasadami zabezpieczeń haseł ustawionymi na serwerze (na przykład minimalna długość i wymagania dotyczące określonych znaków).</param>
        <param name="newSecurePassword">To be added.</param>
        <summary>Zmienia SQL Server hasło dla użytkownika wskazanego w <see cref="T:System.Data.SqlClient.SqlCredential" /> obiekcie.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Parametry połączenia zawierają dowolną kombinację <see langword="UserId" />, <see langword="Password" />lub <see langword="Integrated Security=true" />.

—lub— 
Parametry połączenia zawierają <see langword="Context Connection=true" />.  

—lub—

<paramref name="newSecurePassword" />(lub <paramref name="newPassword" />) jest dłuższa niż 128 znaków.

—lub—

<paramref name="newSecurePassword" />(lub <paramref name="newPassword" />) nie jest tylko do odczytu.

—lub—

<paramref name="newSecurePassword" />(lub <paramref name="newPassword" />) jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException">Jeden z parametrów (<paramref name="connectionString" />, <paramref name="credential" />, lub <paramref name="newSecurePassword" />) ma wartość null.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opróżnia pulę połączeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A>resetuje (lub opróżnia) pulę połączeń. Jeśli w czasie wywołania są używane połączenia, są one odpowiednio oznaczone i zostaną odrzucone (zamiast z powrotem do puli), gdy <xref:System.Data.SqlClient.SqlConnection.Close%2A> jest wywoływana na nich.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Buforowanie połączenia z programem SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.SqlClient.SqlConnection -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connection"><see cref="T:System.Data.SqlClient.SqlConnection" /> Do wyczyszczenia z puli.</param>
        <summary>Opróżnia pulę połączeń skojarzoną z określonym połączeniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearPool%2A>czyści pulę połączeń skojarzoną z `connection`. Jeśli dodatkowe połączenia skojarzone z `connection` systemem są używane w czasie trwania wywołania, są one oznaczone jako odpowiednie i są odrzucane (zamiast zwracane do puli), gdy <xref:System.Data.SqlClient.SqlConnection.Close%2A> jest wywoływana na nich.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Buforowanie połączenia z programem SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikator połączenia ostatniej próby połączenia, niezależnie od tego, czy próba zakończyła się powodzeniem, czy niepowodzeniem.</summary>
        <value>Identyfikator połączenia ostatniej próby połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A>działa niezależnie od używanej wersji serwera, z którym jest nawiązywane połączenie, ale dzienniki zdarzeń rozszerzonych i wpisy w przypadku błędów buforu pierścieni łączności nie [!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)] będą obecne w systemach i starszych.  
  
 Identyfikator połączenia można znaleźć w dzienniku zdarzeń rozszerzonych, aby sprawdzić, czy na serwerze Wystąpił błąd, jeśli jest włączone zdarzenie rozszerzone dla identyfikatora połączenia rejestrowania. Identyfikator połączenia można również znaleźć w buforze pierścienia połączenia ([Rozwiązywanie problemów z łącznością w SQL Server 2008 z buforem pierścieni łączności](https://go.microsoft.com/fwlink/?LinkId=207752)) dla niektórych błędów połączenia. Jeśli identyfikator połączenia nie znajduje się w buforze pierścieniowym połączeń, można założyć błąd sieciowy.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka połączenie z bazą danych. Jest to preferowana metoda zamykania dowolnego otwartego połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Close%2A> Metoda wycofuje wszystkie oczekujące transakcje. Następnie zwalnia połączenie z pulą połączeń lub zamyka połączenie, Jeśli buforowanie połączeń jest wyłączone.  
  
> [!NOTE]
>  Oczekujące transakcje uruchomione [!INCLUDE[tsql](~/includes/tsql-md.md)] przy <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> użyciu lub są automatycznie wycofywane, gdy połączenie zostanie zresetowane, jeśli włączono obsługę puli połączeń. Jeśli pule połączeń są wyłączone, transakcja zostanie wycofana po `SqlConnection.Close` wywołaniu. Transakcje uruchomione za <xref:System.Transactions> pomocą są kontrolowane `System.Transactions` przez infrastrukturę i nie mają na `SqlConnection.Close`nie wpływ.  
  
 Aplikacja może wywoływać <xref:System.Data.SqlClient.SqlConnection.Close%2A> więcej niż jeden raz. Nie Wygenerowano żadnego wyjątku.  
  
 <xref:System.Data.SqlClient.SqlConnection> Jeśli wykracza poza zakres, nie zostanie zamknięty. W związku z tym należy jawnie zamknąć połączenie przez wywołanie `Close` metody `Dispose`lub. `Close`i `Dispose` są funkcjonalnie równoważne. Jeśli wartość `Pooling` puli połączeń jest ustawiona na `true` lub `yes`, połączenie podstawowe zostanie zwrócone z powrotem do puli połączeń. Z drugiej strony, jeśli `Pooling` jest ustawiona na `false` lub `no`, połączenie podstawowe z serwerem jest zamknięte.  
  
> [!NOTE]
>  Zdarzenia logowania i wylogowywania nie będą zgłaszane na serwerze, gdy połączenie zostanie pobrane z lub zwrócone do puli połączeń, ponieważ połączenie nie jest faktycznie zamknięte, gdy zostanie zwrócone do puli połączeń. Aby uzyskać więcej informacji, zobacz SQL Servering pooling [(ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
> [!CAUTION]
>  Nie należy `Close` wywoływać `Dispose` ani nawiązać połączenia, elementu DataReader ani `Finalize` innego obiektu zarządzanego w metodzie klasy. W finalizatorze należy zwolnić tylko niezarządzane zasoby, które są własnością klasy bezpośrednio. Jeśli Klasa nie jest własnością żadnych niezarządzanych zasobów, nie Uwzględniaj `Finalize` metody w definicji klasy. Aby uzyskać więcej informacji, zobacz [odzyskiwanie pamięci](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection>, otwiera go, wyświetla część jego właściwości. Połączenie jest automatycznie zamykane na końcu `using` bloku.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd poziomu połączenia, który wystąpił podczas otwierania połączenia.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Buforowanie połączenia z programem SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionKeyCacheTtl : TimeSpan with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość czasu wygaśnięcia dla wpisów klucza szyfrowania kolumny w pamięci podręcznej kluczy szyfrowania kolumn dla funkcji <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> . Wartość domyślna to 2 godziny. 0 oznacza brak buforowania.</summary>
        <value>Przedział czasu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionQueryMetadataCacheEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy buforowanie metadanych zapytania jest włączone (true) czy nie (false) dla zapytań parametrycznych uruchomionych dla <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> włączonych baz danych. Wartość domyślna to true.</summary>
        <value>Zwraca wartość true, Jeśli buforowanie metadanych kwerendy jest włączone. w przeciwnym razie false. wartość domyślna to true.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku zapytań parametrycznych klient SqlClient udostępnia wiele SQL Server dla metadanych parametrów, aby zobaczyć, który parametr ma być zaszyfrowany, i jak (które klucze i algorytmy należy zastosować). Jeśli aplikacja wywołuje te same zapytania wiele razy, w każdym momencie na serwerze jest wykonywana dodatkowa komunikacja, która obniża wydajność aplikacji.  
  
 W przypadku **ColumnEncryptionQueryMetadataCacheEnabled** o wartości true, jeśli to samo zapytanie jest wywoływane wiele razy, przejdziesz do serwera tylko raz. Pamięć podręczna ma niekonfigurowalny parametr o maksymalnym rozmiarze ustawionym na 2000 zapytań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionTrustedMasterKeyPaths : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Umożliwia ustawienie listy zaufanych ścieżek kluczy dla serwera bazy danych. Jeśli podczas przetwarzania zapytania aplikacji sterownik otrzymuje ścieżkę klucza, która nie znajduje się na liście, zapytanie zakończy się niepowodzeniem. Ta właściwość zapewnia dodatkową ochronę przed atakami na zabezpieczenia, które obejmują złamane SQL Server zapewniające fałszywe ścieżki kluczy, co może prowadzić do przecieku poświadczeń magazynu kluczy.</summary>
        <value>Lista zaufanych ścieżek klucza głównego dla szyfrowania kolumn.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany do otwierania bazy danych SQL Server.</summary>
        <value>Parametry połączenia, które zawierają nazwę źródłowej bazy danych, oraz inne parametry, które są konieczne do ustanowienia połączenia początkowego. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Jest podobny do parametrów połączenia OLE DB, ale nie jest identyczny. W przeciwieństwie do OLE DB lub ADO, zwracane parametry połączenia są takie same jak ustawione <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>przez użytkownika, minus informacje o zabezpieczeniach, jeśli wartość ustawienia zabezpieczenia utrwalania jest `false` równa (domyślnie). Dostawca danych .NET Framework dla SQL Server nie utrwala ani nie zwraca hasła w parametrach połączenia, chyba że zostanie ustawiona informacja o `true`zabezpieczeniach trwałych.  

 Możesz użyć właściwości, <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> aby nawiązać połączenie z bazą danych. Poniższy przykład ilustruje typowe parametry połączenia.  
  
```  
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"  
```  
  
 Użyj nowego <xref:System.Data.SqlClient.SqlConnectionStringBuilder> do skonstruowania prawidłowych parametrów połączenia w czasie wykonywania. Aby uzyskać więcej informacji, zobacz [konstruktory parametrów połączenia](~/docs/framework/data/adonet/connection-string-builders.md).  
  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Właściwość można ustawić tylko wtedy, gdy połączenie jest zamknięte. Wiele wartości parametrów połączenia ma odpowiednie właściwości tylko do odczytu. Po ustawieniu parametrów połączenia te właściwości są aktualizowane, z wyjątkiem przypadków wykrycia błędu. W takim przypadku żadna z właściwości nie jest aktualizowana. <xref:System.Data.SqlClient.SqlConnection>właściwości zwracają tylko te ustawienia, które są zawarte w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
 Aby nawiązać połączenie z komputerem lokalnym, określ "(local)" dla serwera. Jeśli nazwa serwera nie zostanie określona, zostanie podjęta próba nawiązania połączenia z wystąpieniem domyślnym na komputerze lokalnym.  
  
 Zresetowanie <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> na zamkniętym połączeniu powoduje zresetowanie wszystkich wartości parametrów połączenia (wraz z powiązanymi właściwościami), w tym hasła. Na przykład, jeśli ustawisz parametry połączenia, które zawierają wartość "Database = AdventureWorks", a następnie zresetujesz parametry połączenia do "Data source = program, Integrated Security = true", <xref:System.Data.SqlClient.SqlConnection.Database%2A> właściwość nie jest już ustawiona na "AdventureWorks".  
  
 Parametry połączenia są analizowane bezpośrednio po ustawieniu. W przypadku znalezienia błędów w składni podczas analizowania, generowany jest wyjątek czasu wykonywania, <xref:System.ArgumentException>taki jak. Inne błędy można znaleźć tylko wtedy, gdy podjęto próbę otwarcia połączenia.  
  
 Podstawowy format parametrów połączenia zawiera serię par słów kluczowych/wartości oddzielonych średnikami. Znak równości (=) łączy każde słowo kluczowe i jego wartość. Aby uwzględnić wartości, które zawierają średnik, znak pojedynczego cudzysłowu lub znak podwójnego cudzysłowu, wartość musi być ujęta w znaki podwójnego cudzysłowu. Jeśli wartość zawiera zarówno średnik, jak i znak podwójnego cudzysłowu, wartość może być ujęta w znaki pojedynczego cudzysłowu. Znak pojedynczego cudzysłowu jest również przydatny, gdy wartość zaczyna się od znaku podwójnego cudzysłowu. Z drugiej strony, jeśli wartość zaczyna się od pojedynczego znaku cudzysłowu, można użyć podwójnego cudzysłowu. Jeśli wartość zawiera znaki pojedynczego cudzysłowu i podwójnego cudzysłowu, znak cudzysłowu używany do umieszczania wartości musi być podwojony za każdym razem, gdy występuje w wartości.  
  
 Aby uwzględnić spacje poprzedzające lub końcowe w wartości ciągu, wartość musi być ujęta w znaki pojedynczego cudzysłowu lub podwójnego cudzysłowu. Wszystkie początkowe lub końcowe spacje wokół wartości całkowitych, logicznych lub wyliczanych są ignorowane, nawet jeśli są ujęte w cudzysłów. Jednak spacje wewnątrz słowa kluczowego literału ciągu lub wartości są zachowywane. Pojedyncze lub podwójne cudzysłowy mogą być używane w ciągu połączenia bez używania ograniczników (na przykład Data Source = my'Server lub Data Source = my "serwer"), chyba że znak cudzysłowu to pierwszy lub ostatni znak w wartości.  
  
 W słowach kluczowych nie jest rozróżniana wielkość liter.  
  
 Poniższa tabela zawiera listę prawidłowych nazw wartości słów kluczowych w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>obrębie.  
  
|Słowo kluczowe|Domyślny|Opis|  
|-------------|-------------|-----------------|  
|Adresowe|Brak|Synonim **źródła danych**.|  
|Adres|Brak|Synonim **źródła danych**.|  
|Aplikacja|Brak|Synonim **nazwy aplikacji**.|  
|Nazwa aplikacji|Brak|Nazwa aplikacji lub ".NET SQLClient Dostawca danych", jeśli nie podano nazwy aplikacji.<br /><br /> Nazwa aplikacji może składać się z co najwyżej 128 znaków.|  
|`ApplicationIntent`|`ReadWrite`|Deklaruje typ obciążenia aplikacji podczas nawiązywania połączenia z serwerem. Możliwe wartości to `ReadOnly` i `ReadWrite`. Przykład:<br /><br /> `ApplicationIntent=ReadOnly`<br /><br /> Aby uzyskać więcej informacji na temat obsługi klienta z zawsze włączonymi grupami dostępności, zobacz temat [Obsługa klienta w przypadku wysokiej dostępności i odzyskiwania po awarii](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Asynchroniczne przetwarzanie<br /><br /> —lub—<br /><br /> Async|false|Gdy `true`, włącza obsługę operacji asynchronicznych. Rozpoznane wartości to `true` `false` `no`,,, i. `yes`<br /><br /> Ta właściwość jest ignorowana, [!INCLUDE[net_v45](~/includes/net-v45-md.md)]Zaczynając od. Aby uzyskać więcej informacji na temat obsługi klienta w programowaniu asynchronicznym, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).|  
|AttachDBFilename<br /><br /> —lub—<br /><br /> Właściwości rozszerzone<br /><br /> —lub—<br /><br /> Początkowa nazwa pliku|Brak|Nazwa podstawowego pliku bazy danych, w tym pełna nazwa ścieżki do możliwej do dołączenia bazy danych. AttachDBFilename jest obsługiwane tylko dla podstawowych plików danych z rozszerzeniem. mdf.<br /><br /> Jeśli wartość klucza AttachDBFileName jest określona w parametrach połączenia, baza danych jest dołączona i jest domyślną bazą danych dla tego połączenia.<br /><br /> Jeśli ten klucz nie zostanie określony i jeśli baza danych była wcześniej dołączona, baza danych nie zostanie ponownie dołączona. Wcześniej dołączona baza danych będzie używana jako domyślna baza danych dla tego połączenia.<br /><br /> Jeśli ten klucz jest określony wraz z kluczem AttachDBFileName, wartość tego klucza będzie używana jako alias. Jeśli jednak nazwa jest już używana w innej dołączonej bazie danych, połączenie zakończy się niepowodzeniem.<br /><br /> Ścieżka może być bezwzględna lub względna za pomocą ciągu podstawiania usługi DataDirectory. W przypadku użycia usługi DataDirectory plik bazy danych musi znajdować się w podkatalogu katalogu wskazywanym przez ciąg podstawiania. **Uwaga:**  Nazwy serwera zdalnego, protokołu HTTP i ścieżki UNC nie są obsługiwane. <br /><br /> Nazwa bazy danych musi być określona za pomocą słowa kluczowego "Database" (lub jednego z jego aliasów) w następujący sposób:<br /><br /> <code>"AttachDbFileName=&#124;DataDirectory&#124;\data\YourDB.mdf;integrated security=true;database=YourDatabase"</code><br /><br /> Zostanie wygenerowany błąd, jeśli plik dziennika istnieje w tym samym katalogu co plik danych, a słowo kluczowe "Database" jest używane podczas dołączania podstawowego pliku danych. W takim przypadku Usuń plik dziennika. Po dołączeniu bazy danych nowy plik dziennika zostanie wygenerowany automatycznie na podstawie ścieżki fizycznej.|  
|Uwierzytelnianie|Brak|Metoda uwierzytelniania używana do [nawiązywania połączenia z SQL Database przy użyciu uwierzytelniania Azure Active Directory](https://azure.microsoft.com/documentation/articles/sql-database-aad-authentication/#7-connect-to-your-database-by-using-azure-active-directory-identities).<br /><br /> Prawidłowe wartości to:<br /><br /> Active Directory zintegrowane, Active Directory hasło i hasło SQL.|  
|Ustawienie szyfrowania kolumn|Brak|Włącza lub wyłącza funkcję [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine?view=sql-server-2017) dla połączenia.|  
|Limit czasu połączenia<br /><br /> —lub—<br /><br /> Limit czasu połączenia<br /><br /> —lub—<br /><br /> limit czasu|15|Czas (w sekundach) oczekiwania na połączenie z serwerem przed zakończeniem próby i wygenerowaniem błędu.<br /><br /> Prawidłowe wartości są większe lub równe 0 i mniejsze niż lub równe 2147483647.<br /><br /> Podczas otwierania połączenia z Azure SQL Database Ustaw limit czasu połączenia na 30 sekund.|  
|Okres istnienia połączenia<br /><br /> —lub—<br /><br /> Limit czasu równoważenia obciążenia|0|Gdy połączenie zostanie zwrócone do puli, jego czas utworzenia jest porównywany z bieżącą godziną i połączenie jest niszczone, jeśli ten przedział czasu (w sekundach) przekroczy wartość określoną `Connection Lifetime`przez. Jest to przydatne w konfiguracjach klastrowanych w celu wymuszenia równoważenia obciążenia między uruchomionym serwerem a serwerem, który został przełączony w tryb online.<br /><br /> Wartość zero (0) powoduje, że połączenia w puli mają maksymalny limit czasu połączenia.|  
|ConnectRetryCount|1|Określa liczbę prób ponownego połączenia po zidentyfikowaniu przez klienta błędu bezczynnego połączenia. Prawidłowe wartości to od 0 do 255. Domyślnym ustawieniem jest 1. 0 oznacza, że nie należy próbować ponownie nawiązać połączenia (Wyłącz odporność połączenia).<br /><br /> Aby uzyskać dodatkowe informacje na temat odporności połączeń bezczynnych, zobacz [artykuł techniczny-bezczynne połączenie](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|ConnectRetryInterval|10|Określa czas między poszczególnymi próbami ponowienia połączenia (ConnectRetryCount). Prawidłowe wartości to od 1 do 60 sekund (domyślnie 10), stosowane po pierwszej próbie ponownego nawiązania połączenia. Po wykryciu przerwanego połączenia klient natychmiast próbuje ponownie nawiązać połączenie. jest to pierwsza próba ponownego połączenia i występuje tylko wtedy, gdy wartość ConnectRetryCount jest większa niż 0. Jeśli pierwsza próba ponownego połączenia nie powiedzie się, a wartość ConnectRetryCount jest większa niż 1, klient czeka ConnectRetryInterval na wypróbowanie drugiej i kolejnych prób ponownego nawiązania połączenia.<br /><br /> Aby uzyskać dodatkowe informacje na temat odporności połączeń bezczynnych, zobacz [artykuł techniczny-bezczynne połączenie](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|Połączenie kontekstu|false|`true`Jeśli należy nawiązać połączenie w procesie SQL Server.|  
|Bieżący język<br /><br /> —lub—<br /><br /> Język|Brak|Ustawia język używany na potrzeby ostrzeżeń i komunikatów o błędach serwera bazy danych.<br /><br /> Nazwa języka może składać się z co najwyżej 128 znaków.|  
|Źródło danych<br /><br /> —lub—<br /><br /> Serwer<br /><br /> —lub—<br /><br /> Adres<br /><br /> —lub—<br /><br /> Adresowe<br /><br /> —lub—<br /><br /> Adres sieciowy|Brak|Nazwa lub adres sieciowy wystąpienia SQL Server, z którym ma zostać nawiązane połączenie. Numer portu można określić po nazwie serwera:<br /><br /> `server=tcp:servername, portnumber`<br /><br /> Podczas określania lokalnego wystąpienia zawsze używaj (lokalnego). Aby wymusić protokół, Dodaj jeden z następujących prefiksów:<br /><br /> `np:(local),  tcp:(local), lpc:(local)`<br /><br /> Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)]programu, można także nawiązać połączenie z bazą danych LocalDB w następujący sposób:<br /><br /> `server=(localdb)\\myInstance`<br /><br /> Aby uzyskać więcej informacji na temat LocalDB, zobacz [Obsługa SqlClient dla LocalDB](~/docs/framework/data/adonet/sql/sqlclient-support-for-localdb.md).<br /><br /> **Źródło danych** musi używać formatu TCP lub nazwanych potoków.<br /><br /> Format TCP jest następujący:<br /><br /> -TCP:\<nazwa hosta >\\nazwa wystąpienia <\><br />-TCP:\<nazwa hosta >,\<numer portu TCP/IP ><br /><br /> Format TCP musi rozpoczynać się od prefiksu "TCP:", po którym następuje wystąpienie bazy danych, określone przez nazwę hosta i nazwę wystąpienia. Ten format nie ma zastosowania w przypadku nawiązywania połączenia z Azure SQL Database. Protokół TCP jest automatycznie wybierany dla połączeń do Azure SQL Database, gdy nie został określony żaden protokół.<br /><br /> Nazwę hosta należy określić w jeden z następujących sposobów:<br /><br /> -NETBIOSname<br />-IPv4Address<br />-Adres_ipv6<br /><br /> Nazwa wystąpienia służy do rozpoznawania do określonego numeru portu TCP/IP, na którym jest hostowane wystąpienie bazy danych. Alternatywnie można również określić numer portu TCP/IP. Jeśli nazwa wystąpienia i numer portu nie są obecne, używane jest domyślne wystąpienie bazy danych.<br /><br /> Format nazwanych potoków jest następujący:<br /><br /> -np:\\\\< nazwy\>hosta \pipe\\< Nazwa potoku\><br /><br /> Format nazwanych potoków musi rozpoczynać się od prefiksu "np.", po którym następuje nazwa nazwy potoku.<br /><br /> Nazwę hosta należy określić w jeden z następujących sposobów:<br /><br /> -NETBIOSname<br />-IPv4Address<br />-Adres_ipv6<br /><br /> Nazwa potoku służy do identyfikowania wystąpienia bazy danych, do którego zostanie podłączona aplikacja .NET Framework.<br /><br /> Jeśli wartość klucza **sieciowego** jest określona, prefiksy "TCP:" i "np." nie powinny być określone. **Uwaga:**  Można wymusić użycie protokołu TCP zamiast pamięci współdzielonej, przez prefiks **protokołu TCP:** do nazwy serwera w parametrach połączenia lub przy użyciu **hosta lokalnego**.|  
|Sam|false|Gdy `true`SQL Server używa szyfrowania SSL dla wszystkich danych przesyłanych między klientem a serwerem, jeśli na serwerze jest zainstalowany certyfikat. Rozpoznane wartości to `true` `false` `no`,,, i. `yes` Aby uzyskać więcej informacji, zobacz [składnia parametrów połączenia](~/docs/framework/data/adonet/connection-string-syntax.md).<br /><br /> Począwszy od `TrustServerCertificate`,gdy ma wartość false `Encrypt` i ma wartość true, nazwa serwera (lub adres IP) w SQL Server certyfikat SSL musi być dokładnie zgodna z nazwą serwera (lub adresem IP) określoną w parametrach połączenia. [!INCLUDE[net_v45](~/includes/net-v45-md.md)] W przeciwnym razie próba połączenia nie powiedzie się. Aby uzyskać informacje na temat obsługi certyfikatów, których podmiot rozpoczyna się od symbolu wieloznacznego (*), zobacz [akceptowane symbole wieloznaczne używane przez certyfikaty serwera do uwierzytelniania serwera](https://support.microsoft.com/kb/258858).|  
|Enlist|'true'|`true`wskazuje, że połączenie SQL Server pulę automatycznie zarejestrować połączenie w kontekście bieżącego transakcji wątku tworzenia.|  
|Partner trybu failover|Brak|Nazwa serwera partnerskiego trybu failover, w którym jest skonfigurowana funkcja dublowania baz danych.<br /><br /> Jeśli wartością tego klucza jest "", **katalog początkowy** musi być obecny i jego wartość nie może być równa "".<br /><br /> Nazwa serwera może składać się z co najwyżej 128 znaków.<br /><br /> W przypadku określenia partnera trybu failover, ale serwer partnerski trybu failover nie jest skonfigurowany do dublowania baz danych, a podstawowy serwer (określony za pomocą słowa kluczowego serwera) nie będzie dostępny, połączenie zakończy się niepowodzeniem.<br /><br /> Jeśli zostanie określony partner trybu failover, a serwer podstawowy nie zostanie skonfigurowany do dublowania bazy danych, połączenie z serwerem podstawowym (określonym za pomocą słowa kluczowego serwera) powiedzie się, jeśli serwer podstawowy będzie dostępny.|  
|Katalog początkowy<br /><br /> —lub—<br /><br /> Baza danych|Brak|Nazwa bazy danych.<br /><br /> Nazwa bazy danych może składać się z co najwyżej 128 znaków.|  
|Zabezpieczenia zintegrowane<br /><br /> —lub—<br /><br /> Trusted_Connection|false|Kiedy `false`identyfikator użytkownika i hasło są określone w połączeniu. Kiedy `true`bieżące poświadczenia konta systemu Windows są używane do uwierzytelniania.<br /><br /> Rozpoznane wartości to `true` `false` `true`,, ,`no` i`sspi` (zdecydowanie zalecane), które są równoważne. `yes`<br /><br /> Jeśli określono identyfikator użytkownika i hasło, a zabezpieczenia zintegrowane mają ustawioną wartość true, identyfikator użytkownika i hasło zostaną zignorowane i zostanie użyte zintegrowane zabezpieczenia.<br /><br /> <xref:System.Data.SqlClient.SqlCredential>jest bezpieczniejszym sposobem określenia poświadczeń dla połączenia korzystającego z uwierzytelniania SQL Server (`Integrated Security=false`).|  
|Maksymalny rozmiar puli|100|Maksymalna liczba połączeń, które są dozwolone w puli.<br /><br /> Prawidłowe wartości są większe lub równe 1. Wartości, które są mniejsze niż **minimalne rozmiary puli** , generują błąd.|  
|Minimalny rozmiar puli|0|Minimalna liczba połączeń, które są dozwolone w puli.<br /><br /> Prawidłowe wartości są większe lub równe 0. Zero (0) w tym polu oznacza, że nie są początkowo otwierane żadne połączenia.<br /><br /> Wartości, które są większe niż **Maksymalny rozmiar puli** , generują błąd.|  
|MultipleActiveResultSets|false|Gdy `true`aplikacja może obsługiwać wiele aktywnych zestawów wyników (MARS). Gdy `false`aplikacja musi przetworzyć lub anulować wszystkie zestawy wyników z jednej partii, zanim będzie mogła wykonać inną partię dla tego połączenia.<br /><br /> Rozpoznane wartości to `true` i `false`.<br /><br /> Aby uzyskać więcej informacji, zobacz [wiele aktywnych zestawów wyników (MARS)](~/docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md).|  
|`MultiSubnetFailover`|FAŁSZ|Zawsze określaj `multiSubnetFailover=True` połączenie z odbiornikiem grupy dostępności dla SQL Server 2012 (lub nowszego) grupy dostępności lub SQL Server 2012 (lub nowszego) wystąpienia klastra trybu failover. `multiSubnetFailover=True`Konfiguruje serwer SQL w celu zapewnienia szybszego wykrywania i nawiązywania połączenia z (aktualnie) aktywnym serwerem. Możliwe wartości to `Yes` i `No`, `True` i `False` lub .`1` `0` Przykład:<br /><br /> `MultiSubnetFailover=True`<br /><br /> Wartość domyślna to `False`. Aby uzyskać więcej informacji na temat obsługi usługi SqlClient w przypadku zawsze AGs, zobacz temat [Obsługa klienta w przypadku wysokiej dostępności i odzyskiwania po awarii](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Biblioteka sieciowa<br /><br /> —lub—<br /><br /> Sieć<br /><br /> —lub—<br /><br /> Waga|Brak|Biblioteka sieciowa używana do nawiązywania połączenia z wystąpieniem SQL Server. Obsługiwane są następujące wartości:<br /><br /> dbnmpntw (nazwane potoki)<br /><br /> dbmsrpcn (wieloprotokołowe, RPC systemu Windows)<br /><br /> Dbmsadsn (Apple Talk)<br /><br /> dbmsgnet (za pośrednictwem)<br /><br /> dbmslpcn (pamięć współdzielona)<br /><br /> dbmsspxn (IPX/SPX)<br /><br /> dbmssocn (TCP/IP)<br /><br /> Dbmsvinn (Banyan Vines)<br /><br /> W systemie, z którym ma zostać nawiązane połączenie, musi być zainstalowana odpowiednia biblioteka DLL. Jeśli nie określisz sieci i używasz lokalnego serwera (na przykład "." lub "(local)"), używana jest pamięć współdzielona. W tym przykładzie biblioteka sieciowa to Win32 Winsock TCP/IP (dbmssocn), a 1433 jest używanym portem.<br /><br /> `Network Library=dbmssocn;Data Source=000.000.000.000,1433;`|  
|Rozmiar pakietu|8000|Rozmiar w bajtach pakietów sieciowych używanych do komunikowania się z wystąpieniem SQL Server.<br /><br /> Rozmiar pakietu może być większy lub równy 512 i mniejszy lub równy 32768.|  
|Hasło<br /><br /> —lub—<br /><br /> PWD|Brak|Hasło do logowania do konta SQL Server. Niezalecane. W celu zapewnienia wysokiego poziomu zabezpieczeń zdecydowanie zalecamy użycie `Integrated Security` słowa kluczowego or. `Trusted_Connection` <xref:System.Data.SqlClient.SqlCredential>jest bezpieczniejszym sposobem określenia poświadczeń dla połączenia korzystającego z uwierzytelniania SQL Server.<br /><br /> Hasło nie może zawierać więcej niż 128 znaków.|  
|Utrwalaj informacje zabezpieczające<br /><br /> —lub—<br /><br /> PersistSecurityInfo|false|Gdy jest ustawiona `false` na `no` lub (zdecydowanie zalecane), informacje o zabezpieczeniach, takie jak hasło, nie są zwracane w ramach połączenia, jeśli połączenie jest otwarte lub kiedykolwiek było w stanie otwartym. Zresetowanie parametrów połączenia powoduje zresetowanie wszystkich wartości parametrów połączenia łącznie z hasłem. Rozpoznane wartości to `true` `false` `no`,,, i. `yes`|  
|PoolBlockingPeriod|Auto|Ustawia zachowanie okresu blokowania dla puli połączeń. Aby <xref:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod> uzyskać szczegółowe informacje, zobacz Właściwość.|  
|Buforowanie|'true'|Gdy wartość tego klucza jest ustawiona na wartość true, nowo utworzone połączenie zostanie dodane do puli po zamknięciu przez aplikację. Przy następnej próbie otwarcia tego samego połączenia połączenie zostanie narysowane z puli.<br /><br /> Połączenia są uważane za takie same, jeśli mają te same parametry połączenia. Różne połączenia mają różne parametry połączenia.<br /><br /> Wartością tego klucza może być "true", "false", "yes" lub "No".|  
|Replikacji|false|`true`Jeśli replikacja jest obsługiwana przy użyciu połączenia.|  
|Powiązanie transakcji|Niejawne powiązanie|Kontroluje skojarzenie połączenia z zarejestrowaną `System.Transactions` transakcją.<br /><br /> Możliwe wartości to:<br /><br /> `Transaction Binding=Implicit Unbind;`<br /><br /> `Transaction Binding=Explicit Unbind;`<br /><br /> Niejawne powiązanie powoduje, że połączenie zostanie odłączone od transakcji po jej zakończeniu. Po odłączeniu dodatkowe żądania dotyczące połączenia są wykonywane w trybie automatycznego zatwierdzania. `System.Transactions.Transaction.Current` Właściwość nie jest sprawdzana podczas wykonywania żądań, gdy transakcja jest aktywna. Po zakończeniu transakcji dodatkowe żądania są wykonywane w trybie automatycznego zatwierdzania.<br /><br /> Jeśli system zakończy transakcję (w zakresie bloku using) przed wykonaniem ostatniego polecenia, zostanie <xref:System.InvalidOperationException>zgłoszony.<br /><br /> Jawne powiązanie powoduje, że połączenie pozostaje dołączone do transakcji do momentu zamknięcia połączenia lub wywołania jawnego `SqlConnection.TransactionEnlist(null)` . Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], zmiany niejawnego powiązania sprawiają, że jawne powiązanie jest przestarzałe. Jest zgłaszany, `Transaction.Current` Jeśli nie jest transakcją zarejestrowaną lub jeśli transakcja jest nieaktywna. `InvalidOperationException`|  
|TransparentNetworkIPResolution|Zobacz opis.|Gdy wartość tego klucza jest ustawiona na `true`, aplikacja jest wymagana do pobrania wszystkich adresów IP dla określonego wpisu DNS i próba nawiązania połączenia z pierwszym z nich na liście. Jeśli połączenie nie zostanie nawiązane w ciągu 0,5 sekund, aplikacja będzie podejmować próby nawiązania połączenia ze wszystkimi innymi równolegle. Po pierwsze odpowiedzi aplikacja ustanowi połączenie z adresem IP respondenta.<br /><br /> Jeśli klucz jest ustawiony na `true`, `TransparentNetworkIPResolution` jest ignorowany. `MultiSubnetFailover`<br /><br /> Jeśli klucz jest ustawiony, `TransparentNetworkIPResolution` jest ignorowany. `Failover Partner`<br /><br /> Wartością tego klucza musi `true`być, `false`, `yes`, lub `no`.<br /><br /> Wartość `yes` jest traktowana jako `true`wartość.<br /><br /> Wartość `no` jest traktowana jako `false`wartość.<br /><br /> Wartości domyślne są następujące:<br /><br /> <ul><li>`false`czasie<br /><br /> <ul><li>Nawiązywanie połączenia z Azure SQL Database, gdzie źródło danych się skończy:<br /><br /> <ul><li>.database.chinacloudapi.cn</li><li>.database.usgovcloudapi.net</li><li>.database.cloudapi.de</li><li>.database.windows.net</li></ul></li><li>`Authentication`jest "Active Directory Password" lub "Active Directory Integrated"</li></ul></li><li>`true`we wszystkich innych przypadkach.</li></ul>|  
|TrustServerCertificate|false|Gdy jest ustawiona `true`na, protokół SSL jest używany do szyfrowania kanału podczas pomijania przechodzenia łańcucha certyfikatów w celu zweryfikowania zaufania. Jeśli TrustServerCertificate jest ustawiona na `true` , a szyfrowanie jest ustawione `false`na, kanał nie jest szyfrowany. Rozpoznane wartości to `true` `false` `no`,,, i. `yes` Aby uzyskać więcej informacji, zobacz [składnia parametrów połączenia](~/docs/framework/data/adonet/connection-string-syntax.md).|  
|Wersja systemu typu|Brak|Wartość ciągu, która wskazuje system typu oczekiwany przez aplikację. Funkcje dostępne dla aplikacji klienckiej są zależne od wersji SQL Server i poziomu zgodności bazy danych. Jawne ustawienie wersji systemu typu, która została zapisywana przez aplikację kliencką, pozwala uniknąć potencjalnych problemów, które mogłyby spowodować przerwanie działania aplikacji w przypadku użycia innej wersji SQL Server. **Uwaga:**  Nie można ustawić wersji systemu typu dla kodu środowiska uruchomieniowego języka wspólnego (CLR) wykonywanego w procesie w SQL Server. Aby uzyskać więcej informacji, zobacz [SQL Server integracji środowiska uruchomieniowego języka wspólnego](~/docs/framework/data/adonet/sql/sql-server-common-language-runtime-integration.md). <br /><br /> Możliwe wartości to:<br /><br /> `Type System Version=SQL Server 2012;`<br /><br /> `Type System Version=SQL Server 2008;`<br /><br /> `Type System Version=SQL Server 2005;`<br /><br /> `Type System Version=Latest;`<br /><br /> `Type System Version=SQL Server 2012;`Określa, że aplikacja będzie wymagała wersji 11.0.0.0 programu Microsoft. SqlServer. Types. dll. Pozostałe `Type System Version` ustawienia będą wymagały wersji 10.0.0.0 elementu Microsoft. SqlServer. Types. dll.<br /><br /> `Latest`jest przestarzały i nie należy go używać. `Latest`jest odpowiednikiem `Type System Version=SQL Server 2008;`.|  
|Identyfikator użytkownika<br /><br /> —lub—<br /><br /> UID<br /><br /> —lub—|Brak|Konto logowania SQL Server. Niezalecane. W celu zapewnienia wysokiego poziomu zabezpieczeń zdecydowanie zalecamy użycie `Integrated Security` słowa kluczowego or. `Trusted_Connection` <xref:System.Data.SqlClient.SqlCredential>jest bezpieczniejszym sposobem określenia poświadczeń dla połączenia korzystającego z uwierzytelniania SQL Server.<br /><br /> Identyfikator użytkownika nie może zawierać więcej niż 128 znaków.|  
|Wystąpienie użytkownika|false|Wartość wskazująca, czy połączenie z domyślnego wystąpienia SQL Server Express ma zostać przekierowanie do wystąpienia zainicjowanego przez środowisko uruchomieniowe w ramach konta obiektu wywołującego.|  
|Identyfikator stacji roboczej<br /><br /> —lub—<br /><br /> WSID|Nazwa komputera lokalnego|Nazwa stacji roboczej łączącej się z SQL Server.<br /><br /> Długość identyfikatora nie może przekraczać 128 znaków.|  
  
 Poniższa lista zawiera prawidłowe nazwy dla wartości puli połączeń w ramach programu <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>. Aby uzyskać więcej informacji, zobacz SQL Servering pooling [(ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
-   Okres istnienia połączenia (lub limit czasu równoważenia obciążenia)  
  
-   Enlist  
  
-   Maksymalny rozmiar puli  
  
-   Minimalny rozmiar puli  
  
-   Buforowanie  
  
 Gdy ustawiasz wartości dla słowa kluczowego lub puli połączeń, które wymagają wartości logicznej, możesz użyć opcji "tak" zamiast "true" i "No" zamiast "false". Wartości całkowite są reprezentowane jako ciągi.  

> [!NOTE]
>  Dostawca danych .NET Framework dla SQL Server używa własnego protokołu do komunikowania się z SQL Server. W związku z tym nie obsługuje on używania nazwy źródła danych ODBC (DSN) podczas nawiązywania połączenia z SQL Server, ponieważ nie dodaje warstwy ODBC.  
  
> [!NOTE]
>  Pliki programu uniwersalnego (UDL) nie są obsługiwane dla Dostawca danych .NET Framework SQL Server.  
  
> [!CAUTION]
>  W tej wersji aplikacja powinna zachować ostrożność podczas konstruowania parametrów połączenia na podstawie danych wejściowych użytkownika (na przykład podczas pobierania informacji o IDENTYFIKATORze użytkownika i haśle z okna dialogowego i dołączania go do parametrów połączenia). Aplikacja powinna upewnić się, że użytkownik nie może osadzić dodatkowych parametrów połączenia w tych wartościach (na przykład w celu dołączenia hasła jako "validpassword; Database = somedb"). Jeśli musisz utworzyć parametry połączenia na podstawie danych wejściowych użytkownika, Użyj nowego <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, który sprawdza poprawność parametrów połączenia i pomaga wyeliminować ten problem. Aby uzyskać więcej informacji, zobacz [konstruktory parametrów połączenia](~/docs/framework/data/adonet/connection-string-builders.md) .  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> ustawia właściwość przed otwarciem połączenia.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podano nieprawidłowy argument parametrów połączenia lub nie podano wymaganego argumentu parametrów połączenia.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Parametry połączenia w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">Buforowanie połączenia z programem SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET dostawcy zarządzani i centrum deweloperów zestawu danych</related>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Parametry połączenia w ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Buforowanie połączenia z programem SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czas oczekiwania podczas próby nawiązania połączenia przed zakończeniem próby i wygenerowaniem błędu.</summary>
        <value>Czas (w sekundach) oczekiwania na otwarcie połączenia. Wartość domyślna to 15 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można ustawić czas oczekiwania połączenia przy użyciu `Connect Timeout` słów kluczowych lub `Connection Timeout` w parametrach połączenia. Wartość 0 oznacza brak limitu i należy ją uniknąć w trakcie próby nawiązania połączenia <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> przez czas oczekiwania.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i `Connection Timeout` ustawia do 30 sekund w parametrach połączenia. Kod otwiera połączenie i wyświetla <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> właściwość w oknie konsoli.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ustawiona wartość jest mniejsza niż 0.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Parametry połączenia w ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Buforowanie połączenia z programem SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca <see cref="T:System.Data.SqlClient.SqlCommand" /> obiekt skojarzony <see cref="T:System.Data.SqlClient.SqlConnection" />z.</summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlCommand" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="sqlConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.SqlClient.SqlCredential" /> obiekt dla tego połączenia.</summary>
        <value><see cref="T:System.Data.SqlClient.SqlCredential" /> Obiekt dla tego połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Persist Security Info = true`jest wymagany do pobrania wartości <xref:System.Data.SqlClient.SqlCredential> obiektu z. <xref:System.Data.SqlClient.SqlConnection.Credential%2A>  
  
 Wartość <xref:System.Data.SqlClient.SqlConnection.Credential%2A> domyślna to null.  
  
 Zostanie <xref:System.InvalidOperationException> zgłoszony wyjątek:  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona dla otwartego połączenia.  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona, `Context Connection=true`gdy.  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona, `Integrated Security = true`gdy.  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona, gdy używa `Password`parametrów połączenia.  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona, gdy używa `UserID`parametrów połączenia.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.SqlClient.SqlConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę bieżącej bazy danych lub bazę danych, która ma zostać użyta po otwarciu połączenia.</summary>
        <value>Nazwa bieżącej bazy danych lub nazwa bazy danych, która ma zostać użyta po otwarciu połączenia. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość <xref:System.Data.SqlClient.SqlConnection.Database%2A> jest aktualizowana dynamicznie. W przypadku zmiany bieżącej bazy danych przy użyciu [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcji <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> lub metody zostanie wysłany komunikat informacyjny i właściwość zostanie automatycznie zaktualizowana.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i wyświetla niektóre właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Polecenia i parametry</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę wystąpienia SQL Server, z którym ma zostać nawiązane połączenie.</summary>
        <value>Nazwa wystąpienia SQL Server, z którym ma zostać nawiązane połączenie. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Właściwość zwraca wartość `null` , jeśli parametry połączenia dla <xref:System.Data.SqlClient.SqlConnection> "context Connection = true". <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i wyświetla niektóre właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="sqlConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transaction">Odwołanie do istniejącego <see cref="T:System.EnterpriseServices.ITransaction" /> elementu, który ma zostać zarejestrowany.</param>
        <summary>Rejestrowanie w określonej transakcji jako transakcja rozproszona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> metody do rejestracji w transakcji rozproszonej. Ponieważ jest ono rejestrowane w <xref:System.Transactions.Transaction> wystąpieniu, **EnlistTransaction** korzysta z <xref:System.Transactions> funkcji dostępnych w przestrzeni nazw do zarządzania transakcjami rozproszonymi, dzięki czemu jest preferowany  **EnlistDistributedTransaction** do tego celu. Aby uzyskać więcej informacji, zobacz [transakcje rozproszone](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Jeśli funkcja autorejestracji jest wyłączona, można nadal zarejestrować się w istniejącej transakcji rozproszonej przy użyciu metody **EnlistDistributedTransaction** . Rejestracja w istniejącej transakcji rozproszonej zapewnia, że jeśli transakcja została zatwierdzona lub wycofana, modyfikacje wprowadzone przez kod w źródle danych również są zatwierdzane lub wycofywane.  
  
 `EnlistDistributedTransaction`zwraca wyjątek, <xref:System.Data.SqlClient.SqlConnection> Jeśli już rozpoczęto transakcję przy użyciu <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>. Jeśli jednak transakcja jest transakcją lokalną rozpoczętą w źródle danych (na przykład przez jawne wykonanie instrukcji BEGIN TRANSACTION przy użyciu <xref:System.Data.SqlClient.SqlCommand> obiektu), **EnlistDistributedTransaction** Wycofuje transakcję lokalną i Rejestrowanie w istniejącej transakcji rozproszonej zgodnie z żądaniem. Nie otrzymasz informacji o tym, że lokalna transakcja została wycofana i są odpowiedzialni za zarządzanie wszelkimi lokalnymi transakcjami, które nie zostały rozpoczęte <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="sqlConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="transaction">Odwołanie do istniejącego <see cref="T:System.Transactions.Transaction" /> elementu, który ma zostać zarejestrowany.</param>
        <summary>Rejestrowanie w określonej transakcji jako transakcja rozproszona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> metody do rejestracji w transakcji rozproszonej. Ponieważ jest ono rejestrowane w <xref:System.Transactions.Transaction> wystąpieniu, **EnlistTransaction** korzysta z <xref:System.Transactions> funkcji dostępnych w przestrzeni nazw do zarządzania transakcjami rozproszonymi, dzięki czemu jest preferowany  **EnlistDistributedTransaction**, który używa obiektu **System. EnterpriseServices. ITransaction** . Ma również nieco inną semantykę: gdy połączenie jest jawnie zarejestrowane w transakcji, nie może zostać usunięte lub zarejestrowane w innej transakcji do momentu zakończenia pierwszej transakcji. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInfoMessageEventOnUserErrors : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> właściwość.</summary>
        <value><see langword="true" />Jeśli właściwość została ustawiona; w przeciwnym razie <see langword="false" />. <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu na <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> `true`wartość błędy, które były wcześniej traktowane jako wyjątki, są teraz obsługiwane <xref:System.Data.SqlClient.SqlConnection.InfoMessage> jako zdarzenia. Wszystkie zdarzenia są natychmiast wyzwalane i są obsługiwane przez program obsługi zdarzeń. Jeśli jest <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> ustawiona na `false`, wówczas <xref:System.Data.SqlClient.SqlConnection.InfoMessage> zdarzenia są obsługiwane na końcu procedury.  
  
> [!NOTE]
>  Wystąpił błąd o poziomie ważności wynoszącym 17 lub wyższym, który powoduje, że serwer zatrzymania przetwarzania polecenia musi zostać obsłużony jako wyjątek. W takim przypadku wyjątek jest zgłaszany niezależnie od tego, jak błąd jest obsługiwany w <xref:System.Data.SqlClient.SqlConnection.InfoMessage> zdarzeniu.  
  
 Aby uzyskać więcej informacji na temat pracy ze zdarzeniami, zobacz [zdarzenia połączenia](~/docs/framework/data/adonet/connection-events.md). Aby uzyskać więcej informacji o błędach wygenerowanych przez aparat SQL Server, zobacz [Błędy aparatu bazy danych](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">Zdarzenia połączenia</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła <see cref="T:System.Data.SqlClient.SqlConnection" />danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli spróbujesz pobrać informacje o schemacie dla więcej niż jednej procedury składowanej, zostanie zwrócony schemat dla najnowszej wersji.
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Uzyskiwanie informacji o schemacie z bazy danych</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła <see cref="T:System.Data.SqlClient.SqlConnection" />danych. Aby uzyskać więcej informacji na temat schematu, zobacz [SQL Server kolekcje schematów](~/docs/framework/data/adonet/sql-server-schema-collections.md).</summary>
        <returns><see cref="T:System.Data.DataTable" /> Zawierający informacje o schemacie.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Uzyskiwanie informacji o schemacie z bazy danych</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <summary>Zwraca informacje o schemacie dla źródła <see cref="T:System.Data.SqlClient.SqlConnection" /> danych, używając określonego ciągu dla nazwy schematu.</summary>
        <returns><see cref="T:System.Data.DataTable" /> Zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konieczne może być posiadanie informacji o schemacie bazy danych, tabel lub kolumn. Ten przykład:  
  
-   Program używa GetSchema, aby uzyskać informacje o schemacie.  
  
-   Aby uzyskać określone informacje, użyj ograniczeń schematu.  
  
-   Pobiera informacje o schemacie bazy danych, tabel i niektórych kolumn.  
  
 Przed uruchomieniem przykładu należy utworzyć przykładową bazę danych, wykonując następujące czynności [!INCLUDE[tsql](~/includes/tsql-md.md)]:  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 [Jak uzyskać informacje o schemacie z bazy danych](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) C# i Visual Basic wersje tego przykładowego kodu w projekcie programu Visual Studio.  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {  
         conn.Open();  
  
         // Get the Meta Data for Supported Schema Collections  
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");  
  
         Console.WriteLine("Meta Data for Supported Schema Collections:");  
         ShowDataTable(metaDataTable, 25);  
         Console.WriteLine();  
  
         // Get the schema information of Databases in your instance  
         DataTable databasesSchemaTable = conn.GetSchema("Databases");  
  
         Console.WriteLine("Schema Information of Databases:");  
         ShowDataTable(databasesSchemaTable, 25);  
         Console.WriteLine();  
  
         // First, get schema information of all the tables in current database;  
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");  
  
         Console.WriteLine("Schema Information of All Tables:");  
         ShowDataTable(allTablesSchemaTable, 20);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Table Type to get   
         // the specified table(s).  
         // You can use four restrictions for Table, so you should create a 4 members array.  
         String[] tableRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Table Type.   
         // Now we specify the Table Name of the table what we want to get schema information.  
         tableRestrictions[2] = "Course";  
  
         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);  
  
         Console.WriteLine("Schema Information of Course Tables:");  
         ShowDataTable(courseTableSchemaTable, 20);  
         Console.WriteLine();  
  
         // First, get schema information of all the columns in current database.  
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");  
  
         Console.WriteLine("Schema Information of All Columns:");  
         ShowColumns(allColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).  
         // You can use four restrictions for Column, so you should create a 4 members array.  
         String[] columnRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         columnRestrictions[2] = "Course";  
         columnRestrictions[3] = "DepartmentID";  
  
         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);  
  
         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");  
         ShowColumns(departmentIDSchemaTable);  
         Console.WriteLine();  
  
         // First, get schema information of all the IndexColumns in current database  
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");  
  
         Console.WriteLine("Schema Information of All IndexColumns:");  
         ShowIndexColumns(allIndexColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to   
         // get the specified column(s).  
         // You can use five restrictions for Column, so you should create a 5 members array.  
         String[] indexColumnsRestrictions = new String[5];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         indexColumnsRestrictions[2] = "Course";  
         indexColumnsRestrictions[4] = "CourseID";  
  
         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);  
  
         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");  
         ShowIndexColumns(courseIdIndexSchemaTable);  
         Console.WriteLine();  
      }  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   private static void ShowDataTable(DataTable table, Int32 length) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-" + length + "}", col.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         foreach (DataColumn col in table.Columns) {  
            if (col.DataType.Equals(typeof(DateTime)))  
               Console.Write("{0,-" + length + ":d}", row[col]);  
            else if (col.DataType.Equals(typeof(Decimal)))  
               Console.Write("{0,-" + length + ":C}", row[col]);  
            else  
               Console.Write("{0,-" + length + "}", row[col]);  
         }  
         Console.WriteLine();  
      }  
   }  
  
   private static void ShowDataTable(DataTable table) {  
      ShowDataTable(table, 14);  
   }  
  
   private static void ShowColumns(DataTable columnsTable) {  
      var selectedRows = from info in columnsTable.AsEnumerable()  
                         select new {  
                            TableCatalog = info["TABLE_CATALOG"],  
                            TableSchema = info["TABLE_SCHEMA"],  
                            TableName = info["TABLE_NAME"],  
                            ColumnName = info["COLUMN_NAME"],  
                            DataType = info["DATA_TYPE"]  
                         };  
  
      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",  
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,  
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);  
      }  
   }  
  
   private static void ShowIndexColumns(DataTable indexColumnsTable) {  
      var selectedRows = from info in indexColumnsTable.AsEnumerable()  
                         select new {  
                            TableSchema = info["table_schema"],  
                            TableName = info["table_name"],  
                            ColumnName = info["column_name"],  
                            ConstraintSchema = info["constraint_schema"],  
                            ConstraintName = info["constraint_name"],  
                            KeyType = info["KeyType"]  
                         };  
  
      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,  
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" />jest określony jako null.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Uzyskiwanie informacji o schemacie z bazy danych</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="restrictionValues" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <param name="restrictionValues">Zestaw wartości ograniczeń dla żądanego schematu.</param>
        <summary>Zwraca informacje o schemacie dla źródła <see cref="T:System.Data.SqlClient.SqlConnection" /> danych, używając określonego ciągu dla nazwy schematu i określonej tablicy ciągów dla wartości ograniczeń.</summary>
        <returns><see cref="T:System.Data.DataTable" /> Zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr może dostarczyć n głębokości wartości, które są określone przez kolekcję ograniczeń dla określonej kolekcji. ** `restrictionValues` Aby ustawić wartości dla danego ograniczenia i nie ustawiać wartości innych ograniczeń, należy ustawić powyższe ograniczenia `null` , a następnie wprowadzić odpowiednią wartość w polu ograniczenia, dla którego chcesz określić wartość.  
  
 Przykładem jest kolekcja "Tables". Jeśli kolekcja "Tables" ma trzy ograniczenia--Database, Owner i nazwa tabeli — i chcesz uzyskać tylko te tabele, które są skojarzone z właścicielem "Carl", należy przekazać następujące wartości: null, "Carl". Jeśli wartość ograniczenia nie jest przenoszona w programie, do tego ograniczenia są używane wartości domyślne. Jest to takie samo mapowanie jak przekazywanie w `null`, które różni się od przekazywania pustego ciągu dla wartości parametru. W takim przypadku pusty ciąg ("") jest uznawany za wartość dla określonego parametru.  
  
 Aby uzyskać przykładowy kod ilustrujący <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>, zobacz <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" />jest określony jako null.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Uzyskiwanie informacji o schemacie z bazy danych</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy SQL Server zwraca komunikat ostrzegawczy lub informacyjny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klienci, którzy chcą przetwarzać ostrzeżenia lub komunikaty informacyjne wysyłane przez serwer, powinni <xref:System.Data.SqlClient.SqlInfoMessageEventHandler> utworzyć delegata do nasłuchiwania tego zdarzenia.  
  
 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> Zdarzenie występuje, gdy w SQL Server jest zwracany komunikat o ważności 10 lub mniejszej. Komunikaty o ważności od 11 do 20 powodują wystąpienie błędu i komunikatów o ważności powyżej 20 powoduje zamknięcie połączenia. Więcej informacji o SQL Server poziomach błędów można znaleźć w temacie [Błędy aparatu bazy danych](/sql/relational-databases/errors-events/database-engine-error-severities).
  
 Aby uzyskać więcej informacji i zapoznać się z przykładem, zobacz [zdarzenia połączenia](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">Praca ze zdarzeniami połączenia</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnStateChange">
      <MemberSignature Language="C#" Value="protected override void OnStateChange (System.Data.StateChangeEventArgs stateChange);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStateChange(class System.Data.StateChangeEventArgs stateChange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OnStateChange(System.Data.StateChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStateChange (stateChange As StateChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStateChange(System::Data::StateChangeEventArgs ^ stateChange);" />
      <MemberSignature Language="F#" Value="override this.OnStateChange : System.Data.StateChangeEventArgs -&gt; unit" Usage="sqlConnection.OnStateChange stateChange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateChange" Type="System.Data.StateChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="stateChange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera połączenie z bazą danych z ustawieniami właściwości określonymi przez <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection> Narysuje otwarte połączenie z puli połączeń, jeśli jest dostępne. W przeciwnym razie ustanawia nowe połączenie z wystąpieniem SQL Server.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlConnection> Jeśli wykracza poza zakres, nie jest zamknięty. W związku z tym należy jawnie zamknąć połączenie, wywołując <xref:System.Data.SqlClient.SqlConnection.Close%2A>polecenie.  
  
> [!NOTE]
>  Jeśli określisz numer portu inny niż 1433 podczas próby nawiązania połączenia z wystąpieniem SQL Server i przy użyciu protokołu innego niż TCP/IP, <xref:System.Data.SqlClient.SqlConnection.Open%2A> Metoda zakończy się niepowodzeniem. Aby określić numer portu inny niż 1433, w parametrach połączenia należy podać ciąg "serwer = MachineName, numer portu" i użyć protokołu TCP/IP.  
  
> [!NOTE]
>  Dostawca danych .NET Framework dla SQL Server wymaga uprawnienia zabezpieczeń<xref:System.Security.Permissions.SecurityPermission> z włączonym ustawieniem `UnmanagedCode`"Zezwalaj na wywołania niezarządzanych zestawów" <xref:System.Security.Permissions.SecurityPermissionFlag> (z opcją "with" <xref:System.Data.SqlClient.SqlConnection> ), aby otworzyć z włączonym debugowaniem SQL.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection>, otwiera i wyświetla część jego właściwości. Połączenie jest automatycznie zamykane na końcu `using` bloku.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie można otworzyć połączenia bez określenia źródła danych ani serwera.  
  
 lub  
  
 Połączenie jest już otwarte.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił błąd poziomu połączenia podczas otwierania połączenia. <see cref="P:System.Data.SqlClient.SqlException.Number" /> Jeśli właściwość zawiera wartość 18487 lub 18488, oznacza to, że określone hasło wygasło lub należy je zresetować. Aby uzyskać <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> więcej informacji, zobacz metodę.  
  
<see langword="&lt;system.data.localdb&gt;" /> Tag w pliku App. config zawiera nieprawidłowe lub nieznane elementy.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">W <see langword="&lt;localdbinstances&gt;" /> sekcji znajdują się dwa wpisy o tej samej nazwie.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Parametry połączenia w ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Buforowanie połączenia z programem SQL Server (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja programu <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, która otwiera połączenie z bazą danych z ustawieniami właściwości określonymi <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />przez. Tokenu anulowania można użyć do żądania, aby operacja została porzucona przed upływem limitu czasu połączenia.  Wyjątki będą propagowane za pośrednictwem zwracanego zadania. Jeśli upłynie limit czasu połączenia bez pomyślnego połączenia, zwrócone zadanie zostanie oznaczone jako błędne z wyjątkiem. Implementacja zwraca zadanie bez blokowania wątku wywołującego dla połączeń w puli i nienależących do puli.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> <xref:System.Data.SqlClient.SqlConnection.State%2A> należyzwrócić<xref:System.Data.ConnectionState.Connecting> do momentu zakończeniaoperacji.<xref:System.Threading.Tasks.Task> Następnie, jeśli połączenie zakończyło się <xref:System.Data.SqlClient.SqlConnection.State%2A> pomyślnie, <xref:System.Data.ConnectionState.Open>musi zostać zwrócone. Jeśli połączenie nie powiedzie <xref:System.Data.SqlClient.SqlConnection.State%2A> się, <xref:System.Data.ConnectionState.Closed>musi zwrócić.  
  
 Wywołanie <xref:System.Data.SqlClient.SqlConnection.Close%2A> spróbuje anulować lub zamknąć odpowiednie <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> wywołanie.  
  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  
  
 <see langword="Context Connection=true" />jest określony w parametrach połączenia.  
  
Połączenie nie było dostępne w puli połączeń przed upływem limitu czasu połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wszelkie błędy zwrócone przez SQL Server, które wystąpiły podczas otwierania połączenia.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PacketSize : int" Usage="System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_PacketSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar (w bajtach) pakietów sieciowych używanych do komunikowania się z wystąpieniem SQL Server.</summary>
        <value>Rozmiar (w bajtach) pakietów sieciowych. Wartość domyślna to 8000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aplikacja wykonuje operacje kopiowania zbiorczego lub wysyła lub odbiera duże ilości danych tekstowych lub graficznych, rozmiar pakietu większy niż domyślny może zwiększyć wydajność, ponieważ powoduje mniejszą liczbę operacji odczytu i zapisu w sieci. Jeśli aplikacja wysyła i odbiera małe ilości informacji, można ustawić rozmiar pakietu na 512 bajtów (przy użyciu wartości rozmiaru pakietu w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), co jest wystarczające dla większości operacji transferu danych. W przypadku większości aplikacji najlepiej jest wykorzystać domyślny rozmiar pakietu.  
  
 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A>może być wartością z zakresu od 512 do 32767 bajtów. Wyjątek jest generowany, jeśli wartość znajduje się poza tym zakresem.  
  
 Ustawienie wartości domyślnej na liczbę większą niż 8000 spowoduje, że pakiety będą korzystać z alokatora wielostronicowego w wystąpieniu SQL Server zamiast bardziej wydajnego alokatora SinglePage, co zmniejsza ogólną skalowalność SQL Server. Aby uzyskać więcej informacji o tym, jak SQL Server używa pamięci, zobacz [Przewodnik po architekturze zarządzania pamięcią](/sql/relational-databases/memory-management-architecture-guide).
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection>, włącznie z `Packet Size` ustawieniem do 512 w parametrach połączenia. Wyświetla <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> właściwości i <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> w oknie konsoli.  
  
 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberSignature Language="F#" Value="static member RegisterColumnEncryptionKeyStoreProviders : System.Collections.Generic.IDictionary&lt;string, System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders customProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="customProviders">Dostawcy niestandardowi</param>
        <summary>Rejestruje dostawców magazynu kluczy szyfrowania kolumn.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberSignature Language="F#" Value="member this.ResetStatistics : unit -&gt; unit" Usage="sqlConnection.ResetStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Jeśli zbieranie danych statystycznych jest włączone, wszystkie wartości są resetowane do zera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zbieranie danych statystycznych nie jest włączone i ta metoda jest wywoływana, nie jest zgłaszany żaden błąd.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statystyki dostawcy dla SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberSignature Language="F#" Value="member this.RetrieveStatistics : unit -&gt; System.Collections.IDictionary" Usage="sqlConnection.RetrieveStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję par wartości nazw statystyk w punkcie w czasie, gdy metoda jest wywoływana.</summary>
        <returns>Zwraca odwołanie do typu <see cref="T:System.Collections.IDictionary" /> <see cref="T:System.Collections.DictionaryEntry" /> elementów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu tej metody pobierane są te wartości w bieżącym punkcie w czasie. W przypadku kontynuowania korzystania z połączenia wartości są niepoprawne. Należy ponownie wykonać metodę, aby uzyskać najbardziej aktualne wartości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statystyki dostawcy dla SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg zawierający wersję wystąpienia SQL Server, do którego jest podłączony klient.</summary>
        <value>Wersja wystąpienia SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wersja ma postać *# #. # #. # # #*#, gdzie dwie pierwsze cyfry są wersją główną, kolejne dwie cyfry są wersją pomocniczą, a ostatnie cztery cyfry to wersja wydania. Ciąg ma postać *główna. pomocnicza. kompilacja*, gdzie główna i pomocnicza są dokładnie dwiema cyframi, a kompilacja ma dokładnie cztery cyfry.  
  
 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A>został wywołany, gdy zwrócone zadanie nie zostało ukończone i połączenie nie zostało otwarte po wywołaniu <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> wyświetla właściwość.  
  
 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie jest zamknięte.  
  
 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" />został wywołany, gdy zwrócone zadanie nie zostało ukończone i połączenie nie zostało otwarte po wywołaniu <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.SqlClient.SqlConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje stan <see cref="T:System.Data.SqlClient.SqlConnection" /> podczas ostatniej operacji sieciowej wykonanej w ramach połączenia.</summary>
        <value><see cref="T:System.Data.ConnectionState" /> Wyliczenie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca Wyliczenie wskazujące stan <xref:System.Data.SqlClient.SqlConnection>. <xref:System.Data.ConnectionState> Zamknięcie i ponowne otwarcie połączenia spowoduje odświeżenie wartości <xref:System.Data.SqlClient.SqlConnection.State%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Nawiązywanie połączenia ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zmienia się stan połączenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StatisticsEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Po ustawieniu na <see langword="true" />, włącza zbieranie statystyk dla bieżącego połączenia.</summary>
        <value>Zwraca <see langword="true" /> czy jest włączone zbieranie statystyk; w <see langword="false" />przeciwnym razie. <see langword="false" />jest wartością domyślną.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Włączenie zbierania danych statystycznych ma niewielki, ale wymierny wpływ na wydajność i dlatego powinna być włączona tylko wtedy, gdy jest to wymagane.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statystyki dostawcy dla SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozpoczyna transakcję bazy danych.</summary>
        <returns>Obiekt, który reprezentuje nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Po zakończeniu transakcji musisz jawnie zatwierdzić lub wycofać transakcję przy użyciu <xref:System.Data.IDbTransaction.Commit> metody lub. <xref:System.Data.IDbTransaction.Rollback>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (iso As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel iso) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="iso">Jedna z <see cref="T:System.Data.IsolationLevel" /> wartości.</param>
        <summary>Rozpoczyna transakcję bazy danych o określonej <see cref="T:System.Data.IsolationLevel" /> wartości.</summary>
        <returns>Obiekt, który reprezentuje nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Po zakończeniu transakcji musisz jawnie zatwierdzić lub wycofać transakcję przy użyciu <xref:System.Data.IDbTransaction.Commit> metody lub. <xref:System.Data.IDbTransaction.Rollback>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca obiekt polecenia, który jest skojarzony z połączeniem.</summary>
        <returns>Obiekt polecenia, który jest skojarzony z połączeniem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Nowy obiekt będący kopią tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Data.SqlClient.SqlConnection> gdy wystąpienie jest rzutowane <xref:System.ICloneable> do interfejsu.  
  
 Ten element członkowski jest obsługiwany tylko przez .NET Compact Framework.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkstationId : string" Usage="System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_WorkstationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg identyfikujący klienta bazy danych.</summary>
        <value>Ciąg, który identyfikuje klienta bazy danych. Jeśli nie zostanie określony, nazwa komputera klienckiego. Jeśli nie jest określona, wartość jest ciągiem pustym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zwykle zawiera nazwę sieciową klienta. Właściwość odpowiada właściwości parametrów `Workstation ID`połączenia. <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> wyświetla właściwość.  
  
 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
