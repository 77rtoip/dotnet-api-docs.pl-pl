<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed56cc88bc32094f4264b8e07b94abd5de84e4d0" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227026" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface IDbConnection&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje połączenie z bazą danych programu SQL Server. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.SqlClient.SqlConnection> obiekt reprezentuje unikatowy sesji ze źródłem danych programu SQL Server. W systemie klienta/serwera bazy danych jest odpowiednikiem połączenie sieciowe z serwerem. <xref:System.Data.SqlClient.SqlConnection> jest używany razem z <xref:System.Data.SqlClient.SqlDataAdapter> i <xref:System.Data.SqlClient.SqlCommand> zwiększyć wydajność, podczas nawiązywania połączenia z bazą danych programu Microsoft SQL Server. W przypadku wszystkich produktów firm trzecich, programu SQL Server i innymi źródłami danych OLE DB, obsługiwane, użyj <xref:System.Data.OleDb.OleDbConnection>.  
  
 Po utworzeniu wystąpienia <xref:System.Data.SqlClient.SqlConnection>, wszystkie właściwości są ustawiane na wartości początkowe. Aby uzyskać listę tych wartości, zobacz <xref:System.Data.SqlClient.SqlConnection> konstruktora.  
  
 Zobacz <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> listę słów kluczowych w parametrach połączenia.  
  
 Jeśli <xref:System.Data.SqlClient.SqlConnection> zbliża się poza zakres, nie będzie ono zamknięte. W związku z tym, jawnie należy zamknąć połączenie, wywołując `Close` lub `Dispose`. `Close` i `Dispose` są funkcjonalnie równoważne. Jeśli pula połączeń wartość `Pooling` ustawiono `true` lub `yes`, połączenie znajdujące się poniżej jest zwracany z powrotem do puli połączeń. Z drugiej strony Jeśli `Pooling` ustawiono `false` lub `no`, podstawowe połączenie z serwerem faktycznie jest zamknięty.  
  
> [!NOTE]
>  Zdarzenia logowania i wylogowania nie zostaną wywołane na serwerze gdy połączenie zostanie pobrana z lub zwrócone do puli połączeń, ponieważ połączenie nie jest w rzeczywistości zamykane, gdy zostaje zwrócony do puli połączeń. Aby uzyskać więcej informacji, zobacz [programu SQL Server połączenia puli (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Aby upewnić się, że połączenia są zawsze zamknięte, Otwórz połączenie wewnątrz `using` zablokować, jak pokazano na następujący fragment kodu. Daje to gwarancję, że połączenie jest zamknięte automatycznie, gdy kod zamyka blok.  
  
```vb  
Using connection As New SqlConnection(connectionString)  
    connection.Open()  
    ' Do work here; connection closed on following line.  
End Using  
  
```  
  
```csharp  
using (SqlConnection connection = new SqlConnection(connectionString))  
    {  
        connection.Open();  
        // Do work here; connection closed on following line.  
    }  
```  
  
> [!NOTE]
>  Aby wdrożyć aplikacje o wysokiej wydajności, należy użyć puli połączeń. Korzystając z programu .NET Framework Data Provider for SQL Server, trzeba włączyć buforowanie połączeń, ponieważ dostawca zarządza to automatycznie, mimo że niektóre ustawienia można zmodyfikować. Aby uzyskać więcej informacji, zobacz [programu SQL Server połączenia puli (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
 Jeśli <xref:System.Data.SqlClient.SqlException> jest generowany przez wykonywanie metody <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlConnection> pozostaje otwarty, gdy poziom ważności jest 19 lub mniej. Jeśli poziom ważności jest mniejsze niż 20, serwer zazwyczaj zamyka <xref:System.Data.SqlClient.SqlConnection>. Jednak użytkownik może ponownie otworzyć połączenie i kontynuować.  
  
 Aplikacja, która tworzy wystąpienie <xref:System.Data.SqlClient.SqlConnection> obiektu mogą wymagać od wszystkich bezpośrednich i pośrednich wywołujących ma wystarczających uprawnień do kodu, ustawiając deklaratywne lub nadrzędnych zabezpieczeń żądania. <xref:System.Data.SqlClient.SqlConnection> sprawia, że żądania kontroli zabezpieczeń przy użyciu <xref:System.Data.SqlClient.SqlClientPermission> obiektu. Użytkownikom można sprawdzić, czy ich kod ma wystarczające uprawnienia za pomocą <xref:System.Data.SqlClient.SqlClientPermissionAttribute> obiektu. Użytkownicy i Administratorzy mogą również używać [Caspol.exe (narzędzie zasad zabezpieczeń dostępu kodu)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) Aby zmodyfikować zasady zabezpieczeń na poziomie komputera, użytkownika i przedsiębiorstwa. Aby uzyskać więcej informacji, zobacz [zabezpieczeń na platformie .NET](~/docs/standard/security/index.md). Aby uzyskać przykład pokazująca, jak używać żądań zabezpieczeń, zobacz [zabezpieczenia dostępu kodu i ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Aby uzyskać więcej informacji na temat obsługi komunikaty ostrzegawcze oraz informacyjne z serwera, zobacz [zdarzenia połączeń](~/docs/framework/data/adonet/connection-events.md). Aby uzyskać więcej informacji na temat błędów aparatu programu SQL Server i komunikaty o błędach, zobacz [zdarzenia aparatu bazy danych i błędy](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
> [!CAUTION]
>  Zamiast pamięci współużytkowanej, możesz wymusić TCP. Możesz to zrobić przez dodanie przedrostka tcp: do nazwy serwera w połączeniu ciągu lub można użyć localhost.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i <xref:System.Data.SqlClient.SqlConnection>. <xref:System.Data.SqlClient.SqlConnection> Jest otwarty, a następnie ustaw jako <xref:System.Data.SqlClient.SqlCommand.Connection%2A> dla <xref:System.Data.SqlClient.SqlCommand>. Przykład następnie wywołuje <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. Aby to osiągnąć, <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> jest przekazywany Ciąg połączenia i ciągu zapytania, który jest [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcji INSERT. Połączenie jest zamknięte automatycznie, gdy kod, który kończy działanie używając bloku.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlConnection" /> klasy.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlConnection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy nowe wystąpienie klasy <xref:System.Data.SqlClient.SqlConnection> utworzeniu odczyt/zapis właściwości są ustawione następujące wartości początkowej, o ile nie zostaną wyraźnie ustawione przy użyciu ich skojarzone słów kluczowych w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwości.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|Pusty ciąg ("")|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|Pusty ciąg ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|Pusty ciąg ("")|  
  
 Wartości tych właściwości można zmienić tylko za pomocą <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwości. <xref:System.Data.SqlClient.SqlConnectionStringBuilder> Klasa oferuje funkcje do tworzenia i zarządzania zawartość parametrów połączenia.  
  
   
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Połączenie użyte do otwarcia bazy danych programu SQL Server.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlConnection" /> klasy, gdy ciąg, który zawiera ciąg połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy nowe wystąpienie klasy <xref:System.Data.SqlClient.SqlConnection> utworzeniu odczyt/zapis właściwości są ustawione następujące wartości początkowej, o ile nie zostaną wyraźnie ustawione przy użyciu ich skojarzone słów kluczowych w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwości.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|Pusty ciąg ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|Pusty ciąg ("")|  
  
 Wartości tych właściwości można zmienić tylko za pomocą <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwości. <xref:System.Data.SqlClient.SqlConnection> Klasa oferuje funkcje do tworzenia i zarządzania zawartość parametrów połączenia.  
  
   
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, cred)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia, który nie korzysta z żadnego z następujących słów kluczowych ciąg połączenia: <see langword="Integrated Security = true" />, <see langword="UserId" />, lub <see langword="Password" />; lub które nie używają <see langword="ContextConnection = true" />.</param>
        <param name="credential">Element <see cref="T:System.Data.SqlClient.SqlCredential" /> obiektu. Jeśli <paramref name="credential" /> ma wartość null, <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> jest funkcjonalnym odpowiednikiem <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />.</param>
        <param name="cred">Element <see cref="T:System.Data.SqlClient.SqlCredential" /> obiektu. Jeśli <paramref name="credential" /> ma wartość null, <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> jest funkcjonalnym odpowiednikiem <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlConnection" /> podane parametry połączenia, który nie korzysta z klasy <see langword="Integrated Security = true" /> i <see cref="T:System.Data.SqlClient.SqlCredential" /> obiekt, który zawiera identyfikator użytkownika i hasło.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia token dostępu dla połączenia.</summary>
        <value>Token dostępu dla połączenia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="sqlConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Uruchamia transakcji bazy danych.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia transakcji bazy danych.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie mapuje do wdrożenia programu SQL Server BEGIN TRANSACTION.  
  
 Należy jawnie przekazać ani wycofać, za pomocą transakcji <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> lub <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody. Aby poprawnie wykonuje dostawcy danych programu .NET Framework dla modelu zarządzania transakcji programu SQL Server, należy unikać inne modele zarządzania transakcji, takiego jak programu SQL Server.  
  
> [!NOTE]
>  Jeśli nie określisz poziom izolacji, jest używany domyślny poziom izolacji. Aby określić poziom izolacji z <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> metody, użyj przeciążenia, które przyjmuje `iso` parametru (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>). Poziom izolacji dla transakcji będzie nadal występował, po zakończeniu transakcji i do momentu połączenie jest zamknięte lub usunięty. Ustawianie poziom izolacji **migawki** w bazie danych, których nie włączono poziomie izolacji migawki nie zgłasza wyjątku. Transakcja zostanie ukończone, przy użyciu poziomu izolacji domyślne.  
  
> [!CAUTION]
>  Jeśli transakcja została uruchomiona, a poziom 16 lub nowszej błąd występuje na serwerze, transakcja zostanie nie wycofana aż <xref:System.Data.SqlClient.SqlDataReader.Read%2A> metoda jest wywoływana. Jest zgłaszany żaden wyjątek **ExecuteReader**.  
  
> [!CAUTION]
>  Jeśli zapytanie zwraca dużą ilość danych i wywołania `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> jest generowany, ponieważ program SQL Server nie zezwala równoległych transakcji, korzystając z usług MARS. Aby uniknąć tego problemu, zawsze skojarzyć transakcji za pomocą polecenia i/lub połączenie przed dowolnego czytelnicy są otwarte.  
  
 Aby uzyskać więcej informacji na temat transakcji programu SQL Server, zobacz [transakcji (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>. Ilustruje też sposób używania <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Równoległych transakcji nie są dozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS).</exception>
        <exception cref="T:System.InvalidOperationException">Równoległych transakcji nie są obsługiwane.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje i współbieżność</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">Poziom izolacji, na którym jest uruchamiany transakcji.</param>
        <summary>Uruchamia transakcji bazy danych przy użyciu poziomu izolacji określony.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie mapuje do wdrożenia programu SQL Server BEGIN TRANSACTION.  
  
 Należy jawnie przekazać ani wycofać, za pomocą transakcji <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> lub <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody. Aby poprawnie wykonuje dostawcy danych programu .NET Framework dla modelu zarządzania transakcji programu SQL Server, należy unikać inne modele zarządzania transakcji, takiego jak programu SQL Server.  
  
> [!NOTE]
> Po zatwierdzeniu lub wycofana transakcji poziom izolacji transakcji będzie nadal występować po wszystkich kolejnych poleceń, które są w trybie autozatwierdzania (ustawienie domyślne programu SQL Server). Może to dawać nieoczekiwane wyniki, takie jak stopień izolacji POWTARZALNEGO odczytu, przechowywanie i blokowanie użytkownikom dostępu do wiersza. Aby przywrócić domyślny (READ COMMITTED) poziom izolacji, należy wykonać [!INCLUDE[tsql](~/includes/tsql-md.md)] zestawu transakcji izolacji poziom READ COMMITTED instrukcji lub wywołanie <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> a następnie natychmiast przez <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>. Aby uzyskać więcej informacji na temat programu SQL Server poziomy izolacji, zobacz [poziomy izolacji transakcji](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Aby uzyskać więcej informacji na temat transakcji programu SQL Server, zobacz [transakcji (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Jeśli zapytanie zwraca dużą ilość danych i wywołania `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> jest generowany, ponieważ program SQL Server nie zezwala równoległych transakcji, korzystając z usług MARS. Aby uniknąć tego problemu, zawsze skojarzyć transakcji za pomocą polecenia i/lub połączenie przed dowolnego czytelnicy są otwarte.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>. Ilustruje też sposób używania <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Równoległych transakcji nie są dozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS).</exception>
        <exception cref="T:System.InvalidOperationException">Równoległych transakcji nie są obsługiwane.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">Nazwa transakcji.</param>
        <summary>Uruchomienie transakcji bazy danych o nazwie określonej transakcji.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie mapuje do wdrożenia programu SQL Server BEGIN TRANSACTION.  
  
 Długość `transactionName` parametru nie może przekraczać 32 znaków; w przeciwnym razie zostanie zgłoszony wyjątek.  
  
 Wartość w `transactionName` parametru można użyć w późniejszym wywołania <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> i `savePoint` parametru <xref:System.Data.SqlClient.SqlTransaction.Save%2A> metody.  
  
 Należy jawnie przekazać ani wycofać, za pomocą transakcji <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> lub <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody. Aby upewnić się, że [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] dostawca danych dla modelu zarządzania transakcji programu SQL Server wykonuje się poprawnie, należy unikać inne modele zarządzania transakcji, takich jak dostarczonego przez program SQL Server.  
  
 Aby uzyskać więcej informacji na temat transakcji programu SQL Server, zobacz [transakcji (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Jeśli zapytanie zwraca dużą ilość danych i wywołania `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> jest generowany, ponieważ program SQL Server nie zezwala równoległych transakcji, korzystając z usług MARS. Aby uniknąć tego problemu, zawsze skojarzyć transakcji za pomocą polecenia i/lub połączenie przed dowolnego czytelnicy są otwarte.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>. Ilustruje też sposób używania <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Równoległych transakcji nie są dozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS).</exception>
        <exception cref="T:System.InvalidOperationException">Równoległych transakcji nie są obsługiwane.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">Poziom izolacji, na którym jest uruchamiany transakcji.</param>
        <param name="transactionName">Nazwa transakcji.</param>
        <summary>Rozpoczyna się od nazwy transakcji i poziom izolacji określony transakcji bazy danych.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To polecenie mapuje do wdrożenia programu SQL Server BEGIN TRANSACTION.  
  
 Wartość w `transactionName` parametru można użyć w późniejszym wywołania <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> i `savePoint` parametru <xref:System.Data.SqlClient.SqlTransaction.Save%2A> metody.  
  
 Należy jawnie przekazać ani wycofać, za pomocą transakcji <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> lub <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody. Aby upewnić się, czy model zarządzania transakcji programu SQL Server wykonuje się poprawnie, należy unikać inne modele zarządzania transakcji, takiego jak programu SQL Server.  
  
> [!NOTE]
>  Po zatwierdzeniu lub wycofana transakcji poziom izolacji transakcji będzie nadal występować po wszystkich kolejnych poleceń, które są w trybie autozatwierdzania (ustawienie domyślne programu SQL Server). Może to dawać nieoczekiwane wyniki, takie jak stopień izolacji POWTARZALNEGO odczytu, przechowywanie i blokowanie użytkownikom dostępu do wiersza. Aby przywrócić domyślny (READ COMMITTED) poziom izolacji, należy wykonać [!INCLUDE[tsql](~/includes/tsql-md.md)] zestawu transakcji izolacji poziom READ COMMITTED instrukcji lub wywołanie <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> a następnie natychmiast przez <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>. Aby uzyskać więcej informacji na temat programu SQL Server poziomy izolacji, zobacz [poziomy izolacji transakcji](/sql/t-sql/language-elements/transaction-isolation-levels).
  
 Aby uzyskać więcej informacji na temat transakcji programu SQL Server, zobacz [transakcji (Transact-SQL)](/sql/t-sql/language-elements/transactions-transact-sql).
  
> [!CAUTION]
>  Jeśli zapytanie zwraca dużą ilość danych i wywołania `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> jest generowany, ponieważ program SQL Server nie zezwala równoległych transakcji, korzystając z usług MARS. Aby uniknąć tego problemu, zawsze skojarzyć transakcji za pomocą polecenia i/lub połączenie przed dowolnego czytelnicy są otwarte.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>. Ilustruje też sposób używania <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Równoległych transakcji nie są dozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS).</exception>
        <exception cref="T:System.InvalidOperationException">Równoległych transakcji nie są obsługiwane.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">Nazwa bazy danych zamiast bieżącej bazy danych.</param>
        <summary>Zmienia bieżącą bazę danych otwórz <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość podana w `database` parametr musi być prawidłową nazwę bazy danych. `database` Parametr nie może zawierać wartości null, ciągiem pustym ani ciągiem zawierającym tylko puste znaków.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nazwa bazy danych jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">Połączenie nie jest otwarty.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Nie można zmienić bazy danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zmienia hasło programu SQL Server.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * string -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia, który zawiera wystarczająco dużo informacji, aby połączyć się z serwerem, który ma. Parametry połączenia musi zawierać identyfikator użytkownika i bieżące hasło.</param>
        <param name="newPassword">Aby ustawić nowe hasło. To hasło musi spełniać wszystkie zasady zabezpieczeń haseł na serwerze, w tym minimalnej długości i wymagania dotyczące określonych znaków i tak dalej.</param>
        <summary>Zmiany w ciąg połączenia, aby nowe podany hasło oznaczone hasło programu SQL Server dla użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas korzystania z programu SQL Server w systemie Windows Server deweloperzy mogą korzystać z funkcji, która umożliwia aplikacji klienckiej, podać bieżący i nowe hasło, aby zmienić istniejącego hasła. Aplikacje można wdrażać funkcje, takie jak monitowania użytkownika o nowe hasło podczas początkowego logowania, jeśli poprzednie utracił ważność i można ukończyć tej operacji bez interwencji administratora.  
  
 <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> Metoda zmienia hasło programu SQL Server dla użytkownika wskazanego w podanym `connectionString` parametru, aby wartość podana w `newPassword` parametru. Jeśli parametry połączenia zawiera opcję dla zintegrowanych zabezpieczeń (oznacza to, że "zabezpieczenia zintegrowane = True" lub równoważny), zgłaszany jest wyjątek.  
  
 Aby określić, że hasło wygasło, wywołanie <xref:System.Data.SqlClient.SqlConnection.Open%2A> wywołuje metodę <xref:System.Data.SqlClient.SqlException>. W celu wskazania, że należy zresetować hasło, które są zawarte w ciągu połączenia, <xref:System.Data.SqlClient.SqlException.Number%2A> właściwość, dla wyjątku zawiera wartość stanu 18487 lub 18488. Pierwsza wartość (18487) wskazuje, że hasło wygasło i drugi (18488) wskazuje, że przed zalogowaniem się należy resetowania hasła.  
  
 Ta metoda otwiera połączenie z serwerem, żądań zmiany hasła i zamyka połączenie zaraz po jego ukończeniu. To połączenie nie jest pobierana z ani zwrócone do puli połączeń programu SQL Server.  
  
   
  
## Examples  
 Poniżej przedstawiono prosty przykład zmiana haseł:  
  
```  
class Program {  
   static void Main(string[] args) {  
      System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password");  
   }  
}  
  
```  
  
```  
Module Module1  
    Sub Main()  
System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password")  
    End Sub  
End Module  
  
```  
  
 Następująca aplikacja konsoli Pokazuje zagadnień związanych z zmiana hasła użytkownika, ponieważ bieżące hasło wygasło.  
  
 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Parametry połączenia zawiera opcję Użyj zintegrowanych zabezpieczeń.  
  
Lub 
<paramref name="newPassword" /> Więcej niż 128 znaków.</exception>
        <exception cref="T:System.ArgumentNullException">Albo <paramref name="connectionString" /> lub <paramref name="newPassword" /> parametr ma wartość null.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Parametry połączenia (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newPassword) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newPassword As SecureString)" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newPassword)" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" />
        <Parameter Name="newPassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia, który zawiera wystarczających informacji do nawiązania połączenia z serwerem. Parametry połączenia nie należy używać następujące słowa kluczowe parametrów połączenia: <see langword="Integrated Security = true" />, <see langword="UserId" />, lub <see langword="Password" />; lub <see langword="ContextConnection = true" />.</param>
        <param name="credential">Element <see cref="T:System.Data.SqlClient.SqlCredential" /> obiektu.</param>
        <param name="newPassword">To be added.</param>
        <param name="newSecurePassword">To be added.</param>
        <summary>Zmienia hasło programu SQL Server dla użytkownika czcionką <see cref="T:System.Data.SqlClient.SqlCredential" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">1.  Parametry połączenia zawierają dowolną kombinację <see langword="UserId" />, <see langword="Password" />, lub <see langword="Integrated Security=true" />.  
  
2.  Parametry połączenia zawierają <see langword="Context Connection=true" />.  
  
3.  <paramref name="newSecurePassword" /> jest większe niż 128 znaków.  
  
4.  <paramref name="newSecurePassword" /> to nie tylko do odczytu.  
  
5.  <paramref name="newSecurePassword" /> jest ciągiem pustym.</exception>
        <exception cref="T:System.ArgumentNullException">Jeden z parametrów (<paramref name="connectionString" />, <paramref name="credential" />, lub <paramref name="newSecurePassword" />) ma wartość null.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opróżnia puli połączeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A> Resetuje lub opróżnia puli połączeń. W przypadku połączeń używanych w momencie zgłoszenia wywołania są odpowiednio oznaczone i zostaną odrzucone (a nie są zwracane do puli) po <xref:System.Data.SqlClient.SqlConnection.Close%2A> nosi nazwę na nich.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Połączenie z serwerem SQL buforowanie (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.SqlClient.SqlConnection -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><see cref="T:System.Data.SqlClient.SqlConnection" /> Do wyczyszczenia z puli.</param>
        <summary>Opróżnia puli połączeń skojarzonych z określonego połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearPool%2A> Czyści puli połączeń, który jest skojarzony z `connection`. Jeśli dodatkowe połączenia skojarzone z `connection` jest używana w momencie wywołania, są odpowiednio oznaczone i zostaną odrzucone (a nie są zwracane do puli), gdy <xref:System.Data.SqlClient.SqlConnection.Close%2A> nosi nazwę na nich.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Połączenie z serwerem SQL buforowanie (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikator połączenia najnowszej próby połączenia, niezależnie od tego, czy próba zakończonych powodzeniem lub niepowodzeniem.</summary>
        <value>Próba połączenia identyfikator ostatniego połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A> działa niezależnie od tego, która wersja serwera możesz nawiązać połączenie, ale dzienniki zdarzeń rozszerzonych i zapis na błędy związane z łącznością pierścień buforu nie będą znajdować się w [!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)] i starszych wersji.  
  
 Identyfikator połączenia, który można znaleźć w dzienniku zdarzeń rozszerzonych, aby zobaczyć, jeśli błąd został na serwerze po włączeniu zdarzeń rozszerzonych do rejestrowania identyfikator połączenia. Możesz również znaleźć identyfikator połączenia, w buforze pierścień połączenia ([rozwiązywania problemów z łącznością w programie SQL Server 2008 buforem pierścienia łączności](https://go.microsoft.com/fwlink/?LinkId=207752)) w przypadku niektórych błędów połączenia. Jeśli identyfikator połączenia, który nie znajduje się w buforze pierścień połączenia, można założyć, błąd sieci.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka połączenie z bazą danych. Jest to preferowana metoda zamyka wszystkie otwarte połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Close%2A> Metoda wycofuje wszystkie oczekujące transakcje. Go następnie zwalnia połączenia z puli połączeń lub zamyka połączenia, jeśli buforowanie połączeń jest wyłączona.  
  
> [!NOTE]
>  Oczekujące transakcje rozpoczęcie pracy z usługą [!INCLUDE[tsql](~/includes/tsql-md.md)] lub <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> są automatycznie wycofana przy zresetowania połączenia, jeśli buforowanie połączeń jest włączona. Jeśli buforowanie połączeń jest wyłączona, transakcja zostanie wycofana po `SqlConnection.Close` jest wywoływana. Transakcje uruchomione za pośrednictwem <xref:System.Transactions> są kontrolowane za pośrednictwem `System.Transactions` infrastruktury i czy nie ma wpływu `SqlConnection.Close`.  
  
 Aplikacja może wywołać <xref:System.Data.SqlClient.SqlConnection.Close%2A> więcej niż jeden raz. Żaden wyjątek jest generowany.  
  
 Jeśli <xref:System.Data.SqlClient.SqlConnection> zbliża się poza zakres, nie będzie ono zamknięte. W związku z tym, jawnie należy zamknąć połączenie, wywołując `Close` lub `Dispose`. `Close` i `Dispose` są funkcjonalnie równoważne. Jeśli pula połączeń wartość `Pooling` ustawiono `true` lub `yes`, połączenie znajdujące się poniżej jest zwracany z powrotem do puli połączeń. Z drugiej strony Jeśli `Pooling` ustawiono `false` lub `no`, połączenie z serwerem znajdujące się poniżej zostało zamknięte.  
  
> [!NOTE]
>  Zdarzenia logowania i wylogowania nie zostaną wywołane na serwerze gdy połączenie zostanie pobrana z lub zwrócone do puli połączeń, ponieważ połączenie nie jest w rzeczywistości zamykane, gdy zostaje zwrócony do puli połączeń. Aby uzyskać więcej informacji, zobacz [programu SQL Server połączenia puli (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
> [!CAUTION]
>  Nie wywołuj `Close` lub `Dispose` na połączenie, elementu DataReader lub innych obiekt zarządzany w `Finalize` metody klasy. W finalizator powinien tylko wersji niezarządzane zasoby, które należą bezpośrednio do swojej klasy. Jeśli klasa nie ma żadnych niezarządzanych zasobów, nie dołączaj `Finalize` metody w swojej definicji klasy. Aby uzyskać więcej informacji, zobacz [wyrzucania elementów bezużytecznych](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection>, zostanie on otwarty, są wyświetlane niektóre z jego właściwości. Połączenie zostaje automatycznie zamknięty na końcu `using` bloku.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd połączenia na poziomie, który wystąpił podczas otwierania połączenia.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Połączenie z serwerem SQL buforowanie (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionKeyCacheTtl : TimeSpan with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas wygaśnięcia szyfrowania kolumny wpisach kluczy w kolumnie szyfrowania klucza pamięci podręcznej <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> funkcji. Wartość domyślna to 2 godziny. wartość 0 oznacza brak buforowania w ogóle.</summary>
        <value>Interwał czasu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionQueryMetadataCacheEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy włączone jest buforowanie metadanych zapytania (true) czy nie (false) w zapytaniach parametrycznych działających w odniesieniu do <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see> włączone baz danych. Wartość domyślna to true.</summary>
        <value>Zwraca wartość PRAWDA, jeśli włączone jest buforowanie metadanych zapytań; w przeciwnym razie wartość false. domyślną jest TRUE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W zapytaniach parametrycznych SqlClient sprawia, że obie strony do programu SQL Server dla parametru metadanych, aby zobaczyć, których parametr potrzebny do szyfrowania i w jaki sposób (które kluczy i algorytmy powinny być używane). Jeśli aplikacja wymaga tego samego zapytania wiele razy, dodatkowe komunikacja dwukierunkowa jest skierowane do serwera za każdym razem spadku wydajności aplikacji.  
  
 Za pomocą **ColumnEncryptionQueryMetadataCacheEnabled** wartość true, jeśli tego samego zapytania jest wywoływana wiele razy, na serwerze w obie strony będą tylko raz. Pamięć podręczna zawiera niemożliwą do skonfigurowania parametr rozmiaru maksymalna liczba, która jest równa 2000 zapytania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionTrustedMasterKeyPaths : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Umożliwia określenie listy zaufanych ścieżek kluczy dla serwera bazy danych. Jeśli podczas przetwarzania zapytania aplikacji sterownik odbiera ścieżki klucza, który nie znajduje się na liście, zapytanie nie powiedzie się. Ta właściwość zapewnia dodatkową ochronę przed atakami, obejmujące ze złamanymi zabezpieczeniami SQL Server, zapewniając fałszywych ścieżki klucza, mogą spowodować wyciek poświadczeń magazynu kluczy.</summary>
        <value>Lista ścieżek zaufany klucz główny szyfrowania kolumny.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany do otwierania bazy danych programu SQL Server.</summary>
        <value>Parametry połączenia, Nazwa źródłowej bazy danych i inne parametry wymagane do nawiązania początkowego połączenia. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Jest podobny do parametrów połączenia usługi OLE DB, ale nie jest taka sama. W odróżnieniu od OLE DB i ADO parametry połączenia, który jest zwracany jest taka sama jak zestaw użytkowników <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>, minus informacji o zabezpieczeniach, jeśli ustawiono wartość Persist Security Info `false` (ustawienie domyślne). .NET Framework Data Provider for SQL Server mogą lub nie zwracają hasło w parametrach połączenia, chyba że równa Persist Security Info `true`.  

 Możesz użyć <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwość, aby połączyć się z bazą danych. Poniższy przykład ilustruje typowe parametry połączenia.  
  
```  
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"  
```  
  
 Użyj nowego <xref:System.Data.SqlClient.SqlConnectionStringBuilder> do utworzenia prawidłowego połączenia ciągów w czasie wykonywania. Aby uzyskać więcej informacji, zobacz [Konstruktorzy parametrów połączeń](~/docs/framework/data/adonet/connection-string-builders.md).  
  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> Właściwość można ustawić tylko wtedy, gdy połączenie jest zamknięte. Wiele wartości parametrów połączenia ma odpowiadające właściwości tylko do odczytu. Po ustawieniu parametrów połączenia tych właściwości są aktualizowane, z wyjątkiem sytuacji, gdy zostanie wykryty błąd. W tym przypadku żadnej właściwości są aktualizowane. <xref:System.Data.SqlClient.SqlConnection> właściwości zwracać tylko te ustawienia, które są zawarte w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
 Aby połączyć komputer lokalny, określ "(local)" dla serwera. Jeśli nie określono nazwy serwera, połączenie będzie próbował domyślnego wystąpienia, na komputerze lokalnym.  
  
 Resetowanie <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> zamkniętego połączenia spowoduje zresetowanie wszystkich wartości parametrów połączeń (i powiązane właściwości) w tym hasła. Na przykład jeśli ustawisz parametry połączenia, który zawiera "bazy danych = AdventureWorks", a następnie zresetować parametry połączenia do "źródła danych = myserver; zabezpieczenia zintegrowane = true", <xref:System.Data.SqlClient.SqlConnection.Database%2A> właściwość nie jest ustawiona na "AdventureWorks".  
  
 Ciąg połączenia jest analizowany natychmiast po ich ustawiania. Jeśli wystąpią błędy w składni, podczas analizowania, wyjątek czasu wykonywania, takie jak <xref:System.ArgumentException>, jest generowany. Inne błędy, można znaleźć tylko wtedy, gdy podejmowana jest próba otwarcia połączenia.  
  
 Podstawowy format parametrów połączenia zawiera szereg — słowo kluczowe/pary wartości, oddziel je średnikami. Znak równości (=) łączy każde słowo kluczowe i jego wartość. Aby uwzględnić wartości, które zawiera średnik, znak pojedynczego cudzysłowu ani znaku podwójnego cudzysłowu, wartości muszą być ujęte w podwójny cudzysłów. Jeśli wartość zawiera zarówno średnikami, jak i znaku podwójnego cudzysłowu, wartość mogą być ujęte w znaki pojedynczego cudzysłowu. Pojedynczy cudzysłów jest również przydatne, jeśli wartość zaczyna się od znaku podwójnego cudzysłowu. Z drugiej strony podwójny cudzysłów służy Jeśli wartość zaczyna się od pojedynczego cudzysłowu. Jeśli wartość zawiera znaki pojedynczego cudzysłowu i podwójnego cudzysłowu, znaku cudzysłowu, używane, aby ująć wartość musi być podwójny za każdym razem, gdy wystąpi w wartość.  
  
 Aby dołączyć spacji ani na końcu wartości ciągu, wartości muszą być ujęte w znaki cudzysłowu pojedynczego lub podwójnego cudzysłowu. Spacji wiodących i końcowych wokół integer, Boolean lub wartości wyliczenia są ignorowane, nawet jeśli ujęta w znaki cudzysłowu. Jednak spacje wewnątrz ciągu literal — słowo kluczowe lub wartość są zachowywane. Pojedyncze lub podwójne znaki cudzysłowu mogą być używane w ciągu połączenia bez korzystania z ogranicznikami (na przykład źródło danych = my'Server lub źródło danych = my "Server), chyba że znak cudzysłowu jest pierwszy lub ostatni znak w wartości.  
  
 Słowa kluczowe nie są z uwzględnieniem wielkości liter.  
  
 W poniższej tabeli wymieniono prawidłowe nazwy wartości — słowo kluczowe w ramach <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.  
  
|Słowo kluczowe|Domyślny|Opis|  
|-------------|-------------|-----------------|  
|addr|Brak|Synonim **źródła danych**.|  
|Adres|Brak|Synonim **źródła danych**.|  
|Aplikacja|Brak|Synonim **Nazwa aplikacji**.|  
|Nazwa aplikacji|Brak|Nazwa aplikacji lub "SQLClient dostawcy danych .NET" Jeśli nie podano żadnych nazwy aplikacji.<br /><br /> Nazwa aplikacji może być 128 znaków lub mniej.|  
|`ApplicationIntent`|`ReadWrite`|Deklaruje typ obciążeń aplikacji, podczas nawiązywania połączenia z serwerem. Możliwe wartości to `ReadOnly` i `ReadWrite`. Na przykład:<br /><br /> `ApplicationIntent=ReadOnly`<br /><br /> Aby uzyskać więcej informacji na temat Obsługa SqlClient dla zawsze włączonych grup dostępności, zobacz [Obsługa SqlClient dla wysokiej dostępności, odzyskiwania po awarii](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Przetwarzanie asynchroniczne<br /><br /> —lub—<br /><br /> Async|wartość "false"|Gdy `true`, umożliwia obsługę operacji asynchronicznej. Rozpoznawane są wartości `true`, `false`, `yes`, i `no`.<br /><br /> Ta właściwość jest ignorowana, począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)]. Aby uzyskać więcej informacji na temat Obsługa SqlClient dla programowania asynchronicznego, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).|  
|AttachDBFilename<br /><br /> —lub—<br /><br /> Właściwości rozszerzone<br /><br /> —lub—<br /><br /> Początkowa nazwa pliku|Brak|Nazwa pliku podstawowej bazy danych, w tym pełną nazwę ścieżki można dołączyć bazy danych. AttachDBFilename jest obsługiwana tylko dla danych podstawowych plików z rozszerzeniem .mdf.<br /><br /> Jeśli wartość klucza AttachDBFileName określono w parametrach połączenia, baza danych jest dołączona i staje się domyślna baza danych dla połączenia.<br /><br /> Jeśli ten klucz nie jest określona i została wcześniej dołączyć bazy danych, bazy danych będzie nie być ponownie dołączyć. Wcześniej dołączonej bazie danych będzie służyć jako domyślna baza danych dla połączenia.<br /><br /> Jeśli ten klucz jest określona, wraz z kluczem AttachDBFileName, wartość tego klucza będzie służyć jako alias. Jednakże jeśli nazwa jest już używana w innej bazie danych dołączonych, połączenie zakończy się niepowodzeniem.<br /><br /> Ścieżka może być bezwzględny lub względny przy użyciu parametrów podstawiania DataDirectory. Jeśli DataDirectory jest używany, plik bazy danych musi istnieć w podkatalogu katalogu wskazywany przez ciąg podstawienia. **Uwaga:**  Serwer zdalny, HTTP i UNC nazwy ścieżek nie są obsługiwane. <br /><br /> Nazwa bazy danych musi być określona za pomocą słowa kluczowego "database" (lub jeden z jego aliasy) tak jak poniżej:<br /><br /> <code>"AttachDbFileName=&#124;DataDirectory&#124;\data\YourDB.mdf;integrated security=true;database=YourDatabase"</code><br /><br /> Błąd zostanie wygenerowany, jeśli plik dziennika istnieje w tym samym katalogu co plik danych, a słowa kluczowego "database" jest używany podczas dołączania pliku danych głównych. W takim przypadku usuń plik dziennika. Po dołączeniu bazy danych nowy plik dziennika zostanie automatycznie wygenerowany na podstawie ścieżki fizycznej.|  
|Uwierzytelnianie|Brak|Metody uwierzytelniania użytej podczas [nawiązywania połączenia z SQL bazy danych przez przy użyciu usługi Azure Active Directory Authentication](https://azure.microsoft.com/documentation/articles/sql-database-aad-authentication/#7-connect-to-your-database-by-using-azure-active-directory-identities).<br /><br /> Prawidłowe wartości to:<br /><br /> Hasła usługi Active Directory zintegrowane, Active Directory hasło Sql.|  
|Ustawienia szyfrowania kolumny|Brak|Włącza lub wyłącza [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine?view=sql-server-2017) funkcjonalność dla połączenia.|  
|Limit czasu połączenia<br /><br /> —lub—<br /><br /> Limit czasu połączenia<br /><br /> —lub—<br /><br /> limit czasu|15|Czas (w sekundach) oczekiwania na połączenie z serwerem przed zakończeniem próby i wygenerowaniem błędu.<br /><br /> Prawidłowe wartości są większe niż lub równa 0 i mniejsza niż 2147483647.<br /><br /> Po otwarciu połączenia z usługą Azure SQL Database, należy ustawić limit czasu połączenia do 30 sekund.|  
|Okres istnienia połączenia<br /><br /> —lub—<br /><br /> Limit czasu równoważenia obciążenia|0|Połączenia są zwracane do puli, jej godzina utworzenia jest porównywany z bieżącym czasem, gdy połączenie jest niszczony, jeśli ten przedział czasu (w sekundach) przekracza wartość określoną przez `Connection Lifetime`. Jest to przydatne w konfiguracji klastra, aby wymusić Równoważenie obciążenia między używania serwera i serwera, po prostu przełączyć do trybu online.<br /><br /> Wartość zero (0) powoduje, że puli połączeń mieć maksymalny limit czasu połączenia.|  
|ConnectRetryCount|1|Formanty liczbę ponownego łączenia prób po identyfikuje klienta wystąpił błąd bezczynnego połączenia. Prawidłowe wartości to 0 do 255. Domyślnym ustawieniem jest 1. 0 oznacza, że nie należy próbować ponownie (Wyłącz elastyczność połączenia).<br /><br /> Aby uzyskać dodatkowe informacje dotyczące odporności bezczynnego połączenia, zobacz [artykułu technicznego — bezczynne elastyczność połączenia](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|ConnectRetryInterval|10|Określa czas między kolejnymi próbami ponowienia połączenia (ConnectRetryCount). Prawidłowe wartości to 1 do 60 sekund (domyślny = 10), są stosowane po pierwsza próba ponownego połączenia. Po wykryciu przerwane połączenia klienta natychmiast próbuje ponownie połączyć; to jest pierwsza próba ponownego połączenia i tylko wtedy, gdy ConnectRetryCount jest większa niż 0. Jeśli pierwsza próba ponownego połączenia nie powiedzie się i ConnectRetryCount jest większa niż 1, klient odczekuje ConnectRetryInterval próby prób ponownego połączenia z drugim i kolejnych.<br /><br /> Aby uzyskać dodatkowe informacje dotyczące odporności bezczynnego połączenia, zobacz [artykułu technicznego — bezczynne elastyczność połączenia](https://go.microsoft.com/fwlink/?LinkId=393996).|  
|Połączenie kontekstu|wartość "false"|`true` Jeśli należy w trakcie połączenia programu SQL Server.|  
|Bieżący język<br /><br /> —lub—<br /><br /> Język|Brak|Określa język używany dla wiadomości ostrzeżenia lub błędu serwera bazy danych.<br /><br /> Nazwa języka mogą mieć 128 znaków lub mniej.|  
|Źródło danych<br /><br /> —lub—<br /><br /> Serwer<br /><br /> —lub—<br /><br /> Adres<br /><br /> —lub—<br /><br /> addr<br /><br /> —lub—<br /><br /> Adres sieciowy|Brak|Nazwa lub adres sieciowy wystąpienia programu SQL Server, którym chcesz się połączyć. Numer portu, można określić po nazwie serwera:<br /><br /> `server=tcp:servername, portnumber`<br /><br /> Podczas określania wystąpienia lokalnego, należy zawsze używać (lokalny). Aby wymusić protokół, Dodaj jeden z następujących prefiksów:<br /><br /> `np:(local),  tcp:(local), lpc:(local)`<br /><br /> Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], można też połączyć z bazą danych LocalDB w następujący sposób:<br /><br /> `server=(localdb)\\myInstance`<br /><br /> Aby uzyskać więcej informacji dotyczących programu LocalDB, zobacz [Obsługa SqlClient dla LocalDB](~/docs/framework/data/adonet/sql/sqlclient-support-for-localdb.md).<br /><br /> **Źródło danych** należy użyć w formacie protokołu TCP lub Named Pipes.<br /><br /> TCP format jest następujący:<br /><br /> -tcp:\<nazwa hosta >\\< nazwa wystąpienia\><br />-tcp:\<nazwa hosta >,\<numer portu TCP/IP ><br /><br /> TCP format musi rozpoczynać się od prefiksu "tcp:" i następują wystąpienia bazy danych, określony przez nazwę hosta i nazwę wystąpienia. Ten format nie jest stosowana podczas nawiązywania połączenia z usługą Azure SQL Database. TCP jest automatycznie wybierany do połączenia z bazą danych SQL Azure, gdy nie określono protokołu.<br /><br /> Nazwa hosta musi być określona w jednym z następujących sposobów:<br /><br /> -NetBIOSName<br />-IPv4Address<br />-IPv6Address<br /><br /> Nazwa wystąpienia jest używana do rozpoznawania określonej numer portu TCP/IP, na którym znajduje się wystąpienie bazy danych. Alternatywnie bezpośrednio określania numeru portu TCP/IP jest również dozwolony. Jeśli zarówno nazwa wystąpienia oraz numer portu nie są obecne, używana jest domyślnym wystąpieniem bazy danych.<br /><br /> Nazwane potoki format jest następujący:<br /><br /> — potoki:\\\\< nazwa hosta\>\pipe\\< Nazwa potoku\><br /><br /> Format potoków nazwanych musi rozpoczynać się od prefiksu "np:" i następuje nazwa nazwanego potoku.<br /><br /> Nazwa hosta musi być określona w jednym z następujących sposobów:<br /><br /> -NetBIOSName<br />-IPv4Address<br />-IPv6Address<br /><br /> Nazwa potoku jest używana do identyfikowania wystąpienia bazy danych, do którego zostanie podłączony aplikacji .NET Framework.<br /><br /> Jeśli wartość **sieci** określono klucza prefiksy "tcp:" i "np:" nie powinien być określony. **Uwaga:**  Można wymusić użycie protokołu TCP, zamiast pamięci współużytkowanej, albo przez dodanie przedrostka **tcp:** na nazwę serwera w parametrach połączenia lub za pomocą **localhost**.|  
|szyfrowanie|wartość "false"|Gdy `true`, program SQL Server używa szyfrowania SSL dla wszystkich danych przesyłanych między klientem i serwerem, jeśli serwer ma zainstalowany certyfikat. Rozpoznawane są wartości `true`, `false`, `yes`, i `no`. Aby uzyskać więcej informacji, zobacz [składnia ciągu połączenia](~/docs/framework/data/adonet/connection-string-syntax.md).<br /><br /> Począwszy od [!INCLUDE[net_v45](~/includes/net-v45-md.md)], gdy `TrustServerCertificate` ma wartość FAŁSZ i `Encrypt` ma wartość true, nazwę serwera (lub adres IP) w certyfikacie SSL serwera SQL musi dokładnie odpowiadać serwera nazwę (lub adres IP) określone w parametrach połączenia. W przeciwnym razie próba połączenia zakończy się niepowodzeniem. Informacje na temat obsługi certyfikatów, którego podmiot zaczyna się od symbolu wieloznacznego (*), zobacz [zaakceptowane używany przez certyfikatów serwera do uwierzytelniania serwera symboli wieloznacznych](https://support.microsoft.com/kb/258858).|  
|Enlist|'true'|`true` Wskazuje, że pulę połączeń programu SQL Server automatycznie rejestruje połączenia w bieżącym kontekście transakcji wątku tworzenia.|  
|Partnerski trybu failover|Brak|Nazwa serwera partnerskiego trybu failover, w której jest skonfigurowana w procesie dublowania bazy danych.<br /><br /> Jeśli wartość tego klucza jest "", następnie **Initial Catalog** muszą być obecne, a jego wartość nie może być "".<br /><br /> Nazwa serwera może być 128 znaków lub mniej.<br /><br /> Jeśli określisz partnerski trybu failover, ale serwer partnerski trybu failover nie jest skonfigurowany dla funkcji dublowania baz danych serwera podstawowego (określonym za pomocą słowa kluczowego serwera) nie jest dostępne, a następnie połączenie zakończy się niepowodzeniem.<br /><br /> Jeśli określisz partnerski trybu failover i serwer podstawowy nie jest skonfigurowany dla funkcji dublowania baz danych, połączenie z serwerem podstawowym, (określonym za pomocą słowa kluczowego serwera) zakończy się pomyślnie, jeśli serwer główny jest niedostępny.|  
|Katalog początkowy<br /><br /> —lub—<br /><br /> Baza danych|Brak|Nazwa bazy danych.<br /><br /> Nazwa bazy danych może być 128 znaków lub mniej.|  
|Zabezpieczenia zintegrowane<br /><br /> —lub—<br /><br /> Trusted_Connection|wartość "false"|Gdy `false`, identyfikator użytkownika i hasło, które są określone w połączeniu. Gdy `true`, bieżące poświadczenia konta Windows są używane do uwierzytelniania.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, `no`, i `sspi` (zdecydowanie zalecane), który jest odpowiednikiem `true`.<br /><br /> Jeśli identyfikator użytkownika i hasło są określone i zintegrowane zabezpieczeń jest ustawiona na wartość true, identyfikator użytkownika i hasło zostaną zignorowane i zintegrowanych zabezpieczeń, który będzie używany.<br /><br /> <xref:System.Data.SqlClient.SqlCredential> jest Bezpieczniejszym sposobem, aby określić poświadczenia dla połączenia, który używa uwierzytelniania programu SQL Server (`Integrated Security=false`).|  
|Maksymalny rozmiar puli|100|Maksymalna liczba połączeń, które są dozwolone w puli.<br /><br /> Prawidłowe wartości są większe niż lub równa 1. Wartości, które są mniej niż **minimalny rozmiar puli** wygenerowanie błędu.|  
|Minimalny rozmiar puli|0|Minimalna liczba połączeń, które są dozwolone w puli.<br /><br /> Prawidłowe wartości są większe niż lub równa 0. Zero (0) w tym polu oznacza, że minimalna połączeń początkowo są otwarte.<br /><br /> Wartości, które są większe niż **maksymalny rozmiar puli** wygenerowanie błędu.|  
|MultipleActiveResultSets|wartość "false"|Gdy `true`, aplikacja zapewnia wiele aktywnych zestawów wyników (MARS). Gdy `false`, aplikacja musi przetworzyć lub anulować wszystkich zestawów wyników z jednej partii, zanim może on wykonać inne usługi batch dla tego połączenia.<br /><br /> Rozpoznawane są wartości `true` i `false`.<br /><br /> Aby uzyskać więcej informacji, zobacz [wielu aktywnych zestawów wyników (MARS)](~/docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md).|  
|`MultiSubnetFailover`|FAŁSZ|Zawsze określać `multiSubnetFailover=True` podczas nawiązywania połączenia z grupy dostępności odbiornik programu SQL Server 2012 (lub nowszym) grupy dostępności lub SQL Server 2012 (lub nowszy) wystąpienia klastra trybu Failover. `multiSubnetFailover=True` Konfiguruje SqlClient, aby zapewnić szybsze wykrywanie i połączenie z serwerem () aktywna. Możliwe wartości to `Yes` i `No`, `True` i `False` lub `1` i `0`. Na przykład:<br /><br /> `MultiSubnetFailover=True`<br /><br /> Wartość domyślna to `False`. Aby uzyskać więcej informacji na temat obsługi firmy SqlClient zawsze na ji zobacz [Obsługa SqlClient dla wysokiej dostępności, odzyskiwania po awarii](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md).|  
|Biblioteka sieciowa<br /><br /> —lub—<br /><br /> Sieć<br /><br /> —lub—<br /><br /> NET|Brak|Biblioteka sieciowa używana do nawiązywania połączenia z wystąpieniem programu SQL Server. Obsługiwane wartości to:<br /><br /> dbnmpntw (nazwane potoki)<br /><br /> dbmsrpcn (wieloprotokołowym, Windows RPC)<br /><br /> Dbmsadsn (Apple Talk)<br /><br /> dbmsgnet (VIA)<br /><br /> dbmslpcn (pamięci współużytkowanej)<br /><br /> dbmsspxn (IPX/SPX)<br /><br /> Dbmssocn (TCP/IP)<br /><br /> Dbmsvinn (Banyan Vines)<br /><br /> Odpowiednie sieci DLL musi być zainstalowany w systemie, do której się łączysz. Jeśli nie określisz sieci i używać lokalnego serwera (na przykład "." lub "(local)"), Pamięć współużytkowana jest używany. W tym przykładzie biblioteki sieciowej jest Win32 Winsock TCP/IP (dbmssocn) i 1433 to port używany.<br /><br /> `Network Library=dbmssocn;Data Source=000.000.000.000,1433;`|  
|Rozmiar pakietu|8000|Rozmiar w bajtach pakietów sieciowych używanych do komunikowania się z wystąpieniem programu SQL Server.<br /><br /> Rozmiar pakietu może być większa lub równa 512 i mniejsza niż lub równa 32768.|  
|Hasło<br /><br /> —lub—<br /><br /> PWD|Brak|Hasło dla konta programu SQL Server, logowanie. Nie jest to zalecane. Aby zachować wysoki poziom zabezpieczeń, zdecydowanie zalecamy użycie `Integrated Security` lub `Trusted_Connection` słowa kluczowego zamiast tego. <xref:System.Data.SqlClient.SqlCredential> jest Bezpieczniejszym sposobem, aby określić poświadczenia dla połączenia, który używa uwierzytelniania programu SQL Server.<br /><br /> Hasło musi mieć 128 znaków lub mniej.|  
|Utrwal informacje zabezpieczające<br /><br /> —lub—<br /><br /> PersistSecurityInfo|wartość "false"|Po ustawieniu `false` lub `no` (zdecydowanie zalecane), informacje związane z zabezpieczeniami, takich jak hasła, nie jest zwracana jako część połączenia, jeśli połączenie jest otwarte lub kiedykolwiek było w stanie otwartym. Resetowanie parametrów połączenia powoduje zresetowanie wszystkich wartości parametrów połączeń, w tym hasła. Rozpoznawane są wartości `true`, `false`, `yes`, i `no`.|  
|PoolBlockingPeriod|Auto|Ustawia zachowania okresu blokowania dla puli połączeń. Zobacz <xref:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod> właściwości, aby uzyskać szczegółowe informacje.|  
|Buforowanie|'true'|Jeśli wartość tego klucza jest równa true, wszystkich nowo utworzonych połączenie zostanie dodane do puli po zamknięciu przez aplikację. W następnym próba otwarcia tego samego połączenia to połączenie będzie rysowany z puli.<br /><br /> Połączenia są traktowane jako takie same, jeśli mają te same parametry połączenia. Różne połączenia mają inne połączenie ciągi.<br /><br /> Wartość tego klucza, może być "prawda", "false", "yes" lub "no".|  
|Replikacji|wartość "false"|`true` Jeśli replikacja jest obsługiwana przy użyciu połączenia.|  
|Transakcja powiązania|Niejawne Unbind|Kontroluje skojarzenia połączenia za pomocą zobowiązaniom `System.Transactions` transakcji.<br /><br /> Możliwe wartości to:<br /><br /> `Transaction Binding=Implicit Unbind;`<br /><br /> `Transaction Binding=Explicit Unbind;`<br /><br /> Niejawne Unbind powoduje, że połączenia można odłączyć od transakcji, po jego zakończeniu. Po odłączania, dodatkowych żądań połączenia są wykonywane w trybie autozatwierdzania. `System.Transactions.Transaction.Current` Właściwość nie jest zaznaczona, podczas wykonywania żądania podczas transakcji jest aktywny. Po zakończeniu transakcji, dodatkowe żądania są wykonywane w trybie autozatwierdzania.<br /><br /> Jeśli transakcja zakończy się system (w zakresie przy użyciu bloku) przed zakończeniem ostatnie polecenie, będą zgłaszać <xref:System.InvalidOperationException>.<br /><br /> Jawne przyczyny Usuń powiązanie, połączenie pozostaje dołączony do transakcji, dopóki połączenie jest zamknięte lub jawnie `SqlConnection.TransactionEnlist(null)` jest wywoływana. Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], usunąć powiązanie niejawnych zmian jawnego usunięcia powiązania przestarzały. `InvalidOperationException` Jest generowany, jeśli `Transaction.Current` nie jest zobowiązaniom transakcji lub jeśli zobowiązaniom transakcji nie jest aktywny.|  
|TransparentNetworkIPResolution|Zobacz opis.|Jeśli wartość tego klucza jest równa `true`, aplikacja jest wymagany do pobrania wszystkich adresów IP dla określonego wpisu DNS i spróbuj połączyć się z pierwszym elementem na liście. Jeśli połączenie nie zostanie nawiązane w ciągu sekund 0,5, aplikacja podejmie próbę połączenia dla wszystkich innych równolegle. Podczas pierwszej odpowiedzi, połączenie z adresem IP respondentów nawiązywane aplikacji.<br /><br /> Jeśli `MultiSubnetFailover` jest ustawiona na `true`, `TransparentNetworkIPResolution` jest ignorowana.<br /><br /> Jeśli `Failover Partner` ustawiono klucza `TransparentNetworkIPResolution` jest ignorowana.<br /><br /> Wartość tego klucza musi być `true`, `false`, `yes`, lub `no`.<br /><br /> Wartość `yes` jest traktowane takie same jak wartość `true`.<br /><br /> Wartość `no` jest traktowane takie same jak wartość `false`.<br /><br /> Wartości domyślne są następujące:<br /><br /> <ul><li>`false` Kiedy:<br /><br /> <ul><li>Łączenie z usługą Azure SQL Database, gdzie źródło danych kończy się na:<br /><br /> <ul><li>.database.chinacloudapi.cn</li><li>.database.usgovcloudapi.net</li><li>.database.cloudapi.de</li><li>.database.windows.net</li></ul></li><li>`Authentication` "Active Directory Password" lub "Zintegrowane usługi Active Directory"</li></ul></li><li>`true` we wszystkich innych przypadkach.</li></ul>|  
|TrustServerCertificate|wartość "false"|Po ustawieniu `true`, protokół SSL jest używany do szyfrowania kanał, gdy pomijanie zalet łańcucha certyfikatów w celu zweryfikowania relacji zaufania. Jeśli ustawiono TrustServerCertificate `true` i ustawiono Szyfruj `false`, kanał nie jest zaszyfrowany. Rozpoznawane są wartości `true`, `false`, `yes`, i `no`. Aby uzyskać więcej informacji, zobacz [składnia ciągu połączenia](~/docs/framework/data/adonet/connection-string-syntax.md).|  
|Wersji systemu|Brak|Wartość ciągu, która wskazuje system typu aplikacja oczekuje. Funkcje dostępne dla aplikacji klienckiej jest zależna od wersji programu SQL Server i poziom zgodności bazy danych. Jawne ustawienie wersji systemu typu, który aplikacja kliencka został napisany dla pozwala uniknąć potencjalnych problemów, które mogłyby spowodować aplikacji rozbić, jeśli jest używana inna wersja programu SQL Server. **Uwaga:**  Wersja systemu typu nie można ustawić dla wspólnego języka środowiska uruchomieniowego (języka wspólnego CLR) kodu wykonywania w trakcie w programie SQL Server. Aby uzyskać więcej informacji, zobacz [integrację środowiska uruchomieniowego języka wspólnego serwera SQL](~/docs/framework/data/adonet/sql/sql-server-common-language-runtime-integration.md). <br /><br /> Możliwe wartości to:<br /><br /> `Type System Version=SQL Server 2012;`<br /><br /> `Type System Version=SQL Server 2008;`<br /><br /> `Type System Version=SQL Server 2005;`<br /><br /> `Type System Version=Latest;`<br /><br /> `Type System Version=SQL Server 2012;` Określa, że aplikacja będzie wymagać wersji 11.0.0.0 Microsoft.SqlServer.Types.dll. Druga `Type System Version` ustawień wymaga wersji 10.0.0.0 Microsoft.SqlServer.Types.dll.<br /><br /> `Latest` jest przestarzała i nie powinna być używana. `Latest` jest odpowiednikiem `Type System Version=SQL Server 2008;`.|  
|Identyfikator użytkownika<br /><br /> —lub—<br /><br /> IDENTYFIKATOR UID<br /><br /> —lub—|Brak|Konto logowania programu SQL Server. Nie jest to zalecane. Aby zachować wysoki poziom zabezpieczeń, zdecydowanie zalecamy użycie `Integrated Security` lub `Trusted_Connection` słowa kluczowe zamiast tego. <xref:System.Data.SqlClient.SqlCredential> jest Bezpieczniejszym sposobem, aby określić poświadczenia dla połączenia, który używa uwierzytelniania programu SQL Server.<br /><br /> Identyfikator użytkownika musi być 128 znaków lub mniej.|  
|Wystąpienia użytkownika|wartość "false"|Wartość, która wskazuje, czy do przekierowania, połączenie z domyślnego wystąpienia programu SQL Server Express do wystąpienia inicjowanych przez środowisko uruchomieniowe działającej na koncie obiektu wywołującego.|  
|Identyfikator stacji roboczej<br /><br /> —lub—<br /><br /> WSID|Nazwa komputera lokalnego|Nazwa stacji roboczej, do łączenia się z serwerem SQL.<br /><br /> Identyfikator musi być 128 znaków lub mniej.|  
  
 Poniższa lista zawiera prawidłowe nazwy dla buforowania wartości w ramach połączeń <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>. Aby uzyskać więcej informacji, zobacz [programu SQL Server połączenia puli (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).  
  
-   Okres istnienia połączenia (lub limit czasu Równoważenie obciążenia)  
  
-   Enlist  
  
-   Maksymalny rozmiar puli  
  
-   Minimalny rozmiar puli  
  
-   Buforowanie  
  
 Ustawiając — słowo kluczowe lub wartości, które wymagają typu wartość logiczna buforowania połączeń, można użyć "yes" zamiast "true" i "no" zamiast "false". Wartości całkowite są reprezentowane jako ciągi.  

> [!NOTE]
>  .NET Framework Data Provider for SQL Server używa własnego protokołu do komunikowania się z programem SQL Server. W związku z tym nie obsługuje użycia nazwa źródła danych ODBC (DSN) podczas nawiązywania połączenia z programem SQL Server, ponieważ nie powoduje dodania warstwę ODBC.  
  
> [!NOTE]
>  Universal data link (UDL) plików nie są obsługiwane dla .NET Framework Data Provider for SQL Server.  
  
> [!CAUTION]
>  W tej wersji aplikacji, należy zachować ostrożność podczas tworzenia parametrów połączenia, w oparciu o dane wejściowe użytkownika (na przykład podczas pobierania informacji o identyfikator i hasło użytkownika z okno dialogowe i dodanie go do parametrów połączenia). Aplikacji należy upewnić się, użytkownik nie można osadzić dodatkowych parametrów połączenia w tych wartości (na przykład wprowadzenie hasła jako "validpassword; database = somedb" w celu podjęcia próby dołączenia do innej bazy danych). Jeśli potrzebujesz do tworzenia parametrów połączenia na podstawie danych wejściowych użytkownika, użyj nowych <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, która sprawdza poprawność parametrów połączenia i pozwala pozbyć się tego problemu. Zobacz [Konstruktorzy parametrów połączeń](~/docs/framework/data/adonet/connection-string-builders.md) Aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i ustawia <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> właściwości przed otwarciem połączenia.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podano nieprawidłowe połączenie argument ciągu lub nie został podany argument ciągu połączenia wymagane.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">Parametry połączenia w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">Połączenie z serwerem SQL buforowanie (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET zarządzanego dostawcy i Centrum deweloperów zestawu danych</related>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Parametry połączenia w ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Połączenie z serwerem SQL buforowanie (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czas oczekiwania podczas próby nawiązania połączenia przed zakończeniem próby i wygenerowaniem błędu.</summary>
        <value>Czas (w sekundach) oczekiwania na połączenie, aby otworzyć. Wartość domyślna wynosi 15 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przekroczenie limitu czasu można ustawić czas oczekiwania połączenia, używając `Connect Timeout` lub `Connection Timeout` słów kluczowych w parametrach połączenia. Wartość 0 oznacza brak limitu. Ponadto należy unikać w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> ponieważ próba połączenia oczekiwania przez czas nieokreślony.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i ustawia `Connection Timeout` 30 sekund w ciągu połączenia. Kod zostanie otwarte połączenie i wyświetla <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> właściwości w oknie konsoli.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podana wartość jest mniejsza niż 0.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Parametry połączenia w ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Połączenie z serwerem SQL buforowanie (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca <see cref="T:System.Data.SqlClient.SqlCommand" /> obiekt skojarzony z <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlCommand" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="sqlConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.SqlClient.SqlCredential" /> obiektu dla tego połączenia.</summary>
        <value><see cref="T:System.Data.SqlClient.SqlCredential" /> Obiektu dla tego połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Persist Security Info = true` jest wymagany do uzyskania wartości <xref:System.Data.SqlClient.SqlCredential> obiekt z <xref:System.Data.SqlClient.SqlConnection.Credential%2A>.  
  
 Wartość domyślna <xref:System.Data.SqlClient.SqlConnection.Credential%2A> ma wartość null.  
  
 <xref:System.InvalidOperationException> Zostanie zgłoszony wyjątek:  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona na otwartego połączenia.  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona, gdy `Context Connection=true`.  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona, gdy `Integrated Security = true`.  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona, gdy używa parametrów połączenia `Password`.  
  
-   Jeśli <xref:System.Data.SqlClient.SqlConnection.Credential%2A> jest ustawiona, gdy używa parametrów połączenia `UserID`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.SqlClient.SqlConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę aktualnie używana baza danych lub bazy danych, który ma być używany po otwarciu połączenia.</summary>
        <value>Nazwa bieżącej bazy danych lub nazwę bazy danych do użycia po otwarciu połączenia. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Database%2A> Właściwość aktualizacje dynamiczne. W przypadku zmiany do bieżącej bazy danych przy użyciu [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcji lub <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> metoda, jest wysyłany komunikat informacyjny i właściwości są aktualizowane automatycznie.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Polecenia i parametry</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę wystąpienia programu SQL Server, którym chcesz się połączyć.</summary>
        <value>Nazwa wystąpienia programu SQL Server, którym chcesz się połączyć. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> Właściwość zwraca `null` Jeśli parametrów połączenia Aby uzyskać <xref:System.Data.SqlClient.SqlConnection> jest "połączenia kontekstu = true".  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="sqlConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="sqlConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Odwołanie do istniejącego <see cref="T:System.EnterpriseServices.ITransaction" /> w którym można zarejestrować.</param>
        <summary>Rejestruje się w określonej transakcji jako transakcji rozproszonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> metodę, aby zarejestrować w transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction> wypadku **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions> przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane  **EnlistDistributedTransaction** do tego celu. Aby uzyskać więcej informacji, zobacz [transakcji rozproszonych](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Możesz zarejestrować się w istniejącej transakcji rozproszonych za pomocą **EnlistDistributedTransaction** metoda wyłączenie automatycznej rejestracji. Rejestrowanie w istniejącej transakcji rozproszonych gwarantuje, że w przypadku transakcji nie zostanie zatwierdzona lub wycofana, zmiany dokonane przez kod w źródle danych są również przekazana lub wycofana.  
  
 `EnlistDistributedTransaction` Zwraca wyjątek, jeśli <xref:System.Data.SqlClient.SqlConnection> transakcji przy użyciu już się rozpoczął <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>. Jednakże jeśli transakcja jest transakcji lokalnej rozpoczęło się o źródle danych (na przykład, wykonując jawnie za pomocą instrukcji BEGIN TRANSACTION <xref:System.Data.SqlClient.SqlCommand> obiektu), **EnlistDistributedTransaction** wycofanie lokalnej transakcji i powoduje zarejestrowanie w istniejącej transakcji rozproszonych, zgodnie z żądaniem. Zwróć uwagę, że lokalne transakcja została wycofana i są odpowiedzialni za zarządzanie wszystkie lokalne transakcje nie uruchomione przy użyciu nie jest wyświetlany <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="sqlConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Odwołanie do istniejącego <see cref="T:System.Transactions.Transaction" /> w którym można zarejestrować.</param>
        <summary>Rejestruje się w określonej transakcji jako transakcji rozproszonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> metodę, aby zarejestrować w transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction> wypadku **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions> przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane  **EnlistDistributedTransaction**, który używa **System.EnterpriseServices.ITransaction** obiektu. Ma on także semantykę nieco: gdy połączenie jest jawnie zarejestrowana w transakcji, nie może być unenlisted ani zarejestrowany w innej transakcji, dopóki nie zakończy się pierwszej transakcji. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">Transakcje (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInfoMessageEventOnUserErrors : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> właściwości.</summary>
        <value><see langword="true" /> Jeśli <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> właściwość została ustawiona; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> do `true`, błędy, które wcześniej były traktowane jako wyjątki są teraz obsługiwane jako <xref:System.Data.SqlClient.SqlConnection.InfoMessage> zdarzenia. Wszystkie zdarzenia natychmiast wyzwalać i są obsługiwane przez program obsługi zdarzeń. Jeśli jest <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> ustawiono `false`, następnie <xref:System.Data.SqlClient.SqlConnection.InfoMessage> zdarzenia są obsługiwane na końcu procedury.  
  
> [!NOTE]
>  Błąd z poziomem ważności 17 lub nowszej, który powoduje, że serwer zatrzymać przetwarzanie, polecenie musi być obsługiwana jako wyjątek. W tym przypadku jest zgłaszany wyjątek, niezależnie od tego, jak obsługiwany jest błąd w <xref:System.Data.SqlClient.SqlConnection.InfoMessage> zdarzeń.  
  
 Aby uzyskać więcej informacji na temat pracy ze zdarzeniami, zobacz [zdarzenia połączeń](~/docs/framework/data/adonet/connection-events.md). Aby uzyskać więcej informacji o błędach wygenerowanych przez aparat SQL Server, zobacz [błędów aparatu bazy danych](/sql/relational-databases/errors-events/database-engine-events-and-errors).
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">Zdarzenia połączeń</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli spróbujesz pobrać informacji o schemacie dla więcej niż jednej procedury składowanej określonej wersji schematu dla najnowszego tylko jest zwracana.
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Uzyskiwanie informacji o schemacie bazy danych</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.SqlClient.SqlConnection" />. Aby uzyskać więcej informacji na temat schematu, zobacz [kolekcje schematów programu SQL Server](~/docs/framework/data/adonet/sql-server-schema-collections.md).</summary>
        <returns>Element <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Uzyskiwanie informacji o schemacie bazy danych</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.SqlClient.SqlConnection" /> przy użyciu określonego ciągu dla nazwy schematu.</summary>
        <returns>Element <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może być konieczne informacji o schemacie bazy danych, tabel lub kolumn. Ten przykład:  
  
-   Używa GetSchema w celu uzyskania informacji o schemacie.  
  
-   Użyj ograniczenia schematu, aby uzyskać określone informacje.  
  
-   Pobiera informacje o schemacie bazy danych, tabele i kolumny.  
  
 Przed uruchomieniem próbki, należy utworzyć przykładowej bazy danych, za pomocą następujących [!INCLUDE[tsql](~/includes/tsql-md.md)]:  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 [Jak uzyskać informacje o schemacie bazy danych](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) ma wersje tego przykładu kodu C# i Visual Basic w projekcie programu Visual Studio.  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {  
         conn.Open();  
  
         // Get the Meta Data for Supported Schema Collections  
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");  
  
         Console.WriteLine("Meta Data for Supported Schema Collections:");  
         ShowDataTable(metaDataTable, 25);  
         Console.WriteLine();  
  
         // Get the schema information of Databases in your instance  
         DataTable databasesSchemaTable = conn.GetSchema("Databases");  
  
         Console.WriteLine("Schema Information of Databases:");  
         ShowDataTable(databasesSchemaTable, 25);  
         Console.WriteLine();  
  
         // First, get schema information of all the tables in current database;  
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");  
  
         Console.WriteLine("Schema Information of All Tables:");  
         ShowDataTable(allTablesSchemaTable, 20);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Table Type to get   
         // the specified table(s).  
         // You can use four restrictions for Table, so you should create a 4 members array.  
         String[] tableRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Table Type.   
         // Now we specify the Table Name of the table what we want to get schema information.  
         tableRestrictions[2] = "Course";  
  
         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);  
  
         Console.WriteLine("Schema Information of Course Tables:");  
         ShowDataTable(courseTableSchemaTable, 20);  
         Console.WriteLine();  
  
         // First, get schema information of all the columns in current database.  
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");  
  
         Console.WriteLine("Schema Information of All Columns:");  
         ShowColumns(allColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).  
         // You can use four restrictions for Column, so you should create a 4 members array.  
         String[] columnRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         columnRestrictions[2] = "Course";  
         columnRestrictions[3] = "DepartmentID";  
  
         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);  
  
         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");  
         ShowColumns(departmentIDSchemaTable);  
         Console.WriteLine();  
  
         // First, get schema information of all the IndexColumns in current database  
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");  
  
         Console.WriteLine("Schema Information of All IndexColumns:");  
         ShowIndexColumns(allIndexColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to   
         // get the specified column(s).  
         // You can use five restrictions for Column, so you should create a 5 members array.  
         String[] indexColumnsRestrictions = new String[5];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         indexColumnsRestrictions[2] = "Course";  
         indexColumnsRestrictions[4] = "CourseID";  
  
         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);  
  
         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");  
         ShowIndexColumns(courseIdIndexSchemaTable);  
         Console.WriteLine();  
      }  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   private static void ShowDataTable(DataTable table, Int32 length) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-" + length + "}", col.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         foreach (DataColumn col in table.Columns) {  
            if (col.DataType.Equals(typeof(DateTime)))  
               Console.Write("{0,-" + length + ":d}", row[col]);  
            else if (col.DataType.Equals(typeof(Decimal)))  
               Console.Write("{0,-" + length + ":C}", row[col]);  
            else  
               Console.Write("{0,-" + length + "}", row[col]);  
         }  
         Console.WriteLine();  
      }  
   }  
  
   private static void ShowDataTable(DataTable table) {  
      ShowDataTable(table, 14);  
   }  
  
   private static void ShowColumns(DataTable columnsTable) {  
      var selectedRows = from info in columnsTable.AsEnumerable()  
                         select new {  
                            TableCatalog = info["TABLE_CATALOG"],  
                            TableSchema = info["TABLE_SCHEMA"],  
                            TableName = info["TABLE_NAME"],  
                            ColumnName = info["COLUMN_NAME"],  
                            DataType = info["DATA_TYPE"]  
                         };  
  
      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",  
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,  
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);  
      }  
   }  
  
   private static void ShowIndexColumns(DataTable indexColumnsTable) {  
      var selectedRows = from info in indexColumnsTable.AsEnumerable()  
                         select new {  
                            TableSchema = info["table_schema"],  
                            TableName = info["table_name"],  
                            ColumnName = info["column_name"],  
                            ConstraintSchema = info["constraint_schema"],  
                            ConstraintName = info["constraint_name"],  
                            KeyType = info["KeyType"]  
                         };  
  
      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,  
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> jest określony jako wartość null.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Uzyskiwanie informacji o schemacie bazy danych</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <param name="restrictionValues">Zestaw wartości ograniczeń dla żądany schemat.</param>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.SqlClient.SqlConnection" /> za pomocą określonego ciągu nazwy schematu i tabeli określonego ciągu dla wartości ograniczeń.</summary>
        <returns>Element <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `restrictionValues` Można podać parametr *n* głębokość wartości, które są określone przez kolekcji ograniczeń dla określonej kolekcji. Aby ustawić wartości w danym ograniczeń i nie wartości inne ograniczenia, musisz ustawić poprzednich ograniczeń `null` , a następnie przekaż odpowiednią wartość w ograniczenie, które chcesz określić wartość parametru.  
  
 Na przykład to kolekcja "Tabele". Jeśli nazwa tabeli — i chcesz odzyskać tylko w tabelach, które są skojarzone z właścicielem "Carl" Kolekcja "Tabele" ma trzy ograniczenia — bazy danych, właściciel, musisz przekazać następujące wartości: null, "Carl". Jeśli wartość ograniczenia nie jest przekazany, wartości domyślne są używane dla tego ograniczenia. Jest to ten sam mapowania jako przekazywanie w `null`, który jest inny niż przekazywanie w pusty ciąg jako wartość parametru. W tym przypadku ciąg pusty ("") jest uważany za wartość określonego parametru.  
  
 Przykładowy kod wykazania <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>, zobacz <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" /> jest określony jako wartość null.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Uzyskiwanie informacji o schemacie bazy danych</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy program SQL Server zwraca komunikat ostrzeżenia lub informacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klienci, w których do przetworzenia, ostrzeżenia i komunikaty informacyjne, wysłanych przez serwer powinien utworzyć <xref:System.Data.SqlClient.SqlInfoMessageEventHandler> delegata do nasłuchiwania do tego zdarzenia.  
  
 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> Zdarzenie występuje, gdy wiadomość z o wadze 10 lub mniej, jest zwracany przez program SQL Server. Komunikaty o ważności między 11 i 20 zgłosić błąd i komunikatów, które mają ważności powoduje, że 20 połączeń, aby zamknąć. Aby uzyskać więcej informacji na temat poziomów błędów programu SQL Server, zobacz [ważności błąd aparatu bazy danych](/sql/relational-databases/errors-events/database-engine-error-severities).
  
 Aby uzyskać więcej informacji i obejrzeć przykład, zobacz [zdarzenia połączeń](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">Praca ze zdarzeniami połączenia</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera połączenie z bazą danych przy użyciu ustawień właściwości określone przez <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection> Rysuje otwartego połączenia z puli połączeń, jeśli jest dostępny. W przeciwnym razie nawiązaniem nowego połączenia z wystąpieniem programu SQL Server.  
  
> [!NOTE]
>  Jeśli <xref:System.Data.SqlClient.SqlConnection> zbliża się poza zakres, nie jest zamknięty. W związku z tym, jawnie należy zamknąć połączenie, wywołując <xref:System.Data.SqlClient.SqlConnection.Close%2A>.  
  
> [!NOTE]
>  Jeśli określisz numeru portu innego niż 1433, kiedy próbujesz połączyć się z wystąpieniem programu SQL Server i korzysta z protokołu innego niż TCP/IP, <xref:System.Data.SqlClient.SqlConnection.Open%2A> metoda kończy się niepowodzeniem. Aby określić numer portu, inne niż 1433, należy dołączyć "server = NazwaKomputera, numer portu" w ciągu połączenia i protokół TCP/IP użycia.  
  
> [!NOTE]
>  .NET Framework Data Provider for SQL Server wymaga uprawnienia zabezpieczeń "Umożliwia wywołań do zestawów niezarządzanego" włączone (<xref:System.Security.Permissions.SecurityPermission> z <xref:System.Security.Permissions.SecurityPermissionFlag> równa `UnmanagedCode`) aby otworzyć <xref:System.Data.SqlClient.SqlConnection> z włączonym debugowaniem SQL.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection>otwiera go i wyświetla niektóre jego właściwości. Połączenie zostaje automatycznie zamknięty na końcu `using` bloku.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie można otworzyć połączenia bez określania źródła danych lub serwera.  
  
lub 
Połączenie jest już otwarty.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Poziom połączeń wystąpił błąd podczas otwierania połączenia. Jeśli <see cref="P:System.Data.SqlClient.SqlException.Number" /> właściwość zawiera wartość 18487 lub 18488, oznacza to, że podane hasło wygasło lub muszą zostać zresetowane. Zobacz <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> metody, aby uzyskać więcej informacji.  
  
<see langword="&lt;system.data.localdb&gt;" /> Znacznika w pliku app.config ma nieprawidłową lub nieznaną elementów.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Istnieją dwa wpisy o tej samej nazwie w <see langword="&lt;localdbinstances&gt;" /> sekcji.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">Parametry połączenia w ADO.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">Połączenie z serwerem SQL buforowanie (ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, która otwiera połączenie z bazą danych przy użyciu ustawień właściwości określone przez <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />. Token anulowania, może służyć do żądania, czy operacja porzucone, zanim upłynie limit czasu połączenia.  Wyjątki będą propagowane przez zwracanego zadania. Jeżeli upłynie limit czasu połączenia bez pomyślnym nawiązaniu połączenia, zwrócone zadanie zostanie oznaczona jako przerwana z powodu wyjątku. Implementacja zwraca klasę Task, bez blokowania wątku wywołującego dla połączeń w puli i innych w puli.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>, <xref:System.Data.SqlClient.SqlConnection.State%2A> musi zwracać <xref:System.Data.ConnectionState.Connecting> aż do zwracanego <xref:System.Threading.Tasks.Task> zostało zakończone. Następnie, jeśli połączenie zakończyło się powodzeniem, <xref:System.Data.SqlClient.SqlConnection.State%2A> musi zwracać <xref:System.Data.ConnectionState.Open>. Jeśli połączenie nie powiedzie się, <xref:System.Data.SqlClient.SqlConnection.State%2A> musi zwracać <xref:System.Data.ConnectionState.Closed>.  
  
 Wywołanie <xref:System.Data.SqlClient.SqlConnection.Close%2A> podejmie próbę anulowania lub zamknąć odpowiednich <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> wywołania.  
  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.  
  
Połączenie nie jest dostępna z puli połączeń przed upływem limitu czasu połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wszelkie błędy zwrócone przez program SQL Server, który wystąpił podczas otwierania połączenia.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PacketSize : int" Usage="System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_PacketSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar pakietów sieciowych używanych do komunikowania się z wystąpieniem programu SQL Server (w bajtach).</summary>
        <value>Rozmiar (w bajtach) pakietów sieciowych. Wartość domyślna wynosi 8000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aplikacja wykonuje operacje kopiowania masowego, lub wysyła lub odbiera partie danych tekstowych lub graficznych, rozmiar pakietu, większy niż wartość domyślna może poprawić wydajność, ponieważ powoduje ona mniejszą liczbę sieci operacje odczytu i zapisu. Jeśli aplikacja wysyła i odbiera małe ilości danych, można ustawić rozmiar pakietu 512 bajtów (przy użyciu wartości rozmiaru pakietu w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), który jest wystarczające dla większości operacji transferu danych. W przypadku większości aplikacji najlepiej jest domyślny rozmiar pakietu.  
  
 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> może być wartością z zakresu od 512 do 32767 bajtów. Wyjątek jest generowany, jeśli wartość jest poza tym zakresem.  
  
 Ustawienie wartości domyślne na liczbę ponad 8000 spowoduje, że pakiety do użycia wielostronicowe alokatora w wystąpieniu programu SQL Server zamiast przydzielania SinglePage znacznie bardziej efektywne, co zmniejsza ogólną skalowalność programu SQL Server. Aby uzyskać więcej informacji o używaniu pamięci programu SQL Server, zobacz [przewodnik dotyczący architektury zarządzania pamięci](/sql/relational-databases/memory-management-architecture-guide).
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection>, włączając ustawienie `Packet Size` do 512 w parametrach połączenia. Wyświetla <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> i <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> właściwości w oknie konsoli.  
  
 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberSignature Language="F#" Value="static member RegisterColumnEncryptionKeyStoreProviders : System.Collections.Generic.IDictionary&lt;string, System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders customProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="customProviders">Dostawcy niestandardowi</param>
        <summary>Rejestruje dostawców magazynu kluczy szyfrowania kolumny.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberSignature Language="F#" Value="member this.ResetStatistics : unit -&gt; unit" Usage="sqlConnection.ResetStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Włączenie zbierania statystyk wszystkie wartości jest resetowany do zera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie włączono zbierania statystyk i ta metoda jest wywoływana, błąd nie jest zgłaszany.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statystyki dostawcy dla programu SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberSignature Language="F#" Value="member this.RetrieveStatistics : unit -&gt; System.Collections.IDictionary" Usage="sqlConnection.RetrieveStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję pary wartości Nazwa statystyki w punkcie w czasie, gdy zostanie wywołana metoda.</summary>
        <returns>Zwraca odwołanie typu <see cref="T:System.Collections.IDictionary" /> z <see cref="T:System.Collections.DictionaryEntry" /> elementów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta metoda jest wywoływana, wartościami pobranymi dotyczą w bieżącym punkcie w czasie. Jeśli będziesz kontynuować, korzystając z tego połączenia, wartości są nieprawidłowe. Musisz ponownie wykonaj metodę, aby uzyskać najbardziej aktualne wartości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statystyki dostawcy dla programu SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który znajduje się wersja wystąpienia programu SQL Server, do którego klient jest połączony.</summary>
        <value>Wersja wystąpienia programu SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wersja ma postać *##. ##. ###*, gdzie pierwsze dwie cyfry określają główną wersję, następne dwa ostatnie cyfry stanowią wersję pomocniczą i cztery ostatnie cyfry są pełnej wersji. Ten ciąg ma postać *główna.pomocnicza.kompilacja*, gdzie jest to główna i pomocnicza są dokładnie dwie cyfry, i kompilacja jest dokładnie cztery cyfry.  
  
 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> została wywołana, gdy zwracane zadanie nie zostało ukończone i połączenia nie został otwarty po wywołaniu <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i wyświetla <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> właściwości.  
  
 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie jest zamknięte.  
  
 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> została wywołana, gdy zwracane zadanie nie zostało ukończone i połączenia nie został otwarty po wywołaniu <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.SqlClient.SqlConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje stan <see cref="T:System.Data.SqlClient.SqlConnection" /> podczas ostatnich operacji sieciowych wykonywane w ramach połączenia.</summary>
        <value><see cref="T:System.Data.ConnectionState" /> Wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca <xref:System.Data.ConnectionState> Wyliczenie wskazujące stan <xref:System.Data.SqlClient.SqlConnection>. Zamknięciu i ponownym otwarciu połączenia spowoduje odświeżenie wartość <xref:System.Data.SqlClient.SqlConnection.State%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Łączenie ze źródłem danych (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StatisticsEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Po ustawieniu <see langword="true" />, statystyki umożliwia zbieranie dla bieżącego połączenia.</summary>
        <value>Zwraca <see langword="true" /> Jeśli zbierania statystyk jest włączone; w przeciwnym razie <see langword="false" />. <see langword="false" /> jest ustawieniem domyślnym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Włączenie zbierania statystyk ma pomocnicze, ale mierzalne wpływ na wydajność i dlatego powinien być włączony tylko wtedy, gdy jest to wymagane.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">Statystyki dostawcy dla programu SQL Server (ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozpoczyna się transakcji bazy danych.</summary>
        <returns>Obiekt, który reprezentuje nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Po zakończeniu transakcji, należy jawnie Zatwierdź lub Wycofaj tę transakcję przy użyciu <xref:System.Data.IDbTransaction.Commit> lub <xref:System.Data.IDbTransaction.Rollback> metody.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (iso As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel iso) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">Jedną z <see cref="T:System.Data.IsolationLevel" /> wartości.</param>
        <summary>Rozpoczyna się transakcji bazy danych o określonej <see cref="T:System.Data.IsolationLevel" /> wartość.</summary>
        <returns>Obiekt, który reprezentuje nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Po zakończeniu transakcji, należy jawnie Zatwierdź lub Wycofaj tę transakcję przy użyciu <xref:System.Data.IDbTransaction.Commit> lub <xref:System.Data.IDbTransaction.Rollback> metody.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca obiekt polecenia, który jest skojarzony z tym połączeniem.</summary>
        <returns>Obiekt polecenia, który jest skojarzony z tym połączeniem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Nowy obiekt będący kopią tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Data.SqlClient.SqlConnection> wystąpienia jest rzutowany na <xref:System.ICloneable> interfejsu.  
  
 Ten element członkowski jest obsługiwane tylko przez .NET Compact Framework.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkstationId : string" Usage="System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_WorkstationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który identyfikuje klienta bazy danych.</summary>
        <value>Ciąg, który identyfikuje klienta bazy danych. Jeśli nie zostanie określony, nazwa komputera klienckiego. Jeśli nie zostanie określony, wartość jest ciągiem pustym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zawiera zazwyczaj nazwę sieciową klienta. <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> Właściwość odpowiada `Workstation ID` właściwość parametrów połączenia.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> i wyświetla <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> właściwości.  
  
 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>