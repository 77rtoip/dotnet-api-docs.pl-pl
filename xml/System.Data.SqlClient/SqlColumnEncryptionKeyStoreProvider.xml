<Type Name="SqlColumnEncryptionKeyStoreProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e975c25375894e64d491184bb4cdee074f48895b" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlColumnEncryptionKeyStoreProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionKeyStoreProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3ecf0-101">Klasa podstawowa dla wszystkich dostawców magazynu kluczy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3ecf0-101">Base class for all key store providers.</span>
      </span>
      <span data-ttu-id="3ecf0-102">Niestandardowego dostawcy musi dziedziczyć po tej klasie i zastąpić jej funkcje elementów członkowskich, a następnie zarejestruj go za pomocą SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span>
      <span class="sxs-lookup">
        <span data-stu-id="3ecf0-102">A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span>
      </span>
      <span data-ttu-id="3ecf0-103">Aby uzyskać więcej informacji, zobacz [zawsze zaszyfrowane](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      <span class="sxs-lookup">
        <span data-stu-id="3ecf0-103">For details see, [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlColumnEncryptionKeyStoreProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlColumnEncryptionKeyStoreProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3ecf0-104">Inicjuje nowe wystąpienie klasy SqlColumnEncryptionKeyStoreProviderClass.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-104">Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="3ecf0-105">Ścieżka klucza głównego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-105">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="3ecf0-106">Algorytm szyfrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-106">The encryption algorithm.</span>
          </span>
        </param>
        <param name="encryptedColumnEncryptionKey">
          <span data-ttu-id="3ecf0-107">Klucz szyfrowania zaszyfrowanej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-107">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ecf0-108">Odszyfrowuje określona wartość zaszyfrowanego klucza szyfrowania kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-108">Decrypts the specified encrypted value of a column encryption key.</span>
          </span>
          <span data-ttu-id="3ecf0-109">Zaszyfrowaną wartość ma być zaszyfrowany przy użyciu klucza głównego kolumny z określoną ścieżką klucza i określony algorytm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-109">The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ecf0-110">Zwraca <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-110">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="3ecf0-111">Klucz szyfrowania kolumny odszyfrowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-111">The decrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="3ecf0-112">Ścieżka klucza głównego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-112">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="3ecf0-113">Algorytm szyfrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-113">The encryption algorithm.</span>
          </span>
        </param>
        <param name="columnEncryptionKey">
          <span data-ttu-id="3ecf0-114">Klucz szyfrowania zaszyfrowanej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-114">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ecf0-115">Są szyfrowane przy użyciu klucza głównego kolumny z określoną ścieżką klucza i określony algorytm klucza szyfrowania kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-115">Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ecf0-116">Zwraca <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-116">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="3ecf0-117">Klucz szyfrowania zaszyfrowanej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-117">The encrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="3ecf0-118">Ścieżka klucza głównego kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-118">The column master key path.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="3ecf0-119">
            <see langword="true" /> Aby wskazać, że klucza głównego kolumny obsługuje obliczenia enklawę; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-119">
              <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ecf0-120">Po zaimplementowaniu w klasie pochodnej, podpisaniu metadanych klucza głównego kolumny z klucza głównego kolumny odwołuje się <paramref name="masterKeyPath" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-120">When implemented in a derived class, digitally signs the column master key metadata with the column master key referenced by the <paramref name="masterKeyPath" /> parameter.</span>
          </span>
          <span data-ttu-id="3ecf0-121">Wartości wejściowe, używane do generowania podpisu powinny być określone wartości z <paramref name="masterKeyPath" /> i <paramref name="allowEnclaveComputations" /> parametrów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-121">The input values used to generate the signature should be the specified values of the <paramref name="masterKeyPath" /> and <paramref name="allowEnclaveComputations" /> parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ecf0-122">Podpis metadanych klucza głównego kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-122">The signature of the column master key metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ecf0-123">Aby upewnić się, że <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> — metoda nie Podziel aplikacje korzystające z interfejsu API stare, zgłasza <xref:System.NotImplementedException> wyjątek domyślnie.</span><span class="sxs-lookup"><span data-stu-id="3ecf0-123">To ensure that the <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method doesn't break applications that rely on an old API, it throws a <xref:System.NotImplementedException> exception by default.</span></span>  
  
 <span data-ttu-id="3ecf0-124"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> Metoda będzie używana przez narzędzia klienta, które Generowanie kluczy głównych kolumn (CMK) dla klientów.</span><span class="sxs-lookup"><span data-stu-id="3ecf0-124">The <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method will be used by client tools that generate Column Master Keys (CMK) for customers.</span></span> <span data-ttu-id="3ecf0-125"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> musi być implementowana przez odpowiednie dostawców magazynu kluczy, które chcesz użyć eksterytorialne z [zawsze zaszyfrowane](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span><span class="sxs-lookup"><span data-stu-id="3ecf0-125"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> must be implemented by the corresponding key store providers that wish to use enclaves with [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="3ecf0-126">We wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-126">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="3ecf0-127">Ścieżka klucza głównego kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-127">The column master key path.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="3ecf0-128">Wskazuje, czy klucza głównego kolumny obsługuje enklawę obliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-128">Indicates whether the column master key supports enclave computations.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="3ecf0-129">Podpis metadanych klucza głównego kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-129">The signature of the column master key metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ecf0-130">Po zaimplementowaniu w klasie pochodnej, ta metoda oczekuje się, sprawdź, czy jest nieprawidłowa dla klucza głównego kolumny z określoną ścieżką klucza i zachowanie określonego enklawę określoną sygnaturą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-130">When implemented in a derived class, this method is expected to verify the specified signature is valid for the column master key with the specified key path and the specified enclave behavior.</span>
          </span>
          <span data-ttu-id="3ecf0-131">Domyślna implementacja zwraca notimplementedexception —.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-131">The default implementation throws NotImplementedException.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ecf0-132">Po zaimplementowaniu w klasie pochodnej, metoda powinien zwrócić wartość true, jeśli określony podpis jest nieprawidłowy, lub FAŁSZ, jeśli określony podpis jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-132">When implemented in a derived class, the method is expected to return true if the specified signature is valid, or false if the specified signature is not valid.</span>
          </span>
          <span data-ttu-id="3ecf0-133">Domyślna implementacja zwraca notimplementedexception —.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ecf0-133">The default implementation throws NotImplementedException.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>