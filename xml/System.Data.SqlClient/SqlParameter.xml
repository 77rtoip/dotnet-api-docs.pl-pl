<Type Name="SqlParameter" FullName="System.Data.SqlClient.SqlParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="889225006e72f73c3ecad96625bfb7c3a5ed6e7d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36746387" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <TypeSignature Language="F#" Value="type SqlParameter = class&#xA;    inherit DbParameter&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Data.SqlClient.SqlParameter+SqlParameterConverter, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje parametr <see cref="T:System.Data.SqlClient.SqlCommand" /> i opcjonalnie jego mapowanie <see cref="T:System.Data.DataSet" /> kolumn. Klasa ta nie może być dziedziczona. Aby uzyskać więcej informacji o parametrach Zobacz [konfigurowania parametrów i Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md) danych parametru.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy parametrów nie jest uwzględniana.  
  
> [!NOTE]
>  Określona, nazywany również porządkowej, parametry nie są obsługiwane przez dostawcę danych .NET Framework dla programu SQL Server.  
  
 Aby uzyskać więcej informacji, zobacz pokazuje sposób użycia parametrów, oraz dodatkowe przykładowy kod [poleceń i parametrów](~/docs/framework/data/adonet/commands-and-parameters.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy wiele wystąpień <xref:System.Data.SqlClient.SqlParameter> za pośrednictwem <xref:System.Data.SqlClient.SqlParameterCollection> kolekcji w ciągu <xref:System.Data.SqlClient.SqlDataAdapter>. Te parametry są używane do wybierz dane ze źródła danych i umieść dane <xref:System.Data.DataSet>. W tym przykładzie założono, że <xref:System.Data.DataSet> i <xref:System.Data.SqlClient.SqlDataAdapter> zostały już utworzone przy użyciu odpowiedniego schematu, poleceń i połączenia. Aby uzyskać więcej informacji i dodatkowe przykłady użycia parametrów, zobacz [pobieranie i modyfikowanie danych ADO.NET](~/docs/framework/data/adonet/retrieving-and-modifying-data.md) i [konfigurowania parametrów i typ danych parametru](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlParameterCollection" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru do mapowania.</param>
        <param name="dbType">Jeden z <see cref="T:System.Data.SqlDbType" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> klasy, która używa nazwy parametru i typu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ danych i w razie potrzeby **rozmiar** i <xref:System.Data.SqlClient.SqlParameter.Precision%2A> są wywnioskować na podstawie wartości `dbType` parametru.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="dbType" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * obj -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru do mapowania.</param>
        <param name="value">
          <see cref="T:System.Object" /> Będący wartością <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> klasy, która używa nazwy parametru i wartość nowej <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po określeniu <xref:System.Object> w `value` parametru <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> jest wywnioskowany na podstawie typu Microsoft .NET Framework <xref:System.Object>.  
  
 Korzystając z tego przeciążenia należy zachować ostrożność <xref:System.Data.SqlClient.SqlParameter> konstruktora, aby określić wartości parametru liczby całkowitej. Ponieważ to przeciążenie przyjmuje `value` typu <xref:System.Object>, należy przekonwertować wartość całkowitą <xref:System.Object> wprowadź, jeśli wartość wynosi zero, jak pokazano w poniższym przykładzie C#.  
  
```  
Parameter = new SqlParameter("@pname", (object)0);  
```  
  
 Jeśli ta konwersja nie zostanie wykonana, kompilator zakłada próby wywołania `SqlParameter` (`string`, `SqlDbType`) przeładowania konstruktora.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru do mapowania.</param>
        <param name="dbType">Jeden z <see cref="T:System.Data.SqlDbType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> klasy, która używa nazwy parametru <see cref="T:System.Data.SqlDbType" />oraz rozmiar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **Rozmiar** jest wywnioskowany na podstawie wartości `dbType` parametru, jeśli nie jest jawnie ustawiona `size` parametru.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="dbType" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, string sourceColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, sourceColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::String ^ sourceColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * string -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, sourceColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourceColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru do mapowania.</param>
        <param name="dbType">Jeden z <see cref="T:System.Data.SqlDbType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="sourceColumn">Nazwa kolumny źródłowej (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) Jeśli ten <see cref="T:System.Data.SqlClient.SqlParameter" /> jest używany w wywołaniu <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> klasy, która używa nazwy parametru <see cref="T:System.Data.SqlDbType" />, rozmiar, a nazwa kolumny źródłowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **Rozmiar** jest wywnioskowany na podstawie wartości `dbType` parametru, jeśli nie jest jawnie ustawiona `size` parametru.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="dbType" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, direction, isNullable, precision, scale, sourceColumn, sourceVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru do mapowania.</param>
        <param name="dbType">Jeden z <see cref="T:System.Data.SqlDbType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="direction">Jeden z <see cref="T:System.Data.ParameterDirection" /> wartości.</param>
        <param name="isNullable">
          <see langword="true" /> Jeśli wartość pola mogą mieć wartości null; w przeciwnym razie <see langword="false" />.</param>
        <param name="precision">Całkowita liczba cyfr po lewej i prawej strony punktu dziesiętnego, do którego <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> został rozwiązany.</param>
        <param name="scale">Całkowita liczba miejsc dziesiętnych, do którego <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> został rozwiązany.</param>
        <param name="sourceColumn">Nazwa kolumny źródłowej (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) Jeśli ten <see cref="T:System.Data.SqlClient.SqlParameter" /> jest używany w wywołaniu <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <param name="sourceVersion">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <param name="value">
          <see cref="T:System.Object" /> Będący wartością <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> klasy, która używa nazwy parametru, typ parametru, rozmiar parametru <see cref="T:System.Data.ParameterDirection" />, dokładność parametru Skala parametru kolumny źródłowej <see cref="T:System.Data.DataRowVersion" /> do użycia i wartość parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **Rozmiar** i <xref:System.Data.SqlClient.SqlParameter.Precision%2A> są wywnioskować na podstawie wartości `dbType` parametru, jeśli nie są jawnie ustawione `size` i `precision` parametrów.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość podana w <paramref name="dbType" /> parametr ma nieprawidłowy typ zaplecza.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object, xmlSchemaCollectionDatabase As String, xmlSchemaCollectionOwningSchema As String, xmlSchemaCollectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value, System::String ^ xmlSchemaCollectionDatabase, System::String ^ xmlSchemaCollectionOwningSchema, System::String ^ xmlSchemaCollectionName);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * System.Data.ParameterDirection * byte * byte * string * System.Data.DataRowVersion * bool * obj * string * string * string -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, direction, precision, scale, sourceColumn, sourceVersion, sourceColumnNullMapping, value, xmlSchemaCollectionDatabase, xmlSchemaCollectionOwningSchema, xmlSchemaCollectionName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="xmlSchemaCollectionDatabase" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionOwningSchema" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">Nazwa parametru do mapowania.</param>
        <param name="dbType">Jeden z <see cref="T:System.Data.SqlDbType" /> wartości.</param>
        <param name="size">Długość parametru.</param>
        <param name="direction">Jeden z <see cref="T:System.Data.ParameterDirection" /> wartości.</param>
        <param name="precision">Całkowita liczba cyfr po lewej i prawej strony punktu dziesiętnego, do którego <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> został rozwiązany.</param>
        <param name="scale">Całkowita liczba miejsc dziesiętnych, do którego <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> został rozwiązany.</param>
        <param name="sourceColumn">Nazwa kolumny źródłowej (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) Jeśli ten <see cref="T:System.Data.SqlClient.SqlParameter" /> jest używany w wywołaniu <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <param name="sourceVersion">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" /> Jeśli kolumna źródłowa jest wartość null; <see langword="false" /> Jeśli nie jest.</param>
        <param name="value">
          <see cref="T:System.Object" /> Będący wartością <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <param name="xmlSchemaCollectionDatabase">Nazwa bazy danych, w którym znajduje się kolekcji schematu dla tego wystąpienia XML.</param>
        <param name="xmlSchemaCollectionOwningSchema">Gdzie znajduje się kolekcji schematu dla tego wystąpienia XML będący właścicielem schemat relacyjny.</param>
        <param name="xmlSchemaCollectionName">Nazwa kolekcji schematu dla tego parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> klasy, która używa nazwy parametru, typ parametru, długość parametru kierunku, dokładność, skala, nazwa kolumny źródłowej, za pomocą jednego z <see cref="T:System.Data.DataRowVersion" /> wartości, wartość logiczna dla źródła Mapowanie wartość kolumny <see langword="SqlParameter" />, nazwę bazy danych, w którym znajduje się kolekcji schematu dla tego wystąpienia XML, gdzie znajduje się kolekcji schematu dla tego wystąpienia XML będący właścicielem schemat relacyjny i nazwę kolekcji schematu dla tego parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A> i <xref:System.Data.SqlClient.SqlParameter.Precision%2A> są wywnioskować na podstawie wartości `dbType` parametru, jeśli nie są jawnie ustawione `size` i `precision` parametrów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As SqlCompareOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlCompareOptions CompareInfo { System::Data::SqlTypes::SqlCompareOptions get(); void set(System::Data::SqlTypes::SqlCompareOptions value); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Data.SqlTypes.SqlCompareOptions with get, set" Usage="System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Globalization.CompareInfo" /> obiektu, który definiuje realizację porównywania ciągów znaków dla tego parametru.</summary>
        <value>A <see cref="T:System.Globalization.CompareInfo" /> obiektu, który definiuje porównania ciągów dla tego parametru.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.SqlClient.SqlParameter.DbType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.SqlDbType" /> parametru.</summary>
        <value>Jeden z <see cref="T:System.Data.SqlDbType" /> wartości. Wartość domyślna to <see langword="NVarChar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> i <xref:System.Data.SqlClient.SqlParameter.DbType%2A> są połączone. W związku z tym ustawienie <xref:System.Data.SqlClient.SqlParameter.DbType%2A> zmiany <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> do obsługi <xref:System.Data.SqlDbType>.  
  
 Aby uzyskać listę obsługiwanych typów znajduje się w odpowiednim <xref:System.Data.SqlDbType> elementu członkowskiego. Aby uzyskać więcej informacji, zobacz [parametry element DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.SqlClient.SqlParameter.Direction" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametr tylko wejściowym, jest tylko do danych wyjściowych, dwukierunkowego lub parametru wartości zwracanej procedury składowanej.</summary>
        <value>Jeden z <see cref="T:System.Data.ParameterDirection" /> wartości. Wartość domyślna to <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.ParameterDirection> jest wyjścia i wykonanie skojarzonego <xref:System.Data.SqlClient.SqlCommand> nie zwraca wartości <xref:System.Data.SqlClient.SqlParameter> zawiera wartość null.  
  
 `Output`, `InputOut`, i `ReturnValue` Parametry zwracane przez wywołanie metody <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> będą niedostępne do czasu zamknięcia <xref:System.Data.SqlClient.SqlDataReader>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [Polecenia i parametry](~/docs/framework/data/adonet/commands-and-parameters.md)  
  
 [Parametry elementu DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md)  
  
 [SQL Server i ADO.NET](http://msdn.microsoft.com/library/c18b1fb1-2af1-4de7-80a4-95e56fd976cb)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość nie została ustawiona na jedną z prawidłowych <see cref="T:System.Data.ParameterDirection" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="ForceColumnEncryption">
      <MemberSignature Language="C#" Value="public bool ForceColumnEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceColumnEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceColumnEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceColumnEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ForceColumnEncryption : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wymusza szyfrowanie parametru, używając [zawsze Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine). Jeśli parametr nie muszą być szyfrowane sterownik programu SQL Server, zostanie wyświetlona informacja, za pomocą parametru zapytania nie powiedzie się. Ta właściwość zapewnia dodatkową ochronę przed takimi atakami, którego bezpieczeństwo zostało naruszone SQL Server, zapewniając szyfrowania nieprawidłowe metadane do klienta, co może spowodować ujawnienie danych dotyczących.</summary>
        <value>
          <see langword="true" /> Jeśli parametr ma Wymuszaj szyfrowanie kolumny; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametr akceptuje wartości null. <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> nie jest używany do sprawdzania poprawności wartości parametru i nie zapobiega wysyłaniu lub odbieraniu wartość null, podczas wykonywania polecenia.</summary>
        <value>
          <see langword="true" /> Jeśli są akceptowane wartości zerowe; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości null są obsługiwane przy użyciu <xref:System.DBNull> klasy.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[DataWorks SqlParam.Properties#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#2)]
 [!code-vb[DataWorks SqlParam.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleId">
      <MemberSignature Language="C#" Value="public int LocaleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberSignature Language="VB.NET" Value="Public Property LocaleId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LocaleId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LocaleId : int with get, set" Usage="System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator ustawień regionalnych, który określa konwencje i języka dla danego regionu.</summary>
        <value>Zwraca identyfikator ustawień regionalnych skojarzonych z parametrem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia regionalne identyfikuje konwencje i język dla konkretnego regionu geograficznego. Stronę kodową używaną do kodowania określony ciąg znaków (zestaw znaków) zależy od ustawień regionalnych używanych przez ten ciąg lub środowiska, który go utworzył. Ta właściwość ustawia (dla parametrów wejściowych) lub pobiera (dla wyjściowego parametrów), ustawienia regionalne, które można dołączyć do ciągu podczas wymiany danych z serwerem. Ta właściwość jest zwykle używana wraz z <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A> właściwości.  
  
```  
static void CreateSqlParameterLocaleId(){  
   SqlParameter parameter = new SqlParameter("pName", SqlDbType.VarChar);  
   parameter.LocaleId = 1033;   // English - United States  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.SqlClient.SqlParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przesunięcie <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> właściwości.</summary>
        <value>Przesunięcie do <see cref="P:System.Data.SqlClient.SqlParameter.Value" />. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Offset` Właściwość jest używana dla klienta podziału danych binarnych i ciąg. Na przykład, aby można było wstawić 10 MB tekstu w kolumnie na serwerze, użytkownik może uruchomić 10 wstawia sparametryzowane 1 MB fragmentów, zmieni wartość `Offset` w każdej iteracji przez 1 MB.  
  
 `Offset` Określa liczbę bajtów dla typu binary i liczbę znaków do ciągów. Liczba ciągów nie zawiera znaku zakończenia.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[DataWorks SqlParam.Properties#3](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#3)]
 [!code-vb[DataWorks SqlParam.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <value>Nazwa <see cref="T:System.Data.SqlClient.SqlParameter" />. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> Jest określona w postaci @paramname. Należy ustawić <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> przed wykonaniem <xref:System.Data.SqlClient.SqlCommand> opiera się na parametry.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.SqlClient.SqlParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę cyfr używana do reprezentowania <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> właściwości.</summary>
        <value>Maksymalna liczba cyfr używana do reprezentowania <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> właściwości. Wartość domyślna to 0. Oznacza to, że dostawca danych określa dokładność <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> Jest używana przez parametry, które mają <xref:System.Data.SqlDbType> z `Decimal`.  
  
 Nie trzeba określać wartości dla <xref:System.Data.SqlClient.SqlParameter.Precision%2A> i <xref:System.Data.SqlClient.SqlParameter.Scale%2A> właściwości dla parametrów wejściowych, jak można wywnioskować z wartością parametru. `Precision` i `Scale` są wymagane dla parametrów wyjściowych oraz scenariusze, w którym należy określić pełną metadanych dla parametru bez podania wartości, takich jak określanie wartości null z określonego precyzję i skalę.  
  
> [!NOTE]
>  Użycie tej właściwości, aby wymusić przekazane do bazy danych nie jest obsługiwane. Aby round, truncate, lub w przeciwnym razie wymuszone danych przed przekazaniem go do bazy danych, użyj <xref:System.Math> klasy, która jest częścią `System` przestrzeni nazw przed przypisywanie wartości do parametru `Value` właściwości.  
  
> [!NOTE]
>  Dostawcy danych firmy Microsoft .NET Framework, które są dołączone do programu .NET Framework w wersji 1.0 nie weryfikują <xref:System.Data.SqlClient.SqlParameter.Precision%2A> lub <xref:System.Data.SqlClient.SqlParameter.Scale%2A> z <xref:System.Decimal> wartości parametrów. Może to spowodować przycięte dane wstawiane w źródle danych. Jeśli używasz .NET Framework w wersji 1.0, sprawdzanie poprawności <xref:System.Data.SqlClient.SqlParameter.Precision%2A> i <xref:System.Data.SqlClient.SqlParameter.Scale%2A> z <xref:System.Decimal> wartości przed ustawieniem wartości parametru. Korzystając z .NET Framework w wersji 1.1 lub nowszej wersji, jest zwracany wyjątek, jeśli <xref:System.Decimal> ustawiono nieprawidłową wartość parametru <xref:System.Data.SqlClient.SqlParameter.Precision%2A>. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> wartości, które przekraczają <xref:System.Decimal> skalowania parametr nadal są obcinane.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="sqlParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Typ skojarzony z tym resetuje <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wykonywania polecenia zawierającą wartości parametrów, kodu można ustawić jawnie typ parametru lub parametr można wywnioskować jej typu ze swojej wartości. Wywołanie tej metody resetuje parametr, aby go ponownie wywnioskować jej typu z wartości przekazywane w parametrze. Wywołanie tej metody ma wpływ zarówno na <xref:System.Data.SqlClient.SqlParameter.DbType%2A> i <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> właściwości <xref:System.Data.SqlClient.SqlParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSqlDbType">
      <MemberSignature Language="C#" Value="public void ResetSqlDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSqlDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSqlDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSqlDbType();" />
      <MemberSignature Language="F#" Value="member this.ResetSqlDbType : unit -&gt; unit" Usage="sqlParameter.ResetSqlDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Typ skojarzony z tym resetuje <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wykonywania polecenia zawierającą wartości parametrów, kodu można ustawić jawnie typ parametru lub parametr można wywnioskować jej typu ze swojej wartości. Wywołanie tej metody resetuje parametr, aby go ponownie wywnioskować jej typu z wartości przekazywane w parametrze. Wywołanie tej metody ma wpływ zarówno na <xref:System.Data.SqlClient.SqlParameter.DbType%2A> i <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> właściwości <xref:System.Data.SqlClient.SqlParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.SqlClient.SqlParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę miejsc dziesiętnych, do którego <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> został rozwiązany.</summary>
        <value>Liczba miejsc dziesiętnych, do którego <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> został rozwiązany. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> Jest używana przez parametry, które mają <xref:System.Data.SqlDbType> z `Decimal`.  
  
> [!WARNING]
>  Dane mogą być obcięte, jeśli <xref:System.Data.SqlClient.SqlParameter.Scale%2A> właściwość nie została jawnie określona i danych na serwerze nie mieści się w skali od 0 (domyślnie).  
  
 Nie trzeba określać wartości dla <xref:System.Data.SqlClient.SqlParameter.Precision%2A> i <xref:System.Data.SqlClient.SqlParameter.Scale%2A> właściwości dla parametrów wejściowych, jak można wywnioskować z wartością parametru. `Precision` i `Scale` są wymagane dla parametrów wyjściowych oraz scenariusze, w którym należy określić pełną metadanych dla parametru bez podania wartości, takich jak określanie wartości null z określonego precyzję i skalę.  
  
> [!NOTE]
>  Użycie tej właściwości, aby wymusić przekazane do bazy danych nie jest obsługiwane. Aby round, truncate, lub w przeciwnym razie wymuszone danych przed przekazaniem go do bazy danych, użyj <xref:System.Math> klasy, która jest częścią `System` przestrzeni nazw przed przypisywanie wartości do parametru `Value` właściwości.  
  
> [!NOTE]
>  Dostawcy danych .NET framework, które są dołączone do programu .NET Framework w wersji 1.0 nie weryfikują <xref:System.Data.SqlClient.SqlParameter.Precision%2A> lub <xref:System.Data.SqlClient.SqlParameter.Scale%2A> z <xref:System.Decimal> wartości parametrów. Może to spowodować przycięte dane do wstawienia w źródle danych. Jeśli używasz .NET Framework w wersji 1.0, sprawdzanie poprawności <xref:System.Data.SqlClient.SqlParameter.Precision%2A> i <xref:System.Data.SqlClient.SqlParameter> z <xref:System.Decimal> wartości przed ustawieniem wartości parametru. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> wartości, które przekraczają <xref:System.Decimal> skalowania parametr nadal są obcinane.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[DataWorks SqlParam.Properties#4](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#4)]
 [!code-vb[DataWorks SqlParam.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.SqlClient.SqlParameter.Size" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalny rozmiar w bajtach danych w kolumnie.</summary>
        <value>Maksymalny rozmiar w bajtach danych w kolumnie. Wartością domyślną jest wywnioskowany na podstawie wartości parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie dotyczy wartości zwracane przez tę właściwość; parametrów zwracanych z procedury składowane są zawsze liczb całkowitych ze stałym rozmiarze.  
  
 Dane wyjściowe parametru typu o zmiennej długości (na przykład nvarchar) rozmiar parametru definiuje rozmiar buforu zawierający parametr wyjściowy. Parametr wyjściowy może być obcinana do rozmiaru określony za pomocą <xref:System.Data.SqlClient.SqlParameter.Size%2A>. Dla typów znakowych rozmiar określony z <xref:System.Data.SqlClient.SqlParameter.Size%2A> w znaki.  
  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A> Właściwość jest używana dla typu binary i ciąg. Dla parametrów typu `SqlType.String`, `Size` oznacza, że długość w znakach Unicode. Dla parametrów typu `SqlType.Xml`, `Size` jest ignorowana.  
  
 Dla typów danych typu i ANSI dane ciągu <xref:System.Data.SqlClient.SqlParameter.Size%2A> właściwość odwołuje się do liczby bajtów. W przypadku danych ciąg Unicode <xref:System.Data.SqlClient.SqlParameter.Size%2A> odwołuje się do liczby znaków. Liczba ciągów nie zawiera znaku zakończenia.  
  
 Dla typów danych o zmiennej długości <xref:System.Data.SqlClient.SqlParameter.Size%2A> opisuje maksymalna ilość danych do przesłania do serwera. Na przykład, aby uzyskać wartość ciągu Unicode <xref:System.Data.SqlClient.SqlParameter.Size%2A> można ograniczyć ilość danych przesyłanych do serwera, aby najpierw sto znaków.  
  
 Jeśli nie są jawnie zestawu, rozmiar jest wywnioskowany na podstawie rzeczywisty rozmiar podana wartość parametru.  
  
 Jeśli część ułamkowa wartości parametru jest większy niż rozmiar, wartość zostanie obcięta do rozmiaru.  
  
 Dla stałej długości typów danych, wartość <xref:System.Data.SqlClient.SqlParameter.Size%2A> jest ignorowana. Można pobrać do celów informacyjnych i zwraca maksymalną liczbę bajtów używanych przez dostawcę przy przekazywaniu wartość parametru do serwera.  
  
 Aby uzyskać informacje dotyczące przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[DataWorks SqlParam.Properties#5](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#5)]
 [!code-vb[DataWorks SqlParam.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kolumny źródłowej mapowane na <see cref="T:System.Data.DataSet" /> i używane do ładowania lub zwróceniem <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></summary>
        <value>Nazwa kolumny źródłowej mapowane na <see cref="T:System.Data.DataSet" />. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> jest ustawiona jest wartość inną niż pusty ciąg, wartość parametru jest pobierana z kolumny z <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> nazwy. Jeśli <xref:System.Data.SqlClient.SqlParameter.Direction%2A> ustawiono `Input`, wartość jest pobierana z <xref:System.Data.DataSet>. Jeśli <xref:System.Data.SqlClient.SqlParameter.Direction%2A> ma ustawioną wartość `Output`, wartość jest pobierana ze źródła danych. A <xref:System.Data.SqlClient.SqlParameter.Direction%2A> z `InputOutput` jest obie te grupy.  
  
 Aby uzyskać więcej informacji o sposobie używania <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> właściwości, zobacz [parametry element DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md) i [aktualizowanie źródła danych z obiektów DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[DataWorks SqlParam.Properties#6](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#6)]
 [!code-vb[DataWorks SqlParam.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia lub pobiera wartość wskazującą, czy kolumna źródłowa jest null. Dzięki temu <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> prawidłowo wygenerować instrukcji Update dla kolumn o wartości null.</summary>
        <value>
          <see langword="true" /> Jeśli kolumna źródłowa jest wartość null; <see langword="false" /> Jeśli nie jest.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> jest używany przez <xref:System.Data.SqlClient.SqlCommandBuilder> prawidłowo wygenerować polecenia aktualizacji podczas pracy nad kolumny dopuszczające wartość null. Ogólnie rzecz biorąc, użycie <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> jest ograniczona do deweloperów dziedziczących <xref:System.Data.SqlClient.SqlCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder> używa tej właściwości, aby określić, czy kolumna źródłowa ma wartość null i ustawia tę właściwość na `true` przypadku wartości null, a `false` Jeśli nie jest. Gdy <xref:System.Data.SqlClient.SqlCommandBuilder> jest generowanie jej instrukcji Update, sprawdza <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> dla każdego parametru. Jeśli właściwość jest `true`, <xref:System.Data.SqlClient.SqlCommandBuilder> generuje klauzulach WHERE, takie jak następujące (w tym wyrażeniu zapytania "FieldName" reprezentuje nazwę pola):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 Jeśli <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> dla pole ma wartość false, <xref:System.Data.SqlClient.SqlCommandBuilder> generuje następująca klauzula WHERE:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 Ponadto @IsNull_FieldName zawiera 1, jeśli pola źródłowego zawiera wartość null i 0, jeśli nie ma. Mechanizm ten umożliwia optymalizowanie wydajności w programie SQL Server i zapewnia wspólny kod, który działa na wielu dostawców.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DataRowVersion" /> do użycia podczas ładowania <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></summary>
        <value>Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości. Wartość domyślna to <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana przez `SqlDataAdapter.UpdateCommand` podczas aktualizacji, aby określić, czy wartość oryginalnego lub bieżącego jest używany dla wartości parametru. Dzięki temu można zaktualizować kluczy podstawowych. Ta właściwość jest ustawiona na wersję <xref:System.Data.DataRow> używane przez `DataRow.Item` właściwości lub jednego z `DataRow.GetChildRows` metody <xref:System.Data.DataRow> obiektu.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[DataWorks SqlParam.Properties#7](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#7)]
 [!code-vb[DataWorks SqlParam.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDbType">
      <MemberSignature Language="C#" Value="public System.Data.SqlDbType SqlDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlDbType SqlDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDbType As SqlDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlDbType SqlDbType { System::Data::SqlDbType get(); void set(System::Data::SqlDbType value); };" />
      <MemberSignature Language="F#" Value="member this.SqlDbType : System.Data.SqlDbType with get, set" Usage="System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.SqlDbType" /> parametru.</summary>
        <value>Jeden z <see cref="T:System.Data.SqlDbType" /> wartości. Wartość domyślna to <see langword="NVarChar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> i <xref:System.Data.SqlClient.SqlParameter.DbType%2A> są połączone. W związku z tym ustawienie <xref:System.Data.SqlClient.SqlParameter.DbType%2A> zmiany <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> do obsługi <xref:System.Data.SqlDbType>.  
  
 Aby uzyskać listę obsługiwanych typów znajduje się w odpowiednim <xref:System.Data.SqlDbType> elementu członkowskiego. Aby uzyskać więcej informacji, zobacz [parametry element DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 Aby uzyskać informacje dotyczące przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlValue">
      <MemberSignature Language="C#" Value="public object SqlValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SqlValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SqlValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlValue : obj with get, set" Usage="System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru jako typu SQL.</summary>
        <value>
          <see cref="T:System.Object" /> Czyli wartości parametru, przy użyciu typów SQL. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla parametrów wejściowych, wartość jest powiązany z <xref:System.Data.SqlClient.SqlCommand> wysyłanego do serwera. Dla danych wyjściowych i parametrów wartości zwracanej, wartość jest ustawiana po zakończeniu <xref:System.Data.SqlClient.SqlCommand> oraz po <xref:System.Data.SqlClient.SqlDataReader> jest zamknięty.  
  
 Ta właściwość może zostać ustawiona na wartość null lub <xref:System.DBNull.Value?displayProperty=nameWithType>. Użyj <xref:System.DBNull.Value?displayProperty=nameWithType> wysyłania wartości NULL jako wartość parametru. Użyj wartości null ani nie ustawiaj <xref:System.Data.SqlClient.SqlParameter.SqlValue%2A?displayProperty=nameWithType> można użyć wartości domyślnej dla parametru.  
  
 Jeśli aplikacja określa typ bazy danych, wiązana wartość jest konwertowana na tego typu, gdy dostawca wysyła dane do serwera. Dostawca podejmuje próbę przekonwertowania dowolnego typu wartości, jeśli obsługuje <xref:System.IConvertible> interfejsu. Może spowodować błędy konwersji, jeśli określony typ nie jest zgodny z wartością.  
  
 Zarówno <xref:System.Data.SqlClient.SqlParameter.DbType%2A> i <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> można wywnioskować przez ustawienie właściwości <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>.  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> Właściwości jest zastępowany przez `SqlDataAdapter.UpdateCommand`.  
  
 Użyj <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> właściwości do wartości parametrów jako wspólnego języka środowiska uruchomieniowego (języka wspólnego CLR) typy zwracane.  
  
 Aby uzyskać informacje dotyczące przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nowy <see cref="T:System.Object" /> czyli kopię tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Data.SqlClient.SqlParameter> wystąpienia jest rzutowane na <xref:System.ICloneable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sqlParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg, który zawiera <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</summary>
        <returns>Ciąg, który zawiera <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę typu dla parametru przechowywanymi w tabeli.</summary>
        <value>Nazwa typu określonego parametru przechowywanymi w tabeli.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public string UdtTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property UdtTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UdtTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UdtTypeName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="string" /> reprezentujący typ zdefiniowany przez użytkownika jako parametr.</summary>
        <value>A <see langword="string" /> reprezentujący pełną nazwę typu zdefiniowane przez użytkownika w bazie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Potrzeby demonstrowania próbki <xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>, zobacz [pobierania danych UDT](http://msdn.microsoft.com/library/ms131080.aspx).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.SqlClient.SqlParameter.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru.</summary>
        <value>
          <see cref="T:System.Object" /> Oznacza to wartość parametru. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla parametrów wejściowych, wartość jest powiązany z <xref:System.Data.SqlClient.SqlCommand> wysyłanego do serwera. Dla danych wyjściowych i parametrów wartości zwracanej, wartość jest ustawiana po zakończeniu <xref:System.Data.SqlClient.SqlCommand> oraz po <xref:System.Data.SqlClient.SqlDataReader> jest zamknięty.  
  
 Ta właściwość może zostać ustawiona na wartość null lub <xref:System.DBNull.Value>. Użyj <xref:System.DBNull.Value> wysyłania wartości NULL jako wartość parametru. Użyj wartości null ani nie ustawiaj <xref:System.Data.SqlClient.SqlParameter.Value%2A> można użyć wartości domyślnej dla parametru.  
  
 Jeśli dane XML z systemem innym niż Unicode są przekazywane jako ciąg, jest zgłaszany wyjątek.  
  
 Jeśli aplikacja określa typ bazy danych, wiązana wartość jest konwertowana na tego typu, gdy dostawca wysyła dane do serwera. Dostawca podejmuje próbę przekonwertowania dowolnego typu wartości, jeśli obsługuje <xref:System.IConvertible> interfejsu. Może spowodować błędy konwersji, jeśli określony typ nie jest zgodny z wartością.  
  
 Zarówno <xref:System.Data.SqlClient.SqlParameter.DbType%2A> i <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> można wywnioskować za pomocą ustawienia wartości właściwości.  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A> Właściwości jest zastępowany przez `SqlDataAdapter.UpdateCommand`.  
  
 Aby uzyskać informacje dotyczące przesyłania strumieniowego, zobacz [obsługę przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlParameter> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[DataWorks SqlParam.Properties#8](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#8)]
 [!code-vb[DataWorks SqlParam.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionDatabase">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionDatabase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionDatabase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionDatabase : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę bazy danych, w którym znajduje się kolekcji schematu dla tego wystąpienia XML.</summary>
        <value>Nazwa bazy danych, w którym znajduje się kolekcji schematu dla tego wystąpienia XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest równa null (`Nothing` programu Microsoft Visual Basic), jeśli kolekcja jest zdefiniowana w bieżącej bazie danych. On również ma wartość null, jeśli brak kolekcji schematu, w którym to przypadku <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> i <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> również mają wartość null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionName">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kolekcji schematu dla tego wystąpienia XML.</summary>
        <value>Nazwa kolekcji schematu dla tego wystąpienia XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest równa null (`Nothing` programu Microsoft Visual Basic) w przypadku nie skojarzony z kolekcją schematów. Jeśli wartość jest równa null, następnie <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> i <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> również mają wartość null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionOwningSchema">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionOwningSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionOwningSchema As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionOwningSchema { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionOwningSchema : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdzie znajduje się kolekcji schematu dla tego wystąpienia XML będący właścicielem schemat relacyjny.</summary>
        <value>Schemat relacyjny będący właścicielem tego wystąpienia XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest równa null (`Nothing` programu Microsoft Visual Basic), jeśli kolekcja jest zdefiniowana w bieżącej bazie danych. On również ma wartość null, jeśli brak kolekcji schematu, w którym to przypadku <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> i <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> również mają wartość null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>