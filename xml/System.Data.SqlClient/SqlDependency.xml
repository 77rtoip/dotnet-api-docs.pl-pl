<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf3ea5f8956f28a298c110f33d2b19d7c273fed8" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52593250" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.SqlClient.SqlDependency" /> Obiekt reprezentuje zależność powiadomień kwerendy między aplikacją a wystąpienia programu SQL Server. Aplikacja może utworzyć <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu i Zarejestruj się, aby otrzymywać powiadomienia za pośrednictwem <see cref="T:System.Data.SqlClient.OnChangeEventHandler" /> programu obsługi zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> jest idealna dla pamięci podręcznej scenariuszy, w którym aplikacji ASP.NET lub usługi warstwy środkowej musi przechowywać pewne informacje buforowane w pamięci. <xref:System.Data.SqlClient.SqlDependency> Umożliwia otrzymywanie powiadomień o zmianie danych w bazie danych, dzięki czemu mogą być odświeżane pamięci podręcznej.  
  
 Aby skonfigurować zależność, należy skojarzyć <xref:System.Data.SqlClient.SqlDependency> obiektu do jednej lub kilku <xref:System.Data.SqlClient.SqlCommand> obiektów. Aby otrzymywać powiadomienia, musisz zasubskrybować <xref:System.Data.SqlClient.SqlDependency.OnChange> zdarzeń. Aby uzyskać więcej informacji o wymaganiach dotyczących tworzenia zapytania dotyczące powiadomień, zobacz [Praca z powiadomienia o zapytaniach](/sql/relational-databases/native-client/features/working-with-query-notifications).
  
> [!NOTE]
> <xref:System.Data.SqlClient.SqlDependency> została zaprojektowana do użycia w programie ASP.NET lub usługi warstwy środkowej przypadku stosunkowo małej liczby serwerów mających zależności active w bazie danych. Nie został zaprojektowany do użytku w aplikacjach klienckich, w którym musi setek lub tysięcy komputerów klienckich <xref:System.Data.SqlClient.SqlDependency> obiektów dla pojedynczego serwera bazy danych. Jeśli tworzysz aplikację, gdzie potrzebujesz niezawodnej sekundy powiadomienia po zmianie danych, zapoznaj się z sekcji [planowania strategii wydajne powiadomienia kwerendy](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#planning-an-efficient-query-notifications-strategy) i [alternatywy dla zapytania Powiadomienia](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v=sql.105)#alternatives-to-query-notifications) w [planowanie powiadomień](https://docs.microsoft.com/previous-versions/sql/sql-server-2008-r2/ms187528(v%3dsql.105)) artykułu.
  
 Aby uzyskać więcej informacji, zobacz [powiadomienia o zapytaniach w programie SQL Server](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) i [kompilowanie rozwiązań powiadomień](https://docs.microsoft.com/previous-versions/sql/sql-server-2005/ms171065(v%3dsql.90)).  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency.OnChange> Zdarzenia mogą być generowane w innym wątku z wątku, który zainicjował wykonanie polecenia.  
  
 Powiadomienia o zapytaniach są obsługiwane tylko w przypadku instrukcji SELECT, spełniających określone wymagania. 
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy przy użyciu ustawień domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor inicjuje <xref:System.Data.SqlClient.SqlDependency> przy użyciu domyślnej nazwy usług programu Service Broker i limitu czasu. W pewnym momencie po konstrukcji, należy użyć <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> do kojarzenia jedno lub kilka poleceń tym <xref:System.Data.SqlClient.SqlDependency> obiektu.  
  
 Powiadomienia o zapytaniach są obsługiwane tylko w przypadku instrukcji SELECT, spełniających określone wymagania. Aby uzyskać więcej informacji, zobacz [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) i [Praca z powiadomienia o zapytaniach](/sql/connect/oledb/features/working-with-query-notifications).

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Obiektu do skojarzenia z tym <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu. Konstruktor zostanie skonfigurowany <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu i powiąż go do polecenia.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy i kojarzy ją z <see cref="T:System.Data.SqlClient.SqlCommand" /> parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wewnętrznie, ten konstruktor tworzy wystąpienie <xref:System.Data.Sql.SqlNotificationRequest> klasy i wiąże go do <xref:System.Data.SqlClient.SqlCommand> obiektu.  
  
 Powiadomienia o zapytaniach są obsługiwane tylko w przypadku instrukcji SELECT, spełniających określone wymagania. Aby uzyskać więcej informacji, zobacz [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) i [Praca z powiadomienia o zapytaniach](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Obiekt ma już <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu przypisane do jego <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> właściwości, a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> nie jest skojarzony z tą zależnością.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Obiektu do skojarzenia z tym <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu. Konstruktor konfiguruje <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu i powiąż go do polecenia.</param>
        <param name="options">Opcje żądania powiadomienia ma być używany przez tę zależność.  <c>wartość null</c> używać domyślnej usługi.</param>
        <param name="timeout">Limit czasu dla tego powiadomienia, w ciągu kilku sekund. Wartość domyślna to 0, wskazujący, że limit czasu serwera powinien być używany.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy, kojarzy ją z <see cref="T:System.Data.SqlClient.SqlCommand" /> parametru i określa opcje powiadamiania i wartość limitu czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiadomienia o zapytaniach są obsługiwane tylko w przypadku instrukcji SELECT, spełniających określone wymagania. Aby uzyskać więcej informacji, zobacz [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) i [Praca z powiadomienia o zapytaniach](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość limitu czasu jest mniejsza od zera.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Obiekt ma już <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu przypisane do jego <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> właściwości i że <see cref="T:System.Data.Sql.SqlNotificationRequest" /> nie jest skojarzony z tą zależnością.  
  
Próbowano utworzyć **SqlDependency** wystąpienia z w ramach SQLCLR.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">A <see cref="T:System.Data.SqlClient.SqlCommand" /> obiekt, który zawiera instrukcję, która jest prawidłowa dla powiadomienia.</param>
        <summary>Kojarzy <see cref="T:System.Data.SqlClient.SqlCommand" /> obiektu z tym <see cref="T:System.Data.SqlClient.SqlDependency" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiadomienia o zapytaniach są obsługiwane tylko w przypadku instrukcji SELECT, spełniających określone wymagania. Aby uzyskać więcej informacji, zobacz [SQL Server Service Broker](/sql/database-engine/configure-windows/sql-server-service-broker) i [Praca z powiadomienia o zapytaniach](/sql/connect/oledb/features/working-with-query-notifications).
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> Parametr ma wartość null.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Obiekt ma już <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu przypisane do jego <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> właściwości, a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> nie jest skojarzony z tą zależnością.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jeden z zestawów danych skojarzonych z zależnością uległy zmianie.</summary>
        <value>Wartość logiczna wskazująca, czy jeden z nich wyniku ustawia został zmieniony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz <xref:System.Data.SqlClient.SqlDependency.OnChange> zdarzenia, można sprawdzić <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> właściwości w celu określenia, czy wyniki zapytania uległy zmianie.  
  
 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> Właściwości nie oznacza zmiany w danych. Wygasłe innych okolicznościach, takie jak limit czasu i można ustawić żądania powiadomienia również generować zdarzenia zmiany.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która jednoznacznie identyfikuje tego wystąpienia <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy.</summary>
        <value>Reprezentacja ciągu identyfikatora GUID, który jest generowany dla każdego wystąpienia <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Id%2A> Właściwość jest używana do unikatowej identyfikacji danej <xref:System.Data.SqlClient.SqlDependency> wystąpienia.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy otrzyma powiadomienie dla dowolnego polecenia skojarzony z tym <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> występuje, gdy zmienią się wyniki dla skojarzone polecenie. Jeśli nie używasz <xref:System.Data.SqlClient.SqlDependency.OnChange>, możesz sprawdzić <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> właściwości w celu określenia, czy wyniki zapytania zostały zmienione.  
  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> Zdarzeń nie musi oznaczać zmiany w danych. Inne okoliczności, takich jak upływie limitu czasu, oraz generować można ustawić żądania powiadomienia <xref:System.Data.SqlClient.SqlDependency.OnChange>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna odbiornik do odbierania powiadomień o zmianie zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> Odbiornik zostanie ponownie uruchomiony po wystąpieniu błędu w połączeniu z programu SQL Server.  
  
 Wiele wywołań <xref:System.Data.SqlClient.SqlDependency.Start%2A> metody jest możliwe, podlegają następującym ograniczeniom:  
  
-   Wiele wywołań z identycznymi parametrami (tych samych parametrach połączenia i poświadczenia Windows w wątku wywołującego) są prawidłowe.  
  
-   Wiele wywołań z innymi ciągami połączenia są prawidłowe tak długo, jak:  
  
    -   Każdy ciąg połączeń określa inną bazę danych lub  
  
    -   Każdy ciąg połączeń określa innego użytkownika lub  
  
    -   Pochodzą z różnych domenach aplikacji.  
  
 Możesz wprowadzić <xref:System.Data.SqlClient.SqlDependency> działają poprawnie na potrzeby aplikacji, które reprezentują poświadczenia innego użytkownika bez nadawania roli właściciela do grupy, ponieważ różni użytkownicy mogą subskrybować i analizują przy użyciu wielu wątków (przy użyciu <xref:System.Web.Caching.SqlCacheDependency> lub <xref:System.Data.SqlClient.SqlCommand>) do kolejki powiadomień utworzone przez administratora. Po uruchomieniu domeny aplikacji odpowiednie wywołania Start przy użyciu poświadczeń użytkownika, który ma uprawnienia do zainicjowania/kolejki usługi service (Utwórz KOLEJKĘ i Utwórz usługę uprawnienia bazy danych programu) (Windows). Upewnij się, czy funkcja Start jest wywoływana tylko po dla domeny AppDomain, w przeciwnym razie niejednoznaczności zgłaszany jest wyjątek.  Wątek użytkownika musi mieć uprawnienia do subskrybowania powiadomień (uprawnienie SUBSKRYBOWANIA powiadomienia o ZAPYTANIACH do bazy danych). <xref:System.Data.SqlClient.SqlDependency> skojarzysz żądania subskrypcji użytkownika bez uprawnień administratora do usługi kolejki utworzonej przez administratora.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia dla wystąpienia programu SQL Server, z którego można uzyskać powiadomienia o zmianie.</param>
        <summary>Rozpoczyna odbiornik do odbierania powiadomień o zmianie zależności z wystąpienia programu SQL Server, określona przez ciąg połączenia.</summary>
        <returns>
          <see langword="true" /> Jeśli odbiornik zainicjowane pomyślnie; <see langword="false" /> Jeśli niezgodny odbiornik już istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda rozpoczyna odbiornika dla <xref:System.AppDomain> do odbierania powiadomień zależności z wystąpienia programu SQL Server określony przez `connectionString` parametru. Ta metoda może być wywoływana więcej niż raz w z innymi ciągami połączenia wielu serwerów.  
  
 Aby uzyskać dodatkowe uwagi, zobacz <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="connectionString" /> Parametru jest taka sama jak poprzednie wywołanie tej metody, ale różnią się parametrami.  
  
Metoda została wywołana w obrębie środowiska CLR.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma wymaganych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> uprawnienie zabezpieczenia dostępu kodu.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Kolejne wywołanie do metody wprowadzono ekwiwalent <paramref name="connectionString" /> parametru za pomocą innego użytkownika lub użytkownika, które nie domyślnie ten sam schemat.  
  
Ponadto wszystkie podstawowe **SqlClient** wyjątków.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia dla wystąpienia programu SQL Server, z którego można uzyskać powiadomienia o zmianie.</param>
        <param name="queue">Istniejącej kolejki brokera usług serwera SQL do użycia. Jeśli <see langword="null" />, kolejka domyślna jest używana.</param>
        <summary>Rozpoczyna odbiornik do odbierania powiadomień o zmianie zależności z wystąpienia programu SQL Server, określona przez ciąg połączenia przy użyciu określonej kolejki brokera usług serwera SQL.</summary>
        <returns>
          <see langword="true" /> Jeśli odbiornik zainicjowane pomyślnie; <see langword="false" /> Jeśli niezgodny odbiornik już istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda rozpoczyna odbiornika dla <xref:System.AppDomain> do odbierania powiadomień zależności z wystąpienia programu SQL Server określony przez `connectionString` parametru. Ta metoda może być wywoływana więcej niż raz w z innymi ciągami połączenia wielu serwerów.  
  
 Jeśli nazwa kolejki, nie zostanie określona, <xref:System.Data.SqlClient.SqlDependency> tworzy tymczasowy kolejki i usługi w serwer, który jest używany dla całego procesu, nawet wtedy, gdy proces obejmuje więcej niż jedną <xref:System.AppDomain>. Kolejki i usługi zostaną automatycznie usunięte podczas zamykania aplikacji.  
  
 Aby uzyskać dodatkowe uwagi, zobacz <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="connectionString" /> Parametru jest taka sama jak poprzednie wywołanie tej metody, ale różnią się parametrami.  
  
Metoda została wywołana w obrębie środowiska CLR.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma wymaganych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> uprawnienie zabezpieczenia dostępu kodu.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Kolejne wywołanie do metody wprowadzono ekwiwalent <paramref name="connectionString" /> parametr, ale innego użytkownika lub użytkownika, które nie domyślnie ten sam schemat.  
  
Ponadto wszystkie podstawowe **SqlClient** wyjątków.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zatrzymuje odbiornika dla połączeń, określona w poprzednim <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> wywołania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> Odbiornik zostanie ponownie uruchomiony po wystąpieniu błędu w połączeniu z programu SQL Server.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia dla wystąpienia programu SQL Server, który był używany w ramach poprzedniego <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> wywołania.</param>
        <summary>Zatrzymuje odbiornika dla połączeń, określona w poprzednim <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> wywołania.</summary>
        <returns>
          <see langword="true" /> Jeśli odbiornik został całkowicie zatrzymany; <see langword="false" /> Jeśli <see cref="T:System.AppDomain" /> było niezwiązanej z odbiornik, ale nie jest co najmniej jedno inne <see cref="T:System.AppDomain" /> przy użyciu tego samego odbiornika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> Metoda musi zostać wywołana dla każdego <xref:System.Data.SqlClient.SqlDependency.Start%2A> wywołania. Dany odbiornik zamyka tylko w pełni, gdy otrzymuje taką samą liczbę <xref:System.Data.SqlClient.SqlDependency.Stop%2A> żądania jako <xref:System.Data.SqlClient.SqlDependency.Start%2A> żądań.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Metoda została wywołana z wewnątrz SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma wymaganych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> uprawnienie zabezpieczenia dostępu kodu.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Bazowy **SqlClient** Wystąpił wyjątek.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia dla wystąpienia programu SQL Server, który był używany w ramach poprzedniego <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> wywołania.</param>
        <param name="queue">Kolejki brokera usług serwera SQL, który był używany w ramach poprzedniego <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> wywołania.</param>
        <summary>Zatrzymuje odbiornika dla połączeń, określona w poprzednim <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> wywołania.</summary>
        <returns>
          <see langword="true" /> Jeśli odbiornik został całkowicie zatrzymany; <see langword="false" /> Jeśli <see cref="T:System.AppDomain" /> było niezwiązanej z odbiornik, ale istnieje co najmniej jedno inne <see cref="T:System.AppDomain" /> przy użyciu tego samego odbiornika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> Metoda musi zostać wywołana dla każdego <xref:System.Data.SqlClient.SqlDependency.Start%2A> wywołania. Dany odbiornik zamyka tylko w pełni, gdy otrzymuje taką samą liczbę <xref:System.Data.SqlClient.SqlDependency.Stop%2A> żądania jako <xref:System.Data.SqlClient.SqlDependency.Start%2A> żądań.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Metoda została wywołana z wewnątrz SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma wymaganych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> uprawnienie zabezpieczenia dostępu kodu.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">I podstawowych **SqlClient** Wystąpił wyjątek.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>