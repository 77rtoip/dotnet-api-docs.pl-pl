<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5d605853d60b72cc579a044b61b343ee64f40f4" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.SqlClient.SqlDependency" /> Obiekt reprezentuje zapytania powiadomień zależności pomiędzy aplikacją i wystąpienia programu SQL Server. Aplikacja może utworzyć <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu i zarejestruj, aby otrzymywać powiadomienia za pośrednictwem <see cref="T:System.Data.SqlClient.OnChangeEventHandler" /> programu obsługi zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> jest idealny dla buforowania w scenariuszach, w którym aplikacji ASP.NET lub usługi warstwy środkowej musi zachować pewne informacje w pamięci podręcznej w pamięci. <xref:System.Data.SqlClient.SqlDependency> pozwala na otrzymywanie powiadomień o zmianie danych w bazie danych, aby można było odświeżyć pamięci podręcznej.  
  
 Aby skonfigurować zależności, musisz skojarzyć <xref:System.Data.SqlClient.SqlDependency> obiektu do jednej lub kilku <xref:System.Data.SqlClient.SqlCommand> obiektów. Aby otrzymywać powiadomienia, należy subskrybować <xref:System.Data.SqlClient.SqlDependency.OnChange> zdarzeń. Aby uzyskać więcej informacji o wymaganiach dotyczących tworzenia zapytań dotyczących powiadomień zobacz "Tworzenie zapytań dla powiadomień" w dokumentacji SQL Server — książki Online.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency> została zaprojektowana w celu w ASP.NET i usługi warstwy środkowej można używać w przypadku, gdy istnieje stosunkowo małej liczby serwerów mających zależności active w bazie danych. Nie został zaprojektowany do użytku w aplikacjach klienckich, w którym musi setek lub tysięcy komputerów klienckich <xref:System.Data.SqlClient.SqlDependency> obiektów dla serwera pojedynczej bazy danych. Jeśli tworzysz aplikację, konieczne niezawodnej sekundę podrzędne powiadomienia po zmianie danych, należy przejrzeć sekcje **planowania strategii wydajne powiadomienia kwerendy** i **alternatywy dla zapytania Powiadomienia** w [planowanie powiadomienia](http://go.microsoft.com/fwlink/?LinkId=211984) tematu w dokumentacji SQL Server — książki Online.  
  
 Aby uzyskać więcej informacji, zobacz [powiadomień o zapytaniach w programie SQL Server](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) oraz "Tworzenie rozwiązań powiadomień" w dokumentacji SQL Server — książki Online.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency.OnChange> Zdarzeń mogą być generowane w innym wątku niż wątek, który zainicjował wykonanie polecenia.  
  
 Liczba powiadomień o zapytaniach są obsługiwane tylko dla instrukcji SELECT, które spełniają określone wymagania. Poniższa tabela zawiera linki do dokumentacji programu Service Broker i powiadomień o zapytaniach w dokumentacji SQL Server — książki Online.  
  
 **SQL Server — książki Online**  
  
-   [Tworzenie zapytania o powiadomienie](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla programu Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Zabezpieczenia i ochrona (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla usług powiadomień](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Kwerenda powiadomienia uprawnień](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Międzynarodowe uwagi dotyczące programu Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Zagadnienia dotyczące projektowania rozwiązania (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centrum usługi Broker Developer informacyjne](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Przewodnik dewelopera usługi (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy przy użyciu ustawień domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor inicjuje <xref:System.Data.SqlClient.SqlDependency> przy użyciu domyślnej nazwy usługi Service Broker i limit czasu. W pewnym momencie po wykonaniu konstrukcji, należy użyć <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> do kojarzenia co najmniej jedno polecenie do tego <xref:System.Data.SqlClient.SqlDependency> obiektu.  
  
 Liczba powiadomień o zapytaniach są obsługiwane tylko dla instrukcji SELECT, które spełniają określone wymagania. Poniższa tabela zawiera linki do dokumentacji programu Service Broker i powiadomień o zapytaniach w dokumentacji SQL Server — książki Online.  
  
 **SQL Server — książki Online**  
  
-   [Tworzenie zapytania o powiadomienie](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla programu Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Zabezpieczenia i ochrona (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla usług powiadomień](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Kwerenda powiadomienia uprawnień](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Międzynarodowe uwagi dotyczące programu Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Zagadnienia dotyczące projektowania rozwiązania (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centrum usługi Broker Developer informacyjne](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Przewodnik dewelopera usługi (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Obiektu do skojarzenia z tym <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu. Konstruktor skonfiguruje <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu i powiązać go z polecenia.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy i kojarzy ją z <see cref="T:System.Data.SqlClient.SqlCommand" /> parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wewnętrznie, ten konstruktor tworzy wystąpienie <xref:System.Data.Sql.SqlNotificationRequest> klasy i wiąże go do <xref:System.Data.SqlClient.SqlCommand> obiektu.  
  
 Liczba powiadomień o zapytaniach są obsługiwane tylko dla instrukcji SELECT, które spełniają określone wymagania. Poniższa tabela zawiera linki do dokumentacji programu Service Broker i powiadomień o zapytaniach w dokumentacji SQL Server — książki Online.  
  
 **SQL Server — książki Online**  
  
-   [Tworzenie zapytania o powiadomienie](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla programu Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Zabezpieczenia i ochrona (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla usług powiadomień](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Kwerenda powiadomienia uprawnień](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Międzynarodowe uwagi dotyczące programu Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Zagadnienia dotyczące projektowania rozwiązania (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centrum usługi Broker Developer informacyjne](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Przewodnik dewelopera usługi (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Ma już obiekt <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu przypisane do jego <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> właściwości oraz że <see cref="T:System.Data.Sql.SqlNotificationRequest" /> nie jest skojarzony z tym zależności.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Obiektu do skojarzenia z tym <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu. Ustawia konstruktora <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu i powiązać go z polecenia.</param>
        <param name="options">Opcje żądania powiadomienie ma być używany przez tę zależność.  <c>wartość null</c> do korzystania z usługi domyślne.</param>
        <param name="timeout">Limit czasu dla tego powiadomienia w sekundach. Wartość domyślna to 0, wskazujący, że należy używać limitu czasu serwera.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy, kojarzy ją z <see cref="T:System.Data.SqlClient.SqlCommand" /> parametru i określa opcje powiadamiania i wartość limitu czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Liczba powiadomień o zapytaniach są obsługiwane tylko dla instrukcji SELECT, które spełniają określone wymagania. Poniższa tabela zawiera linki do dokumentacji programu Service Broker i powiadomień o zapytaniach w dokumentacji SQL Server — książki Online.  
  
 **SQL Server — książki Online**  
  
-   [Tworzenie zapytania o powiadomienie](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla programu Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Zabezpieczenia i ochrona (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla usług powiadomień](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Kwerenda powiadomienia uprawnień](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Międzynarodowe uwagi dotyczące programu Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Zagadnienia dotyczące projektowania rozwiązania (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centrum usługi Broker Developer informacyjne](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Przewodnik dewelopera usługi (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość limitu czasu jest mniejsza od zera.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Ma już obiekt <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu przypisane do jego <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> właściwości oraz że <see cref="T:System.Data.Sql.SqlNotificationRequest" /> nie jest skojarzony z tym zależności.  
  
 Podjęto próbę utworzenia **SqlDependency** wystąpienia z wewnątrz SQLCLR.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">A <see cref="T:System.Data.SqlClient.SqlCommand" /> obiekt zawierający instrukcję, która jest nieprawidłowa dla powiadomienia.</param>
        <summary>Kojarzy <see cref="T:System.Data.SqlClient.SqlCommand" /> obiektu z tym <see cref="T:System.Data.SqlClient.SqlDependency" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Liczba powiadomień o zapytaniach są obsługiwane tylko dla instrukcji SELECT, które spełniają określone wymagania. Poniższa tabela zawiera linki do dokumentacji programu Service Broker i powiadomień o zapytaniach w dokumentacji SQL Server — książki Online.  
  
 **SQL Server — książki Online**  
  
-   [Tworzenie zapytania o powiadomienie](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla programu Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Zabezpieczenia i ochrona (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Zagadnienia dotyczące zabezpieczeń dla usług powiadomień](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Kwerenda powiadomienia uprawnień](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Międzynarodowe uwagi dotyczące programu Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Zagadnienia dotyczące projektowania rozwiązania (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Centrum usługi Broker Developer informacyjne](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Przewodnik dewelopera usługi (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> Parametr ma wartość null.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> Ma już obiekt <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiektu przypisane do jego <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> właściwości oraz że <see cref="T:System.Data.Sql.SqlNotificationRequest" /> nie jest skojarzony z tym zależności.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jeden z zestawów wyników skojarzone z zależnością został zmieniony.</summary>
        <value>Wartość logiczna określająca, czy jeden wynik konfiguruje została zmieniona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie używasz <xref:System.Data.SqlClient.SqlDependency.OnChange> zdarzeń, można sprawdzić <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> właściwości w celu określenia, jeśli zmienione wyniki zapytania.  
  
 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> Właściwości nie musi oznaczać zmiany w danych. Inne okoliczności, takie jak limit czasu wygasła i nie można ustawić żądania powiadomienia również generować zdarzenia zmiany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która unikatowo identyfikuje to wystąpienie <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy.</summary>
        <value>Reprezentacja ciągu identyfikator GUID generowany dla każdego wystąpienia <see cref="T:System.Data.SqlClient.SqlDependency" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Id%2A> Właściwość jest używana do unikatowej identyfikacji danej <xref:System.Data.SqlClient.SqlDependency> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy otrzyma powiadomienie dla każdego polecenia skojarzony z tym <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> występuje, gdy wyniki skojarzone polecenie zmiany. Jeśli nie używasz <xref:System.Data.SqlClient.SqlDependency.OnChange>, można sprawdzić <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> właściwości w celu określenia, czy wyniki zapytania zostały zmienione.  
  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> Zdarzeń nie musi oznaczać zmiany w danych. Inne okoliczności, takie jak limit czasu wygasła i nie można ustawić żądania powiadomienia także wygenerować <xref:System.Data.SqlClient.SqlDependency.OnChange>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna odbiornik do otrzymywania powiadomień o zmianie zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> Odbiornik zostanie ponownie uruchomiony po wystąpieniu błędu w połączeniu programu SQL Server.  
  
 Wiele wywołań <xref:System.Data.SqlClient.SqlDependency.Start%2A> metody mogą podlegać, następujące ograniczenia:  
  
-   Wiele wywołań z identycznymi parametrami (tych samych parametrach połączenia i poświadczenia systemu Windows w wątku wywołującym) są prawidłowe.  
  
-   Wiele połączeń z innymi parametrami połączenia są prawidłowe tak długo, jak:  
  
    -   Każdy ciąg połączenia określa inną bazę danych, lub  
  
    -   Każdy ciąg połączenia określa innego użytkownika lub  
  
    -   Wywołania pochodzą z różnych domen aplikacji.  
  
 Możesz wprowadzić <xref:System.Data.SqlClient.SqlDependency> pracować poprawnie dla aplikacji, które używają wielu wątków do reprezentowania poświadczenia innego użytkownika bez nadawania roli dbo do grupy, ponieważ różni użytkownicy mogą subskrybować i nasłuchiwania (przy użyciu <xref:System.Web.Caching.SqlCacheDependency> lub <xref:System.Data.SqlClient.SqlCommand>) do kolejki powiadomień utworzonych przez administratora. Po uruchomieniu domeny danej aplikacji, wywołaj metodę Start przy użyciu poświadczeń użytkownika, który ma uprawnienia do inicjowania usługi/kolejki (Utwórz KOLEJKĘ i Utwórz usługę uprawnienia dla bazy danych) (system Windows). Upewnij się, uruchamiania tylko jest wywoływana po dla domeny AppDomain, w przeciwnym razie niejednoznaczności Wystąpił wyjątek.  Wątek użytkownika musi mieć uprawnienia do subskrybowania powiadomień (uprawnienia SUBSKRYPCJI powiadomień o ZAPYTANIACH do bazy danych). <xref:System.Data.SqlClient.SqlDependency> zostanie skojarzony żądanie subskrypcji użytkownika bez uprawnień administratora do usługi kolejki utworzonej przez administratora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Ciąg połączenia dla wystąpienia programu SQL Server, z którego można uzyskać powiadomienia o zmianie.</param>
        <summary>Rozpoczyna odbiornik do odbierania powiadomień o zmianie w zależności od wystąpienia programu SQL Server określona przez ciąg połączenia.</summary>
        <returns>**wartość true,** Jeśli odbiornik zainicjowane pomyślnie; **false** Jeśli odbiornik zgodne już istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda uruchamia odbiornika dla <xref:System.AppDomain> do odbierania powiadomień zależności z wystąpienia programu SQL Server, określony przez `connectionString` parametru. Tę metodę można wywoływać więcej niż jeden raz z innymi parametrami połączenia dla wielu serwerów.  
  
 Aby uzyskać dodatkowe uwagi, zobacz <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="connectionString" /> Parametr jest taka sama jak poprzednie wywołanie tej metody, ale różnią się parametrami.  
  
 Metoda została wywołana w ramach środowiska CLR.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma wymaganych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> kodu uprawnienia zabezpieczeń (CAS).</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wprowadzono kolejne wywołanie do metody z równoważną <paramref name="connectionString" /> parametru z innego użytkownika lub użytkownika, który nie domyślnie ten sam schemat.  
  
 Ponadto wszelkie bazowy **SqlClient** wyjątków.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Ciąg połączenia dla wystąpienia programu SQL Server, z którego można uzyskać powiadomienia o zmianie.</param>
        <param name="queue">Istniejącej kolejki brokera usług serwera SQL do użycia. Jeśli <see langword="null" />, domyślnej kolejki jest używany.</param>
        <summary>Rozpoczyna odbiornik do odbierania powiadomień o zmianie w zależności od wystąpienia programu SQL Server określona przez ciąg połączenia przy użyciu określonej kolejki brokera usług serwera SQL.</summary>
        <returns>**wartość true,** Jeśli odbiornik zainicjowane pomyślnie; **false** Jeśli odbiornik zgodne już istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda uruchamia odbiornika dla <xref:System.AppDomain> do odbierania powiadomień zależności z wystąpienia programu SQL Server, określony przez `connectionString` parametru. Tę metodę można wywoływać więcej niż jeden raz z innymi parametrami połączenia dla wielu serwerów.  
  
 Jeśli nazwa kolejki nie jest określona, <xref:System.Data.SqlClient.SqlDependency> tworzy tymczasowy kolejki i usługi w serwera, który jest używany dla całego procesu, nawet wtedy, gdy proces obejmuje więcej niż jeden <xref:System.AppDomain>. Kolejki i usługi zostaną automatycznie usunięte podczas zamykania aplikacji.  
  
 Aby uzyskać dodatkowe uwagi, zobacz <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="connectionString" /> Parametr jest taka sama jak poprzednie wywołanie tej metody, ale różnią się parametrami.  
  
 Metoda została wywołana w ramach środowiska CLR.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma wymaganych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> kodu uprawnienia zabezpieczeń (CAS).</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wprowadzono kolejne wywołanie do metody z równoważną <paramref name="connectionString" /> parametru, ale innego użytkownika lub użytkownika, który nie domyślnie ten sam schemat.  
  
 Ponadto wszelkie bazowy **SqlClient** wyjątków.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zatrzymuje odbiornika dla połączenia określona w poprzednim <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> wywołania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> Odbiornik zostanie ponownie uruchomiony po wystąpieniu błędu w połączeniu programu SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia dla wystąpienia programu SQL Server, który został użyty w poprzedniej <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> wywołania.</param>
        <summary>Zatrzymuje odbiornika dla połączenia określona w poprzednim <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> wywołania.</summary>
        <returns>**wartość true,** Jeśli odbiornik został całkowicie zatrzymany; **false** Jeśli <see cref="T:System.AppDomain" /> został niezwiązanej z odbiornika, ale nie jest co najmniej jeden z pozostałych <see cref="T:System.AppDomain" /> przy użyciu tego samego odbiornika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> Metoda musi zostać wywołana dla każdego <xref:System.Data.SqlClient.SqlDependency.Start%2A> wywołania. Dany odbiornik tylko zamyka pełni, gdy odbiera taką samą liczbę <xref:System.Data.SqlClient.SqlDependency.Stop%2A> żądania jako <xref:System.Data.SqlClient.SqlDependency.Start%2A> żądań.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Metoda została wywołana w SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma wymaganych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> kodu uprawnienia zabezpieczeń (CAS).</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Bazowy **SqlClient** Wystąpił wyjątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia dla wystąpienia programu SQL Server, który został użyty w poprzedniej <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> wywołania.</param>
        <param name="queue">Kolejki brokera usług serwera SQL, który został użyty w poprzedniej <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> wywołania.</param>
        <summary>Zatrzymuje odbiornika dla połączenia określona w poprzednim <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> wywołania.</summary>
        <returns>**wartość true,** Jeśli odbiornik został całkowicie zatrzymany; **false** Jeśli <see cref="T:System.AppDomain" /> został niezwiązanej z odbiornika, ale istnieje co najmniej jedno inne <see cref="T:System.AppDomain" /> przy użyciu tego samego odbiornika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> Metoda musi zostać wywołana dla każdego <xref:System.Data.SqlClient.SqlDependency.Start%2A> wywołania. Dany odbiornik tylko zamyka pełni, gdy odbiera taką samą liczbę <xref:System.Data.SqlClient.SqlDependency.Stop%2A> żądania jako <xref:System.Data.SqlClient.SqlDependency.Start%2A> żądań.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> Parametr ma wartość NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Metoda została wywołana w SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma wymaganych <see cref="T:System.Data.SqlClient.SqlClientPermission" /> kodu uprawnienia zabezpieczeń (CAS).</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">I podstawowej **SqlClient** Wystąpił wyjątek.</exception>
      </Docs>
    </Member>
  </Members>
</Type>