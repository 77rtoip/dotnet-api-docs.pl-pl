<Type Name="SqlCommand" FullName="System.Data.SqlClient.SqlCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="064ad6fda2e18f09ee01f6b513d327bcec6326c0" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68438390" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface IDbCommand&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbCommand</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje instrukcję języka Transact-SQL lub procedurę przechowywaną do wykonania względem bazy danych SQL Server. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu wystąpienia programu <xref:System.Data.SqlClient.SqlCommand> właściwości odczytu/zapisu są ustawiane na wartości początkowe. Aby uzyskać listę tych wartości, zobacz <xref:System.Data.SqlClient.SqlCommand> Konstruktor.  
  
 <xref:System.Data.SqlClient.SqlCommand>oferuje następujące metody wykonywania poleceń w SQL Serverej bazie danych:  
  
|Element|Opis|  
|----------|-----------------|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|Inicjuje asynchroniczne wykonanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana w tym <xref:System.Data.SqlClient.SqlCommand>artykule, zazwyczaj wykonuje polecenia takie jak INSERT, DELETE, Update i Set. Każde wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> musi być sparowane z <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> wywołaniem, które kończy operację, zazwyczaj w osobnym wątku.|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <xref:System.Data.SqlClient.SqlCommand> artykule i pobiera jeden lub więcej zestawów wyników z serwera. Każde wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> musi być sparowane z <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołaniem, które kończy operację, zazwyczaj w osobnym wątku.|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|Inicjuje asynchroniczne wykonanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <xref:System.Data.SqlClient.SqlCommand>temacie. Każde wywołanie `BeginExecuteXmlReader` musi być sparowane z `EndExecuteXmlReader`wywołaniem, które kończy operację, zazwyczaj w osobnym <xref:System.Xml.XmlReader> wątku i zwraca obiekt.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|Wykonuje polecenia, które zwracają wiersze. W celu zwiększenia wydajności <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> program wywołuje polecenia za pomocą procedury składowanej Transact-SQL. `sp_executesql` W związku z tym możeniemiećefektu,którymabyćużywanydowykonywaniapoleceńtakichjakinstrukcjeSETjęzykaTransact-SQL.<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|Wykonuje polecenia, takie jak Transact-SQL INSERT, DELETE, UPDATE i SET.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|Pobiera pojedynczą wartość (na przykład wartość zagregowaną) z bazy danych.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Wysyła <xref:System.Xml.XmlReader> do i<xref:System.Data.SqlClient.SqlCommand.Connection%2A> kompiluje obiekt.|  
  
 Możesz zresetować <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Właściwość i <xref:System.Data.SqlClient.SqlCommand> ponownie użyć obiektu. Należy jednak zamknąć <xref:System.Data.SqlClient.SqlDataReader> , aby można było wykonać nowe lub poprzednie polecenie.  
  
 Jeśli jest generowany przez metodę <xref:System.Data.SqlClient.SqlCommand>wykonującą, <xref:System.Data.SqlClient.SqlConnection> pozostaje otwarty, gdy poziom ważności wynosi 19 lub mniej. <xref:System.Data.SqlClient.SqlException> Gdy poziom ważności wynosi 20 lub więcej, serwer zazwyczaj zamyka <xref:System.Data.SqlClient.SqlConnection>. Użytkownik może jednak ponownie otworzyć połączenie i kontynuować pracę.  
  
> [!NOTE]
>  Pustego, nazywane również numerem porządkowym, nie są obsługiwane przez Dostawca danych .NET Framework dla SQL Server.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlCommand>, a i <xref:System.Data.SqlClient.SqlDataReader>. Przykład odczytuje dane, zapisując je w konsoli programu. Na koniec przykład zamyka <xref:System.Data.SqlClient.SqlDataReader> program, a <xref:System.Data.SqlClient.SqlConnection> następnie gdy opuszcza `Using` bloki kodu.  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 Poniższy przykład pokazuje, jak tworzyć i wykonywać różne typy obiektów SqlCommand.  
  
 Najpierw należy utworzyć przykładową bazę danych, wykonując następujący skrypt:  
  
```sql
USE [master]  
GO  
  
CREATE DATABASE [MySchool]  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE procedure [dbo].[CourseExtInfo] @CourseId int  
as  
select c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  
from Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  
where c.CourseID=@CourseId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  
as  
select @CourseCount=Count(c.CourseID)  
from course as c  
where c.DepartmentID=@DepartmentId  
  
select d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  
from Department as d  
where d.DepartmentID=@DepartmentId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
Create PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   
@Year int,@BudgetSum money output  
AS  
BEGIN  
        SELECT @BudgetSum=SUM([Budget])  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year   
  
SELECT [DepartmentID]  
      ,[Name]  
      ,[Budget]  
      ,[StartDate]  
      ,[Administrator]  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year  
  
END  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  
[LastName] [nvarchar](50) NOT NULL,  
[FirstName] [nvarchar](50) NOT NULL,  
[HireDate] [datetime] NULL,  
[EnrollmentDate] [datetime] NULL,  
 CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
(  
[PersonID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  
[CourseID] [nvarchar](10) NOT NULL,  
[StudentID] [int] NOT NULL,  
[Grade] [decimal](3, 2) NOT NULL,  
 CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   
(  
[EnrollmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create view [dbo].[EnglishCourse]  
as  
select c.CourseID,c.Title,c.Credits,c.DepartmentID  
from Course as c join Department as d on c.DepartmentID=d.DepartmentID  
where d.Name=N'English'  
  
GO  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
SET IDENTITY_INSERT [dbo].[Person] ON   
  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  
SET IDENTITY_INSERT [dbo].[Person] OFF  
SET IDENTITY_INSERT [dbo].[StudentGrade] ON   
  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  
SET IDENTITY_INSERT [dbo].[StudentGrade] OFF  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  
REFERENCES [dbo].[Person] ([PersonID])  
GO  
ALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  
GO  
```  
  
 Następnie Skompiluj i wykonaj następujące czynności:  
  
```csharp
using System;  
using System.Data;  
using System.Data.SqlClient;  
using System.Threading.Tasks;  
  
class Program {  
  
   static class SqlHelper {  
      // Set the connection, command, and then execute the command with non query.  
      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   
               // type is only for OLE DB.    
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteNonQuery();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command and only return one value.  
      public static Object ExecuteScalar(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteScalar();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command with query and return the reader.  
      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         SqlConnection conn = new SqlConnection(connectionString);  
  
         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
            cmd.CommandType = commandType;  
            cmd.Parameters.AddRange(parameters);  
  
            conn.Open();  
            // When using CommandBehavior.CloseConnection, the connection will be closed when the   
            // IDataReader is closed.  
            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  
  
            return reader;  
         }  
      }  
   }  
  
   static void Main(string[] args) {  
      String connectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;";  
  
      CountCourses(connectionString, 2012);  
      Console.WriteLine();  
  
      Console.WriteLine("Following result is the departments that started from 2007:");  
      GetDepartments(connectionString, 2007);  
      Console.WriteLine();  
  
      Console.WriteLine("Add the credits when the credits of course is lower than 4.");  
      AddCredits(connectionString, 4);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static void CountCourses(String connectionString, Int32 year) {  
      String commandText = "Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year";  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  
      Int32 count;  
      if (Int32.TryParse(oValue.ToString(), out count))  
         Console.WriteLine("There {0} {1} course{2} in {3}.", count > 1 ? "are" : "is", count, count > 1 ? "s" : null, year);  
   }  
  
   // Display the Departments that start from the specified year.  
   static void GetDepartments(String connectionString, Int32 year) {  
      String commandText = "dbo.GetDepartmentsOfSpecifiedYear";  
  
      // Specify the year of StartDate  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      // When the direction of parameter is set as Output, you can get the value after   
      // executing the command.  
      SqlParameter parameterBudget = new SqlParameter("@BudgetSum", SqlDbType.Money);  
      parameterBudget.Direction = ParameterDirection.Output;  
  
      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  
          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  
         Console.WriteLine("{0,-20}{1,-20}{2,-20}{3,-20}", "Name", "Budget", "StartDate",  
             "Administrator");  
         while (reader.Read()) {  
            Console.WriteLine("{0,-20}{1,-20:C}{2,-20:d}{3,-20}", reader["Name"],  
                reader["Budget"], reader["StartDate"], reader["Administrator"]);  
         }  
      }  
      Console.WriteLine("{0,-20}{1,-20:C}", "Sum:", parameterBudget.Value);  
   }  
  
   // If credits of course is lower than the certain value, the method will add the credits.  
   static void AddCredits(String connectionString, Int32 creditsLow) {  
      String commandText = "Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits";  
  
      SqlParameter parameterCredits = new SqlParameter("@Credits", creditsLow);  
  
      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  
  
      Console.WriteLine("{0} row{1} {2} updated.", rows, rows > 1 ? "s" : null, rows > 1 ? "are" : "is");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor podstawowy inicjuje wszystkie pola do ich wartości domyślnych. W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Data.SqlClient.SqlCommand>.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|pusty ciąg ("")|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Null|  
  
 Można zmienić wartość każdej z tych właściwości za pomocą oddzielnego wywołania właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i `CommandTimeout` ustawia właściwość.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy z tekstem zapytania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu wystąpienia elementu <xref:System.Data.SqlClient.SqlCommand> , następujące właściwości do odczytu/zapisu są ustawione na wartości początkowe.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|wartość null|  
  
 Można zmienić wartość każdej z tych właściwości za pomocą oddzielnego wywołania właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand>, przekazując do parametrów połączenia i tekstu polecenia.  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <param name="connection"><see cref="T:System.Data.SqlClient.SqlConnection" /> Reprezentuje połączenie z wystąpieniem SQL Server.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy z tekstem zapytania <see cref="T:System.Data.SqlClient.SqlConnection" />i.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Data.SqlClient.SqlCommand>.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Nowa <xref:System.Data.SqlClient.SqlConnection> , która jest wartością `connection` parametru.|  
  
 Można zmienić wartość dla dowolnego z tych parametrów przez ustawienie właściwości powiązanej.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre właściwości.  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <param name="connection"><see cref="T:System.Data.SqlClient.SqlConnection" /> Reprezentuje połączenie z wystąpieniem SQL Server.</param>
        <param name="transaction">, <see cref="T:System.Data.SqlClient.SqlTransaction" /> W<see cref="T:System.Data.SqlClient.SqlCommand" /> którym wykonujesz.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy z tekstem zapytania <see cref="T:System.Data.SqlClient.SqlConnection" />, a i <see cref="T:System.Data.SqlClient.SqlTransaction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Data.SqlClient.SqlCommand>.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Nowa <xref:System.Data.SqlClient.SqlConnection> , która jest wartością `connection` parametru.|  
  
 Można zmienić wartość dla dowolnego z tych parametrów przez ustawienie właściwości powiązanej.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction, valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction, columnEncryptionSetting As SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction, System::Data::SqlClient::SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction * System.Data.SqlClient.SqlCommandColumnEncryptionSetting -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction, columnEncryptionSetting)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="1" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" Index="2" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="columnEncryptionSetting" Type="System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Index="3" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <param name="connection"><see cref="T:System.Data.SqlClient.SqlConnection" /> Reprezentuje połączenie z wystąpieniem SQL Server.</param>
        <param name="transaction">, <see cref="T:System.Data.SqlClient.SqlTransaction" /> W<see cref="T:System.Data.SqlClient.SqlCommand" /> którym wykonujesz.</param>
        <param name="columnEncryptionSetting">Ustawienie szyfrowania. Aby uzyskać więcej informacji, zobacz [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy z określonym ustawieniem tekst polecenia, połączenie, transakcja i szyfrowanie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteNonQuery">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <see cref="T:System.Data.SqlClient.SqlCommand" />temacie.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje asynchroniczne wykonanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <see cref="T:System.Data.SqlClient.SqlCommand" />temacie.</summary>
        <returns>, Który może służyć do sondowania lub oczekiwania na wyniki lub w obu tych przypadkach. Ta wartość jest również wymagana podczas <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />wywoływania, która zwraca liczbę odnośnych wierszy. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda uruchamia proces asynchronicznego [!INCLUDE[tsql](~/includes/tsql-md.md)] wykonywania instrukcji lub procedury składowanej, która nie zwraca wierszy, dzięki czemu inne zadania mogą być uruchamiane współbieżnie podczas wykonywania instrukcji. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Po zakończeniu instrukcji deweloperzy muszą wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> metodę, aby zakończyć operację. Metoda wraca natychmiast (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> nie ma wpływu na <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), ale dopóki kod nie wykonuje odpowiedniego <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> wywołania metody, nie może wykonać żadnych innych wywołań, które uruchamiają wykonywanie synchroniczne lub asynchroniczne <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> względem tego samego <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywołanie przed wykonaniem polecenia zostanie wykonane, powoduje, że <xref:System.Data.SqlClient.SqlCommand> obiekt jest blokowany do momentu zakończenia wykonywania. <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>  
  
 Należy zauważyć, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenie lub wiele parametrów, ta metoda może blokować podczas operacji zapisu. Po wysłaniu polecenia Metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — to oznacza, że odczyty są asynchroniczne.  
  
 Ponieważ to Przeciążenie nie obsługuje procedury wywołania zwrotnego, deweloperzy muszą albo sondować, aby określić, czy polecenie zostało ukończone, <xref:System.IAsyncResult.IsCompleted%2A> przy użyciu właściwości <xref:System.IAsyncResult> zwróconej przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> metodę; lub poczekać na zakończenie jedno lub więcej poleceń używających <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości zwracanego <xref:System.IAsyncResult>elementu.  
  
   
  
## Examples  
 Poniższa Aplikacja konsolowa tworzy dane aktualizacji z przykładowej bazy danych **AdventureWorks** , wykonując swoją działania asynchronicznie. W celu emulowania długotrwałego procesu, w tym przykładzie wstawia instrukcję WAITFOR do tekstu polecenia. Zwykle nie trzeba podejmować żadnych starań, aby polecenia działały wolniej, ale w takim przypadku ułatwiają one zaprezentowanie zachowań asynchronicznych.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Dowolny błąd, który wystąpił podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Para nazwa/wartość "asynchroniczne przetwarzanie = true" nie została uwzględniona w parametrach połączenia definiujących połączenie dla tego <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegat, który jest wywoływany po zakończeniu wykonywania polecenia. Przekaż <see langword="null" /> (<see langword="Nothing" /> w programie Microsoft Visual Basic), aby wskazać, że wywołanie zwrotne nie jest wymagane.</param>
        <param name="stateObject">Obiekt stanu zdefiniowany przez użytkownika, który jest przesyłany do procedury wywołania zwrotnego. Pobierz ten obiekt z procedury wywołania zwrotnego przy użyciu <see cref="P:System.IAsyncResult.AsyncState" /> właściwości.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <see cref="T:System.Data.SqlClient.SqlCommand" />artykule, na podstawie procedury wywołania zwrotnego i informacji o stanie.</summary>
        <returns>, Który może służyć do sondowania lub oczekiwania na wyniki lub w obu tych przypadkach. Ta wartość jest również wymagana podczas <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />wywoływania, która zwraca liczbę odnośnych wierszy. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Metoda uruchamia proces asynchronicznego wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która nie zwraca wierszy, dzięki czemu inne zadania mogą być uruchamiane współbieżnie podczas wykonywania instrukcji. Po zakończeniu instrukcji deweloperzy muszą wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> metodę, aby zakończyć operację. Metoda wraca natychmiast (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> nie ma wpływu na <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), ale dopóki kod nie wykonuje odpowiedniego <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> wywołania metody, nie może wykonać żadnych innych wywołań, które uruchamiają wykonywanie synchroniczne lub asynchroniczne <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> względem tego samego <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywołanie przed wykonaniem polecenia zostanie wykonane, powoduje, że <xref:System.Data.SqlClient.SqlCommand> obiekt jest blokowany do momentu zakończenia wykonywania. <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>  
  
 `callback` Parametr pozwala <xref:System.AsyncCallback> określić delegata, który jest wywoływany, gdy instrukcja została ukończona. <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> Metodę można wywołać z poziomu tej procedury delegata lub z dowolnej innej lokalizacji w aplikacji. Ponadto można przekazać każdy obiekt w `asyncStateObject` parametrze, a procedura wywołania zwrotnego może pobrać te informacje <xref:System.IAsyncResult.AsyncState%2A> przy użyciu właściwości.  
  
 Należy zauważyć, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenie lub wiele parametrów, ta metoda może blokować podczas operacji zapisu. Po wysłaniu polecenia Metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — to oznacza, że odczyty są asynchroniczne.  
  
 Ponieważ procedura wywołania zwrotnego jest wykonywana w wątku w tle dostarczonym przez środowisko uruchomieniowe języka wspólnego Microsoft .NET, bardzo ważne jest, aby zachować rygorystyczne podejście do obsługi interakcji między wątkami w aplikacjach. Na przykład nie należy korzystać z zawartości formularza z poziomu procedury wywołania zwrotnego. Jeśli konieczne jest zaktualizowanie formularza, należy przełączyć się z powrotem do wątku formularza, aby można było wykonać swoją czynność. W przykładzie w tym temacie przedstawiono takie zachowanie.  
  
 Wszystkie błędy występujące podczas wykonywania operacji są generowane jako wyjątki w procedurze wywołania zwrotnego. Należy obsłużyć wyjątek w procedurze wywołania zwrotnego, a nie w aplikacji głównej. Zapoznaj się z przykładem w tym temacie, aby uzyskać dodatkowe informacje dotyczące obsługi wyjątków w procedurze wywołania zwrotnego.  
  
   
  
## Examples  
 W następującej aplikacji systemu Windows pokazano użycie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> metody, wykonanie instrukcji języka Transact-SQL, która obejmuje opóźnienie kilku sekund (emulowanie długotrwałego polecenia).  
  
 Ten przykład ilustruje wiele ważnych technik. Obejmuje to wywołanie metody, która współdziała z formularzem z oddzielnego wątku. Ponadto w tym przykładzie pokazano, jak należy zablokować użytkownikom wielokrotne wykonywanie polecenia jednocześnie i jak należy upewnić się, że formularz nie jest bliski przed wywołaniem procedury wywołania zwrotnego.  
  
 Aby skonfigurować ten przykład, należy utworzyć nową aplikację systemu Windows. Umieszczenie kontrolki <xref:System.Windows.Forms.Label> i kontrolki w formularzu (zaakceptowanie nazwy domyślnej dla każdej kontrolki). <xref:System.Windows.Forms.Button> Dodaj następujący kod do klasy formularza, modyfikując parametry połączenia w zależności od potrzeb danego środowiska.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Dowolny błąd, który wystąpił podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Para nazwa/wartość "asynchroniczne przetwarzanie = true" nie została uwzględniona w parametrach połączenia definiujących połączenie dla tego <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <see cref="T:System.Data.SqlClient.SqlCommand" />artykule i pobiera jeden lub więcej zestawów wyników z serwera.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <see cref="T:System.Data.SqlClient.SqlCommand" />artykule i pobiera jeden lub więcej zestawów wyników z serwera.</summary>
        <returns>, Który może służyć do sondowania lub oczekiwania na wyniki lub w obu tych przypadkach. Ta wartość jest również wymagana podczas <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />wywoływania, która zwraca <see cref="T:System.Data.SqlClient.SqlDataReader" /> wystąpienie, którego można użyć do pobrania zwracanych wierszy. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda uruchamia proces asynchronicznego wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze, dzięki czemu inne zadania mogą być uruchamiane współbieżnie podczas wykonywania instrukcji. Po zakończeniu instrukcji deweloperzy muszą wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metodę, aby zakończyć operację i <xref:System.Data.SqlClient.SqlDataReader> pobrać zwrócone przez polecenie. Metoda wraca natychmiast, ale dopóki kod nie wykonuje odpowiedniego <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołania metody, nie może wykonać żadnych innych wywołań, które rozpoczynają wykonywanie synchroniczne lub asynchroniczne względem tego samego <xref:System.Data.SqlClient.SqlCommand> obiektu. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wywołanie przed wykonaniem polecenia zostanie wykonane, powoduje, że <xref:System.Data.SqlClient.SqlCommand> obiekt jest blokowany do momentu zakończenia wykonywania. <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>  
  
 Należy zauważyć, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenie lub wiele parametrów, ta metoda może blokować podczas operacji zapisu. Po wysłaniu polecenia Metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — to oznacza, że odczyty są asynchroniczne. Chociaż wykonywanie polecenia jest asynchroniczne, pobieranie wartości jest nadal wykonywane synchronicznie. Oznacza to, że wywołania <xref:System.Data.SqlClient.SqlDataReader.Read%2A> programu mogą blokować, jeśli wymagane są więcej danych i bloki operacji odczytu sieci źródłowej.  
  
 Ponieważ to Przeciążenie nie obsługuje procedury wywołania zwrotnego, deweloperzy muszą albo sondować, aby określić, czy polecenie zostało ukończone, <xref:System.IAsyncResult.IsCompleted%2A> przy użyciu właściwości <xref:System.IAsyncResult> zwróconej przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> metodę; lub poczekać na zakończenie jedno lub więcej poleceń używających <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości zwracanego <xref:System.IAsyncResult>elementu.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwróci wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.
  
   
  
## Examples  
 Następująca aplikacja konsolowa uruchamia proces pobierania czytnika danych asynchronicznie. Podczas oczekiwania na wyniki, prosta aplikacja znajduje się w pętli, badając <xref:System.IAsyncResult.IsCompleted%2A> wartość właściwości. Po zakończeniu procesu kod pobiera <xref:System.Data.SqlClient.SqlDataReader> i wyświetla jego zawartość.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Dowolny błąd, który wystąpił podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Para nazwa/wartość "asynchroniczne przetwarzanie = true" nie została uwzględniona w parametrach połączenia definiujących połączenie dla tego <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">Jedna z <see cref="T:System.Data.CommandBehavior" /> wartości, wskazująca opcje wykonywania instrukcji i pobierania danych.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana w tym <see cref="T:System.Data.SqlClient.SqlCommand" /> artykule przy użyciu jednej <see cref="T:System.Data.CommandBehavior" /> z wartości.</summary>
        <returns>, Który może służyć do sondowania, oczekiwania na wyniki lub obie wartości; ta wartość jest również wymagana podczas wywoływania <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, która zwraca <see cref="T:System.Data.SqlClient.SqlDataReader" /> wystąpienie, którego można użyć do pobrania zwracanych wierszy. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda uruchamia proces asynchronicznego wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze, dzięki czemu inne zadania mogą być uruchamiane współbieżnie podczas wykonywania instrukcji. Po zakończeniu instrukcji deweloperzy muszą wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metodę, aby zakończyć operację i <xref:System.Data.SqlClient.SqlDataReader> pobrać zwrócone przez polecenie. Metoda wraca natychmiast, ale dopóki kod nie wykonuje odpowiedniego <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołania metody, nie może wykonać żadnych innych wywołań, które rozpoczynają wykonywanie synchroniczne lub asynchroniczne względem tego samego <xref:System.Data.SqlClient.SqlCommand> obiektu. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wywołanie przed wykonaniem polecenia zostanie wykonane, powoduje, że <xref:System.Data.SqlClient.SqlCommand> obiekt jest blokowany do momentu zakończenia wykonywania. <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>  
  
 `behavior` Parametr umożliwia określenie opcji kontrolujących zachowanie polecenia i jego połączenia. Te wartości można łączyć razem (przy użyciu `OR` operatora języka programowania). zazwyczaj deweloperzy `CommandBehavior.CloseConnection` używają wartości, aby upewnić się, że połączenie jest zamknięte <xref:System.Data.SqlClient.SqlDataReader> przez środowisko uruchomieniowe po zamknięciu.  
  
 Należy zauważyć, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenie lub wiele parametrów, ta metoda może blokować podczas operacji zapisu. Po wysłaniu polecenia Metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — to oznacza, że odczyty są asynchroniczne. Chociaż wykonywanie polecenia jest asynchroniczne, pobieranie wartości jest nadal wykonywane synchronicznie. Oznacza to, że wywołania <xref:System.Data.SqlClient.SqlDataReader.Read%2A> programu mogą blokować, jeśli wymagane są więcej danych i bloki operacji odczytu sieci źródłowej.  
  
 Ponieważ to Przeciążenie nie obsługuje procedury wywołania zwrotnego, deweloperzy muszą albo sondować, aby określić, czy polecenie zostało ukończone, <xref:System.IAsyncResult.IsCompleted%2A> przy użyciu właściwości <xref:System.IAsyncResult> zwróconej przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> metodę; lub poczekać na zakończenie jedno lub więcej poleceń używających <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości zwracanego <xref:System.IAsyncResult>elementu.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwraca wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.
  
   
  
## Examples  
 Następująca aplikacja konsolowa uruchamia proces pobierania czytnika danych asynchronicznie. Podczas oczekiwania na wyniki, prosta aplikacja znajduje się w pętli, badając <xref:System.IAsyncResult.IsCompleted%2A> wartość właściwości. Po zakończeniu procesu kod pobiera <xref:System.Data.SqlClient.SqlDataReader> i wyświetla jego zawartość.  
  
 Ten przykład przekazuje `CommandBehavior.CloseConnection` także wartości i `CommandBehavior.SingleRow` w parametrze Behavior, co oznacza, że połączenie zostanie zamknięte z zwróconym <xref:System.Data.SqlClient.SqlDataReader> poleceniem jest zamknięte, i do optymalizowania dla pojedynczego wiersza wyniku.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Dowolny błąd, który wystąpił podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Para nazwa/wartość "asynchroniczne przetwarzanie = true" nie została uwzględniona w parametrach połączenia definiujących połączenie dla tego <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegat, który jest wywoływany po zakończeniu wykonywania polecenia. Przekaż <see langword="null" /> (<see langword="Nothing" /> w programie Microsoft Visual Basic), aby wskazać, że wywołanie zwrotne nie jest wymagane.</param>
        <param name="stateObject">Obiekt stanu zdefiniowany przez użytkownika, który jest przesyłany do procedury wywołania zwrotnego. Pobierz ten obiekt z procedury wywołania zwrotnego przy użyciu <see cref="P:System.IAsyncResult.AsyncState" /> właściwości.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <see cref="T:System.Data.SqlClient.SqlCommand" /> artykule i pobiera jeden lub więcej zestawów wyników z serwera, na podstawie procedury wywołania zwrotnego i informacji o stanie.</summary>
        <returns>, Który może służyć do sondowania, oczekiwania na wyniki lub obie wartości; ta wartość jest również wymagana podczas wywoływania <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, która zwraca <see cref="T:System.Data.SqlClient.SqlDataReader" /> wystąpienie, którego można użyć do pobrania zwracanych wierszy. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda uruchamia proces asynchronicznego wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze, dzięki czemu inne zadania mogą być uruchamiane współbieżnie podczas wykonywania instrukcji. Po zakończeniu instrukcji deweloperzy muszą wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metodę, aby zakończyć operację i <xref:System.Data.SqlClient.SqlDataReader> pobrać zwrócone przez polecenie. Metoda wraca natychmiast, ale dopóki kod nie wykonuje odpowiedniego <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołania metody, nie może wykonać żadnych innych wywołań, które rozpoczynają wykonywanie synchroniczne lub asynchroniczne względem tego samego <xref:System.Data.SqlClient.SqlCommand> obiektu. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wywołanie przed wykonaniem polecenia zostanie wykonane, powodując, <xref:System.Data.SqlClient.SqlCommand> że obiekt zostanie zablokowany do momentu zakończenia wykonywania. <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>  
  
 `callback` Parametr pozwala <xref:System.AsyncCallback> określić delegata, który jest wywoływany, gdy instrukcja została ukończona. <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Metodę można wywołać z poziomu tej procedury delegata lub z dowolnej innej lokalizacji w aplikacji. Ponadto można przekazać każdy obiekt w `stateObject` parametrze, a procedura wywołania zwrotnego może pobrać te informacje <xref:System.IAsyncResult.AsyncState%2A> przy użyciu właściwości.  
  
 Należy zauważyć, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenie lub wiele parametrów, ta metoda może blokować podczas operacji zapisu. Po wysłaniu polecenia Metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — to oznacza, że odczyty są asynchroniczne. Chociaż wykonywanie polecenia jest asynchroniczne, pobieranie wartości jest nadal wykonywane synchronicznie. Oznacza to, że wywołania <xref:System.Data.SqlClient.SqlDataReader.Read%2A> programu mogą blokować, jeśli wymagane są więcej danych i bloki operacji odczytu sieci źródłowej.  
  
 Ponieważ procedura wywołania zwrotnego jest wykonywana w wątku w tle dostarczonym przez środowisko uruchomieniowe Microsoft .NET, bardzo ważne jest, aby zachować rygorystyczne podejście do obsługi interakcji między wątkami z poziomu aplikacji. Na przykład nie należy korzystać z zawartości formularza z poziomu procedury wywołania zwrotnego. Jeśli konieczne jest zaktualizowanie formularza, należy przełączyć się z powrotem do wątku formularza, aby można było wykonać swoją czynność. W przykładzie w tym temacie przedstawiono takie zachowanie.  
  
 Wszystkie błędy występujące podczas wykonywania operacji są generowane jako wyjątki w procedurze wywołania zwrotnego. Należy obsłużyć wyjątek w procedurze wywołania zwrotnego, a nie w aplikacji głównej. Zapoznaj się z przykładem w tym temacie, aby uzyskać dodatkowe informacje dotyczące obsługi wyjątków w procedurze wywołania zwrotnego.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwraca wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.
  
   
  
## Examples  
 W następującej aplikacji systemu Windows pokazano użycie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> metody, wykonanie instrukcji języka Transact-SQL, która obejmuje opóźnienie kilku sekund (emulowanie długotrwałego polecenia). Ponieważ przykład wykonuje polecenie asynchronicznie, formularz pozostanie nieoczekiwany podczas oczekiwania na wyniki. Ten przykład przekazuje obiekt wykonujący <xref:System.Data.SqlClient.SqlCommand> `stateObject` jako parametr; dzięki temu można łatwo pobrać <xref:System.Data.SqlClient.SqlCommand> obiekt z procedury wywołania zwrotnego <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> , aby kod mógł wywołać metodę odpowiadającą początkowe wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 Ten przykład ilustruje wiele ważnych technik. Obejmuje to wywołanie metody, która współdziała z formularzem z oddzielnego wątku. Ponadto w tym przykładzie pokazano, jak należy zablokować użytkownikom wielokrotne wykonywanie polecenia jednocześnie i jak należy upewnić się, że formularz nie jest bliski przed wywołaniem procedury wywołania zwrotnego.  
  
 Aby skonfigurować ten przykład, należy utworzyć nową aplikację systemu Windows. Umieszczenie kontrolki <xref:System.Windows.Forms.DataGridView> , kontrolki i <xref:System.Windows.Forms.Label> kontrolki w formularzu (zaakceptowanie nazwy domyślnej dla każdej kontrolki). <xref:System.Windows.Forms.Button> Dodaj następujący kod do klasy formularza, modyfikując parametry połączenia w zależności od potrzeb danego środowiska.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Dowolny błąd, który wystąpił podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Para nazwa/wartość "asynchroniczne przetwarzanie = true" nie została uwzględniona w parametrach połączenia definiujących połączenie dla tego <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object, behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj * System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegat, który jest wywoływany po zakończeniu wykonywania polecenia. Przekaż <see langword="null" /> (<see langword="Nothing" /> w programie Microsoft Visual Basic), aby wskazać, że wywołanie zwrotne nie jest wymagane.</param>
        <param name="stateObject">Obiekt stanu zdefiniowany przez użytkownika, który jest przesyłany do procedury wywołania zwrotnego. Pobierz ten obiekt z procedury wywołania zwrotnego przy użyciu <see cref="P:System.IAsyncResult.AsyncState" /> właściwości.</param>
        <param name="behavior">Jedna z <see cref="T:System.Data.CommandBehavior" /> wartości, wskazująca opcje wykonywania instrukcji i pobierania danych.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej opisanej w tym <see cref="T:System.Data.SqlClient.SqlCommand" />artykule przy użyciu jednej <see langword="CommandBehavior" /> z wartości oraz pobranie jednego lub większej liczby zestawów wyników z serwera, na podstawie procedury wywołania zwrotnego i stanu zawartych.</summary>
        <returns>, Który może służyć do sondowania lub oczekiwania na wyniki lub w obu tych przypadkach. Ta wartość jest również wymagana podczas <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />wywoływania, która zwraca <see cref="T:System.Data.SqlClient.SqlDataReader" /> wystąpienie, którego można użyć do pobrania zwracanych wierszy. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda uruchamia proces asynchronicznego wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze, dzięki czemu inne zadania mogą być uruchamiane współbieżnie podczas wykonywania instrukcji. Po zakończeniu instrukcji deweloperzy muszą wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metodę, aby zakończyć operację i <xref:System.Data.SqlClient.SqlDataReader> pobrać zwrócone przez polecenie. Metoda wraca natychmiast, ale dopóki kod nie wykonuje odpowiedniego <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołania metody, nie może wykonać żadnych innych wywołań, które rozpoczynają wykonywanie synchroniczne lub asynchroniczne względem tego samego <xref:System.Data.SqlClient.SqlCommand> obiektu. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Wywołanie przed wykonaniem polecenia zostanie wykonane, powoduje, że <xref:System.Data.SqlClient.SqlCommand> obiekt jest blokowany do momentu zakończenia wykonywania. <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>  
  
 `callback` Parametr pozwala <xref:System.AsyncCallback> określić delegata, który jest wywoływany, gdy instrukcja została ukończona. <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Metodę można wywołać z poziomu tej procedury delegata lub z dowolnej innej lokalizacji w aplikacji. Ponadto można przekazać każdy obiekt w `stateObject` parametrze, a procedura wywołania zwrotnego może pobrać te informacje <xref:System.IAsyncResult.AsyncState%2A> przy użyciu właściwości.  
  
 `behavior` Parametr umożliwia określenie opcji kontrolujących zachowanie polecenia i jego połączenia. Te wartości można łączyć razem (przy użyciu `Or` operatora języka programowania). zazwyczaj deweloperzy `CloseConnection` używają wartości, aby upewnić się, że połączenie jest zamknięte <xref:System.Data.SqlClient.SqlDataReader> przez środowisko uruchomieniowe po zamknięciu. Deweloperzy mogą także zoptymalizować zachowanie <xref:System.Data.SqlClient.SqlDataReader> przez `SingleRow` określenie wartości, gdy jest znane z wyprzedzeniem, że instrukcja języka Transact-SQL lub procedura składowana zwraca tylko jeden wiersz.  
  
 Należy zauważyć, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenie lub wiele parametrów, ta metoda może blokować podczas operacji zapisu. Po wysłaniu polecenia Metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — to oznacza, że odczyty są asynchroniczne. Chociaż wykonywanie polecenia jest asynchroniczne, pobieranie wartości jest nadal wykonywane synchronicznie. Oznacza to, że wywołania <xref:System.Data.SqlClient.SqlDataReader.Read%2A> programu mogą blokować, jeśli wymagane są więcej danych i bloki operacji odczytu sieci źródłowej.  
  
 Ponieważ procedura wywołania zwrotnego jest wykonywana w wątku w tle dostarczonym przez środowisko uruchomieniowe języka wspólnego Microsoft .NET, bardzo ważne jest, aby zachować rygorystyczne podejście do obsługi interakcji między wątkami w aplikacjach. Na przykład nie można korzystać z zawartości formularza z poziomu procedury wywołania zwrotnego — należy zaktualizować formularz, należy przełączyć się z powrotem do wątku formularza, aby można było wykonać swoją pracę. W przykładzie w tym temacie przedstawiono takie zachowanie.  
  
 Wszystkie błędy występujące podczas wykonywania operacji są generowane jako wyjątki w procedurze wywołania zwrotnego. Należy obsłużyć wyjątek w procedurze wywołania zwrotnego, a nie w aplikacji głównej. Zapoznaj się z przykładem w tym temacie, aby uzyskać dodatkowe informacje dotyczące obsługi wyjątków w procedurze wywołania zwrotnego.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwróci wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.
  
   
  
## Examples  
 W następującej aplikacji systemu Windows pokazano użycie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> metody, wykonanie instrukcji języka Transact-SQL, która obejmuje opóźnienie kilku sekund (emulowanie długotrwałego polecenia). Ponieważ przykład wykonuje polecenie asynchronicznie, formularz pozostanie nieoczekiwany podczas oczekiwania na wyniki. Ten przykład przekazuje obiekt wykonujący <xref:System.Data.SqlClient.SqlCommand> `stateObject` jako parametr; dzięki temu można łatwo pobrać <xref:System.Data.SqlClient.SqlCommand> obiekt z procedury wywołania zwrotnego <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> , aby kod mógł wywołać metodę odpowiadającą początkowe wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 Ten przykład ilustruje wiele ważnych technik. Obejmuje to wywołanie metody, która współdziała z formularzem z oddzielnego wątku. Ponadto w tym przykładzie pokazano, jak należy zablokować użytkownikom wielokrotne wykonywanie polecenia jednocześnie i jak należy upewnić się, że formularz nie jest bliski przed wywołaniem procedury wywołania zwrotnego.  
  
 Aby skonfigurować ten przykład, należy utworzyć nową aplikację systemu Windows. Umieszczenie kontrolki <xref:System.Windows.Forms.DataGridView> , kontrolki i <xref:System.Windows.Forms.Label> kontrolki w formularzu (zaakceptowanie nazwy domyślnej dla każdej kontrolki). <xref:System.Windows.Forms.Button> Dodaj następujący kod do klasy formularza, modyfikując parametry połączenia w zależności od potrzeb danego środowiska.  
  
 Ten przykład przekazuje `CommandBehavior.CloseConnection` wartość `behavior` w parametrze, powodując, że zwracany <xref:System.Data.SqlClient.SqlDataReader> jest automatycznie zamyka połączenie po jego zamknięciu.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Dowolny błąd, który wystąpił podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Para nazwa/wartość "asynchroniczne przetwarzanie = true" nie została uwzględniona w parametrach połączenia definiujących połączenie dla tego <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteXmlReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez ten <see cref="T:System.Data.SqlClient.SqlCommand" /> element i zwraca wyniki <see cref="T:System.Xml.XmlReader" /> jako obiekt.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje asynchroniczne wykonanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez ten <see cref="T:System.Data.SqlClient.SqlCommand" /> element i zwraca wyniki <see cref="T:System.Xml.XmlReader" /> jako obiekt.</summary>
        <returns>, Który może służyć do sondowania lub oczekiwania na wyniki lub w obu tych przypadkach. Ta wartość jest również wymagana podczas <see langword="EndExecuteXmlReader" />wywoływania, która zwraca pojedynczą wartość XML. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Metoda uruchamia proces asynchronicznego wykonywania instrukcji Transact-SQL, która zwraca wiersze jako XML, dzięki czemu inne zadania mogą być uruchamiane współbieżnie podczas wykonywania instrukcji. Po zakończeniu instrukcji deweloperzy muszą wywołać `EndExecuteXmlReader` metodę, aby zakończyć operację i pobrać kod XML zwrócony przez polecenie. Metoda wraca natychmiast, ale dopóki kod nie wykonuje odpowiedniego `EndExecuteXmlReader` wywołania metody, nie może wykonać żadnych innych wywołań, które rozpoczynają wykonywanie synchroniczne lub asynchroniczne względem tego samego <xref:System.Data.SqlClient.SqlCommand> obiektu. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Wywołanie przed wykonaniem polecenia zostanie wykonane, powoduje, że <xref:System.Data.SqlClient.SqlCommand> obiekt jest blokowany do momentu zakończenia wykonywania. `EndExecuteXmlReader`  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Właściwość zwykle określa instrukcję języka Transact-SQL z prawidłową klauzulą for XML. Jednak można również określić instrukcję zwracającą `ntext` dane, które zawierają prawidłowy kod XML. `CommandText`  
  
 Typowe <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> zapytanie można sformatować tak, jak w poniższym C# przykładzie:  
  
```csharp
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Ta metoda umożliwia również pobranie jednowierszowego zestawu wyników z jedną kolumną. W tym przypadku, Jeśli zwracany jest więcej niż jeden wiersz, `EndExecuteXmlReader` metoda dołącza <xref:System.Xml.XmlReader> do wartości w pierwszym wierszu i odrzuca resztę zestawu wyników.  
  
 Funkcja wielu aktywnych zestawów wyników (MARS) umożliwia korzystanie z tego samego połączenia przez wiele akcji.  
  
 Należy zauważyć, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenie lub wiele parametrów, ta metoda może blokować podczas operacji zapisu. Po wysłaniu polecenia Metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — to oznacza, że odczyty są asynchroniczne. Chociaż wykonywanie polecenia jest asynchroniczne, pobieranie wartości jest nadal wykonywane synchronicznie.  
  
 Ponieważ to Przeciążenie nie obsługuje procedury wywołania zwrotnego, deweloperzy muszą albo sondować, aby określić, czy polecenie zostało ukończone, przy <xref:System.IAsyncResult.IsCompleted%2A> użyciu właściwości <xref:System.IAsyncResult> zwróconej przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> metodę; lub poczekać na zakończenie jednego lub więcej poleceń używających <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości zwracanego <xref:System.IAsyncResult>elementu.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwraca wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.
  
   
  
## Examples  
 Następująca aplikacja konsolowa uruchamia proces pobierania danych XML asynchronicznie. Podczas oczekiwania na wyniki, prosta aplikacja znajduje się w pętli, badając <xref:System.IAsyncResult.IsCompleted%2A> wartość właściwości. Po zakończeniu procesu kod pobiera kod XML i wyświetla jego zawartość.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Dowolny błąd, który wystąpił podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Para nazwa/wartość "asynchroniczne przetwarzanie = true" nie została uwzględniona w parametrach połączenia definiujących połączenie dla tego <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegat, który jest wywoływany po zakończeniu wykonywania polecenia. Przekaż <see langword="null" /> (<see langword="Nothing" /> w programie Microsoft Visual Basic), aby wskazać, że wywołanie zwrotne nie jest wymagane.</param>
        <param name="stateObject">Obiekt stanu zdefiniowany przez użytkownika, który jest przesyłany do procedury wywołania zwrotnego. Pobierz ten obiekt z procedury wywołania zwrotnego przy użyciu <see cref="P:System.IAsyncResult.AsyncState" /> właściwości.</param>
        <summary>Inicjuje asynchroniczne wykonanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez ten <see cref="T:System.Data.SqlClient.SqlCommand" /> element i zwraca wyniki <see cref="T:System.Xml.XmlReader" /> jako obiekt, za pomocą procedury wywołania zwrotnego.</summary>
        <returns>, Który może służyć do sondowania, oczekiwania na wyniki lub obie wartości; ta wartość jest również wymagana, <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> gdy jest wywoływana, która zwraca wyniki polecenia jako XML. <see cref="T:System.IAsyncResult" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Metoda uruchamia proces asynchronicznego wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze jako XML, dzięki czemu inne zadania mogą być uruchamiane współbieżnie podczas wykonywania instrukcji. Po zakończeniu instrukcji deweloperzy muszą wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metodę, aby zakończyć operację i pobrać żądane dane XML. Metoda wraca natychmiast, ale dopóki kod nie wykonuje odpowiedniego <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> wywołania metody, nie może wykonać żadnych innych wywołań, które rozpoczynają wykonywanie synchroniczne lub asynchroniczne względem tego samego <xref:System.Data.SqlClient.SqlCommand> obiektu. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Wywołanie przed wykonaniem polecenia zostanie wykonane, powoduje, że <xref:System.Data.SqlClient.SqlCommand> obiekt jest blokowany do momentu zakończenia wykonywania. <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Właściwość zwykle określa instrukcję języka Transact-SQL z prawidłową klauzulą for XML. `CommandText` Jednak można również określić instrukcję zwracającą dane, które zawierają prawidłowy kod XML. Ta metoda umożliwia również pobranie jednowierszowego zestawu wyników z jedną kolumną. W tym przypadku, Jeśli zwracany jest więcej niż jeden wiersz, <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metoda dołącza <xref:System.Xml.XmlReader> do wartości w pierwszym wierszu i odrzuca resztę zestawu wyników.  
  
 Typowe <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> zapytanie można sformatować tak, jak w poniższym C# przykładzie:  
  
```csharp
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Ta metoda umożliwia również pobranie jednowierszowego zestawu wyników z jedną kolumną. W tym przypadku, Jeśli zwracany jest więcej niż jeden wiersz, <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metoda dołącza <xref:System.Xml.XmlReader> do wartości w pierwszym wierszu i odrzuca resztę zestawu wyników.  
  
 Funkcja wielu aktywnych zestawów wyników (MARS) umożliwia korzystanie z tego samego połączenia przez wiele akcji.  
  
 `callback` Parametr pozwala <xref:System.AsyncCallback> określić delegata, który jest wywoływany, gdy instrukcja została ukończona. <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> Metodę można wywołać z poziomu tej procedury delegata lub z dowolnej innej lokalizacji w aplikacji. Ponadto można przekazać każdy obiekt w `stateObject` parametrze, a procedura wywołania zwrotnego może pobrać te informacje <xref:System.IAsyncResult.AsyncState%2A> przy użyciu właściwości.  
  
 Należy zauważyć, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli jest wysyłane duże polecenie lub wiele parametrów, ta metoda może blokować podczas operacji zapisu. Po wysłaniu polecenia Metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — to oznacza, że odczyty są asynchroniczne.  
  
 Wszystkie błędy występujące podczas wykonywania operacji są generowane jako wyjątki w procedurze wywołania zwrotnego. Należy obsłużyć wyjątek w procedurze wywołania zwrotnego, a nie w aplikacji głównej. Zapoznaj się z przykładem w tym temacie, aby uzyskać dodatkowe informacje dotyczące obsługi wyjątków w procedurze wywołania zwrotnego.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwróci wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.
  
   
  
## Examples  
 W następującej aplikacji systemu Windows pokazano użycie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> metody, wykonanie instrukcji języka Transact-SQL, która obejmuje opóźnienie kilku sekund (emulowanie długotrwałego polecenia). Ten przykład przekazuje obiekt wykonujący <xref:System.Data.SqlClient.SqlCommand> `stateObject` jako parametr — w ten sposób można łatwo pobrać <xref:System.Data.SqlClient.SqlCommand> obiekt z procedury wywołania zwrotnego <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> , aby kod mógł wywołać metodę odpowiadającą początkowe wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.  
  
 Ten przykład ilustruje wiele ważnych technik. Obejmuje to wywołanie metody, która współdziała z formularzem z oddzielnego wątku. Ponadto w tym przykładzie pokazano, jak należy zablokować użytkownikom wielokrotne wykonywanie polecenia jednocześnie i jak należy upewnić się, że formularz nie jest bliski przed wywołaniem procedury wywołania zwrotnego.  
  
 Aby skonfigurować ten przykład, należy utworzyć nową aplikację systemu Windows. Umieszczenie kontrolki <xref:System.Windows.Forms.ListBox> , kontrolki i <xref:System.Windows.Forms.Label> kontrolki w formularzu (zaakceptowanie nazwy domyślnej dla każdej kontrolki). <xref:System.Windows.Forms.Button> Dodaj następujący kod do klasy formularza, modyfikując parametry połączenia w zależności od potrzeb danego środowiska.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Dowolny błąd, który wystąpił podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Para nazwa/wartość "asynchroniczne przetwarzanie = true" nie została uwzględniona w parametrach połączenia definiujących połączenie dla tego <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <altmember cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
        <altmember cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Próbuje anulować wykonanie <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma niczego do anulowania, nic się nie dzieje. Jeśli jednak w procesie występuje polecenie, a próba anulowania nie powiedzie się, nie zostanie wygenerowany żaden wyjątek.  
  
 W niektórych rzadkich przypadkach, w przypadku <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>wywołania, a <xref:System.Data.SqlClient.SqlDataReader.Close%2A> następnie wywołania (niejawnie lub jawnie <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>) przed wywołaniem <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, a następnie wywołanie polecenia Cancel nie zostanie wysłane do SQL Server, a zestaw wyników może nadal przesyłać strumieniowo po wywołanie <xref:System.Data.SqlClient.SqlConnection.Close%2A>. Aby tego uniknąć, należy się upewnić, <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> że jest wywoływana przed zamknięciem czytnika lub połączenia.  
  
   
  
## Examples  
 Poniższy przykład demonstruje użycie <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> metody.  
  
 [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommand.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Data.SqlClient.SqlCommand" /> obiekt, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Nowy <see cref="T:System.Data.SqlClient.SqlCommand" /> obiekt, który jest kopią tego wystąpienia.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionSetting">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnEncryptionSetting As SqlCommandColumnEncryptionSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { System::Data::SqlClient::SqlCommandColumnEncryptionSetting get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionSetting : System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Usage="System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommandColumnEncryptionSetting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ustawienie szyfrowania kolumn dla tego polecenia.</summary>
        <value>Ustawienie szyfrowania kolumn dla tego polecenia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandText")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcję języka Transact-SQL, nazwę tabeli lub procedurę przechowywaną do wykonania w źródle danych.</summary>
        <value>Instrukcja języka Transact-SQL lub procedura składowana do wykonania. Wartość domyślna to pusty ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> właściwość powinna być ustawiona na nazwę procedury składowanej. <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Jeśli nazwa procedury składowanej zawiera jakiekolwiek znaki specjalne, może być konieczne użycie składni znaku ucieczki. Polecenie wykonuje tę procedurę składowaną w przypadku wywołania jednej z `Execute` metod.  
  
 Dostawca danych Microsoft .NET Framework dla SQL Server nie obsługuje symbolu zastępczego znaku zapytania (?) do przekazywania parametrów do instrukcji języka Transact-SQL lub procedury składowanej wywoływanej przez polecenie `CommandType.Text`. W takim przypadku należy użyć parametrów nazwanych. Przykład:  
  
```sql
SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  
```  
  
 Aby uzyskać więcej informacji, zobacz [Konfigurowanie parametrów i typów danych parametrów](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre właściwości.  
  
 [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas oczekiwania przed zakończeniem próby wykonania polecenia i wygenerowaniem błędu.</summary>
        <value>Czas (w sekundach) oczekiwania na wykonanie polecenia. Wartość domyślna to 30 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość 0 oznacza brak limitu (próba wykonania polecenia będzie czekać na czas nieokreślony).  
  
> [!NOTE]
>  Właściwość zostanie zignorowana podczas wywołań metod asynchronicznych, takich <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>jak. <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>nie ma znaczenia, gdy polecenie jest wykonywane względem połączenia kontekstu ( <xref:System.Data.SqlClient.SqlConnection> otwartego z "context Connection = true" w parametrach połączenia).  
  
> [!NOTE]
>  Ta właściwość jest skumulowanym limitem czasu (dla wszystkich pakietów sieciowych, które są odczytywane podczas wywołania metody) dla wszystkich odczytów sieci podczas wykonywania polecenia lub przetwarzania wyników. Limit czasu może nadal występować po zwróceniu pierwszego wiersza i nie obejmuje czasu przetwarzania użytkownika, tylko czasu odczytu sieci.  
>   
>  Na przykład w przypadku 30-sekundowego limitu czasu, <xref:System.Data.SqlClient.SqlDataReader.Read%2A> Jeśli wymagane są dwa pakiety sieciowe, do odczytywania obu pakietów sieciowych jest 30 sekund. Jeśli nastąpi ponowne wywołanie <xref:System.Data.SqlClient.SqlDataReader.Read%2A> , będzie miało jeszcze 30 sekund na odczytanie wszelkich wymaganych danych.  
  
```csharp
using System;  
using System.Data.SqlClient;  
///   
public class A {  
   ///   
   public static void Main() {  
      string connectionString = "";  
      // Wait for 5 second delay in the command  
      string queryString = "waitfor delay '00:00:05'";  
      using (SqlConnection connection = new SqlConnection(connectionString)) {  
         connection.Open();  
         SqlCommand command = new SqlCommand(queryString, connection);  
         // Setting command timeout to 1 second  
         command.CommandTimeout = 1;  
         try {  
            command.ExecuteNonQuery();  
         }  
         catch (SqlException e) {  
            Console.WriteLine("Got expected SqlException due to command timeout ");  
            Console.WriteLine(e);  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą sposób <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> interpretacji właściwości.</summary>
        <value>Jedna z <see cref="T:System.Data.CommandType" /> wartości. Wartość domyślna to <see langword="Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> właściwości na `StoredProcedure`, należy ustawić właściwość na nazwę procedury składowanej. <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Polecenie wykonuje tę procedurę składowaną po wywołaniu jednej z metod Execute.  
  
 Dostawca danych Microsoft .NET Framework dla SQL Server nie obsługuje symbolu zastępczego znaku zapytania (?) do przekazywania parametrów do instrukcji SQL lub procedury składowanej o nazwie z <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>. <xref:System.Data.CommandType.Text> W takim przypadku należy użyć parametrów nazwanych. Na przykład:  
  
 Wybierz pozycję * od klientów, gdzie CustomerID =@CustomerID  
  
 Aby uzyskać więcej informacji, zobacz [Konfigurowanie parametrów i typów danych parametrów](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre właściwości.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość nie jest prawidłowa <see cref="T:System.Data.CommandType" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); void set(System::Data::SqlClient::SqlConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Connection")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.SqlClient.SqlConnection" /> używane przez to wystąpienie <see cref="T:System.Data.SqlClient.SqlCommand" />elementu.</summary>
        <value>Połączenie ze źródłem danych. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli polecenie zostanie zarejestrowane w istniejącej transakcji, a połączenie zostanie zmienione, próba wykonania polecenia spowoduje zgłoszenie <xref:System.InvalidOperationException>.  
  
 Jeśli właściwość nie ma wartości null i transakcja została już zatwierdzona lub wycofana, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> jest ustawiona na wartość null. <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre właściwości.  
  
 [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> została zmieniona, gdy polecenie zostało zarejestrowane w transakcji.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandText" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandType" />
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="sqlCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As SqlParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.SqlClient.SqlParameter" /> obiektu.</summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlParameter" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest silnie wpisaną <xref:System.Data.IDbCommand.CreateParameter%2A>wersją. <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obiekt polecenia powinien być widoczny w kontrolce projektanta formularzy systemu Windows.</summary>
        <value>Wartość wskazująca, czy obiekt polecenia powinien być widoczny w formancie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int EndExecuteNonQuery (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndExecuteNonQuery(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteNonQuery (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndExecuteNonQuery(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteNonQuery : IAsyncResult -&gt; int" Usage="sqlCommand.EndExecuteNonQuery asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie metody <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</param>
        <summary>Kończy asynchroniczne wykonywanie instrukcji języka Transact-SQL.</summary>
        <returns>Liczba zmienionych wierszy (takie samo zachowanie jak <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywołujesz <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> , aby [!INCLUDE[tsql](~/includes/tsql-md.md)] wykonać instrukcję, należy wywołać metodę <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> w celu ukończenia operacji. Jeśli proces wykonywania polecenia jeszcze nie zakończył się, ta metoda jest blokowana do momentu ukończenia operacji. Użytkownicy mogą sprawdzić, czy polecenie zakończyło działanie, używając <xref:System.IAsyncResult> wystąpienia zwróconego <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> przez metodę. Jeśli procedura wywołania zwrotnego została określona w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, należy wywołać tę metodę.  
  
   
  
## Examples  
 Przykłady przedstawiające użycie <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> metody można znaleźć w temacie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" />parametr ma wartość null<see langword="Nothing" /> (w programie Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />zostało wywołane więcej niż raz dla pojedynczego wykonania polecenia lub metoda była niezgodna z metodą wykonywania (na przykład kod wywoływany <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> w celu ukończenia wywołania do. <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Czas określony w polu <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> upłynęło, a operacja asynchroniczna określona za pomocą <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> nie została ukończona.  
 
—lub—

W niektórych sytuacjach <see cref="T:System.IAsyncResult" /> można <see langword="IsCompleted" /> ustawić nieprawidłowe ustawienie. Jeśli taka sytuacja występuje <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> i zostanie wywołana, EndExecuteNonQuery może zgłosić błąd SqlException, jeśli ilość czasu określona w <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> upłynęło i operacja asynchroniczna określona za pomocą <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> nie zostanie zakończona. Aby rozwiązać ten problem, należy zwiększyć wartość CommandTimeout lub zmniejszyć ilość pracy wykonywanej przez operację asynchroniczną.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader EndExecuteReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteReader (asyncResult As IAsyncResult) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ EndExecuteReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteReader : IAsyncResult -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.EndExecuteReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie metody <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />.</param>
        <summary>Kończy asynchroniczne wykonywanie instrukcji języka Transact-SQL, zwracając żądaną <see cref="T:System.Data.SqlClient.SqlDataReader" />wartość.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlDataReader" /> Obiekt, którego można użyć do pobrania żądanych wierszy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> instrukcji języka Transact-SQL należy wywołać metodę <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> , aby ukończyć operację. Jeśli proces wykonywania polecenia jeszcze nie zakończył się, ta metoda jest blokowana do momentu ukończenia operacji. Użytkownicy mogą sprawdzić, czy polecenie zakończyło działanie, używając <xref:System.IAsyncResult> wystąpienia zwróconego <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> przez metodę. Jeśli procedura wywołania zwrotnego została określona w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, należy wywołać tę metodę.  
  
   
  
## Examples  
 Przykłady przedstawiające użycie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metody można znaleźć w temacie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" />parametr ma wartość null<see langword="Nothing" /> (w programie Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />zostało wywołane więcej niż raz dla pojedynczego wykonania polecenia lub metoda była niezgodna z metodą wykonywania (na przykład kod wywoływany <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> w celu ukończenia wywołania do. <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader EndExecuteXmlReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteXmlReader (asyncResult As IAsyncResult) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ EndExecuteXmlReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteXmlReader : IAsyncResult -&gt; System.Xml.XmlReader" Usage="sqlCommand.EndExecuteXmlReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie metody <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</param>
        <summary>Kończy asynchroniczne wykonywanie instrukcji języka Transact-SQL, zwracając żądane dane jako XML.</summary>
        <returns><see cref="T:System.Xml.XmlReader" /> Obiekt, który może służyć do pobierania wyników danych XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> instrukcji języka Transact-SQL należy wywołać metodę <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> , aby ukończyć operację. Jeśli proces wykonywania polecenia jeszcze nie zakończył się, ta metoda jest blokowana do momentu ukończenia operacji. Użytkownicy mogą sprawdzić, czy polecenie zakończyło działanie, używając <xref:System.IAsyncResult> wystąpienia zwróconego <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> przez metodę. Jeśli procedura wywołania zwrotnego została określona w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, należy wywołać tę metodę.  
  
   
  
## Examples  
 Przykłady przedstawiające użycie <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metody można znaleźć w temacie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" />parametr ma wartość null<see langword="Nothing" /> (w programie Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />zostało wywołane więcej niż raz dla pojedynczego wykonania polecenia lub metoda była niezgodna z metodą wykonywania (na przykład kod wywoływany <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> w celu ukończenia wywołania do. <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="sqlCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReaderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Data::Common::DbDataReader ^&gt; ^ ExecuteDbDataReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="sqlCommand.ExecuteDbDataReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje instrukcję języka Transact-SQL względem połączenia i zwraca liczbę wierszy, których to dotyczy.</summary>
        <returns>Liczba wierszy, których to dotyczy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> do wykonywania operacji katalogowych (na przykład wykonywania zapytań dotyczących struktury bazy danych lub tworzenia obiektów bazy danych, takich jak tabele) lub do zmiany danych w bazie danych bez <xref:System.Data.DataSet> używania instrukcji UPDATE, INSERT lub DELETE. zatwierdzeni.  
  
 Chociaż nie <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> zwraca żadnych wierszy, wszystkie parametry wyjściowe ani wartości zwracane zamapowane do parametrów są wypełniane danymi.  
  
 W przypadku instrukcji UPDATE, INSERT i DELETE zwracaną wartością jest liczba wierszy, na które miało wpływ polecenie. Dla wszystkich innych typów instrukcji zwraca wartość-1.

Gdy wyzwalacz istnieje w tabeli, która jest wstawiana lub aktualizowana, wartość zwracana obejmuje liczbę wierszy, na które mają wpływ operacje INSERT i Update oraz liczbę wierszy, na które ma wpływ wyzwalacz lub wyzwalacze.

Gdy ustawienie NOCOUNT ON jest ustawione dla połączenia (przed lub w ramach wykonywania polecenia lub jako część wyzwalacza zainicjowanego przez wykonanie polecenia), wiersze, na które mają wpływ poszczególne instrukcje, nie wpływają na liczbę wierszy, które są zwracane przez ten m etody.

Jeśli nie wykryto żadnych instrukcji, które przyczyniają się do liczby, zwracana wartość to-1. Jeśli nastąpi wycofanie, wartość zwracana to również-1.



## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> , a następnie wykonuje przy użyciu <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. W przykładzie przeszedł ciąg, który jest instrukcją języka Transact-SQL (taką jak UPDATE, INSERT lub DELETE) i ciągiem, który ma zostać użyty do nawiązania połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił wyjątek podczas wykonywania polecenia w odniesieniu do zablokowanego wiersza. Ten wyjątek nie jest generowany w przypadku korzystania z Microsoft .NET Framework w wersji 1,0.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ExecuteNonQueryAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQueryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sqlCommand.ExecuteNonQueryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />, która [!INCLUDE[tsql](~/includes/tsql-md.md)] wykonuje instrukcję względem połączenia i zwraca liczbę wierszy, których to dotyczy. Tokenu anulowania można użyć do żądania, aby operacja została porzucona przed upływem limitu czasu polecenia.  Wyjątki będą raportowane za pośrednictwem zwracanego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub— 
 <see langword="Context Connection=true" />jest określony w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server zwrócił błąd podczas wykonywania tekstu polecenia.  

—lub— 
Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> Wysyła <see cref="T:System.Data.SqlClient.SqlDataReader" />do ikompiluje.<see cref="P:System.Data.SqlClient.SqlCommand.Connection" /></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> Wysyła <see cref="T:System.Data.SqlClient.SqlDataReader" />do ikompiluje.<see cref="P:System.Data.SqlClient.SqlCommand.Connection" /></summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> właściwość powinna być ustawiona na nazwę procedury składowanej. <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Polecenie wykonuje tę procedurę składowaną podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  
  
> [!NOTE]
>  Jeśli transakcja jest zakleszczony, wyjątek nie może zostać zgłoszony do momentu <xref:System.Data.SqlClient.SqlDataReader.Read%2A> wywołania.  
  
 Funkcja wielu aktywnych zestawów wyników (MARS) umożliwia stosowanie wielu akcji przy użyciu tego samego połączenia.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwróci wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand>, a następnie wykonuje go przez przekazanie ciągu, który jest instrukcją SELECT języka Transact-SQL, i ciąg używany do nawiązania połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił wyjątek podczas wykonywania polecenia w odniesieniu do zablokowanego wiersza. Ten wyjątek nie jest generowany w przypadku korzystania z Microsoft .NET Framework w wersji 1,0.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Bieżący stan połączenia jest zamknięty. <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />wymaga otwartego <see cref="T:System.Data.SqlClient.SqlConnection" />elementu.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Jedna z <see cref="T:System.Data.CommandBehavior" /> wartości.</param>
        <summary>Wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> <see cref="T:System.Data.SqlClient.SqlDataReader" /> do i kompiluje przy użyciu jednej z <see cref="T:System.Data.CommandBehavior" /> wartości. <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /></summary>
        <returns><see cref="T:System.Data.SqlClient.SqlDataReader" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> właściwość powinna być ustawiona na nazwę procedury składowanej. <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Polecenie wykonuje tę procedurę składowaną podczas wywoływania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  
  
> [!NOTE]
>  Służy <xref:System.Data.CommandBehavior.SequentialAccess> do pobierania dużych wartości i danych binarnych. W przeciwnym razie <xref:System.OutOfMemoryException> może wystąpić, a połączenie zostanie zamknięte.  
  
 Funkcja wielu aktywnych zestawów wyników (MARS) umożliwia stosowanie wielu akcji przy użyciu tego samego połączenia.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwróci wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand>, a następnie wykonuje go przez przekazanie ciągu, który jest instrukcją SELECT języka Transact-SQL, i ciąg używany do nawiązania połączenia ze źródłem danych. <xref:System.Data.CommandBehavior>jest ustawiony na <xref:System.Data.CommandBehavior.CloseConnection>.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcji lub procedury składowanej opisanej w tym <see cref="T:System.Data.SqlClient.SqlCommand" />temacie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync () As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchroniczna wersja programu <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, która <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> wysyła <see cref="T:System.Data.SqlClient.SqlDataReader" />do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompiluje. Wyjątki będą raportowane za pośrednictwem zwracanego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowa <see cref="T:System.Data.CommandBehavior" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

 <see langword="Context Connection=true" />jest określony w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server zwrócił błąd podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">Opcje wykonywania instrukcji i pobierania danych.  Gdy jest ustawiona na <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> odczytuje cały wiersz przed zwróceniem kompletnego zadania.</param>
        <summary>Asynchroniczna wersja programu <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, która <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> wysyła do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />i kompiluje <see cref="T:System.Data.SqlClient.SqlDataReader" />. Wyjątki będą raportowane za pośrednictwem zwracanego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowa <see cref="T:System.Data.CommandBehavior" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

 <see langword="Context Connection=true" />jest określony w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server zwrócił błąd podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja programu <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, która <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> wysyła <see cref="T:System.Data.SqlClient.SqlDataReader" />do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompiluje.  
  
Tokenu anulowania można użyć do żądania, aby operacja została porzucona przed upływem limitu czasu polecenia.  Wyjątki będą raportowane za pośrednictwem zwracanego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub— 
Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowa <see cref="T:System.Data.CommandBehavior" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

 <see langword="Context Connection=true" />jest określony w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server zwrócił błąd podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">Opcje wykonywania instrukcji i pobierania danych.  Gdy jest ustawiona na <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> odczytuje cały wiersz przed zwróceniem kompletnego zadania.</param>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja programu <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, która <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> wysyła do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />i kompiluje<see cref="T:System.Data.SqlClient.SqlDataReader" />  
  
Tokenu anulowania można użyć do żądania, aby operacja została porzucona przed upływem limitu czasu polecenia.  Wyjątki będą raportowane za pośrednictwem zwracanego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowa <see cref="T:System.Data.CommandBehavior" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see langword="Context Connection=true" />jest określony w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server zwrócił błąd podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje zapytanie i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconym przez zapytanie. Dodatkowe kolumny lub wiersze są ignorowane.</summary>
        <returns>Pierwsza kolumna pierwszego wiersza w zestawie wyników lub odwołanie o wartości null (<see langword="Nothing" /> w Visual Basic), jeśli zestaw wyników jest pusty. Zwraca maksymalnie 2033 znaków.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> , aby pobrać pojedynczą wartość (na przykład wartość zagregowaną) z bazy danych. Wymaga to mniejszej ilości kodu niż <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> przy użyciu metody, a następnie wykonywania operacji, które są potrzebne do wygenerowania pojedynczej wartości przy użyciu danych <xref:System.Data.SqlClient.SqlDataReader>zwróconych przez.  
  
 Typowe <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> zapytanie można sformatować tak, jak w poniższym C# przykładzie:  
  
```csharp
cmd.CommandText = "SELECT COUNT(*) FROM dbo.region";  
Int32 count = (Int32) cmd.ExecuteScalar();  
```  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> , a następnie wykonuje przy użyciu <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>. W przykładzie przeszedł ciąg reprezentujący nową wartość, która ma zostać wstawiona do tabeli, oraz ciąg używany do nawiązania połączenia ze źródłem danych. Funkcja zwraca nową wartość kolumny **tożsamości** , jeśli wstawiono nowy wiersz, 0 w przypadku niepowodzenia.  
  
 [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił wyjątek podczas wykonywania polecenia w odniesieniu do zablokowanego wiersza. Ten wyjątek nie jest generowany w przypadku korzystania z Microsoft .NET Framework w wersji 1,0.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ExecuteScalarAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalarAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="sqlCommand.ExecuteScalarAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />, która wykonuje zapytanie asynchronicznie i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconym przez zapytanie. Dodatkowe kolumny lub wiersze są ignorowane.  
  
Tokenu anulowania można użyć do żądania, aby operacja została porzucona przed upływem limitu czasu polecenia. Wyjątki będą raportowane za pośrednictwem zwracanego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see langword="Context Connection=true" />jest określony w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server zwrócił błąd podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader ExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader ExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReader () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ ExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReader : unit -&gt; System.Xml.XmlReader" Usage="sqlCommand.ExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> Wysyła <see cref="T:System.Xml.XmlReader" /> do i<see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> kompiluje obiekt.</summary>
        <returns><see cref="T:System.Xml.XmlReader" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element **XmlReader** zwrócony przez tę metodę nie obsługuje operacji asynchronicznych.

 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Właściwość zwykle[!INCLUDE[tsql](~/includes/tsql-md.md)] określa instrukcję z prawidłową klauzulą for XML. Jednak można również określić instrukcję zwracającą `ntext` lub `nvarchar` dane, które zawierają prawidłowy kod XML lub zawartość kolumny zdefiniowanej za pomocą `xml` typu danych. <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>  
  
 Typowe <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> zapytanie można sformatować tak, jak w poniższym przykładzie Microsoft C# Visual:  
  
```csharp
SqlCommand command = new SqlCommand("SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Ta metoda umożliwia również pobranie jednowierszowego zestawu wyników z jedną kolumną, który zawiera dane XML. W tym przypadku, Jeśli zwracany jest więcej niż jeden wiersz, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> metoda dołącza <xref:System.Xml.XmlReader> do wartości w pierwszym wierszu i odrzuca resztę zestawu wyników.  
  
 Funkcja wielu aktywnych zestawów wyników (MARS) umożliwia stosowanie wielu akcji przy użyciu tego samego połączenia.  
  
 W przypadku korzystania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> programu lub do uzyskiwania dostępu do danych XML, SQL Server zwróci wszystkie wyniki XML o długości większej niż 2 033 znaków w wielu wierszach 2 033 znaków. Aby uniknąć tego zachowania, należy <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> użyć <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> lub odczytać zapytania XML.


## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> , a następnie wykonuje przy użyciu <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>. Przykład został przekazaną ciągiem, który jest instrukcją Transact-SQL FOR XML SELECT, i ciągiem, który ma być używany do nawiązywania połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił wyjątek podczas wykonywania polecenia w odniesieniu do zablokowanego wiersza. Ten wyjątek nie jest generowany w przypadku korzystania z Microsoft .NET Framework w wersji 1,0.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteXmlReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez ten <see cref="T:System.Data.SqlClient.SqlCommand" /> element i zwraca wyniki <see cref="T:System.Xml.XmlReader" /> jako obiekt.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync () As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchroniczna wersja programu <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, która <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> wysyła <see cref="T:System.Xml.XmlReader" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompiluje obiekt.  
  
Wyjątki będą raportowane za pośrednictwem zwracanego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Element **XmlReader** zwrócony przez tę metodę nie obsługuje operacji asynchronicznych.

Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see langword="Context Connection=true" />jest określony w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server zwrócił błąd podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja programu <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, która <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> wysyła <see cref="T:System.Xml.XmlReader" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompiluje obiekt.  
  
Tokenu anulowania można użyć do żądania, aby operacja została porzucona przed upływem limitu czasu polecenia.  Wyjątki będą raportowane za pośrednictwem zwracanego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Element **XmlReader** zwrócony przez tę metodę nie obsługuje operacji asynchronicznych.

Aby uzyskać więcej informacji na temat programowania asynchronicznego w Dostawca danych .NET Framework dla SQL Server, zobacz [programowanie asynchroniczne](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Gdy <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> ustawionowartość<see cref="T:System.IO.Stream" />, użyto elementu innego niż **Binary** lub **varbinary.** <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see cref="T:System.IO.TextReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" />Użyta została **** **** **** **** **** inna niż char, nchar, nvarchar, varchar lub XML, gdy została ustawiona na. <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />  

—lub—

Jeśli został ustawiony **** na .<see cref="T:System.Xml.XmlReader" /> <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.  

—lub—

<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucone podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  

—lub—

<see langword="Context Connection=true" />jest określony w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server zwrócił błąd podczas wykonywania tekstu polecenia.  

—lub—

Przekroczono limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd w <see cref="T:System.IO.Stream" /> <see cref="T:System.Xml.XmlReader" /> obiekcie lub <see cref="T:System.IO.TextReader" /> podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.IO.Stream" /> Obiekt<see cref="T:System.Xml.XmlReader" /> lub został<see cref="T:System.IO.TextReader" /> zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [SqlClient Streaming support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Notification">
      <MemberSignature Language="C#" Value="public System.Data.Sql.SqlNotificationRequest Notification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Sql.SqlNotificationRequest Notification" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Notification" />
      <MemberSignature Language="VB.NET" Value="Public Property Notification As SqlNotificationRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Sql::SqlNotificationRequest ^ Notification { System::Data::Sql::SqlNotificationRequest ^ get(); void set(System::Data::Sql::SqlNotificationRequest ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Notification : System.Data.Sql.SqlNotificationRequest with get, set" Usage="System.Data.SqlClient.SqlCommand.Notification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlNotificationRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Data.Sql.SqlNotificationRequest" /> określającą obiekt powiązany z tym poleceniem.</summary>
        <value>W przypadku ustawienia wartości null (wartość domyślna) nie należy żądać powiadomienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić wartość tej właściwości przed wykonaniem polecenia, aby zaczęło obowiązywać.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Korzystanie z powiadomień o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="NotificationAutoEnlist">
      <MemberSignature Language="C#" Value="public bool NotificationAutoEnlist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotificationAutoEnlist" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberSignature Language="VB.NET" Value="Public Property NotificationAutoEnlist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotificationAutoEnlist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotificationAutoEnlist : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy aplikacja powinna automatycznie odbierać powiadomienia o zapytaniach ze <see cref="T:System.Data.SqlClient.SqlDependency" /> wspólnego obiektu.</summary>
        <value><see langword="true" />Jeśli aplikacja powinna automatycznie odbierać powiadomienia o zapytaniach; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta funkcja jest używana w aplikacjach ASP.NET do otrzymywania powiadomień dla wszystkich poleceń wykonywanych na stronie ASP względem SQL Server. Dzięki temu ASP.NET może buforować stronę do momentu, gdy zapytania używane do renderowania strony spowodują powstanie innego wyniku. Automatyczne rejestracje.  
  
 Ta właściwość ma zastosowanie tylko do wersji SQL Server, które obsługują powiadomienia o zapytaniach. W przypadku wcześniejszych wersji ustawienie tej właściwości na `true` nie ma wpływu na aplikację.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Korzystanie z powiadomień o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As SqlParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlParameterCollection ^ Parameters { System::Data::SqlClient::SqlParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.SqlClient.SqlParameterCollection" Usage="System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlParameterCollection" />Pobiera.</summary>
        <value>Parametry instrukcji języka Transact-SQL lub procedury składowanej. Wartością domyślną jest pusta kolekcja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostawca danych Microsoft .NET Framework dla SQL Server nie obsługuje symbolu zastępczego znaku zapytania (?) do przekazywania parametrów do instrukcji SQL lub procedury składowanej wywoływanej przez polecenie `CommandType.Text`. W takim przypadku należy użyć parametrów nazwanych. Przykład:  
  
 Wybierz pozycję * od klientów, gdzie CustomerID =@CustomerID  
  
> [!NOTE]
>  Jeśli parametry w kolekcji nie są zgodne z wymaganiami zapytania, które mają zostać wykonane, może wystąpić błąd.  
  
 Aby uzyskać więcej informacji, zobacz [Konfigurowanie parametrów i typów danych parametrów](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
## Examples  
 Poniższy przykład ilustruje sposób tworzenia <xref:System.Data.SqlClient.SqlCommand> i dodawania parametrów <xref:System.Data.SqlClient.SqlParameterCollection>do.  
  
 [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]
 [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy przygotowaną wersję polecenia w wystąpieniu SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> jest ustawiona na `StoredProcedure`, wywołanie <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> powinno się powieść, chociaż może to spowodować niepowodzenie.  
  
 Przed wywołaniem <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>Określ typ danych każdego parametru w instrukcji, która ma zostać przygotowana. Dla każdego parametru, który ma typ danych o zmiennej długości, należy ustawić <xref:System.Data.SqlClient.SqlParameter.Size%2A> właściwość na maksymalny wymagany rozmiar. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>zwraca błąd, jeśli te warunki nie są spełnione.  
  
> [!NOTE]
>  W przypadku zmiany kontekstu bazy danych przez wykonanie instrukcji języka Transact- `USE <database>` SQL lub <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> wywołanie metody, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> należy ją wywołać po raz drugi.  
  
 Jeśli wywołasz `Execute` metodę po wywołaniu <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, wszystkie wartości parametrów, które są większe niż wartość określona przez <xref:System.Data.SqlClient.SqlParameter.Size%2A> właściwość, są automatycznie obcinane do oryginalnego określonego rozmiaru parametru i żadne błędy obcinania nie są zwracać.  
  
 Parametry wyjściowe (jeśli zostały przygotowane lub nie) muszą mieć typ danych określony przez użytkownika. W przypadku określenia typu danych o zmiennej długości należy również określić wartość maksymalną <xref:System.Data.SqlClient.SqlParameter.Size%2A>.  
  
 Przed wystąpieniem programu Visual Studio <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 2010 wywołał wyjątek.  Począwszy od programu Visual Studio 2010, ta metoda nie zgłasza wyjątku.  
  
## Examples  
 Poniższy przykład demonstruje użycie <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> metody.  
  
 [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="sqlCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> właściwość do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> domyślna wynosi 30 sekund.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StatementCompleted">
      <MemberSignature Language="C#" Value="public event System.Data.StatementCompletedEventHandler StatementCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StatementCompletedEventHandler StatementCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatementCompleted As StatementCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StatementCompletedEventHandler ^ StatementCompleted;" />
      <MemberSignature Language="F#" Value="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " Usage="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StatementCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu wykonywania instrukcji języka Transact-SQL.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Data.SqlClient.SqlParameter" /> obiektu.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlParameter" /> Obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> Wysyła <see cref="T:System.Data.SqlClient.SqlDataReader" />do ikompiluje.<see cref="P:System.Data.SqlClient.SqlCommand.Connection" /></summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="behavior">Jedna z <see cref="T:System.Data.CommandBehavior" /> wartości.</param>
        <summary>Wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> <see cref="T:System.Data.SqlClient.SqlDataReader" /> do i kompiluje przy użyciu jednej z <see cref="T:System.Data.CommandBehavior" /> wartości. <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /></summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Data.SqlClient.SqlCommand" /> obiekt, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Nowy <see cref="T:System.Data.SqlClient.SqlCommand" /> obiekt, który jest kopią tego wystąpienia.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlTransaction ^ Transaction { System::Data::SqlClient::SqlTransaction ^ get(); void set(System::Data::SqlClient::SqlTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.SqlClient.SqlTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Transaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, <see cref="T:System.Data.SqlClient.SqlTransaction" /> w ramach <see cref="T:System.Data.SqlClient.SqlCommand" /> którego wykonujesz.</summary>
        <value><see cref="T:System.Data.SqlClient.SqlTransaction" />. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można ustawić <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> właściwości, jeśli została ona już ustawiona na określoną wartość, a polecenie jest w trakcie wykonywania. Jeśli ustawisz właściwość Transaction na <xref:System.Data.SqlClient.SqlTransaction> obiekt, który nie jest połączony z tym samym <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlCommand> obiektem, jest zgłaszany wyjątek przy następnym próbie wykonania instrukcji.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">Wykonywanie transakcji</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_UpdatedRowSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia sposób, w jaki wyniki poleceń są <see cref="T:System.Data.DataRow" /> stosowane do obiektu, który jest używany przez <see cref="T:System.Data.Common.DbDataAdapter" />metodę **Update** obiektu.</summary>
        <value>Jedna z <see cref="T:System.Data.UpdateRowSource" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.Data.UpdateRowSource> to **Both** , chyba że polecenie jest generowane automatycznie (tak jak w przypadku <xref:System.Data.SqlClient.SqlCommandBuilder>), w którym to przypadku wartość domyślna to **none**.  
  
 Aby uzyskać więcej informacji o korzystaniu z właściwości **UpdatedRowSource** , zobacz [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Używanie Dostawca danych .NET Framework w przypadku SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>