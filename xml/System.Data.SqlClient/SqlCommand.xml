<Type Name="SqlCommand" FullName="System.Data.SqlClient.SqlCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8378badbdbaba0866947ca63785d17c3e3788be1" />
    <Meta Name="ms.sourcegitcommit" Value="c902e847cd05ac37d93eca981b0fb009aae0a790" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/28/2018" />
    <Meta Name="ms.locfileid" Value="52455085" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface IDbCommand&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbCommand</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje instrukcji języka Transact-SQL lub procedura składowana do wykonania wobec bazy danych programu SQL Server. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wystąpienie <xref:System.Data.SqlClient.SqlCommand> utworzeniu odczyt/zapis właściwości są ustawiane na wartości początkowe. Aby uzyskać listę tych wartości, zobacz <xref:System.Data.SqlClient.SqlCommand> konstruktora.  
  
 <xref:System.Data.SqlClient.SqlCommand> Funkcje następujących metod do wykonywania poleceń w bazie danych programu SQL Server:  
  
|Element|Opis|  
|----------|-----------------|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <xref:System.Data.SqlClient.SqlCommand>, zazwyczaj wykonywanie poleceń, takich jak wstawianie, usuwanie, aktualizacja i USTAWIĆ instrukcji. Każde wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> muszą łączyć się z wywołaniem <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> której zakończy operację, zazwyczaj w oddzielnym wątku.|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <xref:System.Data.SqlClient.SqlCommand> i pobiera jeden lub więcej wyników ustawia z serwera. Każde wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> muszą łączyć się z wywołaniem <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> której zakończy operację, zazwyczaj w oddzielnym wątku.|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <xref:System.Data.SqlClient.SqlCommand>. Każde wywołanie `BeginExecuteXmlReader` muszą łączyć się z wywołaniem `EndExecuteXmlReader`, który zakończy operację, zazwyczaj w oddzielnym wątku i zwraca <xref:System.Xml.XmlReader> obiektu.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|Wykonuje polecenia, które zwracają wierszy. Aby zwiększyć wydajność <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> wywołuje poleceń przy użyciu języka Transact-SQL `sp_executesql` systemowej procedury składowanej. W związku z tym <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> może nie mieć efektu, jeśli jest używany do wykonywania poleceń, takich jak instrukcji języka Transact-SQL jest USTAWIONY.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|Wykonuje polecenia takie jak instrukcje języka Transact-SQL INSERT, DELETE, aktualizacji i zestawu.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|Pobiera pojedynczą wartość (na przykład wartości zagregowanej) z bazy danych.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|Wysyła <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> do <xref:System.Data.SqlClient.SqlCommand.Connection%2A> i kompilacje <xref:System.Xml.XmlReader> obiektu.|  
  
 Możesz zresetować <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> właściwości i ponowne użycie <xref:System.Data.SqlClient.SqlCommand> obiektu. Jednakże, należy zamknąć <xref:System.Data.SqlClient.SqlDataReader> można było wykonać nowe lub poprzedniego polecenia.  
  
 Jeśli <xref:System.Data.SqlClient.SqlException> jest generowany przez wykonywanie metody <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlConnection> pozostaje otwarty, gdy poziom ważności jest 19 lub mniej. Jeśli poziom ważności jest mniejsze niż 20, serwer zazwyczaj zamyka <xref:System.Data.SqlClient.SqlConnection>. Jednak użytkownik może ponownie otworzyć połączenie i kontynuować.  
  
> [!NOTE]
>  Pustego, nazywany również porządkowe, parametry nie są obsługiwane przez .NET Framework Data Provider for SQL Server.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, a <xref:System.Data.SqlClient.SqlDataReader>. Przykład odczytuje dane pisania w konsoli. Na koniec kod z przykładu zamyka <xref:System.Data.SqlClient.SqlDataReader> i następnie <xref:System.Data.SqlClient.SqlConnection> jako wychodzi `Using` bloków kodu.  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 Poniższy przykład pokazuje sposób tworzenia i wykonywanie różnych typów obiektów klasy SqlCommand.  
  
 Najpierw należy utworzyć przykładowej bazy danych, wykonując następujący skrypt:  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE procedure [dbo].[CourseExtInfo] @CourseId int  
as  
select c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  
from Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  
where c.CourseID=@CourseId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  
as  
select @CourseCount=Count(c.CourseID)  
from course as c  
where c.DepartmentID=@DepartmentId  
  
select d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  
from Department as d  
where d.DepartmentID=@DepartmentId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
Create PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   
@Year int,@BudgetSum money output  
AS  
BEGIN  
        SELECT @BudgetSum=SUM([Budget])  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year   
  
SELECT [DepartmentID]  
      ,[Name]  
      ,[Budget]  
      ,[StartDate]  
      ,[Administrator]  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year  
  
END  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  
[LastName] [nvarchar](50) NOT NULL,  
[FirstName] [nvarchar](50) NOT NULL,  
[HireDate] [datetime] NULL,  
[EnrollmentDate] [datetime] NULL,  
 CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
(  
[PersonID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  
[CourseID] [nvarchar](10) NOT NULL,  
[StudentID] [int] NOT NULL,  
[Grade] [decimal](3, 2) NOT NULL,  
 CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   
(  
[EnrollmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create view [dbo].[EnglishCourse]  
as  
select c.CourseID,c.Title,c.Credits,c.DepartmentID  
from Course as c join Department as d on c.DepartmentID=d.DepartmentID  
where d.Name=N'English'  
  
GO  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
SET IDENTITY_INSERT [dbo].[Person] ON   
  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  
SET IDENTITY_INSERT [dbo].[Person] OFF  
SET IDENTITY_INSERT [dbo].[StudentGrade] ON   
  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  
SET IDENTITY_INSERT [dbo].[StudentGrade] OFF  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  
REFERENCES [dbo].[Person] ([PersonID])  
GO  
ALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  
GO  
```  
  
 Następnie skompilować i wykonaj następujące czynności:  
  
```  
using System;  
using System.Data;  
using System.Data.SqlClient;  
using System.Threading.Tasks;  
  
class Program {  
  
   static class SqlHelper {  
      // Set the connection, command, and then execute the command with non query.  
      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   
               // type is only for OLE DB.    
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteNonQuery();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command and only return one value.  
      public static Object ExecuteScalar(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteScalar();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command with query and return the reader.  
      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         SqlConnection conn = new SqlConnection(connectionString);  
  
         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
            cmd.CommandType = commandType;  
            cmd.Parameters.AddRange(parameters);  
  
            conn.Open();  
            // When using CommandBehavior.CloseConnection, the connection will be closed when the   
            // IDataReader is closed.  
            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  
  
            return reader;  
         }  
      }  
   }  
  
   static void Main(string[] args) {  
      String connectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;";  
  
      CountCourses(connectionString, 2012);  
      Console.WriteLine();  
  
      Console.WriteLine("Following result is the departments that started from 2007:");  
      GetDepartments(connectionString, 2007);  
      Console.WriteLine();  
  
      Console.WriteLine("Add the credits when the credits of course is lower than 4.");  
      AddCredits(connectionString, 4);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static void CountCourses(String connectionString, Int32 year) {  
      String commandText = "Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year";  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  
      Int32 count;  
      if (Int32.TryParse(oValue.ToString(), out count))  
         Console.WriteLine("There {0} {1} course{2} in {3}.", count > 1 ? "are" : "is", count, count > 1 ? "s" : null, year);  
   }  
  
   // Display the Departments that start from the specified year.  
   static void GetDepartments(String connectionString, Int32 year) {  
      String commandText = "dbo.GetDepartmentsOfSpecifiedYear";  
  
      // Specify the year of StartDate  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      // When the direction of parameter is set as Output, you can get the value after   
      // executing the command.  
      SqlParameter parameterBudget = new SqlParameter("@BudgetSum", SqlDbType.Money);  
      parameterBudget.Direction = ParameterDirection.Output;  
  
      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  
          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  
         Console.WriteLine("{0,-20}{1,-20}{2,-20}{3,-20}", "Name", "Budget", "StartDate",  
             "Administrator");  
         while (reader.Read()) {  
            Console.WriteLine("{0,-20}{1,-20:C}{2,-20:d}{3,-20}", reader["Name"],  
                reader["Budget"], reader["StartDate"], reader["Administrator"]);  
         }  
      }  
      Console.WriteLine("{0,-20}{1,-20:C}", "Sum:", parameterBudget.Value);  
   }  
  
   // If credits of course is lower than the certain value, the method will add the credits.  
   static void AddCredits(String connectionString, Int32 creditsLow) {  
      String commandText = "Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits";  
  
      SqlParameter parameterCredits = new SqlParameter("@Credits", creditsLow);  
  
      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  
  
      Console.WriteLine("{0} row{1} {2} updated.", rows, rows > 1 ? "s" : null, rows > 1 ? "are" : "is");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych w ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podstawowy Konstruktor inicjuje wszystkie pola do wartości domyślnych. W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Data.SqlClient.SqlCommand>.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|Pusty ciąg ("")|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Null|  
  
 Możesz zmienić wartość dla każdego z tych właściwości, za pośrednictwem oddzielne wywołania do właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia `CommandTimeout` właściwości.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy z tekstu zapytania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wystąpienie <xref:System.Data.SqlClient.SqlCommand> zostanie utworzony, następujące właściwości są ustawione na wartości początkowe odczytu/zapisu.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|null|  
  
 Możesz zmienić wartość dla każdego z tych właściwości, za pośrednictwem oddzielne wywołania do właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand>, przekazując w tekście ciągu i polecenia połączenia.  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> reprezentującą połączenie z wystąpieniem programu SQL Server.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy z tekstem zapytania i <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Data.SqlClient.SqlCommand>.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Nowy <xref:System.Data.SqlClient.SqlConnection> czyli wartość `connection` parametru.|  
  
 Wartość dla każdego z tych parametrów można zmienić przez ustawienie właściwości powiązanych.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> reprezentującą połączenie z wystąpieniem programu SQL Server.</param>
        <param name="transaction">
          <see cref="T:System.Data.SqlClient.SqlTransaction" /> w którym <see cref="T:System.Data.SqlClient.SqlCommand" /> wykonuje.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy z tekstem zapytania <see cref="T:System.Data.SqlClient.SqlConnection" />i <see cref="T:System.Data.SqlClient.SqlTransaction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Data.SqlClient.SqlCommand>.  
  
|Właściwości|Wartość początkowa|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Nowy <xref:System.Data.SqlClient.SqlConnection> czyli wartość `connection` parametru.|  
  
 Wartość dla każdego z tych parametrów można zmienić przez ustawienie właściwości powiązanych.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction, valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction, columnEncryptionSetting As SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction, System::Data::SqlClient::SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction * System.Data.SqlClient.SqlCommandColumnEncryptionSetting -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction, columnEncryptionSetting)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
        <Parameter Name="columnEncryptionSetting" Type="System.Data.SqlClient.SqlCommandColumnEncryptionSetting" />
      </Parameters>
      <Docs>
        <param name="cmdText">Tekst zapytania.</param>
        <param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> reprezentującą połączenie z wystąpieniem programu SQL Server.</param>
        <param name="transaction">
          <see cref="T:System.Data.SqlClient.SqlTransaction" /> w którym <see cref="T:System.Data.SqlClient.SqlCommand" /> wykonuje.</param>
        <param name="columnEncryptionSetting">Ustawienia szyfrowania. Aby uzyskać więcej informacji, zobacz [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy przy użyciu tekstu określonego polecenia, połączenia, transakcji i ustawienie szyfrowania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteNonQuery">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania lub zaczekaj na wyniki, lub obu; ta wartość jest także potrzebna podczas wywoływania <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, która zwraca liczbę wierszy dotyczy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Metoda uruchamia proces wykonywania asynchronicznie [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcji lub procedury składowanej, która nie zwraca wiersze, tak aby inne zadania można uruchomić jednocześnie, podczas wykonywania instrukcji. Po ukończeniu instrukcji deweloperów musi wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> metodę, aby zakończyć operację. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Metoda zwraca natychmiast (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> nie ma wpływu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), ale do momentu kod jest wykonywany odpowiednich <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> wywołania metody go nie wykonać inne wywołania rozpoczynających się wykonanie synchroniczna lub asynchroniczna odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> przed wykonanie polecenia powoduje, że zakończone <xref:System.Data.SqlClient.SqlCommand> obiektu, aby zablokować dopiero po zakończeniu wykonywania.  
  
 Należy pamiętać, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenia lub wiele parametrów, ta metoda może blokować podczas zapisu. Po wysłaniu polecenia, metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — oznacza to, że operacje odczytu są asynchroniczne.  
  
 To przeciążenie obsługuje procedura wywołania zwrotnego, deweloperzy muszą albo sondowania w celu ustalenia, czy polecenie zostało wykonane, za pomocą <xref:System.IAsyncResult.IsCompleted%2A> właściwość <xref:System.IAsyncResult> zwrócone przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> metody; lub poczekaj na zakończenie co najmniej jedno polecenie przy użyciu <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości zwracanego <xref:System.IAsyncResult>.  
  
   
  
## Examples  
 Następująca aplikacja konsoli tworzy dane aktualizacje w ramach **AdventureWorks** przykładowej bazy danych, wykonując pracę asynchronicznie. Aby emulować procesów długotrwałych, w tym przykładzie wstawia tekst polecenia instrukcję WAITFOR. Zazwyczaj nie trzeba podjąć działania w celu poinformowania poleceń wolniejsze działanie, ale w ten sposób w tym przypadku ułatwia pokazują zachowanie asynchroniczne.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd, który wystąpił podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Pary nazwa/wartość "Przetwarzanie asynchroniczne = true" nie został dołączony w ramach definicji połączenia, w tym ciągu połączenia <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, która jest wywoływana po zakończeniu wykonywania polecenia. Przekaż <see langword="null" /> (<see langword="Nothing" /> programu Microsoft Visual Basic) do wskazania, że wymagane jest bez wywołania zwrotnego.</param>
        <param name="stateObject">Obiekt stan zdefiniowane przez użytkownika, który jest przekazywany do procedury wywołania zwrotnego. Pobierz ten obiekt z w obrębie za pomocą procedury wywołania zwrotnego <see cref="P:System.IAsyncResult.AsyncState" /> właściwości.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" />, biorąc pod uwagę wywołania zwrotnego procedury i informacje o stanie.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania lub zaczekaj na wyniki, lub obu; ta wartość jest także potrzebna podczas wywoływania <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, która zwraca liczbę wierszy dotyczy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która nie zwraca wiersze, tak aby inne zadania można uruchomić jednocześnie, podczas wykonywania instrukcji. Po ukończeniu instrukcji deweloperów musi wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> metodę, aby zakończyć operację. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Metoda zwraca natychmiast (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> nie ma wpływu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), ale do momentu kod jest wykonywany odpowiednich <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> wywołania metody go nie wykonać inne wywołania rozpoczynających się wykonanie synchroniczna lub asynchroniczna odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> przed wykonanie polecenia powoduje, że zakończone <xref:System.Data.SqlClient.SqlCommand> obiektu, aby zablokować dopiero po zakończeniu wykonywania.  
  
 `callback` Parametr umożliwia określenie <xref:System.AsyncCallback> delegata, która jest wywoływana, gdy wykonywanie instrukcji zostało zakończone. Możesz wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> metody z w ramach tej procedury delegata lub z innej lokalizacji, w ramach aplikacji. Ponadto można przekazać dowolny obiekt w `asyncStateObject` parametr i procedura wywołania zwrotnego można pobierać te informacje przy użyciu <xref:System.IAsyncResult.AsyncState%2A> właściwości.  
  
 Należy pamiętać, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenia lub wiele parametrów, ta metoda może blokować podczas zapisu. Po wysłaniu polecenia, metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — oznacza to, że operacje odczytu są asynchroniczne.  
  
 Ponieważ procedura wywołania zwrotnego jest wykonywana z w ramach wątku w tle dostarczonych przez program Microsoft .NET środowiska uruchomieniowego języka wspólnego, bardzo ważne jest wykonać rygorystyczne podejście w celu obsługi interakcji między wątkami z w ramach aplikacji. Na przykład możesz nie może mieć interakcji z zawartością formularza z w obrębie procedury z wywołania zwrotnego. powinna mieć zaktualizować formularz, musisz przełączyć się do wątku formularza aby można było wykonywać swoją pracę. W przykładzie w tym temacie przedstawiono to zachowanie.  
  
 Wszystkie błędy, które występują podczas wykonywania operacji są zgłaszane jako wyjątki w procedurze wywołania zwrotnego. Musi obsługiwać wyjątek w procedurze wywołania zwrotnego, a nie w głównej aplikacji. Zobacz przykład w tym temacie, aby uzyskać dodatkowe informacje dotyczące obsługi wyjątków w procedurze wywołania zwrotnego.  
  
   
  
## Examples  
 Następującej aplikacji Windows demonstruje użycie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> metody wykonywania instrukcji języka Transact-SQL, obejmującą opóźnienie kilka sekund (emulowanie polecenia długotrwałych).  
  
 W przykładzie pokazano wiele technik ważne. Obejmuje to wywołanie metody, która wchodzi w interakcję z formularza z oddzielnego wątku. Ponadto w tym przykładzie przedstawiono, jak należy zablokować użytkownikom możliwość wykonywania polecenia jednocześnie wiele razy, a jak musisz upewnić się, że formularz nie zamyka się przed procedura wywołania zwrotnego jest wywoływana.  
  
 Aby skonfigurować w tym przykładzie, należy utworzyć nową aplikację Windows. Umieść <xref:System.Windows.Forms.Button> kontroli i <xref:System.Windows.Forms.Label> kontrolki na formularzu (przyjmuje domyślną nazwę każdej kontrolki). Dodaj następujący kod do klasy formularza, modyfikowanie parametrów połączenia, zgodnie z potrzebami w danym środowisku.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd, który wystąpił podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Pary nazwa/wartość "Przetwarzanie asynchroniczne = true" nie został dołączony w ramach definicji połączenia, w tym ciągu połączenia <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" />i pobiera jeden lub więcej zestawów wyników z serwera.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" />i pobiera jeden lub więcej zestawów wyników z serwera.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania lub zaczekaj na wyniki, lub obu; ta wartość jest także potrzebna podczas wywoływania <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, co powoduje zwrócenie <see cref="T:System.Data.SqlClient.SqlDataReader" /> wystąpienie, które mogą służyć do pobierania zwrócone wiersze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze, tak aby inne zadania można uruchomić jednocześnie, podczas wykonywania instrukcji. Po ukończeniu instrukcji deweloperów musi wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metodę, aby zakończyć operację i pobrać <xref:System.Data.SqlClient.SqlDataReader> zwróconemu przez polecenie. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda zwraca natychmiast, ale dopóki kod jest wykonywany odpowiednich <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołania metody go nie wykonać inne wywołania rozpoczynających się wykonanie synchroniczną lub asynchroniczną w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> przed wykonanie polecenia powoduje, że zakończone <xref:System.Data.SqlClient.SqlCommand> obiektu, aby zablokować dopiero po zakończeniu wykonywania.  
  
 Należy pamiętać, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenia lub wiele parametrów, ta metoda może blokować podczas zapisu. Po wysłaniu polecenia, metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — oznacza to, że operacje odczytu są asynchroniczne. Mimo że asynchroniczne wykonywanie polecenia wartość pobieranie jest nadal synchroniczne. Oznacza to, że wywołania <xref:System.Data.SqlClient.SqlDataReader.Read%2A> może zablokować, jeśli wymagana jest większej ilości danych i odnośnej sieci firmy bloki operacji odczytu.  
  
 To przeciążenie obsługuje procedura wywołania zwrotnego, deweloperzy muszą albo sondowania w celu ustalenia, czy polecenie zostało wykonane, za pomocą <xref:System.IAsyncResult.IsCompleted%2A> właściwość <xref:System.IAsyncResult> zwrócone przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> metody; lub poczekaj na zakończenie co najmniej jedno polecenie przy użyciu <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości zwracanego <xref:System.IAsyncResult>.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, programu SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości, w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.
  
   
  
## Examples  
 Następująca aplikacja konsoli rozpoczyna się proces pobierania czytnik danych asynchronicznie. Podczas oczekiwania na wyniki, ta prosta aplikacja znajduje się w pętli, badanie <xref:System.IAsyncResult.IsCompleted%2A> wartości właściwości. Jak najszybciej po zakończeniu procesu kod pobiera <xref:System.Data.SqlClient.SqlDataReader> i wyświetla jego zawartość.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd, który wystąpił podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Pary nazwa/wartość "Przetwarzanie asynchroniczne = true" nie został dołączony w ramach definicji połączenia, w tym ciągu połączenia <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Jedną z <see cref="T:System.Data.CommandBehavior" /> wartości, wskazując opcje pobierania danych i wykonywanie instrukcji.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" /> przy użyciu jednej z <see cref="T:System.Data.CommandBehavior" /> wartości.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania, poczekaj na wyniki i / lub; ta wartość jest także potrzebna podczas wywoływania <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, co powoduje zwrócenie <see cref="T:System.Data.SqlClient.SqlDataReader" /> wystąpienie, które mogą służyć do pobierania zwrócone wiersze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze, tak aby inne zadania można uruchomić jednocześnie, podczas wykonywania instrukcji. Po ukończeniu instrukcji deweloperów musi wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metodę, aby zakończyć operację i pobrać <xref:System.Data.SqlClient.SqlDataReader> zwróconemu przez polecenie. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda zwraca natychmiast, ale dopóki kod jest wykonywany odpowiednich <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołania metody go nie wykonać inne wywołania rozpoczynających się wykonanie synchroniczną lub asynchroniczną w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> przed wykonanie polecenia powoduje, że zakończone <xref:System.Data.SqlClient.SqlCommand> obiektu, aby zablokować dopiero po zakończeniu wykonywania.  
  
 `behavior` Parametr pozwala określić opcje kontrolujące zachowanie polecenia i jego połączenia. Te wartości można łączyć ze sobą (przy użyciu języka programowania `OR` operator); ogólnie rzecz biorąc, deweloperzy `CommandBehavior.CloseConnection` wartość, aby upewnić się, że połączenie jest zamknięte przez środowisko uruchomieniowe podczas <xref:System.Data.SqlClient.SqlDataReader> jest zamknięty.  
  
 Należy pamiętać, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenia lub wiele parametrów, ta metoda może blokować podczas zapisu. Po wysłaniu polecenia, metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — oznacza to, że operacje odczytu są asynchroniczne. Mimo że asynchroniczne wykonywanie polecenia wartość pobieranie jest nadal synchroniczne. Oznacza to, że wywołania <xref:System.Data.SqlClient.SqlDataReader.Read%2A> może zablokować, jeśli wymagana jest większej ilości danych i odnośnej sieci firmy bloki operacji odczytu.  
  
 To przeciążenie obsługuje procedura wywołania zwrotnego, deweloperzy muszą albo sondowania w celu ustalenia, czy polecenie zostało wykonane, za pomocą <xref:System.IAsyncResult.IsCompleted%2A> właściwość <xref:System.IAsyncResult> zwrócone przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> metody; lub poczekaj na zakończenie co najmniej jedno polecenie przy użyciu <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości zwracanego <xref:System.IAsyncResult>.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, program SQL Server zwraca żadnych wyników XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.
  
   
  
## Examples  
 Następująca aplikacja konsoli rozpoczyna się proces pobierania czytnik danych asynchronicznie. Podczas oczekiwania na wyniki, ta prosta aplikacja znajduje się w pętli, badanie <xref:System.IAsyncResult.IsCompleted%2A> wartości właściwości. Po zakończeniu procesu kod pobiera <xref:System.Data.SqlClient.SqlDataReader> i wyświetla jego zawartość.  
  
 Ten przykład przekazuje także `CommandBehavior.CloseConnection` i `CommandBehavior.SingleRow` wartości w parametrze zachowanie, co powoduje połączenie zostanie zamknięty za pomocą zwróconych <xref:System.Data.SqlClient.SqlDataReader> jest zamknięte i zoptymalizowane pod kątem wyniku pojedynczy wiersz.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd, który wystąpił podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Pary nazwa/wartość "Przetwarzanie asynchroniczne = true" nie został dołączony w ramach definicji połączenia, w tym ciągu połączenia <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, która jest wywoływana po zakończeniu wykonywania polecenia. Przekaż <see langword="null" /> (<see langword="Nothing" /> programu Microsoft Visual Basic) do wskazania, że wymagane jest bez wywołania zwrotnego.</param>
        <param name="stateObject">Obiekt stan zdefiniowane przez użytkownika, który jest przekazywany do procedury wywołania zwrotnego. Pobierz ten obiekt z w obrębie za pomocą procedury wywołania zwrotnego <see cref="P:System.IAsyncResult.AsyncState" /> właściwości.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" /> i pobiera jeden lub więcej zestawów wyników z serwera, biorąc pod uwagę wywołania zwrotnego procedury i informacje o stanie.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania, poczekaj na wyniki i / lub; ta wartość jest także potrzebna podczas wywoływania <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, co powoduje zwrócenie <see cref="T:System.Data.SqlClient.SqlDataReader" /> wystąpienia, która może służyć do pobierania zwrócone wiersze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze, tak aby inne zadania można uruchomić jednocześnie, podczas wykonywania instrukcji. Po ukończeniu instrukcji deweloperów musi wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metodę, aby zakończyć operację i pobrać <xref:System.Data.SqlClient.SqlDataReader> zwróconemu przez polecenie. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda zwraca natychmiast, ale dopóki kod jest wykonywany odpowiednich <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołania metody go nie wykonać inne wywołania rozpoczynających się wykonanie synchroniczną lub asynchroniczną w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> przed zakończeniem wykonywania polecenia Przyczyna <xref:System.Data.SqlClient.SqlCommand> obiektu, aby zablokować dopiero po zakończeniu wykonywania.  
  
 `callback` Parametr umożliwia określenie <xref:System.AsyncCallback> delegata, która jest wywoływana, gdy wykonywanie instrukcji zostało zakończone. Możesz wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metody z w ramach tej procedury delegata lub z innej lokalizacji, w ramach aplikacji. Ponadto można przekazać dowolny obiekt w `stateObject` parametr i procedura wywołania zwrotnego można pobierać te informacje przy użyciu <xref:System.IAsyncResult.AsyncState%2A> właściwości.  
  
 Należy pamiętać, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenia lub wiele parametrów, ta metoda może blokować podczas zapisu. Po wysłaniu polecenia, metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — oznacza to, że operacje odczytu są asynchroniczne. Mimo że asynchroniczne wykonywanie polecenia wartość pobieranie jest nadal synchroniczne. Oznacza to, że wywołania <xref:System.Data.SqlClient.SqlDataReader.Read%2A> może zablokować, jeśli wymagana jest większej ilości danych i odnośnej sieci firmy bloki operacji odczytu.  
  
 Ponieważ procedura wywołania zwrotnego jest wykonywana z w ramach wątku w tle dostarczane przez środowisko uruchomieniowe programu Microsoft .NET, bardzo ważne jest wykonać rygorystyczne podejście w celu obsługi interakcji między wątkami z w ramach aplikacji. Na przykład możesz nie może mieć interakcji z zawartością formularza z w obrębie procedury z wywołania zwrotnego. powinna mieć zaktualizować formularz, musisz przełączyć się do wątku formularza aby można było wykonywać swoją pracę. W przykładzie w tym temacie przedstawiono to zachowanie.  
  
 Wszystkie błędy, które występują podczas wykonywania operacji są zgłaszane jako wyjątki w procedurze wywołania zwrotnego. Musi obsługiwać wyjątek w procedurze wywołania zwrotnego, a nie w głównej aplikacji. Zobacz przykład w tym temacie, aby uzyskać dodatkowe informacje dotyczące obsługi wyjątków w procedurze wywołania zwrotnego.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, program SQL Server zwraca żadnych wyników XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.
  
   
  
## Examples  
 Następującej aplikacji Windows demonstruje użycie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> metody wykonywania instrukcji języka Transact-SQL, obejmującą opóźnienie kilka sekund (emulowanie polecenia długotrwałych). Ponieważ próbki asynchronicznie wykonuje polecenie, formularz pozostanie odpowiadać podczas oczekiwania na wyniki. Ten przykład przekazuje wykonywanie <xref:System.Data.SqlClient.SqlCommand> obiektu jako `stateObject` parameter; to pozwala w prosty sposób pobrać <xref:System.Data.SqlClient.SqlCommand> obiektu z w ramach procedury wywołanie zwrotne, dzięki czemu kod może wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> odpowiadający — metoda wstępne wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 W przykładzie pokazano wiele technik ważne. Obejmuje to wywołanie metody, która wchodzi w interakcję z formularza z oddzielnego wątku. Ponadto w tym przykładzie przedstawiono, jak należy zablokować użytkownikom możliwość wykonywania polecenia jednocześnie wiele razy, a jak musisz upewnić się, że formularz nie zamyka się przed procedura wywołania zwrotnego jest wywoływana.  
  
 Aby skonfigurować w tym przykładzie, należy utworzyć nową aplikację Windows. Umieść <xref:System.Windows.Forms.Button> kontroli <xref:System.Windows.Forms.DataGridView> kontroli i <xref:System.Windows.Forms.Label> kontrolki na formularzu (przyjmuje domyślną nazwę każdej kontrolki). Dodaj następujący kod do klasy formularza, modyfikowanie parametrów połączenia, zgodnie z potrzebami w danym środowisku.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd, który wystąpił podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Pary nazwa/wartość "Przetwarzanie asynchroniczne = true" nie został dołączony w ramach definicji połączenia, w tym ciągu połączenia <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object, behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj * System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, która jest wywoływana po zakończeniu wykonywania polecenia. Przekaż <see langword="null" /> (<see langword="Nothing" /> programu Microsoft Visual Basic) do wskazania, że wymagane jest bez wywołania zwrotnego.</param>
        <param name="stateObject">Obiekt stan zdefiniowane przez użytkownika, który jest przekazywany do procedury wywołania zwrotnego. Pobierz ten obiekt z w obrębie za pomocą procedury wywołania zwrotnego <see cref="P:System.IAsyncResult.AsyncState" /> właściwości.</param>
        <param name="behavior">Jedną z <see cref="T:System.Data.CommandBehavior" /> wartości, wskazując opcje pobierania danych i wykonywanie instrukcji.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" />, przy użyciu jednej z <see langword="CommandBehavior" /> wartości i pobieranie jeden lub więcej zestawów wyników z serwera, biorąc pod uwagę procedura wywołania zwrotnego i stanu informacje.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania lub zaczekaj na wyniki, lub obu; ta wartość jest także potrzebna podczas wywoływania <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, co powoduje zwrócenie <see cref="T:System.Data.SqlClient.SqlDataReader" /> wystąpienia, która może służyć do pobierania zwrócone wiersze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze, tak aby inne zadania można uruchomić jednocześnie, podczas wykonywania instrukcji. Po ukończeniu instrukcji deweloperów musi wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metodę, aby zakończyć operację i pobrać <xref:System.Data.SqlClient.SqlDataReader> zwróconemu przez polecenie. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Metoda zwraca natychmiast, ale dopóki kod jest wykonywany odpowiednich <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> wywołania metody go nie wykonać inne wywołania rozpoczynających się wykonanie synchroniczną lub asynchroniczną w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> przed wykonanie polecenia powoduje, że zakończone <xref:System.Data.SqlClient.SqlCommand> obiektu, aby zablokować dopiero po zakończeniu wykonywania.  
  
 `callback` Parametr umożliwia określenie <xref:System.AsyncCallback> delegata, która jest wywoływana, gdy wykonywanie instrukcji zostało zakończone. Możesz wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metody z w ramach tej procedury delegata lub z innej lokalizacji, w ramach aplikacji. Ponadto można przekazać dowolny obiekt w `stateObject` parametr i procedura wywołania zwrotnego można pobierać te informacje przy użyciu <xref:System.IAsyncResult.AsyncState%2A> właściwości.  
  
 `behavior` Parametr pozwala określić opcje kontrolujące zachowanie polecenia i jego połączenia. Te wartości można łączyć ze sobą (przy użyciu języka programowania `Or` operator); ogólnie rzecz biorąc, deweloperzy `CloseConnection` wartość, aby upewnić się, że połączenie jest zamknięte przez środowisko uruchomieniowe podczas <xref:System.Data.SqlClient.SqlDataReader> jest zamknięty. Deweloperzy można także zoptymalizować zachowanie <xref:System.Data.SqlClient.SqlDataReader> , określając `SingleRow` wartości w przypadku jego jest znana z wyprzedzeniem instrukcji języka Transact-SQL lub procedury składowanej tylko zwraca pojedynczy wiersz.  
  
 Należy pamiętać, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenia lub wiele parametrów, ta metoda może blokować podczas zapisu. Po wysłaniu polecenia, metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — oznacza to, że operacje odczytu są asynchroniczne. Mimo że asynchroniczne wykonywanie polecenia wartość pobieranie jest nadal synchroniczne. Oznacza to, że wywołania <xref:System.Data.SqlClient.SqlDataReader.Read%2A> może zablokować, jeśli wymagana jest większej ilości danych i odnośnej sieci firmy bloki operacji odczytu.  
  
 Ponieważ procedura wywołania zwrotnego jest wykonywana z w ramach wątku w tle dostarczonych przez program Microsoft .NET środowiska uruchomieniowego języka wspólnego, bardzo ważne jest wykonać rygorystyczne podejście w celu obsługi interakcji między wątkami z w ramach aplikacji. Na przykład, użytkownik nie może mieć interakcji na podstawie zawartości formularza w ramach procedury wywołanie zwrotne — powinien mieć do aktualizacji formularzy, musisz przełączyć się do wątku formularza aby można było wykonywać swoją pracę. W przykładzie w tym temacie przedstawiono to zachowanie.  
  
 Wszystkie błędy, które występują podczas wykonywania operacji są zgłaszane jako wyjątki w procedurze wywołania zwrotnego. Musi obsługiwać wyjątek w procedurze wywołania zwrotnego, a nie w głównej aplikacji. Zobacz przykład w tym temacie, aby uzyskać dodatkowe informacje dotyczące obsługi wyjątków w procedurze wywołania zwrotnego.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, programu SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości, w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.
  
   
  
## Examples  
 Następującej aplikacji Windows demonstruje użycie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> metody wykonywania instrukcji języka Transact-SQL, obejmującą opóźnienie kilka sekund (emulowanie polecenia długotrwałych). Ponieważ próbki asynchronicznie wykonuje polecenie, formularz pozostanie odpowiadać podczas oczekiwania na wyniki. Ten przykład przekazuje wykonywanie <xref:System.Data.SqlClient.SqlCommand> obiektu jako `stateObject` parameter; to pozwala w prosty sposób pobrać <xref:System.Data.SqlClient.SqlCommand> obiektu z w ramach procedury wywołanie zwrotne, dzięki czemu kod może wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> odpowiadający — metoda wstępne wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 W przykładzie pokazano wiele technik ważne. Obejmuje to wywołanie metody, która wchodzi w interakcję z formularza z oddzielnego wątku. Ponadto w tym przykładzie przedstawiono, jak należy zablokować użytkownikom możliwość wykonywania polecenia jednocześnie wiele razy, a jak musisz upewnić się, że formularz nie zamyka się przed procedura wywołania zwrotnego jest wywoływana.  
  
 Aby skonfigurować w tym przykładzie, należy utworzyć nową aplikację Windows. Umieść <xref:System.Windows.Forms.Button> kontroli <xref:System.Windows.Forms.DataGridView> kontroli i <xref:System.Windows.Forms.Label> kontrolki na formularzu (przyjmuje domyślną nazwę każdej kontrolki). Dodaj następujący kod do klasy formularza, modyfikowanie parametrów połączenia, zgodnie z potrzebami w danym środowisku.  
  
 Ten przykład przekazuje `CommandBehavior.CloseConnection` wartość w `behavior` parametru, powodując zwracanego <xref:System.Data.SqlClient.SqlDataReader> można automatycznie zamknąć swoje połączenie, gdy jest ono zamknięte.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd, który wystąpił podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Pary nazwa/wartość "Przetwarzanie asynchroniczne = true" nie został dołączony w ramach definicji połączenia, w tym ciągu połączenia <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteXmlReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" /> i zwraca wyniki w postaci <see cref="T:System.Xml.XmlReader" /> obiektu.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" /> i zwraca wyniki w postaci <see cref="T:System.Xml.XmlReader" /> obiektu.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania lub zaczekaj na wyniki, lub obu; ta wartość jest także potrzebna podczas wywoływania <see langword="EndExecuteXmlReader" />, która zwraca pojedynczą wartość XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL, która zwraca wiersze w formacie XML, dzięki czemu inne zadania można uruchomić jednocześnie, podczas wykonywania instrukcji. Po ukończeniu instrukcji deweloperów musi wywołać `EndExecuteXmlReader` metodę, aby zakończyć operację i pobieranie pliku XML zwróconym przez polecenie. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Metoda zwraca natychmiast, ale dopóki kod jest wykonywany odpowiednich `EndExecuteXmlReader` wywołania metody go nie wykonać inne wywołania rozpoczynających się wykonanie synchroniczną lub asynchroniczną w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywoływanie `EndExecuteXmlReader` przed wykonanie polecenia powoduje, że zakończone <xref:System.Data.SqlClient.SqlCommand> obiektu, aby zablokować dopiero po zakończeniu wykonywania.  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Właściwość zazwyczaj określa instrukcję Transact-SQL za pomocą nieprawidłowa klauzula FOR XML. Jednak `CommandText` można też określić instrukcję, która zwraca `ntext` danych, który zawiera prawidłowy kod XML.  
  
 Typowa <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> zapytania mogą być sformatowane tak jak w poniższym przykładzie C#:  
  
```  
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Tę metodę można również pobrać zestaw wyników pojedynczy wiersz tabeli, jedna kolumna. W takim przypadku więcej niż jeden wiersz jest zwracana, `EndExecuteXmlReader` metoda dołącza <xref:System.Xml.XmlReader> wartość pierwszego wiersza i odrzuca Ustaw pozostałe wynik.  
  
 Wiele aktywnych wyników (MARS) funkcja zestawu umożliwia wiele akcji, użyj tego samego połączenia.  
  
 Należy pamiętać, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli są wysyłane duże polecenia lub wiele parametrów, ta metoda może blokować podczas zapisu. Po wysłaniu polecenia, metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — oznacza to, że operacje odczytu są asynchroniczne. Mimo że asynchroniczne wykonywanie polecenia wartość pobieranie jest nadal synchroniczne.  
  
 To przeciążenie obsługuje procedura wywołania zwrotnego, deweloperzy muszą sondowania albo aby określić, czy polecenie zostało wykonane, za pomocą <xref:System.IAsyncResult.IsCompleted%2A> właściwość <xref:System.IAsyncResult> zwrócone przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> metody; lub zaczekaj na ukończenie jeden lub więcej poleceń przy użyciu <xref:System.IAsyncResult.AsyncWaitHandle%2A> właściwości zwracanego <xref:System.IAsyncResult>.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, program SQL Server zwraca żadnych wyników XML większa niż 2,033 znaków długości w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.
  
   
  
## Examples  
 Następująca aplikacja konsoli rozpoczyna się proces pobierania danych XML asynchronicznie. Podczas oczekiwania na wyniki, ta prosta aplikacja znajduje się w pętli, badanie <xref:System.IAsyncResult.IsCompleted%2A> wartości właściwości. Po zakończeniu procesu kod pobiera dane XML i wyświetla jego zawartość.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd, który wystąpił podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Pary nazwa/wartość "Przetwarzanie asynchroniczne = true" nie został dołączony w ramach definicji połączenia, w tym ciągu połączenia <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, która jest wywoływana po zakończeniu wykonywania polecenia. Przekaż <see langword="null" /> (<see langword="Nothing" /> programu Microsoft Visual Basic) do wskazania, że wymagane jest bez wywołania zwrotnego.</param>
        <param name="stateObject">Obiekt stan zdefiniowane przez użytkownika, który jest przekazywany do procedury wywołania zwrotnego. Pobierz ten obiekt z w obrębie za pomocą procedury wywołania zwrotnego <see cref="P:System.IAsyncResult.AsyncState" /> właściwości.</param>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" /> i zwraca wyniki w postaci <see cref="T:System.Xml.XmlReader" /> obiektu przy użyciu procedury wywołania zwrotnego.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Który może służyć do sondowania, poczekaj na wyniki i / lub; ta wartość jest również wymagane, gdy <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> nosi nazwę, która zwraca wyniki polecenia w formacie XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Metoda uruchamia proces asynchronicznie wykonywania instrukcji języka Transact-SQL lub procedury składowanej, która zwraca wiersze w formacie XML, dzięki czemu inne zadania można uruchomić jednocześnie, podczas wykonywania instrukcji. Po ukończeniu instrukcji deweloperów musi wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metodę, aby zakończyć operację i pobierania żądanych danych XML. <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Metoda zwraca natychmiast, ale dopóki kod jest wykonywany odpowiednich <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> wywołania metody go nie wykonać inne wywołania rozpoczynających się wykonanie synchroniczną lub asynchroniczną w odniesieniu do tych samych <xref:System.Data.SqlClient.SqlCommand> obiektu. Wywoływanie <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> przed wykonanie polecenia powoduje, że zakończone <xref:System.Data.SqlClient.SqlCommand> obiektu, aby zablokować dopiero po zakończeniu wykonywania.  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Właściwość zazwyczaj określa instrukcję Transact-SQL za pomocą nieprawidłowa klauzula FOR XML. Jednak `CommandText` można też określić instrukcję, która zwraca dane, które zawiera prawidłowy kod XML. Tę metodę można również pobrać zestaw wyników pojedynczy wiersz tabeli, jedna kolumna. W takim przypadku więcej niż jeden wiersz jest zwracana, <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metoda dołącza <xref:System.Xml.XmlReader> wartość pierwszego wiersza i odrzuca Ustaw pozostałe wynik.  
  
 Typowa <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> zapytania mogą być sformatowane tak jak w poniższym przykładzie C#:  
  
```  
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Tę metodę można również pobrać zestaw wyników pojedynczy wiersz tabeli, jedna kolumna. W takim przypadku więcej niż jeden wiersz jest zwracana, <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metoda dołącza <xref:System.Xml.XmlReader> wartość pierwszego wiersza i odrzuca Ustaw pozostałe wynik.  
  
 Wiele aktywnych wyników (MARS) funkcja zestawu umożliwia wiele akcji, użyj tego samego połączenia.  
  
 `callback` Parametr umożliwia określenie <xref:System.AsyncCallback> delegata, która jest wywoływana, gdy wykonywanie instrukcji zostało zakończone. Możesz wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metody z w ramach tej procedury delegata lub z innej lokalizacji, w ramach aplikacji. Ponadto można przekazać dowolny obiekt w `stateObject` parametr i procedura wywołania zwrotnego można pobierać te informacje przy użyciu <xref:System.IAsyncResult.AsyncState%2A> właściwości.  
  
 Należy pamiętać, że tekst polecenia i parametry są wysyłane do serwera synchronicznie. Jeśli polecenie dużych lub wiele parametrów zostanie wysłany, ta metoda może blokować podczas zapisu. Po wysłaniu polecenia, metoda zwraca natychmiast bez oczekiwania na odpowiedź z serwera — oznacza to, że operacje odczytu są asynchroniczne.  
  
 Wszystkie błędy, które występują podczas wykonywania operacji są zgłaszane jako wyjątki w procedurze wywołania zwrotnego. Musi obsługiwać wyjątek w procedurze wywołania zwrotnego, a nie w głównej aplikacji. Zobacz przykład w tym temacie, aby uzyskać dodatkowe informacje dotyczące obsługi wyjątków w procedurze wywołania zwrotnego.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, programu SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości, w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.
  
   
  
## Examples  
 Następującej aplikacji Windows demonstruje użycie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> metody wykonywania instrukcji języka Transact-SQL, obejmującą opóźnienie kilka sekund (emulowanie polecenia długotrwałych). Ten przykład przekazuje wykonywanie <xref:System.Data.SqlClient.SqlCommand> obiektu jako `stateObject` parametru--w ten sposób pozwala w prosty sposób pobrać <xref:System.Data.SqlClient.SqlCommand> obiektu z w ramach procedury wywołanie zwrotne, dzięki czemu kod może wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> odpowiadający — metoda wstępne wywołanie <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.  
  
 W przykładzie pokazano wiele technik ważne. Obejmuje to wywołanie metody, która wchodzi w interakcję z formularza z oddzielnego wątku. Ponadto w tym przykładzie przedstawiono, jak należy zablokować użytkownikom możliwość wykonywania polecenia jednocześnie wiele razy, a jak musisz upewnić się, że formularz nie zamyka się przed procedura wywołania zwrotnego jest wywoływana.  
  
 Aby skonfigurować w tym przykładzie, należy utworzyć nową aplikację Windows. Umieść <xref:System.Windows.Forms.Button> kontroli <xref:System.Windows.Forms.ListBox> kontroli i <xref:System.Windows.Forms.Label> kontrolki na formularzu (przyjmuje domyślną nazwę każdej kontrolki). Dodaj następujący kod do klasy formularza, modyfikowanie parametrów połączenia, zgodnie z potrzebami w danym środowisku.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Błąd, który wystąpił podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Pary nazwa/wartość "Przetwarzanie asynchroniczne = true" nie został dołączony w ramach definicji połączenia, w tym ciągu połączenia <see cref="T:System.Data.SqlClient.SqlCommand" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <altmember cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
        <altmember cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Próbuje anulować wykonywanie <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma nic do anulowania, nic się nie dzieje. Jednak jeśli jest poleceniem w procesie, a próba anulowania nie powiedzie się, jest generowany żaden wyjątek.  
  
 Rzadkie, czasami, jeśli wywołasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> następnie wywołać <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitily lub jawnie) przed wywołaniem <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, a następnie wywołać <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, polecenie anulowania nie będą wysyłane do programu SQL Server i zestaw wyników mogą w dalszym ciągu strumienia po Wywołaj <xref:System.Data.SqlClient.SqlConnection.Close%2A>. Aby tego uniknąć, upewnij się, że wywołanie <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> przed zamknięciem czytnik lub połączenia.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> metody.  
  
 [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommand.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Data.SqlClient.SqlCommand" /> obiektu, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Nowy <see cref="T:System.Data.SqlClient.SqlCommand" /> obiektu, który jest kopią tego wystąpienia.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionSetting">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnEncryptionSetting As SqlCommandColumnEncryptionSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { System::Data::SqlClient::SqlCommandColumnEncryptionSetting get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionSetting : System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Usage="System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommandColumnEncryptionSetting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ustawienie szyfrowania kolumny dla tego polecenia.</summary>
        <value>Ustawienia szyfrowania kolumny dla tego polecenia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandText")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcji języka Transact-SQL, nazwa tabeli lub procedura składowana do wykonania w źródle danych.</summary>
        <value>Instrukcji języka Transact-SQL lub procedura składowana do wykonania. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> właściwość powinna być ustawiona na nazwę procedury składowanej. Użytkownik może być wymagane do używania składni znaku ucieczki, jeśli nazwa procedury składowanej zawiera żadnych znaków specjalnych. Polecenie wykonuje tę procedurę składowaną, gdy można wywołać jedną z `Execute` metody.  
  
 Microsoft .NET Framework Data Provider dla programu SQL Server nie obsługuje przekazywania parametrów do instrukcji języka Transact-SQL lub procedura składowana wywoływana za pomocą polecenia programu znak zapytania (?) — symbol zastępczy `CommandType.Text`. W takim przypadku należy nazwanych parametrów. Na przykład:  
  
```  
SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  
```  
  
 Aby uzyskać więcej informacji, zobacz [konfigurowania parametrów i typów danych parametrów](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas oczekiwania przed zakończeniem próby wykonania polecenia i wygenerowaniem błędu.</summary>
        <value>Czas w sekundach oczekiwania na wykonanie polecenia. Wartość domyślna to 30 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość 0 oznacza brak limitu (próba wykonania polecenia będzie czekać w nieskończoność).  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> Właściwość zostanie zignorowana podczas wywołania metody asynchronicznej takich jak <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> nie ma wpływu Jeśli polecenie jest wykonywane względem połączenia kontekstu ( <xref:System.Data.SqlClient.SqlConnection> otwartej z "połączenia kontekstu = true" w parametrach połączenia).  
  
> [!NOTE]
>  Ta właściwość jest zbiorcza limitu czasu (w przypadku wszelkich pakietów, które są odczytywane podczas wywołania metody) dla wszystkich odczytów sieci podczas wykonywania polecenia lub przetwarzanie wyników. Limit czasu nadal może wystąpić po pierwszego wiersza jest zwracany, a nie obejmuje czas przetwarzania użytkownika, czas odczytu tylko sieci.  
>   
>  Na przykład z czasem 30-sekundowe, po podjęciu <xref:System.Data.SqlClient.SqlDataReader.Read%2A> wymaga dwóch pakietach sieciowych, a następnie do odczytu, zarówno pakietach sieciowych ma 30 sekund. Jeśli wywołasz <xref:System.Data.SqlClient.SqlDataReader.Read%2A> ponownie, będzie miał innego 30 sekund, które można odczytać wszystkich danych, które wymaga.  
  
```  
using System;  
using System.Data.SqlClient;  
///   
public class A {  
   ///   
   public static void Main() {  
      string connectionString = "";  
      // Wait for 5 second delay in the command  
      string queryString = "waitfor delay '00:00:05'";  
      using (SqlConnection connection = new SqlConnection(connectionString)) {  
         connection.Open();  
         SqlCommand command = new SqlCommand(queryString, connection);  
         // Setting command timeout to 1 second  
         command.CommandTimeout = 1;  
         try {  
            command.ExecuteNonQuery();  
         }  
         catch (SqlException e) {  
            Console.WriteLine("Got expected SqlException due to command timeout ");  
            Console.WriteLine(e);  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą sposób, w jaki <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> właściwości, które ma być interpretowany.</summary>
        <value>Jedną z <see cref="T:System.Data.CommandType" /> wartości. Wartość domyślna to <see langword="Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> właściwości `StoredProcedure`, należy ustawić <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> właściwość na nazwę procedury składowanej. Polecenie wykonuje tę procedurę składowaną podczas wywoływania jednej z metod wykonania.  
  
 Microsoft .NET Framework Data Provider dla programu SQL Server nie obsługuje znaku zapytania (?) — symbol zastępczy przekazywania parametrów do instrukcji SQL lub procedura składowana wywoływana przy użyciu <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> z <xref:System.Data.CommandType.Text>. W takim przypadku należy nazwanych parametrów. Na przykład:  
  
 Wybierz pozycję * od klientów, którym CustomerID = @CustomerID  
  
 Aby uzyskać więcej informacji, zobacz [konfigurowania parametrów i typów danych parametrów](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość nie jest prawidłowym <see cref="T:System.Data.CommandType" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); void set(System::Data::SqlClient::SqlConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Connection")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.SqlClient.SqlConnection" /> używane przez to wystąpienie elementu <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <value>Połączenie ze źródłem danych. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli polecenie jest zarejestrowany w istniejącej transakcji, a następnie połączenie zostanie zmieniony, próby wykonania polecenia spowoduje zgłoszenie <xref:System.InvalidOperationException>.  
  
 Jeśli <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> właściwość nie ma wartości null i transakcji została już zatwierdzona lub wycofana, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> jest ustawiona na wartość null.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> Właściwości została zmieniona podczas polecenia został zarejestrowany w transakcji...</exception>
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandText" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandType" />
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="sqlCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As SqlParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.SqlClient.SqlParameter" /> obiektu.</summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlParameter" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> Metodą jest silnie typizowaną wersję <xref:System.Data.IDbCommand.CreateParameter%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy obiekt polecenia powinien być widoczny w kontrolce projektanta formularzy Windows.</summary>
        <value>Wartość wskazująca, czy obiekt polecenia powinien być widoczny w kontrolce. Wartość domyślna to **true**.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="sqlCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int EndExecuteNonQuery (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndExecuteNonQuery(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteNonQuery (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndExecuteNonQuery(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteNonQuery : IAsyncResult -&gt; int" Usage="sqlCommand.EndExecuteNonQuery asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie metody <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</param>
        <summary>Kończy wykonywanie asynchronicznych instrukcji języka Transact-SQL.</summary>
        <returns>Liczba wierszy, których to dotyczy (jak <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywołujesz <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> do wykonania [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcji, należy wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> w celu ukończenia tej operacji. Jeśli proces wykonywania polecenia nie został jeszcze ukończona, to bloki metody do czasu ukończenia operacji. Użytkownikom można sprawdzić, czy polecenie zostało wykonane za pomocą jego działania <xref:System.IAsyncResult> wystąpienie zwrócone przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> metody. Jeśli procedura wywołania zwrotnego została określona w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, ta metoda musi zostać wywołana.  
  
   
  
## Examples  
 Aby uzyskać przykłady ilustrujące użycie <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> metody, zobacz <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> parametr ma wartość null (<see langword="Nothing" /> programu Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> zostało wywołane więcej niż raz dla pojedynczego polecenia wykonywania lub metody był niezgodny względem jego metody wykonywania (na przykład wywołuje kod <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> można ukończyć wykonywania wywołania <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Czas określony w <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> , który upłynął, a operacja asynchroniczna określony za pomocą <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> nie została ukończona.  
  
W niektórych sytuacjach <see cref="T:System.IAsyncResult" /> można ustawić <see langword="IsCompleted" /> niepoprawnie. W takiej sytuacji i <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> jest wywoływana, EndExecuteNonQuery może powodować błąd sqlexception — Jeśli czas określony w <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> , który upłynął, a operacja asynchroniczna określony za pomocą <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> nie została ukończona. Aby naprawić tę sytuację, należy zwiększyć wartość CommandTimeout lub Zmniejsz ilość pracy wykonywana przez operację asynchroniczną.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader EndExecuteReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteReader (asyncResult As IAsyncResult) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ EndExecuteReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteReader : IAsyncResult -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.EndExecuteReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie metody <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />.</param>
        <summary>Zakończy wykonanie asynchroniczne instrukcji języka Transact-SQL, zwracając żądany <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <returns>A <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiekt, który może służyć do pobierania żądanych wierszy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywołujesz <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> do wykonania instrukcji języka Transact-SQL, należy wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> w celu ukończenia tej operacji. Jeśli proces wykonywania polecenia nie został jeszcze ukończona, to bloki metody do czasu ukończenia operacji. Użytkownikom można sprawdzić, czy polecenie zostało wykonane za pomocą jego działania <xref:System.IAsyncResult> wystąpienie zwrócone przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> metody. Jeśli procedura wywołania zwrotnego została określona w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, ta metoda musi zostać wywołana.  
  
   
  
## Examples  
 Aby uzyskać przykłady ilustrujące użycie <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> metody, zobacz <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> parametr ma wartość null (<see langword="Nothing" /> programu Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> zostało wywołane więcej niż raz dla pojedynczego polecenia wykonywania lub metody był niezgodny względem jego metody wykonywania (na przykład wywołuje kod <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> można ukończyć wykonywania wywołania <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader EndExecuteXmlReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteXmlReader (asyncResult As IAsyncResult) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ EndExecuteXmlReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteXmlReader : IAsyncResult -&gt; System.Xml.XmlReader" Usage="sqlCommand.EndExecuteXmlReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie metody <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</param>
        <summary>Kończy działanie wykonanie asynchroniczne instrukcji języka Transact-SQL, zwracając żądanych danych w formacie XML.</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> Obiekt, który może służyć do pobierania danych XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywołujesz <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> do wykonania instrukcji języka Transact-SQL, należy wywołać <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> w celu ukończenia tej operacji. Jeśli proces wykonywania polecenia nie został jeszcze ukończona, to bloki metody do czasu ukończenia operacji. Użytkownikom można sprawdzić, czy polecenie zostało wykonane za pomocą jego działania <xref:System.IAsyncResult> wystąpienie zwrócone przez <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> metody. Jeśli procedura wywołania zwrotnego została określona w wywołaniu <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, ta metoda musi zostać wywołana.  
  
   
  
## Examples  
 Aby uzyskać przykłady ilustrujące użycie <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> metody, zobacz <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> parametr ma wartość null (<see langword="Nothing" /> programu Microsoft Visual Basic)</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> zostało wywołane więcej niż raz dla pojedynczego polecenia wykonywania lub metody był niezgodny względem jego metody wykonywania (na przykład wywołuje kod <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> można ukończyć wykonywania wywołania <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="sqlCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReaderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Data::Common::DbDataReader ^&gt; ^ ExecuteDbDataReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="sqlCommand.ExecuteDbDataReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje instrukcję języka Transact-SQL w odniesieniu do połączenia i zwraca liczbę uwzględnionych wierszy.</summary>
        <returns>Liczba zmodyfikowanych wierszy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> wykonywanie operacji katalogu (na przykład podczas badania struktury bazy danych lub tworzenie obiektów bazy danych, takich jak tabele) lub zmień dane w bazie danych bez używania <xref:System.Data.DataSet> , wykonując UPDATE, INSERT czy DELETE instrukcje.  
  
 Mimo że <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> zwraca żadnych wierszy, wszelkie parametry danych wyjściowych lub je zwracają wartości mapowane na parametry są wypełniane przy użyciu danych.  
  
 Dla instrukcji UPDATE, INSERT i DELETE wartość zwracana jest liczba wierszy na polecenie. Jeśli wyzwalacz istnieje w tabeli są wstawiane lub aktualizowane, wartość zwracana zawiera liczbę wierszy, które dotyczą zarówno operacji insert nebo update, a liczba wierszy, wyzwalacza lub wyzwalaczy. Dla wszystkich innych typów instrukcji wartość zwracana jest wartość -1. W przypadku wycofywania -1 jest również wartość zwracaną.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> , a następnie uruchamia go za pomocą <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. Przykład jest przekazywany ciąg, który jest instrukcją języka Transact-SQL (na przykład UPDATE, INSERT czy DELETE) i parametry służące do połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił wyjątek podczas wykonywania polecenia względem zablokowanego wiersza. Ten wyjątek nie jest generowany, gdy używasz programu Microsoft .NET Framework w wersji 1.0.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ExecuteNonQueryAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQueryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sqlCommand.ExecuteNonQueryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />, które wykonuje [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcji w zakresie połączenia i zwraca liczbę wierszy wpływ. Token anulowania, może służyć do żądania, czy operacja porzucone, zanim upłynie limit czasu polecenia.  Wyjątki będą raportowane za pośrednictwem zwróconego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Program SQL Server zwrócił błąd podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompilacje <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompilacje <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> właściwość powinna być ustawiona na nazwę procedury składowanej. Polecenie wykonuje tę procedurę składowaną, gdy wywołujesz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  
  
> [!NOTE]
>  Jeśli transakcja jest zakleszczone, dopóki nie może zgłoszony wyjątek <xref:System.Data.SqlClient.SqlDataReader.Read%2A> jest wywoływana.  
  
 Wiele aktywnych wyników (MARS) funkcja zestawu umożliwia wielu akcji przy użyciu tego samego połączenia.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, programu SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości, w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand>, a następnie wykonuje, przekazując ciąg, który jest instrukcją języka Transact-SQL ZAZNACZYĆ, a ciąg wykorzystywany do połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił wyjątek podczas wykonywania polecenia względem zablokowanego wiersza. Ten wyjątek nie jest generowany, gdy używasz programu Microsoft .NET Framework w wersji 1.0.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">Bieżący stan połączenia jest zamknięty. <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> wymaga otwartą <see cref="T:System.Data.SqlClient.SqlConnection" />.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Pobieranie i modyfikowanie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server i ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Jedną z <see cref="T:System.Data.CommandBehavior" /> wartości.</param>
        <summary>Wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />i tworzy <see cref="T:System.Data.SqlClient.SqlDataReader" /> przy użyciu jednej z <see cref="T:System.Data.CommandBehavior" /> wartości.</summary>
        <returns>Element <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> właściwość powinna być ustawiona na nazwę procedury składowanej. Polecenie wykonuje tę procedurę składowaną, gdy wywołujesz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  
  
> [!NOTE]
>  Użyj <xref:System.Data.CommandBehavior.SequentialAccess> pobieranie dużej wartości i danych binarnych. W przeciwnym razie <xref:System.OutOfMemoryException> może wystąpić, a następnie połączenie zostanie zamknięte.  
  
 Wiele aktywnych wyników (MARS) funkcja zestawu umożliwia wielu akcji przy użyciu tego samego połączenia.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, programu SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości, w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand>, a następnie wykonuje, przekazując ciąg, który jest instrukcją języka Transact-SQL ZAZNACZYĆ, a ciąg wykorzystywany do połączenia ze źródłem danych. <xref:System.Data.CommandBehavior> ustawiono <xref:System.Data.CommandBehavior.CloseConnection>.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcji lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync () As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, które wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompilacje <see cref="T:System.Data.SqlClient.SqlDataReader" />. Wyjątki będą raportowane za pośrednictwem zwróconego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowy <see cref="T:System.Data.CommandBehavior" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Program SQL Server zwrócił błąd podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Opcje pobierania danych i wykonywanie instrukcji.  Jeśli ustawiono <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> odczytuje cały wiersz przed zwróceniem wykonać zadania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, które wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />i tworzy <see cref="T:System.Data.SqlClient.SqlDataReader" />. Wyjątki będą raportowane za pośrednictwem zwróconego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowy <see cref="T:System.Data.CommandBehavior" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Program SQL Server zwrócił błąd podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, które wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompilacje <see cref="T:System.Data.SqlClient.SqlDataReader" />.  
  
Token anulowania, może służyć do żądania, czy operacja porzucone, zanim upłynie limit czasu polecenia.  Wyjątki będą raportowane za pośrednictwem zwróconego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowy <see cref="T:System.Data.CommandBehavior" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Program SQL Server zwrócił błąd podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="behavior">Opcje pobierania danych i wykonywanie instrukcji.  Jeśli ustawiono <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> odczytuje cały wiersz przed zwróceniem wykonać zadania.</param>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, które wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />i kompilacji <see cref="T:System.Data.SqlClient.SqlDataReader" />  
  
Token anulowania, może służyć do żądania, czy operacja porzucone, zanim upłynie limit czasu polecenia.  Wyjątki będą raportowane za pośrednictwem zwróconego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.ArgumentException">Nieprawidłowy <see cref="T:System.Data.CommandBehavior" /> wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Program SQL Server zwrócił błąd podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje zapytanie i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconych przez zapytanie. Dodatkowe kolumny lub wiersze są ignorowane.</summary>
        <returns>Pierwszą kolumnę pierwszego wiersza w zestawie wyników lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) jeżeli zestaw wyników jest pusty. Zwraca 2033 znaków.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> metody do odzyskania pojedynczej wartości (na przykład wartości zagregowanej) z bazy danych. Ta migracja wymaga mniejszej ilości kodu niż przy użyciu <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> metody, a następnie wykonuje operacje, które należy wygenerować pojedynczą wartość przy użyciu danych zwróconych przez <xref:System.Data.SqlClient.SqlDataReader>.  
  
 Typowa <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> zapytania mogą być sformatowane tak jak w poniższym przykładzie C#:  
  
```  
cmd.CommandText = "SELECT COUNT(*) FROM dbo.region";  
Int32 count = (Int32) cmd.ExecuteScalar();  
```  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> , a następnie uruchamia go za pomocą <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>. Przykład jest przekazywany ciąg reprezentujący nową wartość ma zostać wstawiony do tabeli i parametry służące do połączenia ze źródłem danych. Funkcja zwraca nową **tożsamości** wartości kolumny, jeśli dodano nowy wiersz, 0 na niepowodzenie.  
  
 [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił wyjątek podczas wykonywania polecenia względem zablokowanego wiersza. Ten wyjątek nie jest generowany, gdy używasz programu Microsoft .NET Framework w wersji 1.0.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ExecuteScalarAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalarAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="sqlCommand.ExecuteScalarAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />, który wykonuje zapytanie asynchronicznie i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconych przez zapytanie. Dodatkowe kolumny lub wiersze są ignorowane.  
  
Token anulowania, może służyć do żądania, czy operacja porzucone, zanim upłynie limit czasu polecenia. Wyjątki będą raportowane za pośrednictwem zwróconego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Program SQL Server zwrócił błąd podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader ExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader ExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReader () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ ExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReader : unit -&gt; System.Xml.XmlReader" Usage="sqlCommand.ExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompilacje <see cref="T:System.Xml.XmlReader" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Xml.XmlReader" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **XmlReader** zwróconych przez to metoda nie obsługuje operacji asynchronicznych.

 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Właściwość zazwyczaj określa [!INCLUDE[tsql](~/includes/tsql-md.md)] instrukcję, określając prawidłową klauzuli FOR XML. Jednak <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> można też określić instrukcję, która zwraca `ntext` lub `nvarchar` danych, który zawiera prawidłowy kod XML lub zawartości kolumny o `xml` typu danych.  
  
 Typowa <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> zapytania mogą być sformatowane tak jak w poniższym przykładzie Microsoft Visual C#:  
  
```  
SqlCommand command = new SqlCommand("SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 Tę metodę można również pobrać zestawu wyników pojedynczy wiersz tabeli, z jedną kolumną zawierającą dane XML. W takim przypadku więcej niż jeden wiersz jest zwracana, <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> metoda dołącza <xref:System.Xml.XmlReader> wartość pierwszego wiersza i odrzuca Ustaw pozostałe wynik.  
  
 Wiele aktywnych wyników (MARS) funkcja zestawu umożliwia wielu akcji przy użyciu tego samego połączenia.  
  
 Jeśli używasz <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> dostępu do danych XML, programu SQL Server zwróci żadnych wyników XML większa niż 2,033 znaków długości, w wielu wierszach 2,033 znaków. Aby uniknąć tego zachowania, należy użyć <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> lub <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> odczytać zapytań FOR XML.


## Examples  
 Poniższy przykład tworzy <xref:System.Data.SqlClient.SqlCommand> , a następnie uruchamia go za pomocą <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>. Przykład jest przekazywany ciąg, który jest instrukcją języka Transact-SQL wybierz XML i parametry służące do połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Wystąpił wyjątek podczas wykonywania polecenia względem zablokowanego wiersza. Ten wyjątek nie jest generowany, gdy używasz programu Microsoft .NET Framework w wersji 1.0.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteXmlReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje asynchroniczne wykonywanie instrukcji języka Transact-SQL lub procedury składowanej, która jest opisana przez to <see cref="T:System.Data.SqlClient.SqlCommand" /> i zwraca wyniki w postaci <see cref="T:System.Xml.XmlReader" /> obiektu.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync () As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, które wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompilacje <see cref="T:System.Xml.XmlReader" /> obiektu.  
  
Wyjątki będą raportowane za pośrednictwem zwróconego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

**XmlReader** zwróconych przez to metoda nie obsługuje operacji asynchronicznych.

Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Program SQL Server zwrócił błąd podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Instrukcja anulowania.</param>
        <summary>Asynchroniczna wersja <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, które wysyła <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> do <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> i kompilacje <see cref="T:System.Xml.XmlReader" /> obiektu.  
  
Token anulowania, może służyć do żądania, czy operacja porzucone, zanim upłynie limit czasu polecenia.  Wyjątki będą raportowane za pośrednictwem zwróconego obiektu zadania.</summary>
        <returns>Zadanie reprezentujące operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

**XmlReader** zwróconych przez to metoda nie obsługuje operacji asynchronicznych.

Aby uzyskać więcej informacji na temat programowania asynchronicznego w .NET Framework Data Provider for SQL Server, zobacz [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **binarne** lub **VarBinary** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.Stream" />. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Char**, **NChar**, **NVarChar**, **VarChar**, lub **Xml** użyto gdy <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.IO.TextReader" />.  
  
A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> innych niż **Xml** został użyty podczas <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> została ustawiona na <see cref="T:System.Xml.XmlReader" />.</exception>
        <exception cref="T:System.InvalidOperationException">Wywoływanie <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> więcej niż jeden raz dla tego samego wystąpienia przed zakończeniem zadania.  
  
<see cref="T:System.Data.SqlClient.SqlConnection" /> Zamknięte lub porzucony podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 <see langword="Context Connection=true" /> określono w parametrach połączenia.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Program SQL Server zwrócił błąd podczas wykonywania tekst polecenia.  
  
Upłynął limit czasu podczas operacji przesyłania strumieniowego. Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> lub <see cref="T:System.IO.TextReader" /> obiektu podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> Lub <see cref="T:System.IO.TextReader" /> obiekt został zamknięty podczas operacji przesyłania strumieniowego.  Aby uzyskać więcej informacji na temat przesyłania strumieniowego, zobacz [obsługa przesyłania strumieniowego SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Notification">
      <MemberSignature Language="C#" Value="public System.Data.Sql.SqlNotificationRequest Notification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Sql.SqlNotificationRequest Notification" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Notification" />
      <MemberSignature Language="VB.NET" Value="Public Property Notification As SqlNotificationRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Sql::SqlNotificationRequest ^ Notification { System::Data::Sql::SqlNotificationRequest ^ get(); void set(System::Data::Sql::SqlNotificationRequest ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Notification : System.Data.Sql.SqlNotificationRequest with get, set" Usage="System.Data.SqlClient.SqlCommand.Notification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlNotificationRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą <see cref="T:System.Data.Sql.SqlNotificationRequest" /> obiekt powiązany z tym poleceniem.</summary>
        <value>Po ustawieniu na wartość null (ustawienie domyślne), można żądać bez powiadomienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wykonaniem polecenia dla niego zaczęły obowiązywać, należy ustawić wartość tej właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="NotificationAutoEnlist">
      <MemberSignature Language="C#" Value="public bool NotificationAutoEnlist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotificationAutoEnlist" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberSignature Language="VB.NET" Value="Public Property NotificationAutoEnlist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotificationAutoEnlist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotificationAutoEnlist : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy aplikacja powinna automatycznie otrzymywać powiadomienia o zapytaniach często <see cref="T:System.Data.SqlClient.SqlDependency" /> obiektu.</summary>
        <value>**wartość true,** Jeśli aplikacja automatycznie otrzymają powiadomienia o zapytaniach; w przeciwnym razie **false**. Wartość domyślna to **true**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta funkcja jest używana w aplikacjach ASP.NET, aby otrzymywać powiadomienia dla wszystkich poleceń, wykonywane na stronie ASP na serwerze SQL. Dzięki temu program ASP.NET buforowanie strony, dopóki zapytania używane do renderowania strony wywołałoby inny wynik. Automatyczne umieszczanie.  
  
 Ta właściwość dotyczy tylko wersji programu SQL Server, która obsługuje powiadomienia o zapytaniach. W przypadku starszych wersji ustawienie tej właściwości na **true** nie ma wpływu na aplikację.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">Przy użyciu powiadomienia o zapytaniach</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As SqlParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlParameterCollection ^ Parameters { System::Data::SqlClient::SqlParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.SqlClient.SqlParameterCollection" Usage="System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
        <value>Parametry instrukcji języka Transact-SQL lub procedury składowanej. Wartością domyślną jest pusta kolekcja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Microsoft .NET Framework Data Provider dla programu SQL Server nie obsługuje znaku zapytania (?) — symbol zastępczy przekazywania parametrów do instrukcji SQL lub procedura składowana wywoływana za pomocą polecenia programu `CommandType.Text`. W takim przypadku należy nazwanych parametrów. Na przykład:  
  
 Wybierz pozycję * od klientów, którym CustomerID = @CustomerID  
  
> [!NOTE]
>  Parametrów w kolekcji nie są zgodne z wymaganiami kwerendy do wykonania, może spowodować błąd.  
  
 Aby uzyskać więcej informacji, zobacz [konfigurowania parametrów i typów danych parametrów](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Data.SqlClient.SqlCommand> i dodać parametry <xref:System.Data.SqlClient.SqlParameterCollection>.  
  
 [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]
 [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wersję przygotowanego polecenia w wystąpieniu programu SQL Server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> ustawiono `StoredProcedure`, wywołanie <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> powinny zakończyć się pomyślnie, chociaż może spowodować, że pusta.  
  
 Przed wywołaniem <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, określ typ danych każdego parametru w instrukcji, które mają zostać przygotowane. Dla każdego parametru, który ma typ danych o zmiennej długości, należy ustawić <xref:System.Data.SqlClient.SqlParameter.Size%2A> właściwości do maksymalnego rozmiaru, które są potrzebne. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> Zwraca błąd, jeśli te warunki nie są spełnione.  
  
> [!NOTE]
>  Jeśli kontekst bazy danych zostanie zmieniona przez wykonanie instrukcji języka Transact-SQL `USE <database>` instrukcji, lub przez wywołanie <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> metody, a następnie <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> musi zostać wywołany po raz drugi.  
  
 Jeśli wywołasz `Execute` metoda po wywołaniu <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, wszystkie wartości parametru, który jest większy niż wartość określoną przez <xref:System.Data.SqlClient.SqlParameter.Size%2A> właściwość automatycznie jest obcinana do oryginalnego rozmiaru określonego parametru, a żadne błędy obcięcia są zwracane.  
  
 Dane wyjściowe parametrów (czy przygotowany lub nie) musi być typem danych zdefiniowanym przez użytkownika. Jeśli określisz typ danych o zmiennej długości, należy także określić maksymalny <xref:System.Data.SqlClient.SqlParameter.Size%2A>.  
  
 Przed Visual Studio 2010 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> zgłosiła wyjątek.  Począwszy od programu Visual Studio 2010, ta metoda nie zgłasza wyjątku.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> metody.  
  
 [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="sqlCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> właściwości do wartości domyślnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> wynosi 30 sekund.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StatementCompleted">
      <MemberSignature Language="C#" Value="public event System.Data.StatementCompletedEventHandler StatementCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StatementCompletedEventHandler StatementCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatementCompleted As StatementCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StatementCompletedEventHandler ^ StatementCompleted;" />
      <MemberSignature Language="F#" Value="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " Usage="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StatementCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu wykonywania instrukcji języka Transact-SQL.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Data.SqlClient.SqlCommand" /> obiektu, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Nowy <see cref="T:System.Data.SqlClient.SqlCommand" /> obiektu, który jest kopią tego wystąpienia.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlTransaction ^ Transaction { System::Data::SqlClient::SqlTransaction ^ get(); void set(System::Data::SqlClient::SqlTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.SqlClient.SqlTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Transaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.SqlClient.SqlTransaction" /> w ramach którego <see cref="T:System.Data.SqlClient.SqlCommand" /> wykonuje.</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlTransaction" />. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można ustawić <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> właściwość, jeśli już jest równa określonej wartości, a polecenie jest w trakcie wykonywania. Jeśli ustawiono właściwość transakcji <xref:System.Data.SqlClient.SqlTransaction> obiektu, który nie jest podłączony do tej samej <xref:System.Data.SqlClient.SqlConnection> jako <xref:System.Data.SqlClient.SqlCommand> obiektu, wyjątek jest zgłaszany, gdy następnym razem użytkownik podejmie próbę wykonania instrukcji.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">Wykonywanie transakcji</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_UpdatedRowSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, w jaki sposób wyniki polecenia są stosowane do <see cref="T:System.Data.DataRow" /> gdy jest używana przez **aktualizacji** metody <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
        <value>Jedną z <see cref="T:System.Data.UpdateRowSource" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.Data.UpdateRowSource> wartość jest **zarówno** chyba, że polecenie jest generowany automatycznie (podobnie jak w przypadku programu <xref:System.Data.SqlClient.SqlCommandBuilder>), w którym to przypadku wartość domyślna to **Brak**.  
  
 Aby uzyskać więcej informacji o korzystaniu z **przetwarzania wsadowego** właściwości, zobacz [parametry elementu DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">Łączenie i pobieranie danych w ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">Za pomocą dostawcy danych .NET Framework dla programu SQL Server</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Omówienie ADO.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>