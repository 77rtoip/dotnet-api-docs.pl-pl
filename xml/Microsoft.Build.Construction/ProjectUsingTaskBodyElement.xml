<Type Name="ProjectUsingTaskBodyElement" FullName="Microsoft.Build.Construction.ProjectUsingTaskBodyElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="786303a2aa937ad4012b44405fcb3bbb548818b5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectUsingTaskBodyElement : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectUsingTaskBodyElement extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectUsingTaskBodyElement&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectUsingTaskBodyElement : Microsoft::Build::Construction::ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Evaluate={Evaluate} TaskBody={TaskBody}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1f33a-101">Reprezentuje jednostkę zadania wbudowanego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f33a-101">Represents the body of an inline task.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public override string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Condition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Condition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f33a-102">Pobiera wartość null, ponieważ atrybut Condition jest nieistniejącą dla tego elementu i nieistniejącą warunek jest spełniony niejawnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-102">Gets null because the Condition attribute is nonexistent for this element and a nonexistent condition is implicitly true.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f33a-103">Zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-103">Returns a null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public override Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f33a-104">Nie używać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-104">Do not use.</span>
          </span>
          <span data-ttu-id="1f33a-105">Atrybut Condition jest nieistniejącą dla <see cref="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-105">The Condition attribute is nonexistent for <see cref="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement" />.</span>
          </span>
          <span data-ttu-id="1f33a-106">Pobierz powoduje wystąpienie błędu wewnętrznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-106">Get throws an internal error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f33a-107">Zgłasza błąd wewnętrzny i zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-107">Throws an internal error and returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public string Evaluate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Evaluate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Property Evaluate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Evaluate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f33a-108">Pobiera wartość atrybutu Evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-108">Gets the value of the Evaluate attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f33a-109">Zwraca wartość atrybutu Evaluate, który jest "prawda" lub "false".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-109">Returns the value of the Evaluate attribute, which is either "true" or "false".</span>
          </span>
          <span data-ttu-id="1f33a-110">Zwraca "wartość prawda", jeśli nie jest atrybutem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-110">Returns "true" if the attribute is not present.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f33a-111">Jeśli jest to "prawda", rozszerza elementów i wartości właściwości w tekście treść zadania.</span><span class="sxs-lookup"><span data-stu-id="1f33a-111">If "true", expands the item and property values in the inline task body.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation EvaluateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation EvaluateLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.EvaluateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluateLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ EvaluateLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f33a-112">Lokalizacja atrybutu Evaluate dla tego elementu, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-112">Location of the Evaluate attribute on this element, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f33a-113">Zwraca Evaluate lokalizacją atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-113">Returns Evaluate attribute location.</span>
          </span>
          <span data-ttu-id="1f33a-114">Zwraca położenie elementu, a nie lokalizację domyślnego atrybutu, jeśli nie ma takiego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-114">If there is no such attribute, returns the location of the element, instead of the location of the default attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskBody">
      <MemberSignature Language="C#" Value="public string TaskBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskBody" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.TaskBody" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskBody As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskBody { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f33a-115">Pobiera lub ustawia wartość nieznanym zawartość zadania wbudowanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-115">Gets or sets the unevaluated value of the contents of the inline task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f33a-116">Zwraca zawartość zadania wbudowanego nieznanym wewnętrzny kod XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-116">Returns the unevaluated inner XML content of the inline task.</span>
          </span>
          <span data-ttu-id="1f33a-117">Zwraca pusty ciąg, jeśli treść zadania nie wbudowanego jest obecny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f33a-117">Returns an empty string if no inline task body is present.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>