<Type Name="TrackingParticipant" FullName="System.Activities.Tracking.TrackingParticipant">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c79e3155314c7074486ba8d3b42bcfc0d82b589e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TrackingParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Tracking.TrackingParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingParticipant abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a5793-101">Klasa podstawowa dla rozszerzeń przepływu pracy, wchodzące w interakcje z śledzenia infrastruktury i dostępu do śledzenia rekordów przepływu pracy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5793-101">The base class for workflow extensions that interact with the workflow tracking infrastructure and access tracking records.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5793-102">Uczestnik śledzenia jest zarejestrowany do odbierania rekordów śledzenia.</span><span class="sxs-lookup"><span data-stu-id="a5793-102">A tracking participant is registered to receive tracking records.</span></span> <span data-ttu-id="a5793-103">Obecnie można zarejestrować każda klasa implementująca uczestnika śledzenia z wystąpieniem przepływu pracy i odbierają rekordy śledzenia.</span><span class="sxs-lookup"><span data-stu-id="a5793-103">Currently, any class that implements the tracking participant can be registered with the workflow instance to receive tracking records.</span></span> <span data-ttu-id="a5793-104">Jeśli uczestnik śledzenia jest kod osób trzecich, upewnij się, że nie jest złośliwego kodu.</span><span class="sxs-lookup"><span data-stu-id="a5793-104">If the tracking participant is third party code, ensure that this is not malicious code.</span></span> <span data-ttu-id="a5793-105">Uruchom ten sam proces jako wystąpienia przepływu pracy, a w przypadku uczestników śledzenia złośliwych uczestników śledzenia, ten kod może wpłynąć na ogólną wykonywania przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="a5793-105">The tracking participants run in the same process as the workflow instance and in the case of malicious tracking participants, this code could affect the overall workflow execution.</span></span> <span data-ttu-id="a5793-106">Rekordy śledzenia są dostarczane do uczestników śledzenia zarejestrowane jako przepływu pracy wykonuje, więc deweloper powinien upewnij się, że uczestnika śledzenia nie wpływa na uruchomiony przepływ pracy, wykonując operacje niezamierzone w metodzie Śledź.</span><span class="sxs-lookup"><span data-stu-id="a5793-106">The tracking records are delivered to the registered tracking participants as the workflow executes, so the developer should ensure that the tracking participant does not affect the running workflow by performing unintended operations within the track method.</span></span> <span data-ttu-id="a5793-107">Przykładem tego może być zmiany zmiennych przepływu pracy lub działania wykonywane przez długi czas.</span><span class="sxs-lookup"><span data-stu-id="a5793-107">Examples of this could be the alteration of workflow variables or operations that take a long time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a5793-108">Po zaimplementowaniu w klasie pochodnej tworzy nowe wystąpienie klasy pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-108">When implemented in a derived class, creates a new instance of the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrack">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTrack (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTrack(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTrack (record As TrackingRecord, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTrack(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="a5793-109">Rekord śledzenia wygenerowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-109">The generated tracking record.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="a5793-110">Okres, po którym dostawca przerwanie przy próbie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-110">The time period after which the provider aborts the attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a5793-111">Metoda wywoływana po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-111">The method to be called on completion of the operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="a5793-112">Obiekt zdefiniowane przez użytkownika, który unikatowo identyfikuje tej operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-112">A user-defined object that uniquely identifies this asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5793-113">Po zaimplementowaniu w klasie pochodnej, rozpoczyna przetwarzanie asynchroniczne rekordu śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-113">When implemented in a derived class, begins asynchronous processing of the tracking record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5793-114">Wynik operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-114">The result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5793-115">Oczekuje się rozpoczęcie dodawania zadania do przetwarzania rekordów i zwracać uczestników <xref:System.IAsyncResult> używającej czekać na zakończenie środowiska uruchomieniowego przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="a5793-115">Participants are expected to begin a job to process the records and return an <xref:System.IAsyncResult> that the workflow runtime uses to wait for completion.</span></span> <span data-ttu-id="a5793-116">Domyślna implementacja jest wywołanie <xref:System.Activities.Tracking.TrackingParticipant.Track%2A> i zwrócenia stanu ukończone.</span><span class="sxs-lookup"><span data-stu-id="a5793-116">The default implementation is to call <xref:System.Activities.Tracking.TrackingParticipant.Track%2A> and return a Completed status.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrack">
      <MemberSignature Language="C#" Value="protected internal virtual void EndTrack (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EndTrack(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EndTrack (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EndTrack(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="a5793-117">Stan operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-117">The status of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5793-118">Po zaimplementowaniu w klasie pochodnej, reprezentuje koniec operacji asynchronicznych śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-118">When implemented in a derived class, represents the end of an asynchronous tracking operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5793-119">Ta metoda powinna zablokować aż do zakończenia operacji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="a5793-119">This method is expected to block until the tracking operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="protected internal abstract void Track (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Track(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Track (record As TrackingRecord, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Track(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="a5793-120">Rekord śledzenia wygenerowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-120">The generated tracking record.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="a5793-121">Okres, po którym dostawca przerwanie przy próbie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-121">The time period after which the provider aborts the attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5793-122">Po zaimplementowaniu w klasie pochodnej, używane do przetwarzania synchronicznego rekord śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-122">When implemented in a derived class, used to synchronously process the tracking record.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5793-123">Metoda śledzenia jest wywoływane, gdy rekord śledzenia emituje wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="a5793-123">The track method is called when the workflow instance emits a tracking record.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingProfile">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Tracking.TrackingProfile TrackingProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Tracking.TrackingProfile TrackingProfile" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Tracking.TrackingParticipant.TrackingProfile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TrackingProfile As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Activities::Tracking::TrackingProfile ^ TrackingProfile { System::Activities::Tracking::TrackingProfile ^ get(); void set(System::Activities::Tracking::TrackingProfile ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5793-124">Śledzenie profilu obiekt używany przez uczestnika śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-124">The tracking profile object used by the tracking participant.</span>
          </span>
          <span data-ttu-id="a5793-125">Przed dodaniem tego uczestnika śledzenia do rozszerzenia przepływu pracy, profilu śledzenia jest ustawiona na uczestnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-125">Before adding the tracking participant to the workflow extensions, the tracking profile is set on the participant.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5793-126">Profil śledzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5793-126">The tracking profile.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5793-127">Profil śledzenia definiuje zdarzenia śledzenia, które są wysyłane do tego uczestnika śledzenia.</span><span class="sxs-lookup"><span data-stu-id="a5793-127">The tracking profile defines which tracking events are sent to this tracking participant.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>