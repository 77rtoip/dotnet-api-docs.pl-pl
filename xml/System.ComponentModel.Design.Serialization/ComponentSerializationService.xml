<Type Name="ComponentSerializationService" FullName="System.ComponentModel.Design.Serialization.ComponentSerializationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1efeaedc91337d5caa0e1ec03962cf7f20da3272" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ComponentSerializationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComponentSerializationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComponentSerializationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentSerializationService abstract" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę podstawową dla serializacji zestaw składników lub obiekty możliwe do serializacji do magazynu serializacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> Serializuje zestaw składników lub obiekty możliwe do serializacji do magazynu serializacji. Magazyn można następnie można przeprowadzić deserializacji później. <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> Klasy różni się od innych systemów serializacji, że format serializacji jest nieprzezroczysta i pozwala dla częściowej serializacji obiektów. Na przykład można serializować tylko wybrane właściwości obiektu.  
  
 Ta klasa jest `abstract`. Zazwyczaj <xref:System.ComponentModel.Design.Serialization.DesignerLoader> będzie Podaj konkretną implementację tę klasę i dodaj go jako usługi do jego <xref:System.ComponentModel.Design.DesignSurface>. Dzięki temu obiekty do serializacji w formacie najlepiej nadaje się do nich.  
  
 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> Klasy zastępuje <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> interfejsu z programu .NET Framework w wersji 1.0, mimo że jego został zachowany na potrzeby zgodności z poprzednimi wersjami.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> klasy, należy zastąpić wszystkie metody tej klasy. Niektóre z tych metod są przeznaczone do zgłaszają wyjątki, zgodnie z opisem w ich odpowiednich tematów; Zaleca się, że który pochodnej klasy, wykonaj te wytyczne, aby zachować spójność operacji. Aby uzyskać więcej informacji, zobacz <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> klasy.</para>
    </block>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComponentSerializationService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComponentSerializationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <Member MemberName="CreateStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore CreateStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateStore () As SerializationStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ CreateStore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
        <returns>Nowy magazyn utworzony serializacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiele obiektów może być Zserializowany do tego samego magazynu serializacji. Po zakończeniu ze sklepem, można wywołać jej <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> lub <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> metody. Po zamknięciu, Magazyn serializacji może służyć do deserializacji, lub można go było zapisać do strumienia.  
  
 Magazyn serializacji mogą zostać przekazane do różnych metod serializacji do zbudowania stan serializacji dla grupy obiektów.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deserializuje dany sklepu, aby utworzyć kolekcję obiektów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do deserializacji.</param>
        <summary>Deserializuje dany sklepu, aby utworzyć kolekcję obiektów.</summary>
        <returns>Kolekcja obiektów tworzone zgodnie ze skonfigurowanym przechowywany stan.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda deserializuje `store` do tworzenia kolekcji obiektów w nim zawarte. Obiekty są rozszeregować w tej samej kolejności, w którym przeprowadzono serializacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> nie zawiera danych w formacie, który może przetwarzać kontenera serializacji.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore, container As IContainer) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do deserializacji.</param>
        <param name="container">
          <see cref="T:System.ComponentModel.IContainer" /> Do której <see cref="T:System.ComponentModel.IComponent" /> obiekty zostaną dodane.</param>
        <summary>Deserializuje danego sklepu i wypełnia danego <see cref="T:System.ComponentModel.IContainer" /> z rozszeregować <see cref="T:System.ComponentModel.IComponent" /> obiektów.</summary>
        <returns>Kolekcja obiektów tworzone zgodnie ze skonfigurowanym przechowywany stan.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda deserializuje `store` do tworzenia kolekcji obiektów w nim zawarte. Obiekty są rozszeregować w tej samej kolejności, w którym przeprowadzono serializacji.  
  
 Utworzone obiekty, które implementują <xref:System.ComponentModel.IComponent> są dodawane do `container`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> lub <paramref name="container" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> nie zawiera danych w formacie, który może przetwarzać kontenera serializacji.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeserializeTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deserializuje dany <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> do danego kontenera.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do deserializacji.</param>
        <param name="container">Kontener, do którego <see cref="T:System.ComponentModel.IComponent" /> obiekty zostaną dodane.</param>
        <summary>Deserializuje dany <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> do danego kontenera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> Deserializuje metody `store`, ale zamiast produkujących nowe obiekty, stosuje danych w magazynie do istniejącego zestawu obiektów, które są pobierane z podanego kontenera. W związku z tym wywołującego można utworzyć wcześniej obiekt jednak za stosowny. Jeśli obiekt nie ma stanu deserializacja obiektu nie ma nazwy zestawu istniejących obiektów, zostanie utworzony nowy obiekt. Jeśli ten obiekt implementuje również <xref:System.ComponentModel.IComponent>, zostanie ona dodana do `container`. Obiektów w kontenerze muszą mieć nazwy i typy, które odpowiada obiektów w magazynie serializacji w kolejności istniejącego obiektu do użycia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> lub <paramref name="container" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> nie zawiera danych w formacie, który może przetwarzać kontenera serializacji.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do deserializacji.</param>
        <param name="container">Kontener, do którego <see cref="T:System.ComponentModel.IComponent" /> obiekty zostaną dodane.</param>
        <param name="validateRecycledTypes">
          <see langword="true" /> Aby zagwarantować, że proces deserializacji będzie działać tylko, jeśli stosowane do tego samego typu obiektu.</param>
        <summary>Deserializuje dany <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> do danego kontenera, opcjonalnie sprawdzanie poprawności ponownego przetworzenia typów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> Deserializuje metody `store`, ale zamiast produkujących nowe obiekty, stosuje danych w magazynie do istniejącego zestawu obiektów, które są pobierane z podanego kontenera. W związku z tym wywołującego można utworzyć wcześniej obiekt jednak za stosowny. Jeśli obiekt nie ma stanu deserializacja obiektu nie ma nazwy zestawu istniejących obiektów, zostanie utworzony nowy obiekt. Jeśli ten obiekt implementuje również <xref:System.ComponentModel.IComponent>, zostanie ona dodana do `container`. Obiektów w kontenerze muszą mieć nazwy i typy, które odpowiada obiektów w magazynie serializacji w kolejności istniejącego obiektu do użycia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> lub <paramref name="container" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> nie zawiera danych w formacie, który może przetwarzać kontenera serializacji.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean, applyDefaults As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
        <Parameter Name="applyDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do deserializacji.</param>
        <param name="container">Kontener, do którego <see cref="T:System.ComponentModel.IComponent" /> obiekty zostaną dodane.</param>
        <param name="validateRecycledTypes">
          <see langword="true" /> Aby zagwarantować, że proces deserializacji będzie działać tylko, jeśli stosowane do tego samego typu obiektu.</param>
        <param name="applyDefaults">
          <see langword="true" /> Aby wskazać, że powinny być stosowane domyślne wartości właściwości.</param>
        <summary>Deserializuje dany <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> do danego kontenera, opcjonalnie stosowania domyślne wartości właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> Deserializuje metody `store`, ale zamiast produkujących nowe obiekty, stosuje danych w magazynie do istniejącego zestawu obiektów, które są pobierane z podanego kontenera. W związku z tym wywołującego można utworzyć wcześniej obiekt jednak za stosowny. Jeśli obiekt nie ma stanu deserializacja obiektu nie ma nazwy zestawu istniejących obiektów, zostanie utworzony nowy obiekt. Jeśli ten obiekt implementuje również <xref:System.ComponentModel.IComponent>, zostanie ona dodana do `container`. Obiektów w kontenerze muszą mieć nazwy i typy, które odpowiada obiektów w magazynie serializacji w kolejności istniejącego obiektu do użycia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> lub <paramref name="container" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> nie zawiera danych w formacie, który może przetwarzać kontenera serializacji.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore LoadStore(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ LoadStore(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> z którym magazyn zostanie załadowany.</param>
        <summary>Ładunki <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> ze strumienia.</summary>
        <returns>Nowy <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwrócony magazynu można użyć do deserializacji obiektów przez przekazanie jej do jednego z <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="stream" /> nie zawiera danych zapisywanych przez poprzednie wywołanie <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Serialize (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Serialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do którego stan <c>wartość</c> zostanie zapisany.</param>
        <param name="value">Obiekt do zserializowania.</param>
        <summary>Wykonuje serializację danego obiektu do danej <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Magazyn może służyć do serializacji więcej niż jeden obiekt przez wywołanie tej metody więcej niż raz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> jest zamknięty lub <paramref name="store" /> nie jest obsługiwanym typem magazynu serializacji. Użyj magazynu zwracanego przez <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
    <Member MemberName="SerializeAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeAbsolute (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do którego stan <c>wartość</c> będą serializowane.</param>
        <param name="value">Obiekt do zserializowania.</param>
        <summary>Wykonuje serializację danego obiektu dla domyślnych wartości właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardowa serializacji, jako implementowane za pośrednictwem <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> metody serializuje tylko wartości, które różnią się od elementu stanu domyślnego. To zapewnia najbardziej kompaktową mechanizm serializacji, ale przyjęto założenie, że nowo utworzony obiekt będzie używane podczas wykonywania deserializacji. Jeśli istniejący obiekt jest używany, wynikowy zdeserializowany obiekt nie jest gwarantowana mają zostać zduplikowane pierwotnego stanu serializacji obiektu. właściwości, które zawiera podczas serializacji wartości domyślne nie zostaną zresetowane do wartości domyślnych podczas deserializacji.  
  
 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A> — Metoda nie korzysta z tego skrótu. Wszystkie właściwości obiektu źródłowego go serializuje, aby deserializacji można przywrócić wszystkie właściwości obiektu, niezależnie od stanu domyślnego.  
  
 Ta metoda jest szczególnie przydatne w przypadku serializacji kolekcji, ponieważ można zmienić kolejność elementów składowych w kolekcji. W takim przypadku najbezpieczniejszy procesu, aby przywrócić oryginalny stan całą kolekcję ma zastąpić wszystkie elementy ich oryginalnej wartości właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> jest zamknięty lub <paramref name="store" /> nie jest obsługiwanym typem magazynu serializacji. Użyj magazynu zwracanego przez <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMember">
      <MemberSignature Language="C#" Value="public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMember(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMember (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMember(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do którego stan <c>elementu członkowskiego</c> będą serializowane.</param>
        <param name="owningObject">Obiekt, do którego <c>elementu członkowskiego</c> jest dołączony.</param>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> określenia członka do serializacji.</param>
        <summary>Wykonuje serializację danego elementu członkowskiego dla danego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A> Metoda może być wywoływana wiele razy dla tego samego obiektu utworzyć listę serializacji elementów członkowskich w ramach magazynu serializacji. Ogólnie rzecz biorąc element członkowski powinien być właściwości lub zdarzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> jest zamknięty lub <paramref name="store" /> nie jest obsługiwanym typem magazynu serializacji. Użyj magazynu zwracanego przez <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMemberAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMemberAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMemberAbsolute (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMemberAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store">
          <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> Do którego stan <c>elementu członkowskiego</c> będą serializowane.</param>
        <param name="owningObject">Obiekt, do którego <c>elementu członkowskiego</c> jest dołączony.</param>
        <param name="member">Element członkowski do serializacji.</param>
        <summary>Wykonuje serializację danego elementu członkowskiego na dany obiekt dla domyślnej wartości właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> Serializuje metody `member` na `owningObject`, nawet jeśli `member` zawiera domyślną wartość właściwości.  
  
 Należy zauważyć, że dla niektórych członków, zawierające wartości domyślnej i przywracanie ustawienie taką samą wartość do elementu Członkowskiego innego pojęcia. Na przykład jeśli właściwość dziedziczy wartości z obiektu nadrzędnego, gdy ustawiono nie wartości lokalnej, ustawiając wartość właściwości nie można co jest potrzebne. <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> Metoda to uwzględnia i spowoduje wyczyszczenie stanu właściwości w tym przypadku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="store" /> lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="store" /> jest zamknięty lub <paramref name="store" /> nie jest obsługiwanym typem magazynu serializacji. Użyj magazynu zwracanego przez <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
  </Members>
</Type>