<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b56e0fb1227c483e691f436df4d31a78153c287" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68396278" /></Metadata><TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type DesignerSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c8cc7-101">Zapewnia implementację <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-102"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Interfejs został zaprojektowany jako interfejs niezależny od formatu do obiektu, który kontroluje serializację.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="c8cc7-103">Zasadniczo zapewnia ona kontekst i usługi dla serializatorów, które faktycznie wykonują deserializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="c8cc7-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>pomaga w procesie deserializacji przez śledzenie obiektów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="c8cc7-105">Jest to podobna Metoda do <xref:System.ComponentModel.Design.IDesignerHost> interfejsu: projektanci w rzeczywistości udostępniają interfejs użytkownika i <xref:System.ComponentModel.Design.IDesignerHost> udostępniają klej, który umożliwia różnym projektantom współdziałanie ze sobą.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="c8cc7-106"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasa implementuje<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="c8cc7-107">Został zaprojektowany w celu zapewnienia uniwersalnej formy deserializacji podobnej do serializatorów w czasie wykonywania, takich jak <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="c8cc7-108"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasa osiąga trzy cele:</span><span class="sxs-lookup"><span data-stu-id="c8cc7-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="c8cc7-109">Jest to prosty obiekt gotowe, który może służyć do deserializacji różnych formatów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="c8cc7-110">Jest ona ogólna i nie jest powiązana z żadnym konkretnym formatem.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="c8cc7-111">Można go użyć równie do deserializacji CodeDOM, a także deserializacji znaczników.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="c8cc7-112">Jest rozszerzalny i obsługuje różne metody serializacji, które są używane w scenariuszach kopiowania/wklejania i cofania/ponawiania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="c8cc7-113">Serializacja czasu projektowania ma następujące różnice między serializacji obiektu czasu wykonywania:</span><span class="sxs-lookup"><span data-stu-id="c8cc7-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="c8cc7-114">Obiekt wykonujący serializacji jest ogólnie oddzielony od obiektu czasu wykonywania, dzięki czemu logika czasu projektowania może zostać usunięta ze składnika.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="c8cc7-115">Schemat serializacji zakłada, że obiekt zostanie utworzony w pełni zainicjowany, a następnie zmodyfikowany przez wywołania właściwości i metod podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="c8cc7-116">Właściwości obiektu, który ma wartości, które nigdy nie zostały ustawione dla obiektu (właściwości zawierają wartości domyślne) nie są serializowane.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="c8cc7-117">Odwrotnie, strumień deserializacji może mieć otwory.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="c8cc7-118">Nacisk jest umieszczany na jakości zawartości w strumieniu serializacji, a nie w pełnej serializacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="c8cc7-119">Oznacza to, że jeśli nie ma zdefiniowanego sposobu serializacji obiektu, ten obiekt może zostać pominięty zamiast zgłaszać wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="c8cc7-120">Aparat serializacji może zapewnić algorytmy heurystyczne w tym miejscu, aby zdecydować, które błędy mogą być ignorowane i które nie są nieodwracalne.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="c8cc7-121">Strumień serializacji może mieć więcej danych niż jest to konieczne w przypadku deserializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="c8cc7-122">Serializacja kodu źródłowego, na przykład, zawiera kod użytkownika zmieszany z kodem wymaganym do deserializacji grafu obiektów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="c8cc7-123">Ten kod użytkownika musi być ignorowany podczas deserializacji i zachowywany podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="c8cc7-124">Z powodu różnic między różnymi modelami serializacji stosuje się do serializacji czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="c8cc7-125">Ten model wykorzystuje oddzielny obiekt serializatora dla każdego serializowanego typu danych.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="c8cc7-126">Każdy serializator zapewnia swój niewielki udział w tym problemie jako całość.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="c8cc7-127">Te serializatory są koordynowane za pomocą wspólnego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="c8cc7-128">Menedżer serializacji jest odpowiedzialny za utrzymanie stanu między różnymi serializatorami.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="c8cc7-129">Rozważmy na przykład następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="c8cc7-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="c8cc7-130">Wystąpienie tej klasy wykorzystuje trzy różne serializatory: jeden dla `SampleObject`, jeden dla ciągów i drugi dla liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="c8cc7-131">Serializator dla `SampleObject` jest nazywany serializatorem głównym, ponieważ `SampleObject` jest elementem głównym grafu serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="c8cc7-132">Można również utworzyć bardziej złożone wykresy obiektów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="c8cc7-133">Rozważmy na przykład to, co się `SampleObject` stanie, jeśli zostały zmienione w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="c8cc7-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="c8cc7-134">Umożliwia `SampleObject` to posiadanie elementu podrzędnego, który jest innym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="c8cc7-135">Poniższy kod jest wypełniany na grafie obiektów:</span><span class="sxs-lookup"><span data-stu-id="c8cc7-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="c8cc7-136">Gdy `root` jest serializowany, zostaną użyte cztery serializatory: jeden główny Serializator, jeden serializator dla elementu podrzędnego `SampleObject`, jeden serializator dla `int`i jeden serializator dla `string`.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="c8cc7-137">Serializatory są buforowane na podstawie typu, dlatego nie ma potrzeby tworzenia serializatorów dla każdego wystąpienia `SampleObject`.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="c8cc7-138"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasa jest oparta na koncepcji sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="c8cc7-139">Sesja zachowuje stan, do którego mogą uzyskać dostęp różne serializatory.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="c8cc7-140">Gdy sesja zostanie usunięta, ten stan zostanie zniszczony.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="c8cc7-141">Pozwala to zagwarantować, że serializatory pozostaną w dużym stopniu bezstanowym i pomaga oczyścić serializatory, które zostały uszkodzone.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="c8cc7-142">W poniższych tabelach opisano sposób zarządzania stanem w sesjach i między nimi.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="c8cc7-143">Stan globalny</span><span class="sxs-lookup"><span data-stu-id="c8cc7-143">Global State</span></span>  
 <span data-ttu-id="c8cc7-144">Ten stan należy do obiektu menedżera serializacji, ale jest niezależny od bieżącej sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="c8cc7-145">Obiekt</span><span class="sxs-lookup"><span data-stu-id="c8cc7-145">Object</span></span>|<span data-ttu-id="c8cc7-146">Użycie</span><span class="sxs-lookup"><span data-stu-id="c8cc7-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="c8cc7-147">Dostawcy serializacji</span><span class="sxs-lookup"><span data-stu-id="c8cc7-147">Serialization providers</span></span>|<span data-ttu-id="c8cc7-148">Obiekty mogą być dodawane jako niestandardowi dostawcy serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="c8cc7-149">Ponieważ ci dostawcy są używani do lokalizowania serializatorów, prowadzą do nich sesję serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="c8cc7-150">Stan należący do sesji</span><span class="sxs-lookup"><span data-stu-id="c8cc7-150">Session-Owned State</span></span>  
 <span data-ttu-id="c8cc7-151">Ten stan jest własnością sesji i jest niszczony, gdy sesja jest niszczona.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="c8cc7-152">W związku z tym dostęp do wszelkich właściwości lub metod, które mogłyby manipulować tym stanem, zgłosi wyjątek, jeśli Menedżer serializacji nie znajduje się w aktywnej sesji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="c8cc7-153">Obiekt</span><span class="sxs-lookup"><span data-stu-id="c8cc7-153">Object</span></span>|<span data-ttu-id="c8cc7-154">Użycie</span><span class="sxs-lookup"><span data-stu-id="c8cc7-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="c8cc7-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>wydarzen</span><span class="sxs-lookup"><span data-stu-id="c8cc7-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="c8cc7-156"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Zdarzenie jest dołączone przez serializator, aby zapewnić dodatkowe rozwiązanie nazw.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="c8cc7-157">Po zakończeniu sesji wszystkie programy obsługi są odłączone od tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="c8cc7-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>wydarzen</span><span class="sxs-lookup"><span data-stu-id="c8cc7-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="c8cc7-159"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Zdarzenie jest wywoływane tuż przed usunięciem sesji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="c8cc7-160">Następnie wszystkie programy obsługi są odłączone od tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="c8cc7-161">Tabela nazw</span><span class="sxs-lookup"><span data-stu-id="c8cc7-161">Name table</span></span>|<span data-ttu-id="c8cc7-162">Menedżer serializacji utrzymuje tabelę, która mapuje między obiektami i ich nazwami.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="c8cc7-163">Serializatory mogą dać nazwy obiektów do łatwej identyfikacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="c8cc7-164">Ta tabela nazw jest czyszczona po zakończeniu sesji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="c8cc7-165">Pamięć podręczna serializatorów</span><span class="sxs-lookup"><span data-stu-id="c8cc7-165">Serializer cache</span></span>|<span data-ttu-id="c8cc7-166">Menedżer serializacji przechowuje pamięć podręczną serializatorów, do których zażądano.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="c8cc7-167">Ta pamięć podręczna jest czyszczona po zakończeniu sesji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="c8cc7-168">Metodę publiczną <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> można bezpiecznie wywołać w dowolnym momencie, ale jej wartość jest buforowana tylko wtedy, gdy jest wywoływana z poziomu sesji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="c8cc7-169">Stos kontekstu</span><span class="sxs-lookup"><span data-stu-id="c8cc7-169">Context stack</span></span>|<span data-ttu-id="c8cc7-170">Menedżer serializacji utrzymuje obiekt nazywany stosem kontekstowym, do którego można uzyskać dostęp za pomocą <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="c8cc7-171">Serializatory mogą używać tego stosu do przechowywania dodatkowych informacji dostępnych dla innych serializatorów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="c8cc7-172">Na przykład Serializator, który serializacji wartości właściwości może wypchnąć nazwę właściwości na stosie serializacji przed zapytaniem do serializacji wartości.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="c8cc7-173">Ten stos jest czyszczony, gdy sesja zostanie przerwana.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="c8cc7-174">Lista błędów</span><span class="sxs-lookup"><span data-stu-id="c8cc7-174">Error list</span></span>|<span data-ttu-id="c8cc7-175">Menedżer serializacji przechowuje listę błędów, które wystąpiły podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="c8cc7-176">Ta lista, do której uzyskuje się <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> dostęp za pomocą właściwości, jest czyszczona po zakończeniu sesji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="c8cc7-177">Uzyskanie dostępu do właściwości między sesjami spowoduje wyjątek. <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8cc7-178">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8cc7-179">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-180">Ten konstruktor ustawia <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> właściwości i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> na. `true`</span><span class="sxs-lookup"><span data-stu-id="c8cc7-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializationManager : IServiceProvider -&gt; System.ComponentModel.Design.Serialization.DesignerSerializationManager" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializationManager provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c8cc7-181">A <see cref="T:System.IServiceProvider" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-181">An <see cref="T:System.IServiceProvider" />.</span></span></param>
        <summary><span data-ttu-id="c8cc7-182">Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy dla danego dostawcy usług.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-183">Jeśli serializator żąda usług, które nie mogą zostać spełnione przez menedżera serializacji, domyślna implementacja przekaże te żądania do `provider` parametru.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="c8cc7-184">Ten konstruktor ustawia <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> właściwości i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> na. `true`</span><span class="sxs-lookup"><span data-stu-id="c8cc7-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8cc7-185"><paramref name="provider" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-185"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-186">Pobiera lub ustawia kontener dla tego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-186">Gets or sets to the container for this serialization manager.</span></span></summary>
        <value><span data-ttu-id="c8cc7-187">, <see cref="T:System.ComponentModel.IContainer" /> Do którego Menedżer serializacji doda składniki.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-188">Jeśli kontener istnieje, wszystkie składniki, które są tworzone przez menedżera serializacji, zostaną dodane do kontenera.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="c8cc7-189">Domyślna implementacja tej właściwości przeszuka dostawcę <xref:System.ComponentModel.Design.IDesignerHost> usługi i użyje kontenera dostarczonego przez hosta projektanta.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="c8cc7-190">W przeciwnym razie ta właściwość zwróci `null` wartość i żadne składniki nie zostaną dodane do kontenera.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-191">Menedżer serializacji ma aktywną sesję serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-191">The serialization manager has an active serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj&#xA;override this.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="designerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c8cc7-192">Typ, dla którego ma zostać utworzone wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-192">The type to create an instance of.</span></span></param>
        <param name="arguments"><span data-ttu-id="c8cc7-193">Parametry konstruktora typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-193">The parameters of the type's constructor.</span></span> <span data-ttu-id="c8cc7-194">Może to być <see langword="null" /> lub pusta kolekcja do wywołania konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-194">This can be <see langword="null" /> or an empty collection to invoke the parameterless constructor.</span></span></param>
        <param name="name"><span data-ttu-id="c8cc7-195">Nazwa, aby nadać obiektowi.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-195">A name to give the object.</span></span> <span data-ttu-id="c8cc7-196">Jeśli <see langword="null" />obiekt nie zostanie podaną nazwą, chyba że obiekt zostanie dodany do kontenera, a kontener nadaje obiektowi nazwę.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="c8cc7-197"><see langword="true" />Aby dodać obiekt do kontenera, jeśli obiekt jest zaimplementowany <see cref="T:System.ComponentModel.IComponent" />; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="c8cc7-197"><see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c8cc7-198">Tworzy wystąpienie typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-198">Creates an instance of a type.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-199">Nowe wystąpienie typu określonego przez <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-199">A new instance of the type specified by <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-200">Ta metoda jest wywoływana przez serializatory podczas próby utworzenia wystąpienia typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="c8cc7-201">Domyślna implementacja tworzy nowe wystąpienie typu lub może zwrócić istniejące wystąpienie w zależności od wartości <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> właściwości i. <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="c8cc7-202">Metoda używa odbicia do tworzenia wystąpień i przeprowadza niektóre przekształcenia ogólne <xref:System.IConvertible> w parametrach, aby znaleźć pasujący Konstruktor. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="c8cc7-203"><paramref name="type" />nie ma konstruktora, który pobiera parametry zawarte w <paramref name="arguments" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-203"><paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberSignature Language="F#" Value="member this.CreateSession : unit -&gt; IDisposable" Usage="designerSerializationManager.CreateSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8cc7-204">Tworzy nową sesję serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-204">Creates a new serialization session.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-205"><see cref="T:System.IDisposable" /> Reprezentuje nową sesję serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-206">Większość danych w Menedżerze serializacji jest przejściowa i dotyczy tylko życia sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="c8cc7-207">Po zlikwidowaniu sesji Serializacja jest uznawana za kompletną i ten stan przejściowy jest wyczyszczony.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="c8cc7-208">Dzięki temu pojedyncze wystąpienie menedżera serializacji może służyć do serializacji wielu drzew obiektów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="c8cc7-209">Niektóre Stany, w tym dostawca usług i niestandardowi dostawcy serializacji, które zostały dodane do menedżera serializacji, obejmują sesje.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-210">Menedżer serializacji jest już w ramach sesji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-210">The serialization manager is already within a session.</span></span> <span data-ttu-id="c8cc7-211">Ta wersja programu <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> nie obsługuje równoczesnych sesji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.IList" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-212">Pobiera listę błędów, które wystąpiły podczas serializacji lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-212">Gets the list of errors that occurred during serialization or deserialization.</span></span></summary>
        <value><span data-ttu-id="c8cc7-213">Lista błędów, które wystąpiły podczas serializacji lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-213">The list of errors that occurred during serialization or deserialization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-214">Listę błędów można odczytać tylko wtedy, gdy sesja serializacji jest aktywna.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-215">Uzyskano dostęp do tej właściwości poza sesją serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-215">This property was accessed outside of a serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeType : string -&gt; Type" Usage="designerSerializationManager.GetRuntimeType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="c8cc7-216">Nazwa typu, który ma zostać pobrany.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-216">The name of the type to get.</span></span></param>
        <summary><span data-ttu-id="c8cc7-217">Pobiera typ odpowiadający określonej nazwie typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-217">Gets the type corresponding to the specified type name.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-218">Określony typ.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-218">The specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : Type * Type -&gt; obj" Usage="designerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="c8cc7-219">Typ obiektu, dla którego ma zostać pobrany serializator.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-219">The type of object for which to retrieve the serializer.</span></span></param>
        <param name="serializerType"><span data-ttu-id="c8cc7-220">Typ serializatora do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-220">The type of serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="c8cc7-221">Pobiera serializator dla danego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-221">Gets the serializer for the given object type.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-222">Serializator dla <paramref name="objectType" />lub <see langword="null" />, jeśli nie został znaleziony.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-223">Możesz zażądać typu serializatora, który chcesz.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="c8cc7-224">Ta metoda zwraca `null` , jeśli nie istnieje serializator żądanego typu dla określonego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8cc7-225"><paramref name="objectType" />lub <paramref name="serializerType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-225"><paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designerSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="c8cc7-226">Typ usługi do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-226">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="c8cc7-227">Pobiera żądaną usługę.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-227">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-228">Żądana usługa lub <see langword="null" /> nie można rozpoznać usługi.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-229"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> Metoda zapewnia dostęp do źródłowego kontenera lub dostawcy usług, który został ustawiony w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="designerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="c8cc7-230">Nazwa typu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-230">The name of the type to retrieve.</span></span></param>
        <summary><span data-ttu-id="c8cc7-231">Pobiera żądany typ.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-231">Gets the requested type.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-232">Żądany typ, lub <see langword="null" /> Jeśli nie można rozpoznać typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-233">Metoda przeszuka dostawcę usługi <xref:System.ComponentModel.Design.ITypeResolutionService> dla i, jeśli jest dostępna, zostanie delegowana do tej usługi w celu rozpoznania typu. <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="c8cc7-234">Jeśli element <xref:System.ComponentModel.Design.ITypeResolutionService> nie jest dostępny, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> wywoła <xref:System.Object.GetType%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit&#xA;override this.OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit" Usage="designerSerializationManager.OnResolveName e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c8cc7-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c8cc7-236"><see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-237">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c8cc7-238">Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c8cc7-239"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c8cc7-240">Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c8cc7-241">Podczas zastępowania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-241">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionCreated : EventArgs -&gt; unit&#xA;override this.OnSessionCreated : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c8cc7-242"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c8cc7-243"><see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-244">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c8cc7-245">Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c8cc7-246"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c8cc7-247">Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c8cc7-248">Podczas zastępowania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-248">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionDisposed : EventArgs -&gt; unit&#xA;override this.OnSessionDisposed : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionDisposed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c8cc7-249"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c8cc7-250"><see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-251">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c8cc7-252">Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c8cc7-253"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c8cc7-254">Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c8cc7-255">Podczas zastępowania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-255">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveNames : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-256">Pobiera lub ustawia wartość wskazującą, czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> Metoda powinna sprawdzać obecność danej nazwy w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span></span></summary>
        <value><span data-ttu-id="c8cc7-257"><see langword="true" />Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> zostanie przekazana nazwa składnika; <see langword="false" /> Jeśli<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> program sprawdzi obecność podaną nazwę w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-257"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="c8cc7-258">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-259">Właściwość określa zachowanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>metody. <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="c8cc7-260">Jeśli `true` ,<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> nastąpi przekazanie nazwy danego składnika.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="c8cc7-261">Jeśli `false` program<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> sprawdzi obecność podaną nazwę w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="c8cc7-262">Jeśli nazwa nie istnieje w kontenerze, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> program użyje podaną nazwę.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="c8cc7-263">Jeśli nazwa istnieje w kontenerze, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> program przekaże wartość null jako nazwę składnika podczas dodawania go do kontenera, co daje mu nową nazwę.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="c8cc7-264">Druga odmiana jest przydatna do implementowania serializatora, który zawsze duplikuje obiekty, zamiast zakładając, że te obiekty nie istnieją.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="c8cc7-265">Polecenia Wklej często używają tego typu serializatora.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="c8cc7-266">Tę właściwość można zmienić tylko wtedy, gdy nie jesteś w sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-267">Ta właściwość została zmieniona z poziomu sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-267">This property was changed from within a serialization session.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-268">Pobiera obiekt, który powinien być używany do dostarczania właściwości do <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> właściwości menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></summary>
        <value><span data-ttu-id="c8cc7-269">Obiekt, który powinien być używany do podania właściwości <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> właściwości menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-270"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> Właściwość umożliwia nadanie menedżerowi serializacji zestawu właściwości serializacji, które mogą być używane przez serializatory do obsługi ich zachowań.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="c8cc7-271">Właściwości publiczne tego obiektu zostaną sprawdzone i opakowane w nowe deskryptory właściwości, które mają obiekt docelowy menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecycleInstances : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-272">Pobiera lub ustawia wartość wskazującą, czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> zawsze będzie tworzone nowe wystąpienie typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-272">Gets or sets a value that indicates whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span></span></summary>
        <value><span data-ttu-id="c8cc7-273"><see langword="true" />Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> zwróci istniejące wystąpienie; <see langword="false" /> Jeśli<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> program utworzy nowe wystąpienie typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-273"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span></span> <span data-ttu-id="c8cc7-274">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-274">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-275">Jeśli właściwość ma `false`wartość, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Metoda zawsze utworzy nowe wystąpienie typu. <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="c8cc7-276">Jeśli <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> jest `true` ,<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> najpierw przeszukuje tabelę nazw i kontener dla obiektu o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="c8cc7-277">Jeśli taki obiekt istnieje i ma ten sam typ, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> zwróci istniejące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="c8cc7-278">Druga odmiana jest przydatna do implementowania serializatora, który stosuje stan serializacji do istniejącego zestawu obiektów, a nie zawsze tworzenia nowego drzewa.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="c8cc7-279">Polecenie **Cofnij** często używa tego typu serializatora.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="c8cc7-280">W <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> przypadku, gdy właściwość ma `true`wartość, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> właściwość będzie dodatkowo modyfikować zachowanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> w zależności od typów dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-281">Menedżer serializacji ma aktywną sesję serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-281">The serialization manager has an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionCreated : EventHandler " Usage="member this.SessionCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-282">Występuje, gdy sesja zostanie utworzona.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-282">Occurs when a session is created.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberSignature Language="F#" Value="member this.SessionDisposed : EventHandler " Usage="member this.SessionDisposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-283">Występuje, gdy sesja zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-283">Occurs when a session is disposed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c8cc7-284">Dostawca serializacji do dodania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-284">The serialization provider to add.</span></span></param>
        <summary><span data-ttu-id="c8cc7-285">Dodaje niestandardowego dostawcę serializacji do menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-285">Adds a custom serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-286"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> Gdy metoda jest używana do żądania dostawcy serializacji, Menedżer serializacji najpierw wysyła zapytanie do niestandardowych dostawców serializacji przed szukaniem metadanych typu dla odpowiedniego serializatora.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-287">Pobiera stos kontekstu dla tej sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-287">Gets the context stack for this serialization session.</span></span></summary>
        <value><span data-ttu-id="c8cc7-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> , który przechowuje dane.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-289">Stos kontekstu zapewnia zdefiniowany przez użytkownika obszar magazynu wdrożony jako stos.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="c8cc7-290">Ten obszar magazynowania jest przydatnym sposobem zapewnienia komunikacji między serializatorami, ponieważ Serializacja jest ogólnym procesem hierarchicznym.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-291">Uzyskano dostęp do tej właściwości poza sesją serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-291">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c8cc7-292">Typ danych do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-292">The data type to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="c8cc7-293">Argumenty, które mają zostać przekazane do konstruktora dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-293">The arguments to pass to the constructor for this type.</span></span></param>
        <param name="name"><span data-ttu-id="c8cc7-294">Nazwa obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-294">The name of the object.</span></span> <span data-ttu-id="c8cc7-295">Ta nazwa może służyć do późniejszego dostępu do obiektu za <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />pomocą.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span></span> <span data-ttu-id="c8cc7-296">Jeśli <see langword="null" /> jest zakończony, obiekt jest nadal tworzony, ale nie można uzyskać do niego dostępu według nazwy.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="c8cc7-297"><see langword="true" />Aby dodać ten obiekt do kontenera projektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-297"><see langword="true" /> to add this object to the design container.</span></span> <span data-ttu-id="c8cc7-298">Obiekt musi być zaimplementowany <see cref="T:System.ComponentModel.IComponent" /> dla tego elementu, aby miał efekt.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="c8cc7-299"><see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> Implementuje metodę.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-300">Nowo utworzony wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-300">The newly created object instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c8cc7-301">Nazwa obiektu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-301">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="c8cc7-302">Pobiera wystąpienie utworzonego obiektu o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-302">Retrieves an instance of a created object of the specified name.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-303">Wystąpienie obiektu o podaną nazwę lub <see langword="null" /> Jeśli nie można odnaleźć obiektu o tej nazwie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8cc7-304"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-304"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-305">Uzyskano dostęp do tej właściwości poza sesją serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-305">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c8cc7-306">Obiekt, dla którego ma zostać pobrana nazwa.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-306">The object for which to retrieve the name.</span></span></param>
        <summary><span data-ttu-id="c8cc7-307">Pobiera nazwę określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-307">Retrieves a name for the specified object.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-308">Nazwa obiektu lub <see langword="null" /> Jeśli obiekt jest bez nazwy.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-309">Jeśli metoda nie może znaleźć odpowiedniej nazwy `value` dla <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> parametru, wywołuje zdarzenie przed zwróceniem `null`. <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8cc7-310"><paramref name="value" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-310"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-311">Uzyskano dostęp do tej właściwości poza sesją serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-311">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="c8cc7-312">Typ obiektu, dla którego ma zostać pobrany serializator.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-312">The type of the object to get the serializer for.</span></span></param>
        <param name="serializerType"><span data-ttu-id="c8cc7-313">Typ serializatora do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-313">The type of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="c8cc7-314">Pobiera serializator żądanego typu dla określonego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-314">Gets a serializer of the requested type for the specified object type.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-315">Wystąpienie żądanego serializatora lub <see langword="null" /> Jeśli nie można zlokalizować odpowiedniego serializatora.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="c8cc7-316">W pełni kwalifikowana nazwa typu do załadowania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-316">The fully qualified name of the type to load.</span></span></param>
        <summary><span data-ttu-id="c8cc7-317">Pobiera typ określonej nazwy.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-317">Gets a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-318">Wystąpienie typu lub <see langword="null" /> , jeśli nie można załadować typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-319">Uzyskano dostęp do tej właściwości poza sesją serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-319">This property was accessed outside of a serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-320"><see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> Implementuje właściwość.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></summary>
        <value><span data-ttu-id="c8cc7-321"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Zawierający właściwości, które mają być serializowane.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="c8cc7-322"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> Do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span></span></param>
        <summary><span data-ttu-id="c8cc7-323">Usuwa wcześniej dodany dostawca serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-323">Removes a previously added serialization provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-324">Metoda usuwa niestandardowego dostawcę serializacji, który został wcześniej dodany przez wywołanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> metody. <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="c8cc7-325">Obiekt zawierający informacje o błędzie, zazwyczaj typu <see cref="T:System.String" /> lub. <see cref="T:System.Exception" /></span><span class="sxs-lookup"><span data-stu-id="c8cc7-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span></span></param>
        <summary><span data-ttu-id="c8cc7-326">Służy do zgłaszania odwracalnego błędu w serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-326">Used to report a recoverable error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-327">Serializatory mogą być zapisywane, aby bezpiecznie obsługiwać błędy odwracalne przez wywołanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> metody z informacjami o błędzie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="c8cc7-328">Menedżer serializacji może obsługiwać raportowanie listy błędów po jej zakończeniu lub może zgłosić wyjątek z tej metody i przerwać proces serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="c8cc7-329">Serializator powinien być kontynuowany po wywołaniu tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="c8cc7-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A>`errorInformation` dodaje parametr<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="c8cc7-331">Jeśli `errorInformation` jest`null`, nie jest podejmowana żadna akcja.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-332">Uzyskano dostęp do tej właściwości poza sesją serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-332">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-333">Występuje, <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> gdy nie można zlokalizować określonej nazwy w tabeli nazw menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-333">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="c8cc7-334">Zdarzenie jest zgłaszane, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> gdy wywoływana jest metoda, ale nie można odnaleźć określonej nazwy w tabeli nazw menedżera serializacji. `ResolveName`</span><span class="sxs-lookup"><span data-stu-id="c8cc7-334">The `ResolveName` event is raised when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method is called, but it fails to find the specified name in the serialization manager's name table.</span></span>

<span data-ttu-id="c8cc7-335">To zdarzenie umożliwia serializatorowi zażądanie — utworzenie obiektu, aby serializator nie musiał zamówić tworzenia obiektów przez zależność.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-335">This event provides a way for a serializer to demand-create an object so the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="c8cc7-336">Ten delegat jest wyczyszczony natychmiast po zakończeniu serializacji lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-336">This delegate is cleared immediately after serialization or deserialization is complete.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-337">Menedżer serializacji nie ma aktywnej sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-337">The serialization manager does not have an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-338">Występuje, gdy Serializacja została ukończona.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-338">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="c8cc7-339">Zazwyczaj proces serializacji jest jednowątkowy i powinien być bezstanowy.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-339">Typically the serialization process is single-threaded and should be stateless.</span></span> <span data-ttu-id="c8cc7-340">Jeśli te cechy nie są prawdziwe, można <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> użyć zdarzenia, aby pomóc w organizowaniu tego procesu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-340">When these characteristics are not true, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event can be used to help to organize the process.</span></span> <span data-ttu-id="c8cc7-341">Serializator może śledzić to zdarzenie, aby wiedzieć, że proces serializacji został ukończony.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-341">A serializer can track this event to know that the serialization process is complete.</span></span>

<span data-ttu-id="c8cc7-342">Na przykład czasami serializator musi zapisywać w innym pliku, takim jak plik zasobów.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-342">For example, sometimes a serializer needs to write to another file, such as a resource file.</span></span> <span data-ttu-id="c8cc7-343">W takim przypadku byłoby niewydajne, aby zaprojektować Serializator, aby zamknąć plik po zakończeniu, ponieważ Serializacja grafu obiektów zwykle wymaga kilku serializatorów; w związku z tym plik zasobów zostałby otwarty i zamknięty wiele razy.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-343">In such a case, it would be inefficient to design the serializer to close the file when it is finished because serialization of an object graph generally requires several serializers; therefore, the resource file would be opened and closed many times.</span></span> <span data-ttu-id="c8cc7-344">Zamiast tego do pliku zasobów można uzyskać dostęp za pomocą obiektu, który przeprowadził śledzenie <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> zdarzenia, a ten obiekt może zamknąć plik zasobów na końcu serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-344">Instead, the resource file could be accessed through an object that tracked the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and that object could close the resource file at the end of serialization.</span></span>

<span data-ttu-id="c8cc7-345">W powiązanym użyciu to zdarzenie służy do usuwania tymczasowej usługi zainstalowanej w Menedżerze serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-345">In a related use, this event can be used to remove a temporary service installed in the serialization manager.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-346">Menedżer serializacji nie ma aktywnej sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-346">The serialization manager does not have an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c8cc7-347">Obiekt, aby ustawić nazwę.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-347">The object to set the name.</span></span></param>
        <param name="name"><span data-ttu-id="c8cc7-348"><see cref="T:System.String" /> Używana jako nazwa obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-348">A <see cref="T:System.String" /> used as the name of the object.</span></span></param>
        <summary><span data-ttu-id="c8cc7-349">Ustawia nazwę określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-349">Sets the name for the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-350"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> Metoda umożliwia ustawienie nazwy istniejącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-350">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="c8cc7-351">Umożliwia to utworzenie wystąpienia obiektu za pomocą wywołania <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> metody, unikając obciążenia <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-351">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8cc7-352">Jeden lub oba parametry są <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-352">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8cc7-353">Obiekt określony przez wystąpienie ma już nazwę lub <paramref name="name" /> jest już używany przez inny nazwany obiekt.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-353">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-354">Uzyskano dostęp do tej właściwości poza sesją serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-354">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="c8cc7-355">Obiekt, który określa typ obiektu usługi do pobrania.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-355">An object that specifies the type of service object to get.</span></span></param>
        <summary><span data-ttu-id="c8cc7-356">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IServiceProvider.GetService(System.Type)" /> metodę.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-356">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="c8cc7-357">Obiekt usługi typu <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-357">A service object of type <paramref name="serviceType" />.</span></span>  
  
<span data-ttu-id="c8cc7-358">—lub—</span><span class="sxs-lookup"><span data-stu-id="c8cc7-358">-or-</span></span> 
 <span data-ttu-id="c8cc7-359"><see langword="null" />Jeśli nie ma obiektu usługi typu <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-359"><see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-360">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-360">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c8cc7-361">Może być używana tylko wtedy, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> gdy wystąpienie jest rzutowane <xref:System.IServiceProvider> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-361">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRecycledTypes : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8cc7-362">Pobiera lub ustawia wartość wskazującą, czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> metoda sprawdzi, czy pasujące nazwy odwołują się do tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-362">Gets or sets a value that indicates whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span></span></summary>
        <value><span data-ttu-id="c8cc7-363"><see langword="true" />w <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> przypadku weryfikacji typów; w przeciwnym <see langword="false" /> razie, jeśli nie.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-363"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span></span> <span data-ttu-id="c8cc7-364">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-364">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8cc7-365">Właściwość modyfikuje zachowanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody, jeśli <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwość jest `true`, zgodnie z opisem w poniższej tabeli. <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A></span><span class="sxs-lookup"><span data-stu-id="c8cc7-365">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="c8cc7-366">Zachowanie`CreateInstance`</span><span class="sxs-lookup"><span data-stu-id="c8cc7-366">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="c8cc7-367">`true` lub `false`</span><span class="sxs-lookup"><span data-stu-id="c8cc7-367">`true` or `false`</span></span>|<span data-ttu-id="c8cc7-368">Zawsze twórz nowe wystąpienie określonego typu</span><span class="sxs-lookup"><span data-stu-id="c8cc7-368">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="c8cc7-369">Jeśli zostanie znalezione pasujące wystąpienie, jest ono zwracane niezależnie od jego typu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-369">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="c8cc7-370">Jeśli zostanie znalezione pasujące wystąpienie, jest ono zwracane tylko wtedy, gdy jego typ jest taki sam jak określony w wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-370">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="c8cc7-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>przydaje się do przedzielenia jednego typu obiektu na inny, jeśli mają podobne właściwości, ale nie mają wspólnego elementu nadrzędnego lub interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8cc7-372">Menedżer serializacji ma aktywną sesję serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8cc7-372">The serialization manager has an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>