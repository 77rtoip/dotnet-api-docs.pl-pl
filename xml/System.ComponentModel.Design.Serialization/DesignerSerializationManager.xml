<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bb57a890dbc17d8e6f4866c1db1b268d5c65498" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52599113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type DesignerSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d5001-101">Udostępnia implementację <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interfejsu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5001-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-102"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Interfejsu została zaprojektowana jako interfejs niezależny od formatu do obiektu, który kontroluje serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="d5001-103">Zasadniczo zapewnia kontekstu i usług serializatory, które faktycznie wykonać deserializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="d5001-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> pomaga w procesie deserializacji przez śledzenie obiektów.</span><span class="sxs-lookup"><span data-stu-id="d5001-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="d5001-105">Jest to podobne techniki <xref:System.ComponentModel.Design.IDesignerHost> interfejsu: projektantów faktycznie zapewnia interfejs użytkownika (UI), i <xref:System.ComponentModel.Design.IDesignerHost> zapewnia spoiwo łączące pozwala projektantom różnych współpracują ze sobą.</span><span class="sxs-lookup"><span data-stu-id="d5001-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="d5001-106"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasy implementuje <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span><span class="sxs-lookup"><span data-stu-id="d5001-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="d5001-107">Zaprojektowano w celu zapewnienia formularz ogólny klasy deserializacji, podobne do środowiska wykonawczego serializatory, takich jak <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="d5001-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="d5001-108"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasy realizuje trzy cele:</span><span class="sxs-lookup"><span data-stu-id="d5001-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="d5001-109">Jest proste, gotowe do użycia obiektu, który może służyć do deserializacji różnorodnych formatach.</span><span class="sxs-lookup"><span data-stu-id="d5001-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="d5001-110">Jest ogólny i nie wiązanej do dowolnego określonego formatu.</span><span class="sxs-lookup"><span data-stu-id="d5001-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="d5001-111">Może służyć jednakowo do deserializacji CodeDOM, a także deserializacji znaczników.</span><span class="sxs-lookup"><span data-stu-id="d5001-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="d5001-112">Jest rozszerzalny i obsługuje serializacji różnych metod, które są używane w scenariuszach kopiowania/wklejania i Cofnij/Ponów.</span><span class="sxs-lookup"><span data-stu-id="d5001-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="d5001-113">Serializacji w czasie projektowania ma następujące różnice względem obiektów czasu wykonywania serializacji:</span><span class="sxs-lookup"><span data-stu-id="d5001-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="d5001-114">Obiektu wykonującego serializacji jest zazwyczaj oddzielnie od obiektów czasu wykonywania, aby logika czasu projektowania można usunąć ze składnika.</span><span class="sxs-lookup"><span data-stu-id="d5001-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="d5001-115">Schemat serializacji zakłada, obiekt zostanie utworzony w pełni zainicjowane, a następnie zmodyfikować za pomocą wywołania właściwości i metody podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="d5001-116">Właściwości obiektu, w których wartości, które nigdy nie zostały ustawione dla obiektu (właściwości zawierają wartości domyślne) nie są serializowane.</span><span class="sxs-lookup"><span data-stu-id="d5001-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="d5001-117">Z drugiej strony strumienia deserializacji może mieć luki.</span><span class="sxs-lookup"><span data-stu-id="d5001-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="d5001-118">Nacisk jest kładziony na jakość zawartości w ramach strumienia serializacji, a nie pełne serializacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="d5001-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="d5001-119">Oznacza to, że jeśli nie ma zdefiniowanych możliwości do serializacji obiektu, ten obiekt może zostać pominięta, a nie zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d5001-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="d5001-120">Mechanizm serializacji może zapewnić algorytmów heurystycznych w tym miejscu podjęcie decyzji, które błędy można zignorować, które są nie do odzyskania.</span><span class="sxs-lookup"><span data-stu-id="d5001-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="d5001-121">Strumienia serializacji może mieć więcej danych niż jest niezbędny do deserializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="d5001-122">Serializacji kodu źródłowego, na przykład zawiera kod użytkownika, łączyć się przy użyciu kodu potrzebne do deserializacji grafu obiektów.</span><span class="sxs-lookup"><span data-stu-id="d5001-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="d5001-123">Ten kod użytkownika należy ignorowane na deserializacji i zachowane po serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="d5001-124">Ze względu na różnice te modelu różnych serializacji ma zastosowanie do serializacji w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="d5001-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="d5001-125">Ten model wykorzystuje obiekt serializatora osobne dla każdego typu danych serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="d5001-126">Każdy element serializujący zapewnia wkładzie mały problem jako całości.</span><span class="sxs-lookup"><span data-stu-id="d5001-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="d5001-127">Te serializatory wszystkie koordynowane za pośrednictwem wspólnego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="d5001-128">Menedżer serializacji jest odpowiedzialny za utrzymanie stanu między te różne serializatory.</span><span class="sxs-lookup"><span data-stu-id="d5001-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="d5001-129">Na przykład należy wziąć pod uwagę następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="d5001-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="d5001-130">Wystąpienie tej klasy będzie wykorzystywać trzy różne serializatory: jeden dla `SampleObject`, jeden dla ciągów i drugi dla liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="d5001-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="d5001-131">Serializator dla `SampleObject` jest nazywany serializator głównego, ponieważ `SampleObject` jest głównym wykresu serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="d5001-132">Można również utworzyć bardziej złożone wykresów obiektów.</span><span class="sxs-lookup"><span data-stu-id="d5001-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="d5001-133">Rozważmy na przykład, co się stanie, jeśli `SampleObject` zostały zmienione w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="d5001-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="d5001-134">Dzięki temu `SampleObject` mieć element podrzędny, będącego innego wystąpienia samej siebie.</span><span class="sxs-lookup"><span data-stu-id="d5001-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="d5001-135">Poniższy kod wypełnia wykresu obiektu:</span><span class="sxs-lookup"><span data-stu-id="d5001-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="d5001-136">Podczas `root` jest serializowana, będzie czterech serializatory używane: jeden katalog główny element serializujący, co serializator dla elementu podrzędnego `SampleObject`, jeden serializatora dla `int`i jedną serializatora dla `string`.</span><span class="sxs-lookup"><span data-stu-id="d5001-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="d5001-137">Serializatory są buforowane na podstawie typu, więc nie ma konieczności tworzenia serializatora dla każdego wystąpienia `SampleObject`.</span><span class="sxs-lookup"><span data-stu-id="d5001-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="d5001-138"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasy opiera się na pomysł sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="d5001-139">Sesja zachowuje stan, który może zostać oceniony przez różne serializatory.</span><span class="sxs-lookup"><span data-stu-id="d5001-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="d5001-140">Ten stan jest niszczony, po usunięciu sesji.</span><span class="sxs-lookup"><span data-stu-id="d5001-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="d5001-141">Pozwala to zagwarantować, że serializatory pozostają w dużej mierze bezstanowe i ulec uszkodzeniu pomaga, aby wyczyścić serializatory, które są.</span><span class="sxs-lookup"><span data-stu-id="d5001-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="d5001-142">W poniższych tabelach opisano, jak stanu jest zarządzane i między sesjami.</span><span class="sxs-lookup"><span data-stu-id="d5001-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="d5001-143">Stan globalny</span><span class="sxs-lookup"><span data-stu-id="d5001-143">Global State</span></span>  
 <span data-ttu-id="d5001-144">Ten stan jest własnością obiekt menedżera serializacji, ale jest niezależny od bieżącej sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="d5001-145">Obiekt</span><span class="sxs-lookup"><span data-stu-id="d5001-145">Object</span></span>|<span data-ttu-id="d5001-146">Użycie</span><span class="sxs-lookup"><span data-stu-id="d5001-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="d5001-147">Serializacja dostawców</span><span class="sxs-lookup"><span data-stu-id="d5001-147">Serialization providers</span></span>|<span data-ttu-id="d5001-148">Obiekty, można dodać siebie jako dostawców niestandardowej serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="d5001-149">Ponieważ tych dostawców są używane do lokalizowania serializatory, ich on nakreślał sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="d5001-150">Stan sesji należących do firmy</span><span class="sxs-lookup"><span data-stu-id="d5001-150">Session-Owned State</span></span>  
 <span data-ttu-id="d5001-151">Ten stan jest własnością sesji i jest niszczony, kiedy niszczony jest sesji.</span><span class="sxs-lookup"><span data-stu-id="d5001-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="d5001-152">W związku z tym uzyskiwania dostępu do żadnych właściwości lub metody manipulujące ten stan spowoduje zgłoszenie wyjątku, jeśli Menedżer serializacji nie jest aktywna sesja.</span><span class="sxs-lookup"><span data-stu-id="d5001-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="d5001-153">Obiekt</span><span class="sxs-lookup"><span data-stu-id="d5001-153">Object</span></span>|<span data-ttu-id="d5001-154">Użycie</span><span class="sxs-lookup"><span data-stu-id="d5001-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="d5001-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Zdarzenia</span><span class="sxs-lookup"><span data-stu-id="d5001-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="d5001-156"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Zdarzeń jest dołączony przez element serializujący, aby zapewnić dodatkowe rozpoznawania nazw.</span><span class="sxs-lookup"><span data-stu-id="d5001-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="d5001-157">Wszystkie procedury obsługi są odłączone od tego zdarzenia, kiedy kończy sesję.</span><span class="sxs-lookup"><span data-stu-id="d5001-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="d5001-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Zdarzenia</span><span class="sxs-lookup"><span data-stu-id="d5001-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="d5001-159"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Zdarzenie jest wywoływane tuż przed, sesja zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="d5001-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="d5001-160">Następnie całej obsługi są odłączone od tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="d5001-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="d5001-161">Nazwa tabeli</span><span class="sxs-lookup"><span data-stu-id="d5001-161">Name table</span></span>|<span data-ttu-id="d5001-162">Menedżer serializacji przechowuje tabelę, która mapuje dane między obiektami i ich nazw.</span><span class="sxs-lookup"><span data-stu-id="d5001-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="d5001-163">Serializatory może nadać nazwy obiektów ułatwiający identyfikację.</span><span class="sxs-lookup"><span data-stu-id="d5001-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="d5001-164">Ta tabela nazwa jest czyszczona, gdy kończy się sesja.</span><span class="sxs-lookup"><span data-stu-id="d5001-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="d5001-165">Pamięci podręcznej serializatora</span><span class="sxs-lookup"><span data-stu-id="d5001-165">Serializer cache</span></span>|<span data-ttu-id="d5001-166">Menedżer serializacji obsługuje pamięć podręczną serializatory, który ma zostać poproszeni o podanie.</span><span class="sxs-lookup"><span data-stu-id="d5001-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="d5001-167">Ta pamięć podręczna jest czyszczona, gdy kończy się sesja.</span><span class="sxs-lookup"><span data-stu-id="d5001-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="d5001-168">Publicznie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> metodę można bezpiecznie wywołać w dowolnym momencie, ale jej wartość jest buforowana tylko wtedy, gdy jest wywoływana z w ramach sesji.</span><span class="sxs-lookup"><span data-stu-id="d5001-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="d5001-169">Stos kontekstu</span><span class="sxs-lookup"><span data-stu-id="d5001-169">Context stack</span></span>|<span data-ttu-id="d5001-170">Menedżer serializacji zapisuje obiekt o nazwie Stos kontekstu, który jest dostępny za pomocą <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d5001-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="d5001-171">Serializatory można użyć tego stosu do przechowywania dodatkowych informacji, która jest dostępna dla innych serializatory.</span><span class="sxs-lookup"><span data-stu-id="d5001-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="d5001-172">Na przykład element serializujący, która wykonuje serializację wartość właściwości wypychać nazwy właściwości na stosie serializacji przed zadaniem wartość do zserializowania.</span><span class="sxs-lookup"><span data-stu-id="d5001-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="d5001-173">Ten stos jest wyczyszczone, gdy sesja zostanie zakończona.</span><span class="sxs-lookup"><span data-stu-id="d5001-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="d5001-174">Lista błędów</span><span class="sxs-lookup"><span data-stu-id="d5001-174">Error list</span></span>|<span data-ttu-id="d5001-175">Menedżer serializacji utrzymuje listę błędów, które wystąpiły podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="d5001-176">Tej listy, który jest dostępny za pośrednictwem <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> właściwości jest zaznaczone, gdy sesja zostanie zakończona.</span><span class="sxs-lookup"><span data-stu-id="d5001-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="d5001-177">Uzyskiwanie dostępu do <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> właściwości między sesjami, wynikiem będzie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d5001-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-178">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5001-179">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-180">Ten konstruktor ustawia <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="d5001-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializationManager : IServiceProvider -&gt; System.ComponentModel.Design.Serialization.DesignerSerializationManager" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializationManager provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d5001-181">
            <see cref="T:System.IServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-181">An <see cref="T:System.IServiceProvider" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-182">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy przy użyciu danego usługodawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-183">Element serializujący na żądanie usługi, które nie mogą być spełnione przez menedżera serializacji w implementacji domyślnej przekaże tych żądań w celu `provider` parametru.</span><span class="sxs-lookup"><span data-stu-id="d5001-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="d5001-184">Ten konstruktor ustawia <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="d5001-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5001-185">
            <paramref name="provider" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-185">
              <paramref name="provider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-186">Pobiera lub ustawia kontener dla tego menedżera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-186">Gets or sets to the container for this serialization manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5001-187">
            <see cref="T:System.ComponentModel.IContainer" /> Do którego Menedżer serializacji dodać składniki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-188">Jeśli kontener istnieje, wszystkie składniki, które są tworzone przez Menedżer serializacji zostanie dodany do kontenera.</span><span class="sxs-lookup"><span data-stu-id="d5001-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="d5001-189">Domyślna implementacja tej właściwości umożliwia wyszukiwanie dostawcy usług dla <xref:System.ComponentModel.Design.IDesignerHost> i użyć kontenera udostępniane przez hosta projektanta, powinien taka istnieje.</span><span class="sxs-lookup"><span data-stu-id="d5001-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="d5001-190">W przeciwnym razie właściwość ta zwróci `null` i nie zostanie dodany do kontenera.</span><span class="sxs-lookup"><span data-stu-id="d5001-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-191">Menedżer serializacji ma aktywnej sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-191">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj&#xA;override this.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="designerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d5001-192">Typ do utworzenia wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-192">The type to create an instance of.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="d5001-193">Parametry Konstruktora typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-193">The parameters of the type's constructor.</span>
          </span>
          <span data-ttu-id="d5001-194">Może to być <see langword="null" /> lub pustą kolekcję, aby wywołać konstruktora domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-194">This can be <see langword="null" /> or an empty collection to invoke the default constructor.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d5001-195">Nazwa do nadania obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-195">A name to give the object.</span>
          </span>
          <span data-ttu-id="d5001-196">Jeśli <see langword="null" />, obiekt nie będzie miał nazwę, chyba że obiekt zostanie dodany do kontenera, a kontener obiektu umożliwia nadanie nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="d5001-197">
            <see langword="true" /> Aby dodać obiekt do kontenera, jeśli obiekt implementuje <see cref="T:System.ComponentModel.IComponent" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-197">
              <see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-198">Tworzy wystąpienie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-198">Creates an instance of a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-199">Nowe wystąpienie typu określonego przez <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-199">A new instance of the type specified by <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-200">Ta metoda jest wywoływana przez serializatory, podczas próby utworzenia wystąpienia typu.</span><span class="sxs-lookup"><span data-stu-id="d5001-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="d5001-201">Domyślna implementacja tworzy nowe wystąpienie tego typu lub może on zwrócić istniejącego wystąpienia w zależności od wartości <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d5001-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="d5001-202"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> Metoda używa odbicia w celu utworzenia wystąpienia i będzie wykonywać pewne ogólne <xref:System.IConvertible> przekształcenia na parametry można znaleźć pasującego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d5001-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="d5001-203">
            <paramref name="type" /> nie ma konstruktora przyjmującego parametry zawarte w <paramref name="arguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-203">
              <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberSignature Language="F#" Value="member this.CreateSession : unit -&gt; IDisposable" Usage="designerSerializationManager.CreateSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5001-204">Tworzy nową sesję serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-204">Creates a new serialization session.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-205">
            <see cref="T:System.IDisposable" /> Reprezentujący nową sesję serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-206">Większość danych w ramach tego menedżera serializacji jest przejściowy i działa tylko dla sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="d5001-207">Po usunięciu sesję serializacji jest uważany za ukończone i ten stan przejściowy jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="d5001-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="d5001-208">Dzięki temu jedno wystąpienie menedżera serializacji, ma być używany do serializacji wieloma drzewami obiektu.</span><span class="sxs-lookup"><span data-stu-id="d5001-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="d5001-209">Niektóre stanu, łącznie z dostawcy usług i żadnego dostawcy niestandardowej serializacji, które zostały dodane do menedżera serializacji zakresu sesji.</span><span class="sxs-lookup"><span data-stu-id="d5001-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-210">Menedżer serializacji jest już w ramach sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-210">The serialization manager is already within a session.</span>
          </span>
          <span data-ttu-id="d5001-211">Ta wersja <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> nie obsługuje sesji jednoczesnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.IList" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-212">Pobiera listę błędów, które wystąpiły podczas serializacji lub deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-212">Gets the list of errors that occurred during serialization or deserialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5001-213">Lista błędów, które wystąpiły podczas serializacji lub deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-213">The list of errors that occurred during serialization or deserialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-214">Lista błędów mogą być odczytane tylko, gdy sesja serializacji jest aktywny.</span><span class="sxs-lookup"><span data-stu-id="d5001-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-215">Ta właściwość została otwarta poza sesją serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-215">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeType : string -&gt; Type" Usage="designerSerializationManager.GetRuntimeType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="d5001-216">Nazwa typu, który można pobrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-216">The name of the type to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-217">Pobiera typ odpowiadający określonej nazwy typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-217">Gets the type corresponding to the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-218">Określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-218">The specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : Type * Type -&gt; obj" Usage="designerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="d5001-219">Typ obiektu, który można pobrać element serializujący.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-219">The type of object for which to retrieve the serializer.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="d5001-220">Typ elementu serializującego do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-220">The type of serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-221">Pobiera serializator dla typu danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-221">Gets the serializer for the given object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-222">Serializator dla <paramref name="objectType" />, lub <see langword="null" />, jeśli nie można odnaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-223">Możesz poprosić o rodzaju serializator, które Twoim zdaniem.</span><span class="sxs-lookup"><span data-stu-id="d5001-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="d5001-224">Ta metoda zwraca `null` Jeśli nie ma żadnego elementu serializującego żądanego typu dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="d5001-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5001-225">
            <paramref name="objectType" /> lub <paramref name="serializerType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-225">
              <paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designerSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="d5001-226">Typ usługi do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-226">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-227">Pobiera żądaną usługę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-227">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-228">Żądana usługa lub <see langword="null" /> Jeśli usługi nie można rozpoznać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-229"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> Metoda zapewnia dostęp do podstawowych kontener lub usługodawcy, która została ustawiona w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="d5001-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="designerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="d5001-230">Nazwa typu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-230">The name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-231">Pobiera żądanego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-231">Gets the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-232">Żądanego typu lub <see langword="null" /> Jeśli nie można rozpoznać typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-233"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> Metoda umożliwia wyszukiwanie dostawcy usług dla <xref:System.ComponentModel.Design.ITypeResolutionService> i jeśli to możliwe, zostanie on delegować do tej usługi do rozpoznania typu.</span><span class="sxs-lookup"><span data-stu-id="d5001-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="d5001-234">Jeśli <xref:System.ComponentModel.Design.ITypeResolutionService> jest niedostępny, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> wywoła <xref:System.Object.GetType%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d5001-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit&#xA;override this.OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit" Usage="designerSerializationManager.OnResolveName e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d5001-235">Element <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-236">Wywołuje <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-237">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="d5001-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d5001-238">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d5001-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d5001-239"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="d5001-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d5001-240">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="d5001-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d5001-241">Podczas zastępowania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> w klasie pochodnej, upewnij się wywołać klasy bazowej <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d5001-241">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionCreated : EventArgs -&gt; unit&#xA;override this.OnSessionCreated : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d5001-242">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-243">Wywołuje <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-244">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="d5001-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d5001-245">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d5001-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d5001-246"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="d5001-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d5001-247">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="d5001-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d5001-248">Podczas zastępowania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> w klasie pochodnej, upewnij się wywołać klasy bazowej <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d5001-248">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionDisposed : EventArgs -&gt; unit&#xA;override this.OnSessionDisposed : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionDisposed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d5001-249">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-250">Wywołuje <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-251">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="d5001-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d5001-252">Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d5001-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d5001-253"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata.</span><span class="sxs-lookup"><span data-stu-id="d5001-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d5001-254">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="d5001-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d5001-255">Podczas zastępowania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> w klasie pochodnej, upewnij się wywołać klasy bazowej <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d5001-255">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveNames : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-256">Pobiera lub ustawia wartość wskazującą czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> metoda powinna sprawdzać, czy obecność imię w kontenerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5001-257">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> będzie przekazywać nazwę jednostki danego składnika; <see langword="false" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> będzie sprawdzać występowanie o podanej nazwie w kontenerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-257">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span>
          </span>
          <span data-ttu-id="d5001-258">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-258">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-259"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> Właściwość określa zachowanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d5001-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="d5001-260">Jeśli `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> będzie przekazywać nazwę jednostki danego składnika.</span><span class="sxs-lookup"><span data-stu-id="d5001-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="d5001-261">Jeśli `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> sprawdza obecność imię w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d5001-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="d5001-262">Jeśli nazwa nie istnieje w kontenerze, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> użyje o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="d5001-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="d5001-263">Jeśli nazwa istnieje w kontenerze, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> będzie przekazać wartości null jako nazwę składnika, podczas dodawania go do kontenera, w tym samym nadając mu nową nazwę.</span><span class="sxs-lookup"><span data-stu-id="d5001-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="d5001-264">Ta druga jest przydatne w przypadku implementowania serializator, zawsze powielającą obiektów, a nie przy założeniu, że te obiekty nie istnieją.</span><span class="sxs-lookup"><span data-stu-id="d5001-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="d5001-265">Wklej polecenia często używają tego typu elementu serializującego.</span><span class="sxs-lookup"><span data-stu-id="d5001-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="d5001-266">Tę właściwość można zmienić tylko wtedy, gdy nie są w sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-267">Tej właściwości została zmieniona z w ramach sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-267">This property was changed from within a serialization session.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-268">Pobiera obiekt, które mają być używane w celu zapewnienia właściwości menedżera serializacji <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5001-269">Obiekt, który powinien być używany do zapewnienia właściwości menedżera serializacji <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-270"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> Właściwości zapewnia sposób nadać Menedżer serializacji zbiór właściwości serializacji, umożliwiających serializatory Przewodnik po ich zachowania.</span><span class="sxs-lookup"><span data-stu-id="d5001-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="d5001-271">Właściwości publiczne tego obiektu będą kontrolowane i zapakowane w nowych deskryptorów właściwości, które mają obiektu docelowego w Menedżer serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecycleInstances : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-272">Pobiera lub ustawia flagę wskazującą czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> zawsze utworzy nowe wystąpienie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-272">Gets or sets a flag indicating whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5001-273">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> zwróci istniejącego wystąpienia; <see langword="false" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> utworzy nowe wystąpienie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-273">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span>
          </span>
          <span data-ttu-id="d5001-274">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-274">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-275">Jeśli <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwość `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody zawsze utworzy nowe wystąpienie typu.</span><span class="sxs-lookup"><span data-stu-id="d5001-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="d5001-276">Jeśli <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> jest `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> najpierw wyszuka nazwę tabeli i kontener dla obiektu o takiej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="d5001-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="d5001-277">Jeśli taki obiekt istnieje i jest tego samego typu <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> zwróci istniejącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d5001-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="d5001-278">Ta druga jest przydatne w przypadku implementowania serializator, która stosuje stan serializacji do istniejącego zestawu obiektów, a nie zawsze tworzenia nowego drzewa.</span><span class="sxs-lookup"><span data-stu-id="d5001-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="d5001-279">**Cofnij** polecenie często używa tego rodzaju serializatora.</span><span class="sxs-lookup"><span data-stu-id="d5001-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="d5001-280">W przypadku których <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwość jest `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> właściwości zostaną dodatkowo zmodyfikować zachowanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> w zależności od typów dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="d5001-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-281">Menedżer serializacji ma aktywnej sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-281">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionCreated : EventHandler " Usage="member this.SessionCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-282">Występuje, gdy zostanie utworzona sesja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-282">Occurs when a session is created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberSignature Language="F#" Value="member this.SessionDisposed : EventHandler " Usage="member this.SessionDisposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-283">Występuje, gdy sesja zostanie usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-283">Occurs when a session is disposed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d5001-284">Dostawca serializacji do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-284">The serialization provider to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-285">Dodaje dostawcę niestandardowej serializacji do menedżera serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-285">Adds a custom serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-286">Gdy <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> metoda służy do żądania dostawca serializacji, serializacji manager wysyła zapytanie do dostawcy niestandardowej serializacji, najpierw przed szuka w metadanych typu odpowiedni element serializujący.</span><span class="sxs-lookup"><span data-stu-id="d5001-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-287">Pobiera Stos kontekstu dla tej sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-287">Gets the context stack for this serialization session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5001-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> która przechowuje dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-289">Stos kontekstu zapewnia obszar przechowywania zdefiniowanych przez użytkownika, zaimplementowane jako stosu.</span><span class="sxs-lookup"><span data-stu-id="d5001-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="d5001-290">Ten obszar pamięci jest wygodny sposób w celu zapewnienia komunikacji serializatory, jak serializacji to proces, zazwyczaj hierarchiczne.</span><span class="sxs-lookup"><span data-stu-id="d5001-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-291">Ta właściwość została otwarta poza sesją serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-291">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d5001-292">Typ danych do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-292">The data type to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="d5001-293">Argumenty do przekazania do konstruktora dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-293">The arguments to pass to the constructor for this type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d5001-294">Nazwa obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-294">The name of the object.</span>
          </span>
          <span data-ttu-id="d5001-295">Ta nazwa może służyć do dostępu do obiektu później za pomocą <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="d5001-296">Jeśli <see langword="null" /> jest przekazywany, obiekt jest nadal tworzona ale nie są dostępne według nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="d5001-297">
            <see langword="true" /> Aby dodać obiekt do kontenera projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-297">
              <see langword="true" /> to add this object to the design container.</span>
          </span>
          <span data-ttu-id="d5001-298">Obiekt musi implementować <see cref="T:System.ComponentModel.IComponent" /> to mieć żadnego efektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-299">Implementuje <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-300">Wystąpienie nowo utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-300">The newly created object instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d5001-301">Nazwa obiektu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-301">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-302">Pobiera wystąpienie obiektu utworzonego o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-302">Retrieves an instance of a created object of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-303">Wystąpienie obiektu o podanej nazwie lub <see langword="null" /> Jeśli można znaleźć żadnego obiektu o tej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5001-304">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-304">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-305">Ta właściwość została otwarta poza sesją serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-305">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d5001-306">Obiekt, do których chcesz pobrać nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-306">The object for which to retrieve the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-307">Pobiera nazwę określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-307">Retrieves a name for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-308">Nazwa obiektu, lub <see langword="null" /> Jeśli obiekt jest bez nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-309">Jeśli <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> metody nie można odnaleźć odpowiedniej nazwy dla `value` parametru, wywołuje <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> zdarzeń przed zwróceniem `null`.</span><span class="sxs-lookup"><span data-stu-id="d5001-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5001-310">
            <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-310">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-311">Ta właściwość została otwarta poza sesją serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-311">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="d5001-312">Typ obiektu do serializatora dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-312">The type of the object to get the serializer for.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="d5001-313">Typ elementu serializującego do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-313">The type of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-314">Pobiera serializator żądanego typu dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-314">Gets a serializer of the requested type for the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-315">Wystąpienie żądanego elementu serializującego lub <see langword="null" /> Jeśli żadnego odpowiedniego elementu serializującego można znaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="d5001-316">W pełni kwalifikowana nazwa typu do załadowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-316">The fully qualified name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-317">Pobiera typ o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-317">Gets a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-318">Wystąpienie typu, lub <see langword="null" /> Jeśli typ nie może zostać załadowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-319">Ta właściwość została otwarta poza sesją serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-319">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-320">Implementuje <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5001-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zawierającego właściwości, które mają być serializowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d5001-322">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> Do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-323">Usuwa dostawcę uprzednio dodanych serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-323">Removes a previously added serialization provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-324"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> Metoda usuwa dostawcę niestandardowej serializacji, który wcześniej został dodany przez wywołanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d5001-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="d5001-325">Obiekt zawierający informacje o błędzie, zazwyczaj typu <see cref="T:System.String" /> lub <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-326">Używane do zgłaszania nieodwracalny błąd serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-326">Used to report a recoverable error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-327">Serializatory mogą być zapisywane bezpiecznie obsługiwać błędy odwracalne przez wywołanie metody <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> metoda informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="d5001-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="d5001-328">Menedżer serializacji może obsługiwać raportowanie listę błędów, po zakończeniu lub może zgłosić wyjątek z tej metody i przerwać proces serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="d5001-329">Serializator powinno być kontynuowane po wywołaniu tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="d5001-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="d5001-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> dodaje `errorInformation` parametr <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d5001-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="d5001-331">Jeśli `errorInformation` jest `null`, nie podjęto żadnej akcji.</span><span class="sxs-lookup"><span data-stu-id="d5001-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-332">Ta właściwość została otwarta poza sesją serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-332">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-333">Występuje, gdy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> w Menedżer serializacji Nazwa tabeli nie można znaleźć określonej nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-333">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="d5001-334">`ResolveName` Zdarzenie jest zgłaszane w przypadku <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> metoda jest wywoływana, ale go nie powiedzie się, można znaleźć określonej nazwy w tabeli nazw Menedżer serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-334">The `ResolveName` event is raised when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method is called, but it fails to find the specified name in the serialization manager's name table.</span></span>

<span data-ttu-id="d5001-335">To zdarzenie umożliwia serializator żądanie — Tworzenie obiektu Serializator nie będzie musiał kolejność tworzenia obiektów przez zależność.</span><span class="sxs-lookup"><span data-stu-id="d5001-335">This event provides a way for a serializer to demand-create an object so the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="d5001-336">Ten delegat jest wyczyszczone natychmiast po serializacji lub deserializacji zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="d5001-336">This delegate is cleared immediately after serialization or deserialization is complete.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-337">Menedżer serializacji nie ma aktywnej sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-337">The serialization manager does not have an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-338">Występuje po zakończeniu serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-338">Occurs when serialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="d5001-339">Zazwyczaj procesem serializacji jest jednowątkowym i powinny być bezstanowe.</span><span class="sxs-lookup"><span data-stu-id="d5001-339">Typically the serialization process is single-threaded and should be stateless.</span></span> <span data-ttu-id="d5001-340">Podczas tych cech nie jest spełniony, <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> zdarzeń może służyć do organizowania procesu.</span><span class="sxs-lookup"><span data-stu-id="d5001-340">When these characteristics are not true, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event can be used to help to organize the process.</span></span> <span data-ttu-id="d5001-341">Element serializujący można śledzić to zdarzenie, aby dowiedzieć się o ukończeniu procesu serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-341">A serializer can track this event to know that the serialization process is complete.</span></span>

<span data-ttu-id="d5001-342">Na przykład czasami serializatora musi zapisywać do innego pliku, na przykład plik zasobu.</span><span class="sxs-lookup"><span data-stu-id="d5001-342">For example, sometimes a serializer needs to write to another file, such as a resource file.</span></span> <span data-ttu-id="d5001-343">W takim przypadku byłoby nieefektywne projektować serializator można zamknąć pliku, gdy zostanie zakończone, ponieważ serializacji grafu obiektów zwykle wymaga kilku serializatory; w związku z tym plik zasobów może być otworzył i zamknął wiele razy.</span><span class="sxs-lookup"><span data-stu-id="d5001-343">In such a case, it would be inefficient to design the serializer to close the file when it is finished because serialization of an object graph generally requires several serializers; therefore, the resource file would be opened and closed many times.</span></span> <span data-ttu-id="d5001-344">Zamiast tego pliku zasobów można uzyskać dostęp przez obiekt, który śledzone <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> zdarzeń i tego obiektu można zamknąć pliku zasobów na koniec serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-344">Instead, the resource file could be accessed through an object that tracked the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and that object could close the resource file at the end of serialization.</span></span>

<span data-ttu-id="d5001-345">Powiązane używany to zdarzenie może służyć do usunięcia tymczasowej usługi zainstalowany w Menedżerze serializacji.</span><span class="sxs-lookup"><span data-stu-id="d5001-345">In a related use, this event can be used to remove a temporary service installed in the serialization manager.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-346">Menedżer serializacji nie ma aktywnej sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-346">The serialization manager does not have an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d5001-347">Obiekt, aby ustawić nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-347">The object to set the name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d5001-348">A <see cref="T:System.String" /> używana jako nazwa obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-348">A <see cref="T:System.String" /> used as the name of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-349">Ustawia nazwę dla określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-349">Sets the name for the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-350"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> Metoda zapewnia sposób, aby ustawić nazwę istniejącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="d5001-350">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="d5001-351">Umożliwia to tworzenia wystąpienia obiektu za pomocą wywołania <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> metody, unikając konieczności <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d5001-351">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5001-352">Jeden lub oba parametry są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-352">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5001-353">Określony przez wystąpienie już obiekt o nazwie, lub <paramref name="name" /> jest już używany przez inny obiekt o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-353">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-354">Ta właściwość została otwarta poza sesją serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-354">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="d5001-355">Obiekt, który określa typ obiektu usługi można pobrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-355">An object that specifies the type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5001-356">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IServiceProvider.GetService(System.Type)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-356">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5001-357">Obiekt usługi tego typu <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-357">A service object of type <paramref name="serviceType" />.</span>
          </span>
          <span data-ttu-id="d5001-358">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-358">-or-</span>
          </span>
          <span data-ttu-id="d5001-359">
            <see langword="null" /> Jeśli nie ma usługi obiektu typu <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-359">
              <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-360">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="d5001-360">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d5001-361">Mogą być używane tylko wtedy, gdy <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> wystąpienia jest rzutowany na <xref:System.IServiceProvider> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d5001-361">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRecycledTypes : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5001-362">Pobiera lub ustawia flagę wskazującą czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> metoda sprawdzi, czy pasujące nazwy odnoszą się do tego samego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-362">Gets or sets a flag indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5001-363">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> sprawdza typy; w przeciwnym razie <see langword="false" /> Jeśli tak nie jest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-363">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span>
          </span>
          <span data-ttu-id="d5001-364">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-364">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5001-365"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> Właściwość modyfikuje zachowanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody podczas <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwość `true`, jak wyjaśniono w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="d5001-365">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="d5001-366">Zachowanie `CreateInstance`</span><span class="sxs-lookup"><span data-stu-id="d5001-366">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="d5001-367">`true` lub `false`</span><span class="sxs-lookup"><span data-stu-id="d5001-367">`true` or `false`</span></span>|<span data-ttu-id="d5001-368">Zawsze twórz nowe wystąpienie określonego typu</span><span class="sxs-lookup"><span data-stu-id="d5001-368">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="d5001-369">Jeśli zgodne wystąpienie znajduje się on jest zwracana, niezależnie od jego typu.</span><span class="sxs-lookup"><span data-stu-id="d5001-369">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="d5001-370">Jeśli zgodne wystąpienie zostanie znaleziony, zwracany jest tylko wtedy, gdy jej typ jest taki sam, jak określono w wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="d5001-370">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="d5001-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> jest przydatne w przypadku morfingu prvku jeden typ obiektu do innego, jeśli mają podobne właściwości, ale współużytkować nie nadrzędnej wspólnej lub interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d5001-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5001-372">Menedżer serializacji ma aktywnej sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5001-372">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>