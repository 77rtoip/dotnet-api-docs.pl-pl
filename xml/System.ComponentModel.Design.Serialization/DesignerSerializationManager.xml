<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4a005e0451f128854a14f9e2a11fbf960f7114e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="72e66-101">Udostępnia implementację elementu <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interfejsu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="72e66-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-102"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Interfejsu została zaprojektowana jako interfejs format niezależny do obiektu, który kontroluje serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="72e66-103">Zasadniczo zapewnia kontekstu i usług do serializatorów, które wykonują rzeczywiste deserializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="72e66-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> pomaga w procesie deserializacji przez śledzenie obiektów.</span><span class="sxs-lookup"><span data-stu-id="72e66-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="72e66-105">Jest to podobna metoda <xref:System.ComponentModel.Design.IDesignerHost> interfejsu: projektantów faktycznie udostępnia interfejs użytkownika (UI), i <xref:System.ComponentModel.Design.IDesignerHost> zapewnia sklejki, umożliwiający projektantom różnych współdziałają ze sobą.</span><span class="sxs-lookup"><span data-stu-id="72e66-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="72e66-106"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasa implementuje <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span><span class="sxs-lookup"><span data-stu-id="72e66-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="72e66-107">Zaprojektowano w celu ogólnego formy deserializacji podobny do środowiska wykonawczego serializatorów, takich jak <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="72e66-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="72e66-108"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klas uzyskuje trzy cele:</span><span class="sxs-lookup"><span data-stu-id="72e66-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="72e66-109">Jest proste, gotowy obiekt, który może służyć do deserializacji różnych formatach.</span><span class="sxs-lookup"><span data-stu-id="72e66-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="72e66-110">Jest ogólny i nie wiązanej do dowolnego określonego formatu.</span><span class="sxs-lookup"><span data-stu-id="72e66-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="72e66-111">Może służyć jednakowo CodeDOM deserializacji, a także deserializacji znaczników.</span><span class="sxs-lookup"><span data-stu-id="72e66-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="72e66-112">Jest rozszerzony i obsługuje serializacji różnych metod, które są używane w scenariuszach, skopiuj i Wklej i Cofnij/Ponów.</span><span class="sxs-lookup"><span data-stu-id="72e66-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="72e66-113">Serializacja czasu projektowania ma następujące różnice serializacji obiektów czasu wykonywania:</span><span class="sxs-lookup"><span data-stu-id="72e66-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="72e66-114">Obiektu wykonującego serializacji jest zazwyczaj oddzielony od obiektów czasu wykonywania, tak, aby logiki czasu projektowania można usunąć ze składnika.</span><span class="sxs-lookup"><span data-stu-id="72e66-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="72e66-115">Schemat serializacji zakłada, zostanie utworzony obiekt pełni zainicjowane, a następnie zmodyfikować za pomocą właściwości i metody wywołań podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="72e66-116">Właściwości obiektu, które mają wartości, które nigdy nie zostały określone w obiekcie (właściwości zawierają wartości domyślnej) nie są serializowane.</span><span class="sxs-lookup"><span data-stu-id="72e66-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="72e66-117">Z drugiej strony strumienia deserializacji może być luk.</span><span class="sxs-lookup"><span data-stu-id="72e66-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="72e66-118">Nacisk jest kładziony na jakość zawartości w ramach strumień serializacji, a nie pełny serializacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="72e66-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="72e66-119">Oznacza to, że jeśli nie istnieje sposób zdefiniowanych szeregowania obiektu, ten obiekt mogą zostać pominięte zamiast generowania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="72e66-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="72e66-120">Mechanizm serializacji może zapewnić heurystyki tutaj zdecydować, które błędy można zignorować, które jest nieodwracalny.</span><span class="sxs-lookup"><span data-stu-id="72e66-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="72e66-121">Strumień serializacji może mieć więcej danych niż jest niezbędna do deserializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="72e66-122">Na przykład serializacji kodu źródłowego, ma łączyć się przy użyciu kodu potrzebne do deserializacji wykresu obiektów kodu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="72e66-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="72e66-123">Ten kod użytkownika należy ignorowane przy deserializacji i zachowane na serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="72e66-124">Z powodu różnic model różnych serializacji ma zastosowanie do serializacji w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="72e66-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="72e66-125">Ten model korzysta z obiektu oddzielne serializator dla każdego typu danych serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="72e66-126">Każdy serializator zapewnia jej małych udziału problem jako całość.</span><span class="sxs-lookup"><span data-stu-id="72e66-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="72e66-127">Te serializatorów są wszystkie skoordynowane za pośrednictwem wspólnego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="72e66-128">Tego menedżera serializacji jest odpowiedzialny za konserwację stanu między tymi różnych serializatorów.</span><span class="sxs-lookup"><span data-stu-id="72e66-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="72e66-129">Na przykład wziąć pod uwagę następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="72e66-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="72e66-130">Wystąpienie tej klasy może korzystać z trzech różnych serializatorów: jeden dla `SampleObject`, jeden dla ciągów i drugi dla liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="72e66-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="72e66-131">Serializator dla `SampleObject` jest nazywany serializator głównego, ponieważ `SampleObject` jest głównym wykresu serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="72e66-132">Można również utworzyć bardziej złożoną wykresów obiektów.</span><span class="sxs-lookup"><span data-stu-id="72e66-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="72e66-133">Rozważmy na przykład, co się stanie, jeśli `SampleObject` zostały zmienione w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="72e66-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="72e66-134">Dzięki temu `SampleObject` mieć obiektu podrzędnego, który jest inny wystąpienia samej siebie.</span><span class="sxs-lookup"><span data-stu-id="72e66-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="72e66-135">Poniższy kod wypełnia wykres obiektu:</span><span class="sxs-lookup"><span data-stu-id="72e66-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="72e66-136">Podczas `root` jest serializowana, będzie cztery serializatorów używane: serializator jednego katalogu głównego, co serializatora dla obiekt podrzędny `SampleObject`, jeden serializatora dla `int`i jedną serializatora dla `string`.</span><span class="sxs-lookup"><span data-stu-id="72e66-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="72e66-137">Serializatorów są buforowane na podstawie typu, dlatego nie ma potrzeby tworzenia serializator dla każdego wystąpienia `SampleObject`.</span><span class="sxs-lookup"><span data-stu-id="72e66-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="72e66-138"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> Klasy jest oparta na pomysł sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="72e66-139">Sesja zachowuje swój stan, które są dostępne dla różnych serializatorów.</span><span class="sxs-lookup"><span data-stu-id="72e66-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="72e66-140">Jeśli sesja zostanie usunięty, ten stan zostanie zniszczony.</span><span class="sxs-lookup"><span data-stu-id="72e66-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="72e66-141">Pomaga to zapewnić serializatorów pozostają w dużej mierze bezstanowych, czy pozwala wyczyścić serializatorów, które są są uszkodzone.</span><span class="sxs-lookup"><span data-stu-id="72e66-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="72e66-142">W poniższych tabelach opisano sposób zarządzania stanu w i między sesjami.</span><span class="sxs-lookup"><span data-stu-id="72e66-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="72e66-143">Stan globalny</span><span class="sxs-lookup"><span data-stu-id="72e66-143">Global State</span></span>  
 <span data-ttu-id="72e66-144">Ten stan jest właścicielem obiektu menedżera serializacji, ale jest niezależna od bieżącej sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="72e66-145">Obiekt</span><span class="sxs-lookup"><span data-stu-id="72e66-145">Object</span></span>|<span data-ttu-id="72e66-146">Użycie</span><span class="sxs-lookup"><span data-stu-id="72e66-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="72e66-147">Serializacja dostawców</span><span class="sxs-lookup"><span data-stu-id="72e66-147">Serialization providers</span></span>|<span data-ttu-id="72e66-148">Obiekty można dodać siebie jako dostawcy niestandardowej serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="72e66-149">Ponieważ te dostawcy są używane do lokalizowania serializatorów, ich outlive sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="72e66-150">Stan należące do sesji</span><span class="sxs-lookup"><span data-stu-id="72e66-150">Session-Owned State</span></span>  
 <span data-ttu-id="72e66-151">Ten stan jest własnością sesji i zostanie zniszczony podczas sesji zostanie zniszczony.</span><span class="sxs-lookup"><span data-stu-id="72e66-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="72e66-152">W związku z tym uzyskiwanie dostępu do żadnych właściwości ani metod sterującymi ten stan spowoduje zgłoszenie wyjątku, jeśli menedżera serializacji nie jest aktywna sesja.</span><span class="sxs-lookup"><span data-stu-id="72e66-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="72e66-153">Obiekt</span><span class="sxs-lookup"><span data-stu-id="72e66-153">Object</span></span>|<span data-ttu-id="72e66-154">Użycie</span><span class="sxs-lookup"><span data-stu-id="72e66-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="72e66-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Zdarzenia</span><span class="sxs-lookup"><span data-stu-id="72e66-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="72e66-156"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Zdarzeń jest dołączony przez serializator zapewnienie dodatkowych rozpoznawania nazw.</span><span class="sxs-lookup"><span data-stu-id="72e66-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="72e66-157">Wszystkie programy obsługi są odłączone od tego zdarzenia, gdy zakończenie sesji.</span><span class="sxs-lookup"><span data-stu-id="72e66-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="72e66-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Zdarzenia</span><span class="sxs-lookup"><span data-stu-id="72e66-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="72e66-159"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Zdarzenie jest wywoływane bezpośrednio przed zamknięciem sesji zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="72e66-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="72e66-160">Następnie wszystkie programy obsługi są odłączone od tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="72e66-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="72e66-161">Nazwa tabeli</span><span class="sxs-lookup"><span data-stu-id="72e66-161">Name table</span></span>|<span data-ttu-id="72e66-162">Tego menedżera serializacji przechowuje tabelę, która mapuje między obiektami i ich nazw.</span><span class="sxs-lookup"><span data-stu-id="72e66-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="72e66-163">Serializatorów może nadaj nazwę obiektów łatwo zidentyfikować.</span><span class="sxs-lookup"><span data-stu-id="72e66-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="72e66-164">Ta nazwa tabela jest czyszczona, gdy zakończenie sesji.</span><span class="sxs-lookup"><span data-stu-id="72e66-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="72e66-165">Serializator pamięci podręcznej</span><span class="sxs-lookup"><span data-stu-id="72e66-165">Serializer cache</span></span>|<span data-ttu-id="72e66-166">Tego menedżera serializacji obsługuje pamięć podręczną serializatorów, który został poproszony o podanie.</span><span class="sxs-lookup"><span data-stu-id="72e66-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="72e66-167">Ta pamięć podręczna jest wyczyszczone, gdy zakończenie sesji.</span><span class="sxs-lookup"><span data-stu-id="72e66-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="72e66-168">Publicznego <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> bezpiecznie można wywołać metody w dowolnym momencie, ale jego wartość jest buforowana tylko wtedy, gdy jest wywoływana z sesji.</span><span class="sxs-lookup"><span data-stu-id="72e66-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="72e66-169">Stos kontekstu</span><span class="sxs-lookup"><span data-stu-id="72e66-169">Context stack</span></span>|<span data-ttu-id="72e66-170">Menedżer serializacji zapisuje obiekt o nazwie Stos kontekstu, które można otworzyć z <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="72e66-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="72e66-171">Serializatorów można użyć tego stosu do przechowywania dodatkowych informacji, która jest dostępna dla innych serializatorów.</span><span class="sxs-lookup"><span data-stu-id="72e66-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="72e66-172">Na przykład element serializujący, która wykonuje serializację wartości właściwości mogą przyczynić się nazwę właściwości na stosie serializacji przed żądaniem wartość do zserializowania.</span><span class="sxs-lookup"><span data-stu-id="72e66-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="72e66-173">Ten stos jest wyczyszczone, gdy sesja zostanie zakończona.</span><span class="sxs-lookup"><span data-stu-id="72e66-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="72e66-174">Lista błędów</span><span class="sxs-lookup"><span data-stu-id="72e66-174">Error list</span></span>|<span data-ttu-id="72e66-175">Tego menedżera serializacji przechowuje listę błędów, które wystąpiły podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="72e66-176">Tej listy, który jest dostępny za pośrednictwem <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> właściwości, zostanie wyczyszczona po sesja zostanie zakończona.</span><span class="sxs-lookup"><span data-stu-id="72e66-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="72e66-177">Uzyskiwanie dostępu do <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> właściwości między sesjami spowodują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="72e66-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-178">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e66-179">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-180">Ten konstruktor ustawia <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="72e66-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="72e66-181">
            <see cref="T:System.IServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-181">An <see cref="T:System.IServiceProvider" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-182">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> klasy z danego usługodawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-183">Jeśli element serializujący żądania usług, które nie mogą być spełnione przez tego menedżera serializacji, domyślna implementacja będzie przesyłać tych żądań w celu `provider` parametru.</span><span class="sxs-lookup"><span data-stu-id="72e66-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="72e66-184">Ten konstruktor ustawia <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="72e66-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e66-185">
            <paramref name="provider" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-185">
              <paramref name="provider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-186">Pobiera lub ustawia kontener dla tego menedżera serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-186">Gets or sets to the container for this serialization manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e66-187">
            <see cref="T:System.ComponentModel.IContainer" /> Do którego dodać składniki menedżera serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-188">Jeśli istnieje kontener, wszystkie składniki, które są tworzone przez tego menedżera serializacji zostaną dodane do kontenera.</span><span class="sxs-lookup"><span data-stu-id="72e66-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="72e66-189">Domyślna implementacja tej właściwości umożliwia wyszukiwanie dostawcy usług dla <xref:System.ComponentModel.Design.IDesignerHost> i użyć dostarczonych przez projektanta hosta kontenera, powinien taka istnieje.</span><span class="sxs-lookup"><span data-stu-id="72e66-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="72e66-190">W przeciwnym razie wartość tej właściwości, którą będzie zwracać `null` i żadne składniki nie zostanie dodany do kontenera.</span><span class="sxs-lookup"><span data-stu-id="72e66-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-191">Tego menedżera serializacji ma już aktywna sesja serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-191">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="72e66-192">Typ do utworzenia wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-192">The type to create an instance of.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="72e66-193">Parametry Konstruktora typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-193">The parameters of the type’s constructor.</span>
          </span>
          <span data-ttu-id="72e66-194">Może to być <see langword="null" /> lub pustą kolekcję do wywołania konstruktora domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-194">This can be <see langword="null" /> or an empty collection to invoke the default constructor.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="72e66-195">Nazwa Aby obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-195">A name to give the object.</span>
          </span>
          <span data-ttu-id="72e66-196">Jeśli <see langword="null" />, obiekt nie ma nazwy, chyba że obiekt jest dodany do kontenera i kontener nadaje obiektu nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="72e66-197">
            <see langword="true" /> Aby dodać obiekt do kontenera, jeśli obiekt implementuje <see cref="T:System.ComponentModel.IComponent" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-197">
              <see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-198">Tworzy wystąpienie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-198">Creates an instance of a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-199">Nowe wystąpienie klasy typu określonego przez <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-199">A new instance of the type specified by <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-200">Ta metoda jest wywoływana przez serializatorów po podjęciu próby utworzenia wystąpienia typu.</span><span class="sxs-lookup"><span data-stu-id="72e66-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="72e66-201">Domyślna implementacja tworzy nowe wystąpienie typu lub może zwrócić istniejącego wystąpienia w zależności od wartości <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> i <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="72e66-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="72e66-202"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> Metoda odbicia do tworzenia wystąpień i będzie wykonywać pewne ogólne <xref:System.IConvertible> przekształcenia na parametry można znaleźć zgodnego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="72e66-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="72e66-203">
            <paramref name="type" /> nie ma konstruktora, który przyjmuje parametry zawarte w <paramref name="arguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-203">
              <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72e66-204">Tworzy nową sesję serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-204">Creates a new serialization session.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-205">
            <see cref="T:System.IDisposable" /> Reprezentujący nowej sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-206">Większość danych w ramach tego menedżera serializacji jest przejściowy i działa tylko dla sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="72e66-207">Jeśli sesja zostanie usunięty, serializacji jest traktowany jako ukończone, a ten przejściowy stan jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="72e66-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="72e66-208">Umożliwia to pojedyncze wystąpienie menedżera serializacji ma być używany do serializacji wieloma drzewami obiektu.</span><span class="sxs-lookup"><span data-stu-id="72e66-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="72e66-209">Niektóre stanu, w tym dostawcy usług i wszystkich dostawców niestandardowej serializacji, które zostały dodane do tego menedżera serializacji span sesji.</span><span class="sxs-lookup"><span data-stu-id="72e66-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-210">Tego menedżera serializacji jest już w ramach sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-210">The serialization manager is already within a session.</span>
          </span>
          <span data-ttu-id="72e66-211">Ta wersja <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> nie obsługuje jednoczesnych sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-212">Pobiera listę błędów, które wystąpiły podczas serializacji lub deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-212">Gets the list of errors that occurred during serialization or deserialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e66-213">Lista błędów, które wystąpiły podczas serializacji lub deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-213">The list of errors that occurred during serialization or deserialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-214">Lista błędów mogą odczytywać tylko wtedy, gdy jest aktywna sesja serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-215">Ta właściwość uzyskano poza sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-215">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="72e66-216">Nazwa typu w celu pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-216">The name of the type to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-217">Pobiera typ odpowiadający określonej nazwy typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-217">Gets the type corresponding to the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-218">Określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-218">The specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="72e66-219">Typ obiektu, który można pobrać serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-219">The type of object for which to retrieve the serializer.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="72e66-220">Typ serializatora do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-220">The type of serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-221">Pobiera serializator dla typu danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-221">Gets the serializer for the given object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-222">Serializator dla <paramref name="objectType" />, lub <see langword="null" />, jeśli nie można odnaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-223">Typ elementu serializującego, którą chcesz może wysłać żądanie.</span><span class="sxs-lookup"><span data-stu-id="72e66-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="72e66-224">Ta metoda zwraca `null` Jeśli żadnego elementu serializującego żądanego typu dla typu określony obiekt nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="72e66-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e66-225">
            <paramref name="objectType" /> lub <paramref name="serializerType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-225">
              <paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="72e66-226">Typ usługi do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-226">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-227">Pobiera żądaną usługę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-227">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-228">Żądana usługa lub <see langword="null" /> Jeśli usługi nie można rozpoznać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-229"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> Metoda zapewnia dostęp do kontenera podstawowej lub dostawcy usług, która została ustawiona w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="72e66-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="72e66-230">Nazwa typu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-230">The name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-231">Pobiera żądanego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-231">Gets the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-232">Żądany typ lub <see langword="null" /> , jeśli nie można rozpoznać typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-233"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> Metoda umożliwia wyszukiwanie dostawcy usług dla <xref:System.ComponentModel.Design.ITypeResolutionService> i, jeśli jest dostępny, zostanie on delegować do tej usługi można rozpoznać typu.</span><span class="sxs-lookup"><span data-stu-id="72e66-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="72e66-234">Jeśli <xref:System.ComponentModel.Design.ITypeResolutionService> jest niedostępny, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> wywoła <xref:System.Object.GetType%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="72e66-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e66-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-236">Zgłasza <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-237">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="72e66-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e66-238">Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="72e66-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e66-239"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata.</span><span class="sxs-lookup"><span data-stu-id="72e66-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e66-240">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="72e66-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="72e66-241">W przypadku przesłaniania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="72e66-241">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e66-242">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-243">Zgłasza <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-244">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="72e66-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e66-245">Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="72e66-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e66-246"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata.</span><span class="sxs-lookup"><span data-stu-id="72e66-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e66-247">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="72e66-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="72e66-248">W przypadku przesłaniania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="72e66-248">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="72e66-249">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-250">Zgłasza <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-251">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="72e66-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72e66-252">Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="72e66-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="72e66-253"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata.</span><span class="sxs-lookup"><span data-stu-id="72e66-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="72e66-254">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="72e66-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="72e66-255">W przypadku przesłaniania <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="72e66-255">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-256">Pobiera lub ustawia wartość wskazującą czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> metody należy sprawdzić obecność o podanej nazwie w kontenerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e66-257">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> przekazuje nazwę danego składnika; <see langword="false" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> sprawdza obecność o podanej nazwie w kontenerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-257">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span>
          </span>
          <span data-ttu-id="72e66-258">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-258">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-259"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> Właściwość określa zachowanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="72e66-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="72e66-260">Jeśli `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> przekazywać nazwy danego składnika.</span><span class="sxs-lookup"><span data-stu-id="72e66-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="72e66-261">Jeśli `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> sprawdza obecność o podanej nazwie w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="72e66-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="72e66-262">Jeśli nazwa nie istnieje w kontenerze, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> użyje o podanej nazwie.</span><span class="sxs-lookup"><span data-stu-id="72e66-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="72e66-263">Jeśli nazwa istnieje w kontenerze, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> przekazuje wartość null jako nazwa składnika podczas dodawania go do tego kontenera, w tym samym nadanie mu nazwy nowego.</span><span class="sxs-lookup"><span data-stu-id="72e66-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="72e66-264">Ta druga jest przydatne w przypadku implementowania serializatora zawsze powielają obiektów, a nie przy założeniu, że te obiekty nie istnieją.</span><span class="sxs-lookup"><span data-stu-id="72e66-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="72e66-265">Wklej polecenia często używają tego typu serializatora.</span><span class="sxs-lookup"><span data-stu-id="72e66-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="72e66-266">Tę właściwość można zmienić tylko, jeśli nie pracujesz w sesji serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-267">Ta właściwość została zmieniona z sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-267">This property was changed from within a serialization session.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-268">Pobiera obiekt, które mają być używane w celu zapewnienia właściwości do tego menedżera serializacji <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e66-269">Obiekt, które mają być używane w celu zapewnienia właściwości do tego menedżera serializacji <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-270"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> Właściwości umożliwia zapewniają zestaw właściwości serializacji, które serializatorów służy do przeprowadzenia ich zachowanie tego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="72e66-271">Właściwości publiczne tego obiektu zostanie inspekcji i ujęte w nowych deskryptorów właściwości mających obiektu docelowego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-272">Pobiera lub ustawia flagę wskazującą czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> zawsze spowoduje utworzenie nowego wystąpienia typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-272">Gets or sets a flag indicating whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e66-273">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> zwróci istniejącego wystąpienia; <see langword="false" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> utworzy nowe wystąpienie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-273">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span>
          </span>
          <span data-ttu-id="72e66-274">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-274">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-275">Jeśli <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwość jest `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody zawsze spowoduje utworzenie nowego wystąpienia typu.</span><span class="sxs-lookup"><span data-stu-id="72e66-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="72e66-276">Jeśli <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> jest `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> zostanie najpierw wyszukać nazwę tabeli i kontener dla obiekt o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="72e66-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="72e66-277">Jeśli taki obiekt istnieje i jest tego samego typu <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> zwróci istniejącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="72e66-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="72e66-278">Ta druga jest przydatne w przypadku implementowania serializatora stosowanym serializacji stanu do istniejącego zestawu obiektów, a nie zawsze Tworzenie nowego drzewa.</span><span class="sxs-lookup"><span data-stu-id="72e66-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="72e66-279">**Cofnij** polecenie często używa tego typu serializatora.</span><span class="sxs-lookup"><span data-stu-id="72e66-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="72e66-280">W przypadku gdy <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwość jest `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> właściwości będzie dalsze modyfikowanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> w zależności od typów obiektów.</span><span class="sxs-lookup"><span data-stu-id="72e66-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-281">Tego menedżera serializacji ma już aktywna sesja serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-281">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-282">Występuje, gdy jest tworzony sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-282">Occurs when a session is created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-283">Występuje, gdy sesja zostanie usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-283">Occurs when a session is disposed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="72e66-284">Dostawca serializacji do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-284">The serialization provider to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-285">Dodaje dostawcę niestandardowej serializacji tego menedżera serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-285">Adds a custom serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-286">Gdy <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> metoda służy do żądania dostawca serializacji, dostawców niestandardowych serializacji najpierw przed wyszukiwanie w metadanych typu odpowiedni serializator wysyła zapytanie do tego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-287">Pobiera Stos kontekstu dla tej sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-287">Gets the context stack for this serialization session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e66-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> która przechowuje dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-289">Stos kontekstu zawiera obszar przechowywania zdefiniowane przez użytkownika, zaimplementowane jako stosu.</span><span class="sxs-lookup"><span data-stu-id="72e66-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="72e66-290">Ten obszar pamięci jest wygodnym sposobem na zapewniają komunikację między serializatorów, serializacji jest zazwyczaj hierarchiczna procesu.</span><span class="sxs-lookup"><span data-stu-id="72e66-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-291">Ta właściwość uzyskano poza sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-291">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="72e66-292">Typ danych do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-292">The data type to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="72e66-293">Argumenty do przekazania do konstruktora dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-293">The arguments to pass to the constructor for this type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="72e66-294">Nazwa obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-294">The name of the object.</span>
          </span>
          <span data-ttu-id="72e66-295">Ta nazwa może być używana do dostępu do obiektu później za pomocą <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="72e66-296">Jeśli <see langword="null" /> jest przekazany, nadal jest tworzony obiekt ale nazwa nie może uzyskać dostępu do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="72e66-297">
            <see langword="true" /> Aby dodać ten obiekt do kontenera projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-297">
              <see langword="true" /> to add this object to the design container.</span>
          </span>
          <span data-ttu-id="72e66-298">Obiekt musi implementować <see cref="T:System.ComponentModel.IComponent" /> w tym celu ma żadnego efektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-299">Implementuje <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-300">Wystąpienie nowo utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-300">The newly created object instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="72e66-301">Nazwa obiektu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-301">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-302">Pobiera wystąpienie utworzonego obiektu o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-302">Retrieves an instance of a created object of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-303">Wystąpienie obiektu o podanej nazwie lub <see langword="null" /> w przypadku nieodnalezienia nie obiektu o takiej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e66-304">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-304">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-305">Ta właściwość uzyskano poza sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-305">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="72e66-306">Obiekt, do których chcesz pobrać nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-306">The object for which to retrieve the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-307">Pobiera nazwę określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-307">Retrieves a name for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-308">Nazwa obiektu, lub <see langword="null" /> Jeśli obiekt jest bez nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-309">Jeśli <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> metoda nie może znaleźć odpowiedniego nazwę `value` parametru zgłasza <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> zdarzeń przed zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="72e66-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e66-310">
            <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-310">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-311">Ta właściwość uzyskano poza sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-311">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="72e66-312">Typ obiektu do pobrania elementu serializującego dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-312">The type of the object to get the serializer for.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="72e66-313">Typ serializatora do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-313">The type of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-314">Pobiera serializator żądanego typu dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-314">Gets a serializer of the requested type for the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-315">Wystąpienia żądanego serializator lub <see langword="null" /> Jeśli nie odpowiedni serializator może znajdować się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="72e66-316">Pełna nazwa typu w celu załadowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-316">The fully qualified name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-317">Pobiera typ określonej nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-317">Gets a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-318">Wystąpienie tego typu, lub <see langword="null" /> Jeśli typ nie może zostać załadowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-319">Ta właściwość uzyskano poza sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-319">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-320">Implementuje <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e66-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zawierającego właściwości, aby można było serializować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="72e66-322">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> Do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-323">Usuwa dostawcę uprzednio dodanych serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-323">Removes a previously added serialization provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-324"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> Metoda usuwa dostawcy niestandardowej serializacji, która wcześniej została dodana przez wywołanie do <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="72e66-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="72e66-325">Obiekt zawierający informacje o błędzie, zazwyczaj typu <see cref="T:System.String" /> lub <see cref="T:System.Exception" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-326">Używane do zgłaszania nieodwracalny błąd w serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-326">Used to report a recoverable error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-327">Można zapisać serializatorów bezpiecznie obsłużyć błędy nieodwracalny, wywołując <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> metody informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="72e66-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="72e66-328">Tego menedżera serializacji może obsługiwać raportowania listę błędów, po jego ukończeniu lub może zgłosić wyjątek od tej metody i przerwania procesu serializacji.</span><span class="sxs-lookup"><span data-stu-id="72e66-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="72e66-329">Serializator powinno być kontynuowane po wywołaniu tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="72e66-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="72e66-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> dodaje `errorInformation` parametr <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="72e66-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="72e66-331">Jeśli `errorInformation` jest `null`, nie podjęto żadnej akcji.</span><span class="sxs-lookup"><span data-stu-id="72e66-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-332">Ta właściwość uzyskano poza sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-332">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="72e66-333">Obiekt, który można ustawić nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-333">The object to set the name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="72e66-334">A <see cref="T:System.String" /> używana jako nazwa obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-334">A <see cref="T:System.String" /> used as the name of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-335">Ustawia nazwę dla określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-335">Sets the name for the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-336"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> — Metoda umożliwia określenie nazwy obiektu.</span><span class="sxs-lookup"><span data-stu-id="72e66-336">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="72e66-337">Dzięki temu tworzenia wystąpienia obiektu poprzez wywołanie <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> metoda umożliwia uniknięcie przeciążenia <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="72e66-337">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72e66-338">Jeden lub oba parametry są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-338">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72e66-339">Obiekt określony przez wystąpienie już ma nazwę, lub <paramref name="name" /> jest już używany przez inny obiekt o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-339">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-340">Ta właściwość uzyskano poza sesji serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-340">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="72e66-341">Obiekt, który określa typ obiektu usługi do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-341">An object that specifies the type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72e66-342">Opis tego elementu członkowskiego, zobacz <see cref="M:System.IServiceProvider.GetService(System.Type)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-342">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72e66-343">Obiekt usługi typu <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-343">A service object of type <paramref name="serviceType" />.</span>
          </span>
          <span data-ttu-id="72e66-344">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-344">-or-</span>
          </span>
          <span data-ttu-id="72e66-345">
            <see langword="null" /> Jeśli nie ma żadnego obiektu usługi typu <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-345">
              <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-346">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="72e66-346">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72e66-347">Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> wystąpienia jest rzutowane na <xref:System.IServiceProvider> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="72e66-347">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72e66-348">Pobiera lub ustawia flagę wskazującą czy <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> metody zweryfikuje, że nazwy pasujące odnoszą się do tego samego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-348">Gets or sets a flag indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72e66-349">
            <see langword="true" /> Jeśli <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> sprawdza typy; w przeciwnym razie <see langword="false" /> jeśli jej nie ma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-349">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span>
          </span>
          <span data-ttu-id="72e66-350">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-350">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72e66-351"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> Właściwości modyfikację działania <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> metody podczas <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> właściwość jest `true`, jak wyjaśniono w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="72e66-351">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="72e66-352">Zachowanie `CreateInstance`</span><span class="sxs-lookup"><span data-stu-id="72e66-352">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="72e66-353">`true` lub `false`</span><span class="sxs-lookup"><span data-stu-id="72e66-353">`true` or `false`</span></span>|<span data-ttu-id="72e66-354">Zawsze twórz nowe wystąpienie określonego typu</span><span class="sxs-lookup"><span data-stu-id="72e66-354">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="72e66-355">Jeśli znaleziono zgodnego wystąpienia, jest zwracany, niezależnie od jego typu.</span><span class="sxs-lookup"><span data-stu-id="72e66-355">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="72e66-356">Jeśli zostanie znaleziony zgodnego wystąpienia, jest zwracany tylko wtedy, gdy jej typ jest taka sama jak określona w wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="72e66-356">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="72e66-357"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> jest przydatne w przypadku przekształcania właściwości jeden typ obiektu do innego, jeśli mają podobne właściwości, ale udostępniać nie Wspólnemu elementowi nadrzędnemu lub interfejs.</span><span class="sxs-lookup"><span data-stu-id="72e66-357"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="72e66-358">Tego menedżera serializacji ma już aktywna sesja serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72e66-358">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>