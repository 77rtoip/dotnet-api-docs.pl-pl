<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4438738ad95585cb9d89ec4584de592177ebe65" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69350190" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1ec69-101">Udostępnia interfejs, który może rozciągnąć program ładujący projektanta w celu obsługi asynchronicznego ładowania składników zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="1ec69-101">Provides an interface that can extend a designer loader to support asynchronous loading of external components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec69-102">Obiekt <xref:System.ComponentModel.Design.Serialization.DesignerLoader> może zaimplementować ten interfejs do zarządzania ładowaniem projektanta, który obejmuje składniki zewnętrzne.</span><span class="sxs-lookup"><span data-stu-id="1ec69-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components.</span></span> <span data-ttu-id="1ec69-103">Ten interfejs umożliwia również składnikom zewnętrznym inicjowanie ponownego ładowania powierzchni projektowej przez wywołanie <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>metody.</span><span class="sxs-lookup"><span data-stu-id="1ec69-103">This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span></span> <span data-ttu-id="1ec69-104">Moduł ładujący projektanta nie musi implementować tego interfejsu, jeśli nie wymaga obsługi asynchronicznego ładowania.</span><span class="sxs-lookup"><span data-stu-id="1ec69-104">A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</span></span>  
  
 <span data-ttu-id="1ec69-105">Ładowanie projektanta przy użyciu niestandardowej implementacji <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> może wystąpić na wiele sposobów.</span><span class="sxs-lookup"><span data-stu-id="1ec69-105">Designer loading using a custom implementation of the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> can occur in a variety of ways.</span></span> <span data-ttu-id="1ec69-106">Czasami składniki zewnętrzne są wykorzystywane w procesie ładowania.</span><span class="sxs-lookup"><span data-stu-id="1ec69-106">Sometimes external components are involved in the loading process.</span></span> <span data-ttu-id="1ec69-107">Aby ułatwić ładowanie z zależnościami zewnętrznymi, interfejs usługi ładującej projektanta udostępnia mechanizm, który określa, kiedy ładowanie zostało zakończone, i umożliwia każdej części ładowania zasygnalizowanie, że została ukończona.</span><span class="sxs-lookup"><span data-stu-id="1ec69-107">To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</span></span> <span data-ttu-id="1ec69-108"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Zwykle określa czas ładowania, testując licznik, który śledzi liczbę pozostałych zależności ładowania.</span><span class="sxs-lookup"><span data-stu-id="1ec69-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</span></span> <span data-ttu-id="1ec69-109">Gdy każda część zakończenia <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> ładowania jest wywoływana, a usługa zmniejsza licznik.</span><span class="sxs-lookup"><span data-stu-id="1ec69-109">When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter.</span></span> <span data-ttu-id="1ec69-110">Aby ustawić liczbę zależnych procesów ładowania, należy wywołać <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jeden raz dla każdego procesu ładowania, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> który wywołuje się po zakończeniu ładowania.</span><span class="sxs-lookup"><span data-stu-id="1ec69-110">To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete.</span></span> <span data-ttu-id="1ec69-111">Po zakończeniu ostatniego ładowania usługa wywołuje <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> hosta modułu ładującego.</span><span class="sxs-lookup"><span data-stu-id="1ec69-111">When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ec69-112">Rejestruje składnik zewnętrzny jako część procesu ładowania zarządzanego przez ten interfejs.</span><span class="sxs-lookup"><span data-stu-id="1ec69-112">Registers an external component as part of the load process managed by this interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec69-113">Wywoływanie <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jednokrotne dla każdego obiektu zewnętrznego biorącego udział w procesie ładowania.</span><span class="sxs-lookup"><span data-stu-id="1ec69-113">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each external object participating in the load process.</span></span> <span data-ttu-id="1ec69-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>jest wywoływana, gdy działa proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="1ec69-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="1ec69-115"><see langword="true" />Jeśli ładowanie projektanta zakończyło się pomyślnie; <see langword="false" /> Jeśli błędy uniemożliwiły zakończenie ładowania.</span><span class="sxs-lookup"><span data-stu-id="1ec69-115"><see langword="true" /> if the load of the designer is successful; <see langword="false" /> if errors prevented the load from finishing.</span></span></param>
        <param name="errorCollection"><span data-ttu-id="1ec69-116">Kolekcja błędów, które wystąpiły podczas ładowania (jeśli istnieją).</span><span class="sxs-lookup"><span data-stu-id="1ec69-116">A collection of errors that occurred during the load, if any.</span></span> <span data-ttu-id="1ec69-117">Jeśli nie wystąpiły żadne błędy, należy przekazać pustą kolekcję lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1ec69-117">If no errors occurred, pass either an empty collection or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1ec69-118">Sygnalizuje, że obciążenie zależne zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="1ec69-118">Signals that a dependent load has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec69-119">Ta metoda jest wywoływana w celu sygnalizowania, że operacja ładowania zależnego została ukończona.</span><span class="sxs-lookup"><span data-stu-id="1ec69-119">This method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="1ec69-120">Wywołaj <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jeden raz dla każdego procesu, który został <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>zarejestrowany przez wywołanie, które już zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="1ec69-120">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.</span></span>  
  
 <span data-ttu-id="1ec69-121">Jeśli obciążenie zależne zakończy się powodzeniem, wywołujący `successful` Ustawia parametr `true` do i przekazuje `errorCollection` pustą kolekcję lub `null` do parametru.</span><span class="sxs-lookup"><span data-stu-id="1ec69-121">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="1ec69-122">Jeśli obciążenie zależne napotyka błędy, obiekt wywołujący ustawia `successful` parametr na `false` i przekazuje kolekcję wyjątków wskazujących przyczynę lub `errorCollection` przyczyny niepowodzenia parametru.</span><span class="sxs-lookup"><span data-stu-id="1ec69-122">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ec69-123">Ponownie ładuje Dokument projektowy.</span><span class="sxs-lookup"><span data-stu-id="1ec69-123">Reloads the design document.</span></span></summary>
        <returns><span data-ttu-id="1ec69-124"><see langword="true" />Jeśli żądanie ponownego załadowania zostało zaakceptowane <see langword="false" /> lub moduł ładujący nie zezwala na ponowne załadowanie.</span><span class="sxs-lookup"><span data-stu-id="1ec69-124"><see langword="true" /> if the reload request is accepted, or <see langword="false" /> if the loader does not allow the reload.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec69-125">Każdy obiekt może wywołać tę metodę, aby zażądać załadowania przez moduł ładujący dokumentu projektu.</span><span class="sxs-lookup"><span data-stu-id="1ec69-125">Any object can call this method to request that the loader reload the design document.</span></span> <span data-ttu-id="1ec69-126">Jeśli moduł ładujący obsługuje ponowne ładowanie i jest zgodny z ponownym ładowaniem, program ładujący `true`projektanta może zwrócić.</span><span class="sxs-lookup"><span data-stu-id="1ec69-126">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="1ec69-127">W przeciwnym razie zwraca `false`, wskazując, że ponowne załadowanie nie nastąpi.</span><span class="sxs-lookup"><span data-stu-id="1ec69-127">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="1ec69-128">Obiekty wywołujące nie mogą polegać na ponownym załadowaniu. program ładujący projektanta może zaplanować ten czas od pewnego czasu lub może próbować ponownie załadować.</span><span class="sxs-lookup"><span data-stu-id="1ec69-128">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</span></span>  
  
 <span data-ttu-id="1ec69-129">Obiekt wywołujący może wyświetlić komunikat dla użytkownika, jeśli nie można ponownie załadować projektanta.</span><span class="sxs-lookup"><span data-stu-id="1ec69-129">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
