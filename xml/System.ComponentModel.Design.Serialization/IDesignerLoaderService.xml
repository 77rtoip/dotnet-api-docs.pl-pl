<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91be6fb648bf803bf38fa96e6ee194581f86547f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37698562" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs, który można rozszerzyć program ładujący projektanta obsługuje asynchroniczne ładowanie składników zewnętrznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element <xref:System.ComponentModel.Design.Serialization.DesignerLoader> można zaimplementować ten interfejs do zarządzania ładowania projektanta, która obejmuje składniki zewnętrzne. Ten interfejs umożliwia także składników zewnętrznych zainicjować ponownie załadować powierzchni projektowej, wywołując <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>. Program ładujący projektanta nie trzeba implementować ten interfejs, jeśli nie potrzebujesz pomocy technicznej dla asynchroniczne ładowanie.  
  
 Projektanta, ładowania przy użyciu niestandardowych implementacji <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> mogą wystąpić różne sposoby. Składniki zewnętrzne czasami są zaangażowane w proces ładowania. W celu ułatwienia ładowania z zewnętrznymi zależnościami, program ładujący projektanta interfejsu usługi zapewnia mechanizm, który określa, kiedy Trwa ładowanie zostało ukończone i umożliwia każdej części ładowanie do sygnalizowania, że została zakończona. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Zazwyczaj określa, kiedy ładowania jest ukończone, testując licznik, który śledzi liczbę zależności obciążenia pozostałych. Po zakończeniu każdej części obciążenia <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jest wywoływana i zmniejsza usługa licznika. Aby ustawić liczbę procesy zależne obciążenia, należy wywołać <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jednokrotnie dla każdego procesu obciążenia, który wywołuje <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> po zakończeniu jego ładowania. Po zakończeniu ładowania końcowego, wywołań usługi <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> na hoście modułu ładującego.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rejestruje składnik zewnętrzny, jako część procesu ładowania, zarządzane przez ten interfejs.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jeden raz dla każdego obiektu zewnętrznego biorą udział w procesie ładowania. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jest wywoływana po zakończeniu pracy proces ładowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><see langword="true" /> Jeżeli obciążenie projektanta jest kończy się pomyślnie; <see langword="false" /> Jeśli błędy możliwości obciążenia z zakończeniem.</param>
        <param name="errorCollection">Kolekcja błędów, które wystąpiły podczas ładowania, jeśli istnieje. Jeśli nie wystąpiły żadne błędy, Przekaż pustą kolekcję lub <see langword="null" />.</param>
        <summary>Sygnalizuje, że zależny obciążenia zostało zakończone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana w celu sygnalizowania, że Ukończono operację ładowania zależnego. Wywołaj <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jeden raz dla każdego procesu, który został zarejestrowany przez wywołanie metody <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, która została już zakończona.  
  
 Jeśli obciążenie zależne zakończy się powodzeniem, ustawia obiekt wywołujący `successful` parametr `true` i przekazuje pustą kolekcję lub `null` do `errorCollection` parametru. Jeśli zależne ładowania wystąpią błędy, obiekt wywołujący ustawia `successful` parametr `false` i przekazuje zbieranie wyjątków, które wskazują przyczyny lub przyczyny niepowodzenia, aby `errorCollection` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ponownie ładuje, dokument projektowy.</summary>
        <returns><see langword="true" /> Jeśli żądanie ponownego załadowania zostanie zaakceptowana, lub <see langword="false" /> Jeśli moduł ładujący nie zezwala na ponowne załadowanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy obiekt tę metodę można wywołać na żądanie, które przeładowanie modułu ładującego, dokument projektowy. Jeśli moduł ładujący obsługuje ponownego ładowania i jest zgodny z Załaduj ponownie, moduł ładujący projektanta może zwrócić `true`. W przeciwnym razie zwraca `false`, co oznacza, że nie nastąpi ponowne załadowanie. Obiekty wywołujące nie można polegać na ponowne załadowanie wykonywane od razu; Program ładujący projektanta można zaplanować to innym razem, lub można spróbować załadować ponownie tylko raz.  
  
 Obiekt wywołujący może wyświetlić komunikat dla użytkownika, jeśli nie można ponownie załadować projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>