<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91be6fb648bf803bf38fa96e6ee194581f86547f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37698562" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="950cb-101">Udostępnia interfejs, który można rozszerzyć program ładujący projektanta obsługuje asynchroniczne ładowanie składników zewnętrznych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="950cb-101">Provides an interface that can extend a designer loader to support asynchronous loading of external components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950cb-102">Element <xref:System.ComponentModel.Design.Serialization.DesignerLoader> można zaimplementować ten interfejs do zarządzania ładowania projektanta, która obejmuje składniki zewnętrzne.</span><span class="sxs-lookup"><span data-stu-id="950cb-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components.</span></span> <span data-ttu-id="950cb-103">Ten interfejs umożliwia także składników zewnętrznych zainicjować ponownie załadować powierzchni projektowej, wywołując <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span><span class="sxs-lookup"><span data-stu-id="950cb-103">This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span></span> <span data-ttu-id="950cb-104">Program ładujący projektanta nie trzeba implementować ten interfejs, jeśli nie potrzebujesz pomocy technicznej dla asynchroniczne ładowanie.</span><span class="sxs-lookup"><span data-stu-id="950cb-104">A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</span></span>  
  
 <span data-ttu-id="950cb-105">Projektanta, ładowania przy użyciu niestandardowych implementacji <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> mogą wystąpić różne sposoby.</span><span class="sxs-lookup"><span data-stu-id="950cb-105">Designer loading using a custom implementation of the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> can occur in a variety of ways.</span></span> <span data-ttu-id="950cb-106">Składniki zewnętrzne czasami są zaangażowane w proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="950cb-106">Sometimes external components are involved in the loading process.</span></span> <span data-ttu-id="950cb-107">W celu ułatwienia ładowania z zewnętrznymi zależnościami, program ładujący projektanta interfejsu usługi zapewnia mechanizm, który określa, kiedy Trwa ładowanie zostało ukończone i umożliwia każdej części ładowanie do sygnalizowania, że została zakończona.</span><span class="sxs-lookup"><span data-stu-id="950cb-107">To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</span></span> <span data-ttu-id="950cb-108"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Zazwyczaj określa, kiedy ładowania jest ukończone, testując licznik, który śledzi liczbę zależności obciążenia pozostałych.</span><span class="sxs-lookup"><span data-stu-id="950cb-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</span></span> <span data-ttu-id="950cb-109">Po zakończeniu każdej części obciążenia <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jest wywoływana i zmniejsza usługa licznika.</span><span class="sxs-lookup"><span data-stu-id="950cb-109">When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter.</span></span> <span data-ttu-id="950cb-110">Aby ustawić liczbę procesy zależne obciążenia, należy wywołać <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jednokrotnie dla każdego procesu obciążenia, który wywołuje <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> po zakończeniu jego ładowania.</span><span class="sxs-lookup"><span data-stu-id="950cb-110">To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete.</span></span> <span data-ttu-id="950cb-111">Po zakończeniu ładowania końcowego, wywołań usługi <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> na hoście modułu ładującego.</span><span class="sxs-lookup"><span data-stu-id="950cb-111">When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="950cb-112">Rejestruje składnik zewnętrzny, jako część procesu ładowania, zarządzane przez ten interfejs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="950cb-112">Registers an external component as part of the load process managed by this interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950cb-113">Wywołaj <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jeden raz dla każdego obiektu zewnętrznego biorą udział w procesie ładowania.</span><span class="sxs-lookup"><span data-stu-id="950cb-113">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each external object participating in the load process.</span></span> <span data-ttu-id="950cb-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jest wywoływana po zakończeniu pracy proces ładowania.</span><span class="sxs-lookup"><span data-stu-id="950cb-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="950cb-115">
            <see langword="true" /> Jeżeli obciążenie projektanta jest kończy się pomyślnie; <see langword="false" /> Jeśli błędy możliwości obciążenia z zakończeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="950cb-115">
              <see langword="true" /> if the load of the designer is successful; <see langword="false" /> if errors prevented the load from finishing.</span>
          </span>
        </param>
        <param name="errorCollection">
          <span data-ttu-id="950cb-116">Kolekcja błędów, które wystąpiły podczas ładowania, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="950cb-116">A collection of errors that occurred during the load, if any.</span>
          </span>
          <span data-ttu-id="950cb-117">Jeśli nie wystąpiły żadne błędy, Przekaż pustą kolekcję lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="950cb-117">If no errors occurred, pass either an empty collection or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="950cb-118">Sygnalizuje, że zależny obciążenia zostało zakończone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="950cb-118">Signals that a dependent load has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950cb-119">Ta metoda jest wywoływana w celu sygnalizowania, że Ukończono operację ładowania zależnego.</span><span class="sxs-lookup"><span data-stu-id="950cb-119">This method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="950cb-120">Wywołaj <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jeden raz dla każdego procesu, który został zarejestrowany przez wywołanie metody <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, która została już zakończona.</span><span class="sxs-lookup"><span data-stu-id="950cb-120">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.</span></span>  
  
 <span data-ttu-id="950cb-121">Jeśli obciążenie zależne zakończy się powodzeniem, ustawia obiekt wywołujący `successful` parametr `true` i przekazuje pustą kolekcję lub `null` do `errorCollection` parametru.</span><span class="sxs-lookup"><span data-stu-id="950cb-121">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="950cb-122">Jeśli zależne ładowania wystąpią błędy, obiekt wywołujący ustawia `successful` parametr `false` i przekazuje zbieranie wyjątków, które wskazują przyczyny lub przyczyny niepowodzenia, aby `errorCollection` parametru.</span><span class="sxs-lookup"><span data-stu-id="950cb-122">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="950cb-123">Ponownie ładuje, dokument projektowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="950cb-123">Reloads the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="950cb-124">
            <see langword="true" /> Jeśli żądanie ponownego załadowania zostanie zaakceptowana, lub <see langword="false" /> Jeśli moduł ładujący nie zezwala na ponowne załadowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="950cb-124">
              <see langword="true" /> if the reload request is accepted, or <see langword="false" /> if the loader does not allow the reload.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="950cb-125">Każdy obiekt tę metodę można wywołać na żądanie, które przeładowanie modułu ładującego, dokument projektowy.</span><span class="sxs-lookup"><span data-stu-id="950cb-125">Any object can call this method to request that the loader reload the design document.</span></span> <span data-ttu-id="950cb-126">Jeśli moduł ładujący obsługuje ponownego ładowania i jest zgodny z Załaduj ponownie, moduł ładujący projektanta może zwrócić `true`.</span><span class="sxs-lookup"><span data-stu-id="950cb-126">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="950cb-127">W przeciwnym razie zwraca `false`, co oznacza, że nie nastąpi ponowne załadowanie.</span><span class="sxs-lookup"><span data-stu-id="950cb-127">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="950cb-128">Obiekty wywołujące nie można polegać na ponowne załadowanie wykonywane od razu; Program ładujący projektanta można zaplanować to innym razem, lub można spróbować załadować ponownie tylko raz.</span><span class="sxs-lookup"><span data-stu-id="950cb-128">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</span></span>  
  
 <span data-ttu-id="950cb-129">Obiekt wywołujący może wyświetlić komunikat dla użytkownika, jeśli nie można ponownie załadować projektanta.</span><span class="sxs-lookup"><span data-stu-id="950cb-129">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>