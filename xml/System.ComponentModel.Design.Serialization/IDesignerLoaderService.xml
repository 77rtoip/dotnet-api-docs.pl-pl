<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDesignerLoaderService.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5600283504e0b53bfdedb7e61f107502e37fe6f9d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">600283504e0b53bfdedb7e61f107502e37fe6f9d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>Provides an interface that can extend a designer loader to support asynchronous loading of external components.</source>
          <target state="translated">Udostępnia interfejs, który można rozszerzać program ładujący projektanta do obsługi asynchroniczne ładowanie składników zewnętrznych.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> can implement this interface to manage designer loading that involves external components.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> może zawierać implementację tego interfejsu do zarządzania ładowania projektanta, która obejmuje składniki zewnętrzne.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>This interface also allows external components to initiate a reload of the design surface by calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A&gt;</ph>.</source>
          <target state="translated">Ten interfejs umożliwia również składników zewnętrznych zainicjować ponowne załadowanie powierzchni projektu przez wywołanie metody <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</source>
          <target state="translated">Program ładujący projektanta nie musi zawierać implementację tego interfejsu, jeśli nie wymaga pomocy technicznej dla Ładowanie asynchroniczne.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>Designer loading using a custom implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;</ph> can occur in a variety of ways.</source>
          <target state="translated">Projektanta ładowania przy użyciu niestandardowej implementacji <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;</ph> może wystąpić w różny sposób.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>Sometimes external components are involved in the loading process.</source>
          <target state="translated">Czasami zewnętrzne składniki uczestniczą w procesie ładowania.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</source>
          <target state="translated">Aby ułatwić ładowanie z zależnościami zewnętrznymi, interfejs usługi program ładujący projektanta zapewnia mechanizm, który określa, po ukończeniu ładowania i umożliwia każda część ładowania, która sygnalizuje, że zostało ukończone.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;</ph> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService&gt;</ph> Zwykle określa, kiedy testując licznika, który śledzi liczbę pozostałych zależności obciążenia ładowania jest ukończone.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>When each portion of the load completes, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</ph> is called, and the service decrements the counter.</source>
          <target state="translated">Po ukończeniu każda część obciążenia <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</ph> jest wywoływana i zmniejsza usługi licznika.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>To set the number of dependent load processes, call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;</ph> once for each load process that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</ph> when its loading is complete.</source>
          <target state="translated">Aby ustawić liczbę procesów ładowania zależnego, należy wywołać <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;</ph> jednokrotnie dla każdego procesu obciążenia, który wywołuje <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</ph> po zakończeniu jego ładowania.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
          <source>When the final loading is complete, the service calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;</ph> on the loader host.</source>
          <target state="translated">Po zakończeniu ładowania końcowego, usługa wywołania <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;</ph> na hoście modułu ładującego.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
          <source>Registers an external component as part of the load process managed by this interface.</source>
          <target state="translated">Rejestruje składnik zewnętrzny jako część procesu obciążenia zarządzany przez ten interfejs.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;</ph> once for each external object participating in the load process.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;</ph> raz dla każdego obiektu zewnętrznego uczestnictwa w procesie obciążenia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</ph> is called when the work of the load process is done.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</ph> jest wywoływana po zakończeniu pracy proces ładowania.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the load of the designer is successful; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if errors prevented the load from finishing.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli obciążenie projektanta zakończy się pomyślnie; <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli błędy uniemożliwiły obciążenia od zakończenia.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
          <source>A collection of errors that occurred during the load, if any.</source>
          <target state="translated">Kolekcja błędów, które wystąpiły podczas ładowania, jeśli istnieje.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
          <source>If no errors occurred, pass either an empty collection or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Jeśli nie wystąpiły żadne błędy, Przekaż pustej kolekcji lub <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
          <source>Signals that a dependent load has finished.</source>
          <target state="translated">Sygnalizuje, że zależny obciążenia zostało zakończone.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
          <source>This method is called to signal that a dependent loading operation has completed.</source>
          <target state="translated">Ta metoda jest wywoływana w celu zasygnalizowania Ukończono operację ładowania zależnego.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</ph> once for every process that was registered by calling <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;</ph>, which has already completed.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A&gt;</ph> raz dla każdego procesu, który został zarejestrowany przez wywołanie metody <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A&gt;</ph>, która została już zakończona.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
          <source>If the dependent load succeeds, the caller sets the <ph id="ph1">`successful`</ph> parameter to <ph id="ph2">`true`</ph> and passes either an empty collection or <ph id="ph3">`null`</ph> to the <ph id="ph4">`errorCollection`</ph> parameter.</source>
          <target state="translated">Jeśli zależna obciążenia zakończy się powodzeniem, wywołujący ustawia <ph id="ph1">`successful`</ph> parametr <ph id="ph2">`true`</ph> i przekazuje pustej kolekcji lub <ph id="ph3">`null`</ph> do <ph id="ph4">`errorCollection`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
          <source>If the dependent load encounters errors, the caller sets the <ph id="ph1">`successful`</ph> parameter to <ph id="ph2">`false`</ph> and passes a collection of exceptions that indicate the reason or reasons for failure to the <ph id="ph3">`errorCollection`</ph> parameter.</source>
          <target state="translated">Zależne obciążenia wystąpią błędy, wywołujący ustawia <ph id="ph1">`successful`</ph> parametr <ph id="ph2">`false`</ph> i przekazuje zbieranie wyjątków, wskazujące przyczynę lub przyczyny niepowodzenia do <ph id="ph3">`errorCollection`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
          <source>Reloads the design document.</source>
          <target state="translated">Ponownie ładuje dokument projektowy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reload request is accepted, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the loader does not allow the reload.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli żądanie ponownego załadowania jest akceptowany, lub <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli moduł ładujący nie zezwala na ponowne załadowanie.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
          <source>Any object can call this method to request that the loader reload the design document.</source>
          <target state="translated">Dowolnego obiektu można wywołać tej metody, aby zażądać ponowne załadowanie modułu ładującego dokument projektowy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
          <source>If the loader supports reloading and complies with the reload, the designer loader can return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Jeśli moduł ładujący obsługuje ponowne załadowanie i jest zgodny z Załaduj ponownie, program ładujący projektanta może zwrócić <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
          <source>Otherwise, it returns <ph id="ph1">`false`</ph>, indicating that the reload will not occur.</source>
          <target state="translated">W przeciwnym razie zwraca <ph id="ph1">`false`</ph>, co oznacza, że nie nastąpi ponowne załadowanie.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
          <source>Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</source>
          <target state="translated">Obiekty wywołujące, nie można użyć przeładowania wykonywane bezpośrednio; Program ładujący projektanta można zaplanować to na innym razem lub może próbować ponownie załadować jednocześnie.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
          <source>The caller can display a message to the user if the designer cannot be reloaded.</source>
          <target state="translated">Obiekt wywołujący można wyświetlić wiadomość do użytkownika, gdy nie można ponownie załadować projektanta.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>