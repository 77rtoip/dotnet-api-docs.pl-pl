<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4438738ad95585cb9d89ec4584de592177ebe65" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69350190" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs, który może rozciągnąć program ładujący projektanta w celu obsługi asynchronicznego ładowania składników zewnętrznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt <xref:System.ComponentModel.Design.Serialization.DesignerLoader> może zaimplementować ten interfejs do zarządzania ładowaniem projektanta, który obejmuje składniki zewnętrzne. Ten interfejs umożliwia również składnikom zewnętrznym inicjowanie ponownego ładowania powierzchni projektowej przez wywołanie <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>metody. Moduł ładujący projektanta nie musi implementować tego interfejsu, jeśli nie wymaga obsługi asynchronicznego ładowania.  
  
 Ładowanie projektanta przy użyciu niestandardowej implementacji <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> może wystąpić na wiele sposobów. Czasami składniki zewnętrzne są wykorzystywane w procesie ładowania. Aby ułatwić ładowanie z zależnościami zewnętrznymi, interfejs usługi ładującej projektanta udostępnia mechanizm, który określa, kiedy ładowanie zostało zakończone, i umożliwia każdej części ładowania zasygnalizowanie, że została ukończona. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Zwykle określa czas ładowania, testując licznik, który śledzi liczbę pozostałych zależności ładowania. Gdy każda część zakończenia <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> ładowania jest wywoływana, a usługa zmniejsza licznik. Aby ustawić liczbę zależnych procesów ładowania, należy wywołać <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jeden raz dla każdego procesu ładowania, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> który wywołuje się po zakończeniu ładowania. Po zakończeniu ostatniego ładowania usługa wywołuje <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> hosta modułu ładującego.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rejestruje składnik zewnętrzny jako część procesu ładowania zarządzanego przez ten interfejs.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jednokrotne dla każdego obiektu zewnętrznego biorącego udział w procesie ładowania. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>jest wywoływana, gdy działa proces ładowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><see langword="true" />Jeśli ładowanie projektanta zakończyło się pomyślnie; <see langword="false" /> Jeśli błędy uniemożliwiły zakończenie ładowania.</param>
        <param name="errorCollection">Kolekcja błędów, które wystąpiły podczas ładowania (jeśli istnieją). Jeśli nie wystąpiły żadne błędy, należy przekazać pustą kolekcję lub <see langword="null" />.</param>
        <summary>Sygnalizuje, że obciążenie zależne zostało zakończone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana w celu sygnalizowania, że operacja ładowania zależnego została ukończona. Wywołaj <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jeden raz dla każdego procesu, który został <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>zarejestrowany przez wywołanie, które już zostało zakończone.  
  
 Jeśli obciążenie zależne zakończy się powodzeniem, wywołujący `successful` Ustawia parametr `true` do i przekazuje `errorCollection` pustą kolekcję lub `null` do parametru. Jeśli obciążenie zależne napotyka błędy, obiekt wywołujący ustawia `successful` parametr na `false` i przekazuje kolekcję wyjątków wskazujących przyczynę lub `errorCollection` przyczyny niepowodzenia parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ponownie ładuje Dokument projektowy.</summary>
        <returns><see langword="true" />Jeśli żądanie ponownego załadowania zostało zaakceptowane <see langword="false" /> lub moduł ładujący nie zezwala na ponowne załadowanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy obiekt może wywołać tę metodę, aby zażądać załadowania przez moduł ładujący dokumentu projektu. Jeśli moduł ładujący obsługuje ponowne ładowanie i jest zgodny z ponownym ładowaniem, program ładujący `true`projektanta może zwrócić. W przeciwnym razie zwraca `false`, wskazując, że ponowne załadowanie nie nastąpi. Obiekty wywołujące nie mogą polegać na ponownym załadowaniu. program ładujący projektanta może zaplanować ten czas od pewnego czasu lub może próbować ponownie załadować.  
  
 Obiekt wywołujący może wyświetlić komunikat dla użytkownika, jeśli nie można ponownie załadować projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
