<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="101efbeb4f9297253c7d86ddfb36bb534a207280" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36708554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs, który można rozszerzać program ładujący projektanta do obsługi asynchroniczne ładowanie składników zewnętrznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> może zawierać implementację tego interfejsu do zarządzania ładowania projektanta, która obejmuje składniki zewnętrzne. Ten interfejs umożliwia również składników zewnętrznych zainicjować ponowne załadowanie powierzchni projektu przez wywołanie metody <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>. Program ładujący projektanta nie musi zawierać implementację tego interfejsu, jeśli nie wymaga pomocy technicznej dla Ładowanie asynchroniczne.  
  
 Projektanta ładowania przy użyciu niestandardowej implementacji <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> może wystąpić w różny sposób. Czasami zewnętrzne składniki uczestniczą w procesie ładowania. Aby ułatwić ładowanie z zależnościami zewnętrznymi, interfejs usługi program ładujący projektanta zapewnia mechanizm, który określa, po ukończeniu ładowania i umożliwia każda część ładowania, która sygnalizuje, że zostało ukończone. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Zwykle określa, kiedy testując licznika, który śledzi liczbę pozostałych zależności obciążenia ładowania jest ukończone. Po ukończeniu każda część obciążenia <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jest wywoływana i zmniejsza usługi licznika. Aby ustawić liczbę procesów ładowania zależnego, należy wywołać <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> jednokrotnie dla każdego procesu obciążenia, który wywołuje <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> po zakończeniu jego ładowania. Po zakończeniu ładowania końcowego, usługa wywołania <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> na hoście modułu ładującego.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rejestruje składnik zewnętrzny jako część procesu obciążenia zarządzany przez ten interfejs.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> raz dla każdego obiektu zewnętrznego uczestnictwa w procesie obciążenia. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> jest wywoływana po zakończeniu pracy proces ładowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <see langword="true" /> Jeśli obciążenie projektanta zakończy się pomyślnie; <see langword="false" /> Jeśli błędy uniemożliwiły obciążenia od zakończenia.</param>
        <param name="errorCollection">Kolekcja błędów, które wystąpiły podczas ładowania, jeśli istnieje. Jeśli nie wystąpiły żadne błędy, Przekaż pustej kolekcji lub <see langword="null" />.</param>
        <summary>Sygnalizuje, że zależny obciążenia zostało zakończone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana w celu zasygnalizowania Ukończono operację ładowania zależnego. Wywołanie <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> raz dla każdego procesu, który został zarejestrowany przez wywołanie metody <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, która została już zakończona.  
  
 Jeśli zależna obciążenia zakończy się powodzeniem, wywołujący ustawia `successful` parametr `true` i przekazuje pustej kolekcji lub `null` do `errorCollection` parametru. Zależne obciążenia wystąpią błędy, wywołujący ustawia `successful` parametr `false` i przekazuje zbieranie wyjątków, wskazujące przyczynę lub przyczyny niepowodzenia do `errorCollection` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ponownie ładuje dokument projektowy.</summary>
        <returns>
          <see langword="true" /> Jeśli żądanie ponownego załadowania jest akceptowany, lub <see langword="false" /> Jeśli moduł ładujący nie zezwala na ponowne załadowanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dowolnego obiektu można wywołać tej metody, aby zażądać ponowne załadowanie modułu ładującego dokument projektowy. Jeśli moduł ładujący obsługuje ponowne załadowanie i jest zgodny z Załaduj ponownie, program ładujący projektanta może zwrócić `true`. W przeciwnym razie zwraca `false`, co oznacza, że nie nastąpi ponowne załadowanie. Obiekty wywołujące, nie można użyć przeładowania wykonywane bezpośrednio; Program ładujący projektanta można zaplanować to na innym razem lub może próbować ponownie załadować jednocześnie.  
  
 Obiekt wywołujący można wyświetlić wiadomość do użytkownika, gdy nie można ponownie załadować projektanta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>