<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeDomSerializerBase.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a5093d8d2da21179e8d2e5743958acdaf8678e07.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5093d8d2da21179e8d2e5743958acdaf8678e07</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Provides a base class for <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> classes.</source>
          <target state="translated">Udostępnia klasę podstawową dla <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> class is used as a shared base between the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> Klasa jest używana jako podstawa udostępnionego między <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph> i <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Public <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph> classes derive from the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> class.</source>
          <target state="translated">Publiczny <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph> pochodną klasy <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Each public class defines its own public API.</source>
          <target state="translated">Każda klasa publiczna definiuje własną publiczny interfejs API.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> class defines no public API, but does offer a multitude of utility methods that can be used to aid the serialization process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> Klasa definiuje żadnego publicznego interfejsu API, ale oferuje wiele metod narzędzia, których można użyć w celu ułatwienia procesu serializacji.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The name of the object that results from the expression.</source>
          <target state="translated">Nazwa obiektu, który jest wynikiem wyrażenia.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no need to name the object.</source>
          <target state="translated">Może być <ph id="ph1">&lt;see langword="null" /&gt;</ph> , jeśli nie istnieje potrzeba obiekt nazwę.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> to interpret.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> Zinterpretować.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Deserializes the given expression into an in-memory object.</source>
          <target state="translated">Deserializuje danego wyrażenia do obiektu w pamięci.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>An object resulting from interpretation of <ph id="ph1">&lt;paramref name="expression" /&gt;</ph>.</source>
          <target state="translated">Obiekt wyniku interpretacji <ph id="ph1">&lt;paramref name="expression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>This is a helper method that derived classes can call to deserialize an expression.</source>
          <target state="translated">Jest to pomocnika metodę, która klas pochodnych można wywołać w celu deserializacji wyrażenia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>It deserializes the statement by interpreting and executing the CodeDOM expression specified by the <ph id="ph1">`expression`</ph> parameter, and then returns the results.</source>
          <target state="translated">Instrukcja on deserializuje interpretowanie i wykonywania określona przez wyrażenie CodeDOM <ph id="ph1">`expression`</ph> parametr, a następnie zwraca wyniki.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>If an object needs to be created as a result of this expression, it will be given the name specified by the <ph id="ph1">`name`</ph> parameter.</source>
          <target state="translated">Jeśli obiekt musi zostać utworzony w wyniku tego wyrażenia, będzie mógł skorzystać nazwa określona przez <ph id="ph1">`name`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The name can be <ph id="ph1">`null`</ph> if there is no need to name the object.</source>
          <target state="translated">Nazwa może być <ph id="ph1">`null`</ph> , jeśli nie istnieje potrzeba obiekt nazwę.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The following table describes how specific expressions are handled.</source>
          <target state="translated">W poniższej tabeli opisano sposób określonego wyrażenia są obsługiwane.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Expression</source>
          <target state="translated">Wyrażenie</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Behavior</source>
          <target state="translated">Zachowanie</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>This expression represents <ph id="ph1">`this`</ph> or <ph id="ph2">`Me`</ph>.</source>
          <target state="translated">To wyrażenie reprezentuje <ph id="ph1">`this`</ph> lub <ph id="ph2">`Me`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>To locate the object that is associated with this expression, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> method will look in the context stack for a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>.</source>
          <target state="translated">Aby zlokalizować obiekt, który jest skojarzony z tym wyrażeniu <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> metoda będzie wyglądać w stos kontekstu dla <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>This object contains the root object of the graph and the expression that represents it.</source>
          <target state="translated">Ten obiekt zawiera obiekt główny wykres i wyrażenie, które reprezentuje on.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>If the object is present and the expression matches, the root object will be returned.</source>
          <target state="translated">Jeśli obiekt jest dostępny i zgodny wyrażenie, zostanie zwrócony do obiektu głównego.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>An error is reported if an instance cannot be located.</source>
          <target state="translated">Błąd jest zgłaszany, gdy wystąpienie nie powiodło się.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>If the target of the field reference evaluates to the root object, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> method of the manager parameter will be used to retrieve the object instance based on name.</source>
          <target state="translated">Jeśli obiekt główny element docelowy odwołanie do pola <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> zostanie użyta metoda parametru manager można pobrać wystąpienia obiektu na podstawie nazwy.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Otherwise, standard reflection is used against the target object to locate the requested field.</source>
          <target state="translated">W przeciwnym razie wartość odbicia standardowy jest używany dla obiekt docelowy można znaleźć żądanego pola.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>An error is reported if the field cannot be located.</source>
          <target state="translated">Błąd jest zgłaszany, gdy pole nie można zlokalizować.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> method of the <ph id="ph2">`manager`</ph> parameter is used to locate the instance representing the given variable name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> Metody <ph id="ph2">`manager`</ph> parametru jest używana do lokalizowania wystąpienie reprezentujące podana nazwa zmiennej.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>An error is reported if an instance cannot be located.</source>
          <target state="translated">Błąd jest zgłaszany, gdy wystąpienie nie powiodło się.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> continues to interpret expressions until they are completely resolved to an object, or until it can no longer simplify the expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> w dalszym ciągu zinterpretować wyrażenia, dopóki nie są one całkowicie rozwiązany do obiektu lub dopóki nie będzie można uprościć wyrażenie.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>In this case, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> will return a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> that contains the most simplified expression.</source>
          <target state="translated">W takim przypadku <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> zwróci <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> zawierający najbardziej uproszczony wyrażenia.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The following expressions are not supported:</source>
          <target state="translated">Następujące wyrażenia nie są obsługiwane:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the instance to return.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Wystąpienia do zwrócenia.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The parameters to pass to the constructor for <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Parametry do przekazania do konstruktora dla <bpt id="p1">&lt;c&gt;</bpt>typu<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The name of the deserialized object.</source>
          <target state="translated">Nazwa obiektu po deserializacji.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to add this object to the design container; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby dodać obiekt do kontenera projektu; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The object must implement <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> for this to have any effect.</source>
          <target state="translated">Obiekt musi implementować <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> w tym celu ma żadnego efektu.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>Returns an instance of the given type.</source>
          <target state="translated">Zwraca wystąpienie podanego typu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>An instance of <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A&gt;</ph> method is invoked during deserialization to obtain an instance of an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A&gt;</ph> Metoda jest wywoływana podczas deserializacji w celu uzyskania wystąpienia obiektu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>When this is called, an instance of the requested type should be returned.</source>
          <target state="translated">Gdy jest to, powinny być zwracane wystąpienia żądanego typu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The default implementation invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph> method of the <ph id="ph2">`manager`</ph> parameter.</source>
          <target state="translated">Domyślna implementacja wywołuje <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph> metody <ph id="ph2">`manager`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="type" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The object from which the properties are to be deserialized.</source>
          <target state="translated">Obiekt, z którego mają zostać zdeserializowana właściwości.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that filters which properties will be deserialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> Filtry właściwości, które będzie można przeprowadzić deserializacji tablicy.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>Deserializes properties on the given object from the invariant culture’s resource bundle.</source>
          <target state="translated">Deserializuje właściwości danego obiektu z kulturą niezmienną pakiet zasobów.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A&gt;</ph> Jest metodę można wywołać metodę pomocnika, którą klas pochodnych.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>It looks for properties on the given object and attempts to load their values out of the invariant culture’s resource bundle.</source>
          <target state="translated">Wyszukuje właściwości danego obiektu, a próbuje załadować ich wartości poza pakietu zasobów Niezmienna kultura.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>This is generally used to handle design-time properties that are not emitted into source code.</source>
          <target state="translated">Jest to zazwyczaj używane do obsługi właściwości czasu projektowania, które nie zostały wydane do kodu źródłowego.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>It should not be used for localized properties because it only operates on the invariant culture.</source>
          <target state="translated">Nie należy można użyć zlokalizowanej właściwości, ponieważ działa tylko na Niezmienna kultura.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>This method inspects all of the properties of the <ph id="ph1">`value`</ph> parameter that match the attributes specified by the <ph id="ph2">`filter`</ph> parameter, and then checks for those properties in a resource binary object.</source>
          <target state="translated">Ta metoda sprawdza wszystkie właściwości <ph id="ph1">`value`</ph> parametr, który jest zgodny z atrybutem określony przez <ph id="ph2">`filter`</ph> parametr, a następnie sprawdza, czy te właściwości w obiekcie zasobu binarnego.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>This is useful for deserializing properties that cannot be represented in code, such as design-time properties.</source>
          <target state="translated">Jest to przydatne w przypadku deserializacja właściwości, których nie można przedstawić w kodzie, takie jak właściwości czasu projektowania.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>This method requires that a designer loader offers an <ph id="ph1">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> to read resources.</source>
          <target state="translated">Ta metoda wymaga, że program ładujący projektanta oferuje <ph id="ph1">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> można odczytać zasobów.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> provides a <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> for the invariant culture, then <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A&gt;</ph> will read resources from the XML resource (.resx) file’s metadata section, which is not included in final compiled code.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> zapewnia <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> dla Niezmienna kultura, a następnie <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A&gt;</ph> odczyta zasobów z sekcji metadanych pliku zasobów (resx) XML, który nie jest dostępny w ostatnim skompilowanego kodu.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>If this service is not available, no resources will be read.</source>
          <target state="translated">Jeśli ta usługa nie jest dostępna, będzie można ich odczytać żadnych zasobów.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> to deserialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> Do deserializacji.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>Deserializes a statement by interpreting and executing a CodeDOM statement.</source>
          <target state="translated">Deserializuje instrukcję interpretowanie i wykonywania instrukcji CodeDOM.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A&gt;</ph> Jest metodę można wywołać metodę pomocnika, którą klas pochodnych.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>It interprets the <ph id="ph1">`statement`</ph> parameter.</source>
          <target state="translated">Interpretuje ją <ph id="ph1">`statement`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeStatement&gt;</ph> being deserialized will be pushed on the context stack.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeStatement&gt;</ph> Deserializacji wypychanie zostanie wykonane na stos kontekstu.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The serialization manager.</source>
          <target state="translated">Tego menedżera serializacji.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The target type.</source>
          <target state="translated">Typ docelowy.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Pobiera kolekcję atrybutów, zgodnie z definicją w wersji docelowej projektu platformy .NET.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>A collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Kolekcja atrybutów zgodnie z definicją w wersji docelowej projektu platformy .NET.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The serialization manager.</source>
          <target state="translated">Tego menedżera serializacji.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>An object of the target type.</source>
          <target state="translated">Obiekt typu docelowego.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Pobiera kolekcję atrybutów, zgodnie z definicją w wersji docelowej projektu platformy .NET.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Kolekcja atrybutów zgodnie z definicją w wersji docelowej projektu platformy .NET.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The serialization manager.</source>
          <target state="translated">Tego menedżera serializacji.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An object of the target type.</source>
          <target state="translated">Obiekt typu docelowego.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An array of attributes to pass to the target version of the .NET Framework.</source>
          <target state="translated">Tablica atrybutów do przekazania do wersji docelowej platformy .NET.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>Gets a collection of events as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Pobiera kolekcję zdarzeń, zgodnie z definicją w wersji docelowej projektu platformy .NET.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>A collection of events as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Kolekcja zdarzeń zgodnie z definicją w wersji docelowej projektu platformy .NET.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object for which to get an expression.</source>
          <target state="translated">Obiekt, dla którego można pobrać wyrażenia.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Returns an expression for the given object.</source>
          <target state="translated">Zwraca wyrażenie dla danego obiektu.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> representing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no existing expression for <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> reprezentujący <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, lub <ph id="ph3">&lt;see langword="null" /&gt;</ph> przypadku nie istniejących wyrażenie <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method returns an expression representing the given object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> Metoda zwraca wyrażenie reprezentujące danego obiektu.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>It can return <ph id="ph1">`null`</ph>, indicating that no expression has been set that describes the object.</source>
          <target state="translated">Może on zwrócić <ph id="ph1">`null`</ph>, wskazujące czy wyrażenie nie został ustawiony który opisuje obiekt.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Expressions are acquired in one of three ways:</source>
          <target state="translated">Wyrażenia drogą kupna w jeden z trzech sposobów:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The expression could be the result of a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method.</source>
          <target state="translated">Wyrażenie może to wynikać z wcześniejszym wywołaniu <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The expression could have been found in the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>.</source>
          <target state="translated">Wyrażenie, które można znaleźć w <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The expression could be derived through <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>.</source>
          <target state="translated">Wyrażenie może pochodzić za pośrednictwem <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>To derive expressions through <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method queries the reference service for a name for the given object.</source>
          <target state="translated">Do uzyskania wyrażenia za pośrednictwem <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> — metoda korzysta z usługi odwołania dla nazwy dla danego obiektu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the expression service returns a valid name, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method checks to see if there is a "." in the name.</source>
          <target state="translated">Jeśli usługa wyrażenie zwraca prawidłową nazwę <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> metoda sprawdza, czy jest "." w nazwie.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>This indicates that the expression service found this object as the return value of a read-only property on another object.</source>
          <target state="translated">To ustawienie określa usługi wyrażeń odnaleźć tego obiektu jako wartości zwracane właściwości tylko do odczytu na inny obiekt.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If there is a ".", <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> will split the reference into parts.</source>
          <target state="translated">Jeśli istnieje ".", <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> podzieli odwołania na części.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The leftmost part is a name that will be evaluated with the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> method.</source>
          <target state="translated">Lewej strony jest nazwą, które zostanie obliczone z <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>For each subsequent part, a property reference expression will be built.</source>
          <target state="translated">Dla każdej kolejnej części wyrażenia odwołania do właściwości zostanie skompilowany.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The final expression will then be returned.</source>
          <target state="translated">Następnie powróci do ostatniego wyrażenia.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the object did not have an expression set, or if the object was not found in the reference service, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> will return <ph id="ph2">`null`</ph>, indicating there is no existing expression for the object.</source>
          <target state="translated">Jeśli obiekt nie ma wyrażenia lub nie można odnaleźć obiektu w usłudze odwołanie <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> zwróci <ph id="ph2">`null`</ph>, wskazujący Brak Brak istniejącego wyrażenia dla obiektu.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The serialization manager.</source>
          <target state="translated">Tego menedżera serializacji.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An object of the target type.</source>
          <target state="translated">Obiekt typu docelowego.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An array of attributes to pass to the target version of the .NET Framework.</source>
          <target state="translated">Tablica atrybutów do przekazania do wersji docelowej platformy .NET.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>Gets a collection of properties as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Pobiera zbiór właściwości, zgodnie z definicją w wersji docelowej projektu platformy .NET.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>A collection of properties as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">Zbiór właściwości, zgodnie z definicją w wersji docelowej projektu platformy .NET.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The serialization manager.</source>
          <target state="translated">Tego menedżera serializacji.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The type to use metadata from.</source>
          <target state="translated">Typ do użycia w metadanych.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>Gets a reflection type generated from type metadata.</source>
          <target state="translated">Pobiera typ odbicia wygenerowane z typu metadanych.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>A reflection type generated from the metadata of <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Odbicie typu generowane na podstawie metadanych <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The return value will not be equal to <ph id="ph1">`type`</ph> and should not be used for comparison with non-reflection types.</source>
          <target state="translated">Wartość zwrotna nie będzie równa <ph id="ph1">`type`</ph> i nie powinna być używana do porównania z typów innych niż odbicia.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The serialization manager.</source>
          <target state="translated">Tego menedżera serializacji.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object to use metadata from.</source>
          <target state="translated">Obiekt do metadanych z użycia.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Gets a reflection type generated from object metadata.</source>
          <target state="translated">Pobiera typ odbicia generowane na podstawie metadanych obiektu.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A reflection type generated from the metadata of <ph id="ph1">&lt;paramref name="object" /&gt;</ph>.</source>
          <target state="translated">Odbicie typu generowane na podstawie metadanych <ph id="ph1">&lt;paramref name="object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The return value will not be equal to the type of object and should not be used for comparison with non-reflection types.</source>
          <target state="translated">Wartość zwrotna nie będzie taki sam typ obiektu i nie powinna być używana do porównania z typów innych niż odbicia.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Locates a serializer for the given object value or type.</source>
          <target state="translated">Lokalizuje serializator dla typu lub wartości danego obiektu.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object specifying the serializer to retrieve.</source>
          <target state="translated">Obiekt określający serializatora do pobrania.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Locates a serializer for the given object value.</source>
          <target state="translated">Lokalizuje serializator dla wartości danego obiektu.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> that is appropriate for <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> odpowiednią dla <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> method is an extension to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> Metoda jest rozszerzeniem <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method takes an object type, rather than an object value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> Metoda przyjmuje typ obiektu, a nie wartość obiektu.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If an external party had overridden metadata for a specific object through <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, that metadata override would not be seen by the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method, which only takes a type.</source>
          <target state="translated">Jeśli zewnętrznemu zastąpiono metadanych dla konkretnego obiektu za pomocą <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, że zastępowanie metadanych nie będą widoczne dla <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> metodę, która przyjmuje tylko typu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> method checks the metadata of the value and the value’s type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> Metoda sprawdza metadanych wartości i typ wartości.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the two differ, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> will look to see if there is a custom designer serializer attribute on the value.</source>
          <target state="translated">Jeśli różnią się, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> sprawdza, czy ma atrybutu niestandardowego programu szeregującego projektanta dla wartości.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If so, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> will attempt to use it.</source>
          <target state="translated">Jeśli tak, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> podejmie próbę użycia go.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Otherwise, it will defer to <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przeciwnym razie zostanie odroczenie do <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> specifying the serializer to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Określenie serializatora do pobrania.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>Locates a serializer for the given type.</source>
          <target state="translated">Lokalizuje serializator dla danego typu.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> that is appropriate for <ph id="ph2">&lt;paramref name="valueType" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> odpowiednią dla <ph id="ph2">&lt;paramref name="valueType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> method is an extension to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> Metoda jest rozszerzeniem <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method takes an object type, rather than an object value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> Metoda przyjmuje typ obiektu, a nie wartość obiektu.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="valueType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="valueType" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
          <source>The type description provider service.</source>
          <target state="translated">Usługa dostawcy opisu typu.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
          <source>An object from which the type description provider service can be derived, if <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Obiekt, w którym usługa dostawcy opisu typu mogą być uzyskane, jeśli <bpt id="p1">&lt;c&gt;</bpt>dostawcy<ept id="p1">&lt;/c&gt;</ept> jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that is aware of the target version of the .NET Framework, for use in type filtering.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> który zna docelową wersję platformy .NET do użycia w typ filtrowania.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
          <source>A .NET Framework-aware type description provider.</source>
          <target state="translated">.NET Framework-aware Dostawca opisu typu.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object for which the name will be retrieved.</source>
          <target state="translated">Obiekt, dla którego będzie można pobrać nazwy.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Returns a unique name for the given object.</source>
          <target state="translated">Zwraca unikatową nazwę dla danego obiektu.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A unique name for <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Unikatową nazwę <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> Wywołania metody <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If this method does not return a name, then <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> to fabricate a valid name for the object.</source>
          <target state="translated">W przypadku tej metody nie zwracać nazwę, następnie <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> używa <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> z przeznaczeniem prawidłową nazwę obiektu do.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the service is not available, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> will fabricate a name based on the short type name combined with an index number to make it unique.</source>
          <target state="translated">Jeśli usługa nie jest dostępna, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> będzie przeznaczeniem nazwę opartego na nazwie typu krótkie, w połączeniu z numer indeksu w celu zapewnienia unikatowości.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The resulting name is associated with the serialization manager by calling the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;</ph> method before the new name is returned.</source>
          <target state="translated">Wynikowa nazwa jest skojarzony z tego menedżera serializacji przez wywołanie metody <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;</ph> metody przed zwróceniem nową nazwę.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Returns a value indicating whether the given object has been serialized.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dany obiekt został serializacji.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object to test for previous serialization.</source>
          <target state="translated">Obiekt do testowania dla poprzedniego serializacji.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Returns a value indicating whether the given object has been serialized.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dany obiekt został serializacji.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has been serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="value" /&gt;</ph> została serializacji; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>For the <ph id="ph1">`value`</ph> parameter to be considered serialized, the <ph id="ph2">`manager`</ph> parameter or another serializer must have called the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method to create a relationship between <ph id="ph4">`value`</ph> and a referring expression.</source>
          <target state="translated">Dla <ph id="ph1">`value`</ph> serializowany parametr, aby można je było uważać, <ph id="ph2">`manager`</ph> parametr lub inny element serializujący musi mieć wywołana <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> metodę w celu utworzenia relacji między <ph id="ph4">`value`</ph> i wyrażeń zawierających odwołania.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>The object to test for previous serialization.</source>
          <target state="translated">Obiekt do testowania dla poprzedniego serializacji.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include preset expressions; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby uwzględnić wstępnie zdefiniowanych wyrażeń; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dany obiekt został serializacji, opcjonalnie uwzględniając wstępnie zdefiniowanych wyrażeń.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has been serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="value" /&gt;</ph> została serializacji; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>For the <ph id="ph1">`value`</ph> parameter to be considered serialized, the <ph id="ph2">`manager`</ph> parameter or another serializer must have called the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method to create a relationship between <ph id="ph4">`value`</ph> and a referring expression.</source>
          <target state="translated">Dla <ph id="ph1">`value`</ph> serializowany parametr, aby można je było uważać, <ph id="ph2">`manager`</ph> parametr lub inny element serializujący musi mieć wywołana <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> metodę w celu utworzenia relacji między <ph id="ph4">`value`</ph> i wyrażeń zawierających odwołania.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> was fully serialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> został w pełni serializacji; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>Returns an expression representing the creation of the given object.</source>
          <target state="translated">Zwraca wyrażenie reprezentujące utworzenia danego obiektu.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>An expression representing the creation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Tworzenie reprezentujący <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A&gt;</ph> method can be used to serialize an expression that represents the creation of the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A&gt;</ph> Metody można użyć do serializacji wyrażenie reprezentuje tworzenie <ph id="ph2">`value`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>It is aware of instance descriptors.</source>
          <target state="translated">Jest świadome deskryptorów wystąpienia.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>The <ph id="ph1">`isComplete`</ph> parameter is set to <ph id="ph2">`true`</ph> if the expression represents a fully configured object, or <ph id="ph3">`false`</ph> if further serialization must be done on the object’s properties.</source>
          <target state="translated"><ph id="ph1">`isComplete`</ph> Ustawiono parametr <ph id="ph2">`true`</ph> Jeśli wyrażenie reprezentuje obiekt pełni skonfigurowany lub <ph id="ph3">`false`</ph> Jeśli dalsze serializacji musi zostać wykonane na właściwości obiektu.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> into which the event will be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> , W którym zdarzenia będą serializowane.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>The object to which <bpt id="p1">&lt;c&gt;</bpt>descriptor<ept id="p1">&lt;/c&gt;</ept> is bound.</source>
          <target state="translated">Obiekt, do którego <bpt id="p1">&lt;c&gt;</bpt>deskryptora<ept id="p1">&lt;/c&gt;</ept> jest powiązany.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> specifying the event to serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> Zdarzenia do serializacji.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>Serializes the given event into the given statement collection.</source>
          <target state="translated">Serializuje dane zdarzenie do kolekcji daną instrukcję.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> method is a helper method that derived classes can call to serialize a single event into the given <ph id="ph2">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> Metoda jest wywołać metodę pomocnika, którą klas pochodnych do serializacji jednego zdarzenia do danego <ph id="ph2">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> queries the serialization manager for a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> for the given event, and then asks the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> to serialize it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> wysyła zapytanie do menedżera serializacji dla <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> dla określonych zdarzeń, a następnie prosi <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> go serializować.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> places the <ph id="ph2">`statements`</ph> and <ph id="ph3">`descriptor`</ph> parameters on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> umieszcza <ph id="ph2">`statements`</ph> i <ph id="ph3">`descriptor`</ph> parametrów <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> requires an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IEventBindingService&gt;</ph> to discover event bindings to methods that are not compiled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> wymaga <ph id="ph2">&lt;xref:System.ComponentModel.Design.IEventBindingService&gt;</ph> odnajdywania wiązania zdarzeń do metod, które nie są kompilowane.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>If this service is not present, event bindings to non-compiled methods will not be written.</source>
          <target state="translated">Jeśli ta usługa nie jest obecne, nie można zapisać wiązania zdarzeń do metod innych niż skompilowany.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>Event bindings to compiled methods will still be serialized if the objects to which the events are bound can be converted into expressions.</source>
          <target state="translated">Wiązania zdarzeń do metod skompilowanych nadal będzie można serializować, jeśli obiekty, które są powiązane zdarzenia mogą być konwertowane na wyrażenia.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, <ph id="ph3">&lt;paramref name="statements" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="descriptor" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, <ph id="ph3">&lt;paramref name="statements" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="descriptor" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IEventBindingService" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IEventBindingService" /&gt;</ph> nie jest dostępna.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> into which the event will be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> , W którym zdarzenia będą serializowane.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The object on which events will be serialized.</source>
          <target state="translated">Obiekt, w którym zdarzenia będą serializowane.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that filters which events will be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> Tablica, która filtruje zdarzenia, które będą serializowane.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Serializes the specified events into the given statement collection.</source>
          <target state="translated">Serializuje określone zdarzenia do kolekcji daną instrukcję.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</ph> Jest metodę można wywołać metodę pomocnika, którą klas pochodnych.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>It looks at events on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it calls the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> method for each event.</source>
          <target state="translated">Wygląda na zdarzenia <ph id="ph1">`value`</ph> parametr, który odpowiada <ph id="ph2">`filter`</ph> parametr, a następnie wywołuje <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> metody dla każdego zdarzenia.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</ph> method places the <ph id="ph2">&lt;xref:System.ComponentModel.InheritanceAttribute&gt;</ph> for <ph id="ph3">`value`</ph> on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</ph> Miejsca metody <ph id="ph2">&lt;xref:System.ComponentModel.InheritanceAttribute&gt;</ph> dla <ph id="ph3">`value`</ph> na <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, lub <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> jest <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> into which the properties will be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> , Do którego będzie można serializować właściwości.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The object on which the properties will be serialized.</source>
          <target state="translated">Obiekt, w którym będzie można serializować właściwości.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that filters which properties will be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> Tablicy filtrujące właściwości, które będą serializowane.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Serializes the properties on the given object into the given statement collection.</source>
          <target state="translated">Serializuje właściwości danego obiektu do kolekcji daną instrukcję.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;</ph> Jest metodę można wywołać metodę pomocnika, którą klas pochodnych.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>It looks at properties on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it calls the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> method for each property.</source>
          <target state="translated">Wygląda na właściwości <ph id="ph1">`value`</ph> parametr, który odpowiada <ph id="ph2">`filter`</ph> parametr, a następnie wywołuje <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> metody dla każdej właściwości.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;</ph> method places the <ph id="ph2">&lt;xref:System.ComponentModel.InheritanceAttribute&gt;</ph> for <ph id="ph3">`value`</ph> on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;</ph> Miejsca metody <ph id="ph2">&lt;xref:System.ComponentModel.InheritanceAttribute&gt;</ph> dla <ph id="ph3">`value`</ph> na <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, lub <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> jest <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Not used.</source>
          <target state="translated">Nie używany.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The object whose properties will be serialized.</source>
          <target state="translated">Obiekt, którego właściwości, który będzie serializowany.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that filters which properties will be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> Tablicy filtrujące właściwości, które będą serializowane.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Serializes the properties on the given object into the invariant culture’s resource bundle.</source>
          <target state="translated">Serializuje właściwości danego obiektu do pakietu zasobów Niezmienna kultura.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;</ph> Jest metodę można wywołać metodę pomocnika, którą klas pochodnych.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>It looks at properties on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it serializes the properties into the invariant culture resource bundle.</source>
          <target state="translated">Wygląda na właściwości <ph id="ph1">`value`</ph> parametr, który odpowiada <ph id="ph2">`filter`</ph> parametr, a następnie wykonuje serializację właściwości do pakietu zasobów Niezmienna kultura.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>If the resource service returns a <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph>, the property values will be stored in the metadata section of the XML resource (.resx) file.</source>
          <target state="translated">Jeśli usługa zasobów zwraca <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph>, wartości właściwości, które będą przechowywane w sekcji Metadane w pliku XML, zasób (resx).</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`statements`</ph> parameter is not used.</source>
          <target state="translated"><ph id="ph1">`statements`</ph> Parametr nie jest używany.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>To be serialized as a resource, a property must be simple (not a content property) and its value must be serializable.</source>
          <target state="translated">Aby można było serializować jako zasób, właściwość musi być prostą (nie zawartości właściwością) i jego wartość musi być możliwy do serializacji.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Properties that do not conform to this pattern will be skipped.</source>
          <target state="translated">Właściwości, które nie są zgodne z tym wzorcu zostanie pominięte.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;</ph> requires an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> to obtain a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> to write resources for the invariant culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;</ph> wymaga <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> uzyskanie <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> zasobów dla kultury invariant zapisu.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>If this service is not available, no resources will be written.</source>
          <target state="translated">Jeśli ta usługa nie jest dostępna, zostaną zapisane żadne zasoby.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, lub <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> jest <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> into which the property will be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> , Do którego będzie można serializować właściwości.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The object on which the property will be serialized.</source>
          <target state="translated">Obiekt, na którym będzie można serializować właściwości.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The property to serialize.</source>
          <target state="translated">Właściwość do serializacji.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>Serializes a property on the given object.</source>
          <target state="translated">Serializuje właściwością w ramach danego obiektu.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> method retrieves a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> for the <ph id="ph3">`propertyToSerialize`</ph> parameter and delegates to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> Metoda pobiera <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> dla <ph id="ph3">`propertyToSerialize`</ph> parametru i delegatów do niego.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> places the <ph id="ph2">`statements`</ph> and <ph id="ph3">`propertyToSerialize`</ph> parameters on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> umieszcza <ph id="ph2">`statements`</ph> i <ph id="ph3">`propertyToSerialize`</ph> parametrów <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, <ph id="ph3">&lt;paramref name="statements" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="propertyToSerialize" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, <ph id="ph3">&lt;paramref name="statements" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="propertyToSerialize" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The name of the resource bundle into which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> will be serialized.</source>
          <target state="translated">Nazwa pakietu zasobów, do którego <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> będą serializowane.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>Serializes the given object into a resource bundle using the given resource name.</source>
          <target state="translated">Wykonuje serializację danego obiektu do pakietu zasobów, przy użyciu nazwy zasobu.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> method is a helper method that serializes a value to a resource bundle under the given name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> Metoda jest metodą pomocnika, który serializuje wartość pakiet o podanej nazwie.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The culture that the resource is written to is determined by searching the serialization manager’s <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A&gt;</ph> collection for a property called <ph id="ph2">`ResourceCulture`</ph>.</source>
          <target state="translated">Kultura, która zasobu jest zapisywany jest określany przez wyszukiwanie menedżera serializacji <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A&gt;</ph> kolekcji dla właściwości o nazwie <ph id="ph2">`ResourceCulture`</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>If this property exists, resources will be written to that culture.</source>
          <target state="translated">Jeśli ta właściwość istnieje, zasoby będą zapisywane do tej kultury.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>Otherwise, resources will be written to the invariant culture.</source>
          <target state="translated">W przeciwnym razie zasoby będą zapisywane Niezmienna kultura.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr musi być możliwy do serializacji.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> requires an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> to obtain a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> to write resources for the correct culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> wymaga <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> uzyskanie <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> zapisu zasobów dla kultury poprawne.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>If this service is not available, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> will instead build a binary object in code that represents the resource.</source>
          <target state="translated">Jeśli ta usługa jest niedostępna, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> zamiast tego zostanie skompilowany obiekt binarny w kodzie, który reprezentuje zasobu.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source><ph id="ph1">&lt;see langword="ResourceCulture" /&gt;</ph> is a read-write property that is accessed through the serialization manager’s <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ResourceCulture" /&gt;</ph> jest właściwością odczytu i zapisu, który jest dostępny za pośrednictwem menedżera serializacji <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph> kolekcji.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /&gt;</ph> method never changes the value of this property; it merely reads it to identify the culture to which it will write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /&gt;</ph> Metoda nigdy nie zmienia wartości tej właściwości; odczytuje jedynie go do identyfikowania kultury, w którym będą zapisywane.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The property is set during deserialization as resources are parsed and loaded.</source>
          <target state="translated">Właściwość została ustawiona podczas deserializacji załadować i przeanalizować zasobów.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The name of the resource bundle into which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> will be serialized.</source>
          <target state="translated">Nazwa pakietu zasobów, do którego <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> będą serializowane.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>Serializes the given object into a resource bundle using the given resource name.</source>
          <target state="translated">Wykonuje serializację danego obiektu do pakietu zasobów, przy użyciu nazwy zasobu.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The resource is always written to the invariant culture.</source>
          <target state="translated">Zasób jest zawsze zapisywane Niezmienna kultura.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr musi być możliwy do serializacji.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A&gt;</ph> method requires an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> to obtain a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> to write resources for the correct culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A&gt;</ph> Metoda wymaga <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> uzyskanie <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> zapisu zasobów dla kultury poprawne.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>If this service is not available, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> will instead build a binary object in code that represents the resource.</source>
          <target state="translated">Jeśli ta usługa jest niedostępna, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> zamiast tego zostanie skompilowany obiekt binarny w kodzie, który reprezentuje zasobu.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Serializes the given object into an expression.</source>
          <target state="translated">Wykonuje serializację danego obiektu do wyrażenia.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> object if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> can be serialized; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> obiekt zostanie <ph id="ph2">&lt;paramref name="value" /&gt;</ph> może być Zserializowany; w przeciwnym razie <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter can be <ph id="ph2">`null`</ph>, in which case a primitive expression will be returned.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr może być <ph id="ph2">`null`</ph>, w takim przypadku zostanie zwrócony pierwotnych wyrażenia.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> method uses the following rules for serializing types:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> Do serializacji typów metody stosowane są następujące reguły:</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>It first calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method to see if an expression has already been created for the object.</source>
          <target state="translated">Najpierw wywołuje <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> metody, aby zobaczyć, jeśli wyrażenie ma już utworzone dla obiektu.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If so, it returns the existing expression.</source>
          <target state="translated">Jeśli tak, zwraca wyrażenie istniejących.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>It then locates the object’s serializer, and asks it to serialize.</source>
          <target state="translated">Następnie lokalizuje serializator obiektu i prosi o go do serializacji.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the return value of the object’s serializer is a <ph id="ph1">&lt;xref:System.CodeDom.CodeExpression&gt;</ph>, the expression is returned.</source>
          <target state="translated">Jeśli wartość zwracaną przez serializator obiektu jest <ph id="ph1">&lt;xref:System.CodeDom.CodeExpression&gt;</ph>, zwracany jest wyrażenie.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>It makes one last call to <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> to see if the serializer added an expression.</source>
          <target state="translated">Jeden ostatniego połączenia do ułatwia <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> aby zobaczyć, czy serializator dodany wyrażenia.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Finally, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Zwraca koniec <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If no expression could be created and no suitable serializer could be found, an error will be reported through the serialization manager.</source>
          <target state="translated">Wyrażenie nie może zostać utworzony i odnaleźć żadnego odpowiedniego elementu serializującego, błąd zostanie zgłoszone przez tego menedżera serializacji.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>No error will be reported if a serializer was found but it failed to produce an expression.</source>
          <target state="translated">Błąd nie będą raportowane, jeśli znaleziono element serializujący, ale nie udało się utworzyć wyrażenie.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>In this case, it is assumed that the serializer either already reported the error or it did not attempt to serialize the object.</source>
          <target state="translated">W takim przypadku zakłada się, że serializator albo już zgłosił błąd lub nie próbował serializacji obiektu.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the serializer returned a statement or a collection of statements, those statements will not be discarded.</source>
          <target state="translated">Serializator zwrócił instrukcję lub zbiór instrukcji, te instrukcje nie zostaną odrzucone.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> method will first look for a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.StatementContext&gt;</ph> on the context stack and add statements to the statement context object's <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> Metody najpierw będzie szukać <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.StatementContext&gt;</ph> w kontekście stosu i dodawanie instrukcji do instrukcji obiekt kontekstu <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If there is no statement context, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> method will look in the context for a <ph id="ph2">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph> and add the statements there.</source>
          <target state="translated">Jeśli nie jest kontekst instrukcji, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> metoda będzie wyglądać w kontekście dla <ph id="ph2">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph> i Dodaj instrukcje istnieje.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If no place can be found to add the statements, an error will be generated.</source>
          <target state="translated">Jeśli miejsca można znaleźć można dodać instrukcje, zostanie wygenerowany błąd.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>You should not call the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> method within <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A&gt;</ph> when serializing your own object.</source>
          <target state="translated">Nie należy wywołać <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> metodę <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A&gt;</ph> podczas serializowania obiektu własne.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Instead, you should call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>.</source>
          <target state="translated">Zamiast tego należy wywołać <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If it returns <ph id="ph1">`null`</ph>, create your own expression and call <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>.</source>
          <target state="translated">Jeśli zmienna zwraca <ph id="ph1">`null`</ph>, tworzyć własne wyrażenie oraz wywołania <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Then proceed with the rest of your serialization.</source>
          <target state="translated">Przejdź z pozostałą częścią sieci serializacji.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Serializes an object into an expression.</source>
          <target state="translated">Serializuje obiekt do wyrażenia.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Serializes the given object into an expression.</source>
          <target state="translated">Wykonuje serializację danego obiektu do wyrażenia.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph> as a serialized expression.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> zawierający <ph id="ph2">&lt;paramref name="value" /&gt;</ph> jako wyrażenie serializacji.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> method is a helper method that serializes a value to a resource expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> — Metoda to metoda pomocnika serializuje wartość wyrażenia zasobu.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>This is in contrast to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> method, which writes a value to a resource binary object.</source>
          <target state="translated">Jest to contrast do <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> metodę, która zapisuje wartość do obiektu binarnego zasobów.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> goes one step further and returns an expression that can be used to recover the resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> Dodatkowo przechodzi jeden krok i zwraca wyrażenie, które można odzyskać do zasobu.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>For example, the return value might be "rm.GetValue("SomeBitmap");".</source>
          <target state="translated">Na przykład zwracana wartość może być "Menedżera zasobów. GetValue("SomeBitmap"); ".</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The name of the resource is calculated from the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph>, if one can be found on the context stack.</source>
          <target state="translated">Nazwa zasobu jest obliczana na podstawie <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph>, jeśli jeden znajduje się na stos kontekstu.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> method will look on the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> for the following objects:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> Metoda będzie wyglądać <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> dla następujących obiektów:</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>—a collection of statements to add a resource manager to, if one needs to be declared.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>— Kolekcja instrukcje, aby dodać Menedżera zasobów, jeśli jeden musi być zadeklarowana.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>—the root expression, which is needed to create a resource manager.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>— wyrażenie głównego jest potrzebne do utworzenia zasobu menedżera.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph>—used to fabricate a name for the resource and to decide what type of resource manager call to make.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph>— używany do przeznaczeniem nazwę zasobu i zdecydować, jaki typ wywołania Menedżera zasobów, aby.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to serialize into the invariant culture; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> do serializacji w Niezmienna kultura; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>Serializes the given object into an expression appropriate for the invariant culture.</source>
          <target state="translated">Wykonuje serializację danego obiektu do wyrażenia, które są odpowiednie dla Niezmienna kultura.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph> as a serialized expression.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> zawierający <ph id="ph2">&lt;paramref name="value" /&gt;</ph> jako wyrażenie serializacji.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`ensureInvariant`</ph> parameter is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> method will also write the resource value into the invariant culture’s resource file if the current <ph id="ph4">`ResourceCulture`</ph> is not the invariant culture..</source>
          <target state="translated">Jeśli <ph id="ph1">`ensureInvariant`</ph> parametr jest <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> metody również będzie zapisywała wartość zasobów do pliku zasobów Niezmienna kultura Jeśli bieżące <ph id="ph4">`ResourceCulture`</ph> nie jest kulturą niezmienną...</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Associates an object with an expression.</source>
          <target state="translated">Kojarzy obiekt z wyrażeniem.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> with which to associate <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> z którą chcesz skojarzyć <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>Associates an object with an expression.</source>
          <target state="translated">Kojarzy obiekt z wyrażeniem.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method is a helper method that associates a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> with an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> Metoda jest metodą pomocnika, które kojarzy <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> z obiektem.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>Objects that have been associated with expressions in this way are accessible through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method.</source>
          <target state="translated">Obiekty, które zostały skojarzone z wyrażeń w ten sposób są dostępne za pośrednictwem <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> stores its expression table as an appended object on the context stack so it is accessible by any serializer’s <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> przechowuje jego tabeli wyrażenie jako obiekt dołączany na stos kontekstu, co nie jest dostępny przez dowolnego serializator <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="expression" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, lub <ph id="ph3">&lt;paramref name="expression" /&gt;</ph> jest <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> Do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> with which to associate <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> z którą chcesz skojarzyć <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify a preset expression; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby określić wstępnie zdefiniowane wyrażenie; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>Associates an object with an expression, optionally specifying a preset expression.</source>
          <target state="translated">Kojarzy obiekt z wyrażeniem, opcjonalnie określając wstępnie zdefiniowane wyrażenie.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method is a helper method that associates a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> with an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> Metoda jest metodą pomocnika, które kojarzy <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> z obiektem.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>Objects that have been associated with expressions in this way are accessible through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method.</source>
          <target state="translated">Obiekty, które zostały skojarzone z wyrażeń w ten sposób są dostępne za pośrednictwem <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> stores its expression table as an appended object on the context stack so it is accessible by any serializer’s <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> Przechowuje jego tabeli wyrażenie jako obiekt dołączany na stos kontekstu, co nie jest dostępny przez dowolnego serializator <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> metody.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>