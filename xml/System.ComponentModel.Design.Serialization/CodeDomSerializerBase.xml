<Type Name="CodeDomSerializerBase" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d4ca125596a027b02205237c4e814415127190f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69331288" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomSerializerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomSerializerBase abstract" />
  <TypeSignature Language="F#" Value="type CodeDomSerializerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia klasę bazową dla <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> klas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana jako wspólna baza <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> między klasami i <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> Klasy <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> publiczne pochodzą <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> od klasy. Każda Klasa publiczna definiuje własny publiczny interfejs API. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> Klasa nie definiuje publicznego interfejsu API, ale oferuje wiele metod narzędzi, których można użyć do uzyskania pomocy w procesie serializacji.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  </Docs>
  <Members>
    <Member MemberName="DeserializeExpression">
      <MemberSignature Language="C#" Value="protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeserializeExpression (manager As IDesignerSerializationManager, name As String, expression As CodeExpression) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ DeserializeExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ name, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.DeserializeExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * System.CodeDom.CodeExpression -&gt; obj" Usage="codeDomSerializerBase.DeserializeExpression (manager, name, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="name">Nazwa obiektu, który jest wynikiem wyrażenia. Może być <see langword="null" /> , jeśli nie trzeba nazwać obiektu.</param>
        <param name="expression"><see cref="T:System.CodeDom.CodeExpression" /> Do interpretacji.</param>
        <summary>Deserializacji danego wyrażenia do obiektu znajdującego się w pamięci.</summary>
        <returns>Obiekt wynikający z interpretacji <paramref name="expression" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metoda pomocnika, którą klasy pochodne mogą wywołać, aby deserializować wyrażenie. Deserializacji instrukcji, interpretując i wykonując wyrażenie CodeDOM określone przez `expression` parametr, a następnie zwraca wyniki. Jeśli obiekt musi zostać utworzony jako wynik tego wyrażenia, zostanie podana nazwa określona przez `name` parametr. Nazwa może mieć `null` wartość, jeśli nie ma potrzeby nanadaj nazwę obiektowi. W poniższej tabeli opisano sposób obsługi określonych wyrażeń.  
  
|Wyrażenie|Zachowanie|  
|----------------|--------------|  
|<xref:System.CodeDom.CodeThisReferenceExpression>|To wyrażenie reprezentuje `this` lub `Me`. Aby zlokalizować obiekt, który jest skojarzony z tym wyrażeniem, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> Metoda będzie wyglądać w stosie kontekstu dla elementu <xref:System.ComponentModel.Design.Serialization.RootContext>. Ten obiekt zawiera obiekt główny wykresu i wyrażenie, które je reprezentuje. Jeśli obiekt jest obecny i wyrażenie jest zgodne, zostanie zwrócony obiekt główny. Jeśli nie można zlokalizować wystąpienia, zgłaszany jest błąd.|  
|<xref:System.CodeDom.CodeFieldReferenceExpression>|Jeśli obiekt docelowy odwołania do pola jest obliczany w obiekcie głównym, <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> Metoda parametru Menedżera zostanie użyta do pobrania wystąpienia obiektu na podstawie nazwy. W przeciwnym razie odbicie standardowe jest używane w odniesieniu do obiektu docelowego w celu zlokalizowania żądanego pola. Jeśli nie można zlokalizować pola, zgłaszany jest błąd.|  
|<xref:System.CodeDom.CodeVariableReferenceExpression>|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> Metoda`manager` parametru służy do lokalizowania wystąpienia reprezentującego daną nazwę zmiennej. Jeśli nie można zlokalizować wystąpienia, zgłaszany jest błąd.|  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A>w dalszym ciągu interpretuje wyrażenia, dopóki nie zostaną one całkowicie rozpoznane do obiektu lub dopóki nie będzie można uprościć wyrażenia. W tym przypadku <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> zwróci wartość <xref:System.CodeDom.CodeExpression> zawierającą najbardziej uproszczone wyrażenie. Następujące wyrażenia nie są obsługiwane:  
  
-   <xref:System.CodeDom.CodeEventReferenceExpression>  
  
-   <xref:System.CodeDom.CodeMethodReferenceExpression>  
  
-   <xref:System.CodeDom.CodeDelegateCreateExpression>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="DeserializeInstance">
      <MemberSignature Language="C#" Value="protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object DeserializeInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type, object[] parameters, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ DeserializeInstance(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type, cli::array &lt;System::Object ^&gt; ^ parameters, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj&#xA;override this.DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj" Usage="codeDomSerializerBase.DeserializeInstance (manager, type, parameters, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="type"><see cref="T:System.Type" /> Wystąpienie, które ma zostać zwrócone.</param>
        <param name="parameters">Parametry do przekazania do konstruktora dla <paramref name="type" />.</param>
        <param name="name">Nazwa deserializowanego obiektu.</param>
        <param name="addToContainer"><see langword="true" />Aby dodać ten obiekt do kontenera projektu; w przeciwnym razie. <see langword="false" /> Obiekt musi być zaimplementowany <see cref="T:System.ComponentModel.IComponent" /> dla tego elementu, aby miał efekt.</param>
        <summary>Zwraca wystąpienie danego typu.</summary>
        <returns>Wystąpienie elementu <paramref name="type" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> Metoda jest wywoływana podczas deserializacji w celu uzyskania wystąpienia obiektu. Gdy ta wartość jest wywoływana, należy zwrócić wystąpienie żądanego typu. Implementacja domyślna wywołuje <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> metodę `manager` parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />lub <paramref name="type" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="DeserializePropertiesFromResources">
      <MemberSignature Language="C#" Value="protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializePropertiesFromResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializePropertiesFromResources (manager As IDesignerSerializationManager, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializePropertiesFromResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.DeserializePropertiesFromResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.DeserializePropertiesFromResources (manager, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt, z którego mają zostać odszeregowane właściwości.</param>
        <param name="filter"><see cref="T:System.Attribute" /> Tablica, która filtruje właściwości, które zostaną deserializowane.</param>
        <summary>Deserializacji właściwości danego obiektu z pakietu zasobów niezmiennej kultury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> Metoda jest metodą pomocnika, do której klasy pochodne mogą być wywoływane. Szuka właściwości danego obiektu i próbuje załadować wartości z pakietu zasobów niezmiennej kultury. Jest to zwykle używane do obsługi właściwości czasu projektowania, które nie są emitowane do kodu źródłowego. Nie należy używać go dla zlokalizowanych właściwości, ponieważ działa tylko na niezmiennej kulturze.  
  
 Ta metoda sprawdza wszystkie właściwości `value` parametru, które pasują do atrybutów określonych `filter` przez parametr, a następnie sprawdza te właściwości w obiekcie binarnym zasobu. Jest to przydatne w przypadku deserializacji właściwości, które nie mogą być reprezentowane w kodzie, takich jak właściwości czasu projektowania.  
  
 Ta metoda wymaga, <xref:System.ComponentModel.Design.IResourceService> aby moduł ładujący projektanta zapewniał do odczytu zasoby. Jeśli w <xref:System.ComponentModel.Design.IResourceService> <xref:System.Resources.ResXResourceReader> przypadku niezmiennej kultury <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> zostanie odczytane zasoby z sekcji metadanych pliku zasobów XML (. resx), która nie jest uwzględniona w ostatnim skompilowanym kodzie. Jeśli ta usługa jest niedostępna, nie będą odczytywane żadne zasoby.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatement">
      <MemberSignature Language="C#" Value="protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializeStatement(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializeStatement (manager As IDesignerSerializationManager, statement As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializeStatement(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatement ^ statement);" />
      <MemberSignature Language="F#" Value="member this.DeserializeStatement : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatement -&gt; unit" Usage="codeDomSerializerBase.DeserializeStatement (manager, statement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="statement"><see cref="T:System.CodeDom.CodeStatement" /> Do deserializacji.</param>
        <summary>Deserializacji instrukcji przez interpretację i wykonanie instrukcji CodeDOM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> Metoda jest metodą pomocnika, do której klasy pochodne mogą być wywoływane. Interpretuje `statement` parametr.  
  
 <xref:System.CodeDom.CodeStatement> Deserializowany zostanie wypychany na stosie kontekstowym.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetAttributesFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager">Menedżer serializacji.</param>
        <param name="type">Typ docelowy.</param>
        <summary>Pobiera kolekcję atrybutów, zgodnie z definicją w docelowej wersji projektu .NET Framework.</summary>
        <returns>Kolekcja atrybutów, zgodnie z definicją w docelowej wersji projektu .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetAttributesHelper (manager As IDesignerSerializationManager, instance As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttributesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager">Menedżer serializacji.</param>
        <param name="instance">Obiekt typu docelowego.</param>
        <summary>Pobiera kolekcję atrybutów, zgodnie z definicją w docelowej wersji projektu .NET Framework.</summary>
        <returns>Kolekcja atrybutów, zgodnie z definicją w docelowej wersji projektu .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventsHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.EventDescriptorCollection GetEventsHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetEventsHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEventsHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEventsHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager">Menedżer serializacji.</param>
        <param name="instance">Obiekt typu docelowego.</param>
        <param name="attributes">Tablica atrybutów do przekazania do docelowej wersji .NET Framework.</param>
        <summary>Pobiera kolekcję zdarzeń zgodnie z definicją w docelowej wersji projektu .NET Framework.</summary>
        <returns>Kolekcja zdarzeń zgodnie z definicją w docelowej wersji projektu .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression GetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ GetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.GetExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt, dla którego ma zostać pobrane wyrażenie.</param>
        <summary>Zwraca wyrażenie dla danego obiektu.</summary>
        <returns><paramref name="value" />Reprezentujący <paramref name="value" /> lub<see langword="null" /> Jeśli nie ma żadnego istniejącego wyrażenia dla. <see cref="T:System.CodeDom.CodeExpression" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> Metoda zwraca wyrażenie reprezentujące dany obiekt. Może zwrócić `null`, wskazując, że nie ustawiono żadnego wyrażenia opisującego obiekt. Wyrażenia są uzyskiwane na jeden z trzech sposobów:  
  
-   Wyrażenie może być wynikiem wcześniejszego wywołania <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> metody.  
  
-   Wyrażenie mogło zostać znalezione w <xref:System.ComponentModel.Design.Serialization.RootContext>.  
  
-   Wyrażenie może być wyprowadzane przez <xref:System.ComponentModel.Design.IReferenceService>.  
  
 Aby można było utworzyć <xref:System.ComponentModel.Design.IReferenceService>wyrażenia za <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> pomocą metody, Metoda wysyła zapytanie do usługi referencyjnej o nazwę danego obiektu. Jeśli usługa expression zwraca poprawną nazwę, <xref:System.ComponentModel.Design.IReferenceService> <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> Metoda sprawdza, czy w nazwie występuje znak ".". Oznacza to, że usługa wyrażeń odnalazła ten obiekt jako wartość zwracaną właściwości tylko do odczytu w innym obiekcie. W przypadku wystąpienia "." <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> program podzieli odwołanie na części. Pierwsza z lewej strony to nazwa, która zostanie oceniona przy <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> użyciu metody. Dla każdej kolejnej części zostanie skompilowane wyrażenie odwołania do właściwości. Ostateczne wyrażenie zostanie zwrócone.  
  
 Jeśli obiekt nie ma ustawionego wyrażenia lub obiekt nie został odnaleziony w usłudze referencyjnej, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> `null`zwróci, wskazując, że nie istnieje żadne istniejące wyrażenie dla tego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetPropertiesHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetPropertiesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetPropertiesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager">Menedżer serializacji.</param>
        <param name="instance">Obiekt typu docelowego.</param>
        <param name="attributes">Tablica atrybutów do przekazania do docelowej wersji .NET Framework.</param>
        <summary>Pobiera kolekcję właściwości, zgodnie z definicją w docelowej wersji projektu .NET Framework.</summary>
        <returns>Kolekcja właściwości zgodnie z definicją w docelowej wersji projektu .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager">Menedżer serializacji.</param>
        <param name="type">Typ, z którego mają być używane metadane.</param>
        <summary>Pobiera typ odbicia wygenerowany na podstawie metadanych typu.</summary>
        <returns>Typ odbicia wygenerowany na podstawie metadanych <paramref name="type" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana nie będzie równa `type` i nie powinna być używana do porównywania z typami nieodbicia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetReflectionTypeHelper (manager As IDesignerSerializationManager, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager">Menedżer serializacji.</param>
        <param name="instance">Obiekt, z którego można korzystać z metadanych.</param>
        <summary>Pobiera typ odbicia generowany na podstawie metadanych obiektu.</summary>
        <returns>Typ odbicia wygenerowany na podstawie metadanych <paramref name="object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana nie będzie równa typowi obiektu i nie powinna być używana do porównywania z typami nieodbicia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lokalizuje serializator dla danej wartości lub typu obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, value As Object) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt określający serializator do pobrania.</param>
        <summary>Lokalizuje serializator dla danej wartości obiektu.</summary>
        <returns>Jest to odpowiednie dla <paramref name="value" />. <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest rozszerzeniem <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>metody. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> Metoda przyjmuje typ obiektu, a nie wartość obiektu. Jeśli strona zewnętrzna przesłonił metadane dla określonego obiektu za pomocą <xref:System.ComponentModel.TypeDescriptor>, to zastąpienie metadanych nie będzie widoczne <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> przez metodę, która przyjmuje tylko typ. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> Metoda sprawdza metadane wartości i typu wartości. Jeśli te dwa różne, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> będą wyglądały tak, jakby w wartości istnieje niestandardowy atrybut serializatora projektanta. Jeśli tak, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> program podejmie próbę użycia tego programu. W przeciwnym razie zostanie odroczony <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>do.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, valueType As Type) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ valueType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, valueType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="valueType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="valueType"><see cref="T:System.Type" /> Określanie serializatora do pobrania.</param>
        <summary>Lokalizuje serializator dla danego typu.</summary>
        <returns>Jest to odpowiednie dla <paramref name="valueType" />. <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest rozszerzeniem <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>metody. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> Metoda przyjmuje typ obiektu, a nie wartość obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />lub <paramref name="valueType" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="GetTargetFrameworkProvider">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider(class System.IServiceProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTargetFrameworkProvider (provider As IServiceProvider, instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetTargetFrameworkProvider(IServiceProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetTargetFrameworkProvider : IServiceProvider * obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="provider">Typ usługi Dostawca opis.</param>
        <param name="instance">Obiekt, z którego można uzyskać wartość pochodną usługi dostawcy opisu typu, <paramref name="provider" /> Jeśli <see langword="null" />jest.</param>
        <summary><see cref="T:System.ComponentModel.TypeDescriptionProvider" /> Pobiera informacje o wersji docelowej .NET Framework, do użycia w filtrowaniu typów.</summary>
        <returns>Dostawca opisu typu .NET Framework.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueName">
      <MemberSignature Language="C#" Value="protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetUniqueName(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUniqueName (manager As IDesignerSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetUniqueName(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetUniqueName : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; string" Usage="codeDomSerializerBase.GetUniqueName (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt, dla którego zostanie pobrana nazwa.</param>
        <summary>Zwraca unikatową nazwę danego obiektu.</summary>
        <returns>Unikatowa nazwa dla <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> Metoda<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> wywołuje metodę. Jeśli ta metoda nie zwróci nazwy, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> używa <xref:System.ComponentModel.Design.Serialization.INameCreationService> do wypróbowania prawidłowej nazwy dla obiektu. Jeśli usługa jest niedostępna, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> program wygeneruje nazwę na podstawie nazwy krótkiej typu połączonej z numerem indeksu, aby była unikatowa. Nazwa wynikowa jest skojarzona z menedżerem serializacji, wywołując <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> metodę przed zwróceniem nowej nazwy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSerialized">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą czy dany obiekt został Zserializowany.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do przetestowania dla poprzedniej serializacji.</param>
        <summary>Zwraca wartość wskazującą czy dany obiekt został Zserializowany.</summary>
        <returns><see langword="true" />Jeśli <paramref name="value" /> został Zserializowany; w przeciwnym <see langword="false" />razie,.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla parametru, który ma być uznawany za serializowany `value` , <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> parametr lub inny serializator musi wywołać metodę, aby utworzyć relację między i wyrażenie odwołania. `manager` `value`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object, honorPreset As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool honorPreset);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value, honorPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="honorPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do przetestowania dla poprzedniej serializacji.</param>
        <param name="honorPreset"><see langword="true" />Aby uwzględnić wstępnie zdefiniowane wyrażenia; w przeciwnym razie. <see langword="false" /></param>
        <summary>Zwraca wartość wskazującą czy dany obiekt został Zserializowany, opcjonalnie biorąc pod uwagę wstępnie ustawione wyrażenia.</summary>
        <returns><see langword="true" />Jeśli <paramref name="value" /> został Zserializowany; w przeciwnym <see langword="false" />razie,.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla parametru, który ma być uznawany za serializowany `value` , <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> parametr lub inny serializator musi wywołać metodę, aby utworzyć relację między i wyrażenie odwołania. `manager` `value`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeCreationExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeCreationExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, [out] bool&amp; isComplete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeCreationExpression (manager As IDesignerSerializationManager, value As Object, ByRef isComplete As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeCreationExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, [Runtime::InteropServices::Out] bool % isComplete);" />
      <MemberSignature Language="F#" Value="member this.SerializeCreationExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj *  -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeCreationExpression (manager, value, isComplete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isComplete" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do serializacji.</param>
        <param name="isComplete"><see langword="true" />Jeśli <paramref name="value" /> program<see langword="false" />został w pełni Zserializowany; w przeciwnym razie.</param>
        <summary>Zwraca wyrażenie reprezentujące tworzenie danego obiektu.</summary>
        <returns>Wyrażenie reprezentujące tworzenie <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda może służyć do serializacji wyrażenia, które reprezentuje tworzenie `value` parametru. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> Jest on świadomy deskryptorów wystąpień.  
  
 Parametr jest ustawiany na `true` , jeśli wyrażenie reprezentuje w pełni skonfigurowany obiekt lub `false` Jeśli w właściwościach obiektu trzeba wykonać dalsze serializacji. `isComplete`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeEvent">
      <MemberSignature Language="C#" Value="protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvent(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.EventDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvent (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, descriptor As EventDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvent(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::EventDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvent : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.EventDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeEvent (manager, statements, value, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="statements"><see cref="T:System.CodeDom.CodeStatementCollection" /> Do którego zostanie zserializowane zdarzenie.</param>
        <param name="value">Obiekt, z którym <paramref name="descriptor" /> jest powiązany.</param>
        <param name="descriptor"><see cref="T:System.ComponentModel.EventDescriptor" /> Określenie zdarzenia do serializacji.</param>
        <summary>Serializacja danego zdarzenia do kolekcji instrukcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika, którą klasy pochodne mogą wywołać do serializacji pojedynczego zdarzenia w danym <xref:System.CodeDom.CodeStatementCollection>. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>wysyła zapytanie do menedżera serializacji dla <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> danego zdarzenia, a następnie <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> prosi o jego serializacji.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>umieszcza parametry `statements` i `descriptor` w <xref:System.ComponentModel.Design.Serialization.ContextStack>.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A><xref:System.ComponentModel.Design.IEventBindingService> wymaga odnajdywania powiązań zdarzeń z metodami, które nie są kompilowane. Jeśli ta usługa nie jest obecna, powiązania zdarzeń z nieskompilowanymi metodami nie będą zapisywane. Powiązania zdarzeń z skompilowanymi metodami będą nadal serializowane, jeśli obiekty, do których są powiązane zdarzenia mogą być konwertowane na wyrażenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, lub <paramref name="descriptor" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException"><see cref="T:System.ComponentModel.Design.IEventBindingService" />jest niedostępny.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.ComponentModel.Design.IEventBindingService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeEvents">
      <MemberSignature Language="C#" Value="protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, params Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvents(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvents (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, ParamArray filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvents(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, ... cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvents : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeEvents (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="statements"><see cref="T:System.CodeDom.CodeStatementCollection" /> Do którego zostanie zserializowane zdarzenie.</param>
        <param name="value">Obiekt, na którym będą serializowane zdarzenia.</param>
        <param name="filter"><see cref="T:System.Attribute" /> Tablica, która filtruje, które zdarzenia będą serializowane.</param>
        <summary>Serializacja określonych zdarzeń do danej kolekcji instrukcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> Metoda jest metodą pomocnika, do której klasy pochodne mogą być wywoływane. Sprawdza on zdarzenia na `value` parametrze, który jest zgodny z `filter` parametrem, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> a następnie wywołuje metodę dla każdego zdarzenia.  
  
 Metoda umieszcza wartość <xref:System.ComponentModel.InheritanceAttribute> dla `value` na .<xref:System.ComponentModel.Design.Serialization.ContextStack> <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" />, lub <paramref name="statements" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperties">
      <MemberSignature Language="C#" Value="protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperties(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperties (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperties(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperties : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeProperties (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="statements">, <see cref="T:System.CodeDom.CodeStatementCollection" /> Do którego zostaną zserializowane właściwości.</param>
        <param name="value">Obiekt, na którym zostaną zserializowane właściwości.</param>
        <param name="filter"><see cref="T:System.Attribute" /> Tablica, która filtruje właściwości, które zostaną serializowane.</param>
        <summary>Deserializacji właściwości danego obiektu do kolekcji instrukcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> Metoda jest metodą pomocnika, do której klasy pochodne mogą być wywoływane. Sprawdza właściwości na `value` parametrze, który pasuje do `filter` parametru, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> a następnie wywołuje metodę dla każdej właściwości.  
  
 Metoda umieszcza wartość <xref:System.ComponentModel.InheritanceAttribute> dla `value` na .<xref:System.ComponentModel.Design.Serialization.ContextStack> <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" />, lub <paramref name="statements" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializePropertiesToResources">
      <MemberSignature Language="C#" Value="protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializePropertiesToResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializePropertiesToResources (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializePropertiesToResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializePropertiesToResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializePropertiesToResources (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="statements">Nie używany.</param>
        <param name="value">Obiekt, którego właściwości będą serializowane.</param>
        <param name="filter"><see cref="T:System.Attribute" /> Tablica, która filtruje właściwości, które zostaną serializowane.</param>
        <summary>Deserializacji właściwości danego obiektu do pakietu zasobów niezmiennej kultury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> Metoda jest metodą pomocnika, do której klasy pochodne mogą być wywoływane. Sprawdza właściwości na `value` parametrze, który `filter` odpowiada parametrowi, a następnie deserializacji właściwości do pakietu zasobów niezmiennej kultury. Jeśli usługa zasobów zwróci <xref:System.Resources.ResXResourceWriter>wartość, wartości właściwości będą przechowywane w sekcji Metadata pliku zasobów XML (. resx). `statements` Parametr nie jest używany.  
  
 Aby można było serializować jako zasób, właściwość musi być prosta (nie jest to właściwość content), a jej wartość musi być możliwa do serializacji. Właściwości, które nie są zgodne z tym wzorcem, zostaną pominięte.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A>wymaga, <xref:System.Resources.ResourceWriter> Aby uzyskać do zapisu zasoby dla niezmiennej kultury. <xref:System.ComponentModel.Design.IResourceService> Jeśli ta usługa jest niedostępna, nie będą zapisywane żadne zasoby.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" />, lub <paramref name="statements" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <altmember cref="T:System.Resources.ResXResourceWriter" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperty">
      <MemberSignature Language="C#" Value="protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperty(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.PropertyDescriptor propertyToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperty (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, propertyToSerialize As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperty(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::PropertyDescriptor ^ propertyToSerialize);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperty : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeProperty (manager, statements, value, propertyToSerialize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="propertyToSerialize" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="statements">, <see cref="T:System.CodeDom.CodeStatementCollection" /> Do którego zostanie zserializowana właściwość.</param>
        <param name="value">Obiekt, na którym właściwość zostanie zserializowana.</param>
        <param name="propertyToSerialize">Właściwość do serializacji.</param>
        <summary>Serializować właściwość dla danego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> Metoda Pobieradla`propertyToSerialize`parametru i delegatów. <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>umieszcza parametry `statements` i `propertyToSerialize` w <xref:System.ComponentModel.Design.Serialization.ContextStack>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, lub <paramref name="propertyToSerialize" /> jest .<see langword="null" /></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeResource">
      <MemberSignature Language="C#" Value="protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResource(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResource (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResource(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResource : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResource (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="resourceName">Nazwa pakietu zasobu, do którego <paramref name="value" /> zostanie zserializowana.</param>
        <param name="value">Obiekt do serializacji.</param>
        <summary>Serializacja danego obiektu do pakietu zasobów przy użyciu podaną nazwę zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> Metoda jest metodą pomocnika, która serializować wartość do pakietu zasobów pod podaną nazwą. Kulturę, w której zapisano zasób, jest określana przez przeszukiwanie <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> kolekcji menedżera serializacji dla właściwości o nazwie. `ResourceCulture` Jeśli ta właściwość istnieje, zasoby będą zapisywane w tej kulturze. W przeciwnym razie zasoby będą zapisywane w niezmiennej kulturze. Parametr `value` musi być możliwy do serializacji.  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>wymaga, <xref:System.Resources.ResourceWriter> Aby uzyskać do zapisania zasobów dla właściwej kultury. <xref:System.ComponentModel.Design.IResourceService> Jeśli ta usługa jest niedostępna <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> , zamiast tego będzie kompilować obiekt binarny w kodzie, który reprezentuje zasób.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>
            <see langword="ResourceCulture" />jest właściwością do odczytu i zapisu dostępną za pomocą <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> kolekcji menedżera serializacji. Metoda <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> nigdy nie zmienia wartości tej właściwości. po prostu odczytuje ją, aby określić kulturę, do której będzie pisać. Właściwość jest ustawiana podczas deserializacji, ponieważ zasoby są analizowane i ładowane.</para></block>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeResourceInvariant">
      <MemberSignature Language="C#" Value="protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResourceInvariant(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResourceInvariant (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResourceInvariant(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResourceInvariant : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResourceInvariant (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="resourceName">Nazwa pakietu zasobu, do którego <paramref name="value" /> zostanie zserializowana.</param>
        <param name="value">Obiekt do serializacji.</param>
        <summary>Serializacja danego obiektu do pakietu zasobów przy użyciu podaną nazwę zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasób jest zawsze zapisywana w niezmiennej kulturze. Parametr `value` musi być możliwy do serializacji.  
  
 Metoda wymaga, <xref:System.Resources.ResourceWriter> Aby uzyskać do zapisania zasobów dla właściwej kultury. <xref:System.ComponentModel.Design.IResourceService> <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> Jeśli ta usługa jest niedostępna <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> , zamiast tego będzie kompilować obiekt binarny w kodzie, który reprezentuje zasób.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeToExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do serializacji. Może być <see langword="null" />.</param>
        <summary>Serializacja danego obiektu w wyrażeniu.</summary>
        <returns><see cref="T:System.CodeDom.CodeExpression" /> Obiekt <paramref name="value" /> , Jeśli<see langword="null" />może być serializowany; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr może mieć `null`wartość, w którym przypadku zostanie zwrócone wyrażenie pierwotne. `value`  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> Metoda używa następujących reguł serializacji typów:  
  
1.  Najpierw wywołuje metodę, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> aby sprawdzić, czy wyrażenie zostało już utworzone dla obiektu. Jeśli tak, zwraca istniejące wyrażenie.  
  
2.  Następnie lokalizuje serializator obiektu i prosi o jego serializacji.  
  
3.  Jeśli zwracaną wartością serializatora obiektu jest <xref:System.CodeDom.CodeExpression>, zwracane jest wyrażenie.  
  
4.  Wykonuje jedno ostatnie wywołanie <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> , aby zobaczyć, czy serializator dodał wyrażenie.  
  
5.  Na koniec zwraca wartość `null`.  
  
 Jeśli nie można utworzyć żadnego wyrażenia i nie można znaleźć odpowiedniego serializatora, w Menedżerze serializacji zostanie zgłoszony błąd. Jeśli wystąpił Serializator, ale nie powiodło się wygenerowanie wyrażenia, żaden błąd nie zostanie zgłoszony. W tym przypadku zakłada się, że serializator już zgłosił błąd lub nie próbował serializować obiektu.  
  
 Jeśli serializator zwrócił instrukcję lub kolekcję instrukcji, te instrukcje nie zostaną odrzucone. Metoda najpierw szuka <xref:System.ComponentModel.Design.Serialization.StatementContext> na stosie kontekstu i doda instrukcje do <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> właściwości obiektu kontekstu instrukcji. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> Jeśli nie ma kontekstu instrukcji, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> Metoda będzie wyglądała w kontekście <xref:System.CodeDom.CodeStatementCollection> dla a i dodać instrukcje w tym miejscu. Jeśli nie można znaleźć miejsca, aby dodać instrukcje, zostanie wygenerowany błąd.  
  
> [!NOTE]
>  Nie należy wywoływać <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> metody w <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> trakcie serializowania własnego obiektu. Zamiast tego należy wywołać metodę <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>. Jeśli zwróci `null`, Utwórz własne wyrażenie i Wywołaj <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>. Następnie kontynuuj pracę z resztą serializacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.StatementContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SerializeToResourceExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Serializacja obiektu w wyrażeniu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do serializacji.</param>
        <summary>Serializacja danego obiektu w wyrażeniu.</summary>
        <returns>A <see cref="T:System.CodeDom.CodeExpression" /> zawierającego<paramref name="value" /> jako wyrażenie serializowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> Metoda jest metodą pomocnika, która deserializacji wartość do wyrażenia zasobu. Jest to w przeciwieństwie do <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> metody, która zapisuje wartość do obiektu binarnego zasobu. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>przechodzi jeszcze jeden krok i zwraca wyrażenie, które może służyć do odzyskania zasobu. Na przykład zwracana wartość może być równa "RM. GetValue ("SomeBitmap"); ". Nazwa zasobu jest obliczana na podstawie <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, jeśli jeden z nich znajduje się na stosie kontekstowym.  
  
 Metoda będzie wyglądać <xref:System.ComponentModel.Design.Serialization.ContextStack> na następujących obiektach: <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>  
  
-   <xref:System.CodeDom.CodeStatementCollection>-zbiór instrukcji, do których należy dodać Menedżera zasobów do, jeśli należy go zadeklarować.  
  
-   <xref:System.ComponentModel.Design.Serialization.RootContext>-wyrażenie główne, które jest konieczne do utworzenia Menedżera zasobów.  
  
-   <xref:System.ComponentModel.Design.Serialization.ExpressionContext>— służy do wyrobienia nazwy zasobu i podejmowania decyzji o rodzaju wywołania usługi Resource Manager.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object, ensureInvariant As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool ensureInvariant);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value, ensureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="ensureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do serializacji.</param>
        <param name="ensureInvariant"><see langword="true" />Aby serializować do niezmiennej kultury; w przeciwnym razie. <see langword="false" /></param>
        <summary>Serializować dany obiekt do wyrażenia właściwego dla niezmiennej kultury.</summary>
        <returns>A <see cref="T:System.CodeDom.CodeExpression" /> zawierającego<paramref name="value" /> jako wyrażenie serializowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli parametrem jest `true`, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> Metoda również zapisze wartość zasobu w pliku zasobów kultury niezmiennej, jeśli bieżąca `ResourceCulture` nie jest kulturą niezmienną. `ensureInvariant`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kojarzy obiekt z wyrażeniem.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do serializacji.</param>
        <param name="expression">, <see cref="T:System.CodeDom.CodeExpression" /> Z którym ma zostać <paramref name="value" />skojarzone.</param>
        <summary>Kojarzy obiekt z wyrażeniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika, która <xref:System.CodeDom.CodeExpression> kojarzy z obiektem. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> Obiekty, które zostały skojarzone z wyrażeniami w ten sposób, są dostępne <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> za pomocą metody. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>zapisuje tabelę wyrażeń jako obiekt dołączany na stosie kontekstu, aby był dostępny przez dowolną <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> metodę serializatora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="value" />, lub <paramref name="expression" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression, bool isPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression, isPreset As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression, bool isPreset);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression * bool -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression, isPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do serializacji.</param>
        <param name="expression">, <see cref="T:System.CodeDom.CodeExpression" /> Z którym ma zostać <paramref name="value" />skojarzone.</param>
        <param name="isPreset"><see langword="true" />Aby określić wyrażenie wstępne; w przeciwnym razie. <see langword="false" /></param>
        <summary>Kojarzy obiekt z wyrażeniem, opcjonalnie określając wstępnie zdefiniowane wyrażenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest metodą pomocnika, która <xref:System.CodeDom.CodeExpression> kojarzy z obiektem. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> Obiekty, które zostały skojarzone z wyrażeniami w ten sposób, są dostępne <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> za pomocą metody. Zapisuje tabelę wyrażeń jako obiekt dołączany na stosie kontekstowym, tak aby był dostępny przez dowolną <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> metodę serializatora. <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
  </Members>
</Type>
