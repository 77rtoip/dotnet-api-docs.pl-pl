<Type Name="INameCreationService" FullName="System.ComponentModel.Design.Serialization.INameCreationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24dd2018a1322ca37eff176a8f1d9bac007bafa5" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58700463" /></Metadata><TypeSignature Language="C#" Value="public interface INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameCreationService" />
  <TypeSignature Language="F#" Value="type INameCreationService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b9077-101">Zapewnia to usługa, która może wygenerować unikatowej nazwy dla obiektów.</span><span class="sxs-lookup"><span data-stu-id="b9077-101">Provides a service that can generate unique names for objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9077-102">Element <xref:System.ComponentModel.Design.Serialization.DesignerLoader> można zaimplementować ta usługa zapewnia metodę projektanta w celu tworzenia nowych, unikatowych nazw obiektów.</span><span class="sxs-lookup"><span data-stu-id="b9077-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this service to provide a way for a designer to create new, unique names for objects.</span></span> <span data-ttu-id="b9077-103">Jeśli ta usługa nie jest dostępna, Projektant używa implementacji domyślnej.</span><span class="sxs-lookup"><span data-stu-id="b9077-103">If this service is not available, the designer uses a default implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9077-104">Poniższy przykładowy kod zawiera przykład <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementacji.</span><span class="sxs-lookup"><span data-stu-id="b9077-104">The following example code provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementation.</span></span> <span data-ttu-id="b9077-105">Usługi można utworzyć unikatową nazwę, na podstawie typu, który nie pasuje do żadnych nazw, w określonym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="b9077-105">The service can create a unique name based on a type that does not match any names in the specified container.</span></span> <span data-ttu-id="b9077-106">Go sprawdzić, czy określony ciąg nazwy.</span><span class="sxs-lookup"><span data-stu-id="b9077-106">It can also validate a specified name string.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[INameCreationServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#1)]
 [!code-vb[INameCreationServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateName">
      <MemberSignature Language="C#" Value="public string CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateName (container As IContainer, dataType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="abstract member CreateName : System.ComponentModel.IContainer * Type -&gt; string" Usage="iNameCreationService.CreateName (container, dataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="b9077-107">Kontener, w której zostanie dodany nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="b9077-107">The container where the new object is added.</span></span></param>
        <param name="dataType"><span data-ttu-id="b9077-108">Typ danych obiektu, który otrzymuje nazwę.</span><span class="sxs-lookup"><span data-stu-id="b9077-108">The data type of the object that receives the name.</span></span></param>
        <summary><span data-ttu-id="b9077-109">Tworzy nową nazwę, która jest unikatowa dla wszystkich składników w określonym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="b9077-109">Creates a new name that is unique to all components in the specified container.</span></span></summary>
        <returns><span data-ttu-id="b9077-110">Unikatowa nazwa dla typu danych.</span><span class="sxs-lookup"><span data-stu-id="b9077-110">A unique name for the data type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9077-111">Ta metoda zwraca nazwę dla nowego obiektu, który jest unikatowy w obrębie określonego kontenera.</span><span class="sxs-lookup"><span data-stu-id="b9077-111">This method returns a name for the new object that is unique within the specified container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9077-112">Poniższy kod zawiera przykład <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> implementacji metody.</span><span class="sxs-lookup"><span data-stu-id="b9077-112">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="b9077-113">Metody można utworzyć nazwy na podstawie nazwy określonego typu, który jest unikatowy dla nazwy elementów w określonym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="b9077-113">The method can create a name based on the name of a specified type that is unique to the names of the components within the specified container.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[INameCreationServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#2)]
 [!code-vb[INameCreationServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b9077-114">Tego rodzaju usługi często zaimplementowany, aby utworzyć unikatowy obiekt nazwy niż nazwa typu danych, często jest dołączany wraz z liczbą, która zezwala na nazwę, która zostanie Unikatowy identyfikator.</span><span class="sxs-lookup"><span data-stu-id="b9077-114">This type of service is often implemented to create a unique object name from the name of the data type, often appended with a number that allows the name to be a unique identifier.</span></span> <span data-ttu-id="b9077-115">Na przykład <see langword="ListBox1" /> dla <see langword="ListBox" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="b9077-115">For example, <see langword="ListBox1" /> for a <see langword="ListBox" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsValidName">
      <MemberSignature Language="C#" Value="public bool IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsValidName : string -&gt; bool" Usage="iNameCreationService.IsValidName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b9077-116">Nazwa do sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="b9077-116">The name to validate.</span></span></param>
        <summary><span data-ttu-id="b9077-117">Pobiera wartość wskazującą, czy określona nazwa jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="b9077-117">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <returns><span data-ttu-id="b9077-118"><see langword="true" /> Jeśli nazwa jest prawidłowa; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9077-118"><see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9077-119">Implementacja <xref:System.ComponentModel.Design.Serialization.INameCreationService> może mieć reguły, które definiują parametry prawidłowe nazwy.</span><span class="sxs-lookup"><span data-stu-id="b9077-119">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="b9077-120">Ta metoda może być implementowany zweryfikować nazwy i wymuszanie tych zasad.</span><span class="sxs-lookup"><span data-stu-id="b9077-120">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9077-121">Poniższy kod zawiera przykład <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> implementacji metody.</span><span class="sxs-lookup"><span data-stu-id="b9077-121">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="b9077-122">Metoda używa schemat sprawdzania poprawności ciągu, który analizuje każdy znak określonego ciągu w celu ustalenia, czy określony ciąg jest prawidłową nazwą.</span><span class="sxs-lookup"><span data-stu-id="b9077-122">The method uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="b9077-123">Metoda ta zwraca `true` Jeśli ciąg jest prawidłowy, lub `false` inaczej.</span><span class="sxs-lookup"><span data-stu-id="b9077-123">The method returns `true` if the string is valid, or `false` otherwise.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[INameCreationServiceExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#3)]
 [!code-vb[INameCreationServiceExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="public void ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ValidateName : string -&gt; unit" Usage="iNameCreationService.ValidateName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b9077-124">Nazwa do sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="b9077-124">The name to validate.</span></span></param>
        <summary><span data-ttu-id="b9077-125">Pobiera wartość wskazującą, czy określona nazwa jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="b9077-125">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9077-126">Implementacja <xref:System.ComponentModel.Design.Serialization.INameCreationService> może mieć reguły, które definiują parametry prawidłowe nazwy.</span><span class="sxs-lookup"><span data-stu-id="b9077-126">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="b9077-127">Ta metoda może być implementowany zweryfikować nazwy i wymuszanie tych zasad.</span><span class="sxs-lookup"><span data-stu-id="b9077-127">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
 <span data-ttu-id="b9077-128">Ta metoda jest podobna do <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, z tą różnicą, że ta metoda zgłasza wyjątek, jeśli nazwa jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="b9077-128">This method is similar to <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, except that this method throws an exception if the name is invalid.</span></span> <span data-ttu-id="b9077-129">Dzięki temu implementacje zawiera szczegółowe informacje, komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="b9077-129">This allows implementers to provide detailed information in the exception message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9077-130">Poniższy kod zawiera przykład <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> implementacji metody, która wykorzystuje schemat sprawdzania poprawności ciągu, który analizuje każdy znak określonego ciągu w celu ustalenia, czy określony ciąg jest prawidłową nazwą.</span><span class="sxs-lookup"><span data-stu-id="b9077-130">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation that uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="b9077-131">Metoda zgłasza wyjątek, jeśli ciąg nie jest prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="b9077-131">The method throws an exception if the string is not valid.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[INameCreationServiceExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#4)]
 [!code-vb[INameCreationServiceExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>