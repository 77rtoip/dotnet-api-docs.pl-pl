<Type Name="ICodeDomDesignerReload" FullName="System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04d511c4bfa22711b707e6f2587674da8c2c5ec9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30439566" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICodeDomDesignerReload" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICodeDomDesignerReload" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICodeDomDesignerReload" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICodeDomDesignerReload" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs, który może służyć do optymalizacji ponownym załadowaniem projektanta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.CodeDom.Compiler.CodeDomProvider> można zaimplementować ten interfejs obsługują ponowne ładowanie przez projektanta. Podczas projektanta reparses plików do wyświetlenia, można użyć tego interfejsu do zwiększenia wydajności.  
  
 Do obsługi tej metody optymalizacji wydajności, można przekazać projektanta <xref:System.CodeDom.CodeCompileUnit> reprezentujący kod dokumentu do <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> metody. <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> Zwraca wartość wskazującą, czy kod uległa zmianie, i zwykle, czy kod należy załadować ponownie projektanta. W przeciwnym razie nie jest konieczne poświęcić czas ponownego ładowania projektanta.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ShouldReloadDesigner">
      <MemberSignature Language="C#" Value="public bool ShouldReloadDesigner (System.CodeDom.CodeCompileUnit newTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldReloadDesigner(class System.CodeDom.CodeCompileUnit newTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldReloadDesigner (newTree As CodeCompileUnit) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldReloadDesigner(System::CodeDom::CodeCompileUnit ^ newTree);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newTree" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="newTree">A <see cref="T:System.CodeDom.CodeCompileUnit" /> kodem dokumentu projektanta.</param>
        <summary>Wskazuje, czy projektant powinien Załaduj ponownie, aby zaimportować moduł kompilacji określonego poprawnie.</summary>
        <returns>
          <see langword="true" /> Jeśli załadować ponownie projektanta; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>