<Type Name="IDesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0990189131b4a8327f8969b14f8778dfa0e1c7c3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69331040" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerSerializationManager implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerSerializationManager&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="F#" Value="type IDesignerSerializationManager = interface&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="09e83-101">Udostępnia interfejs, który może zarządzać serializacji czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="09e83-101">Provides an interface that can manage design-time serialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-102">Projektant może wykorzystać <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> do uzyskiwania dostępu do usług użytecznych do zarządzania procesami serializacji czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="09e83-102">A designer can utilize <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="09e83-103">Na przykład Klasa implementująca menedżera serializacji projektanta może używać tego interfejsu do tworzenia obiektów, wyszukiwania typów, identyfikowania obiektów i dostosowywania serializacji poszczególnych typów.</span><span class="sxs-lookup"><span data-stu-id="09e83-103">For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e83-104">Poniższy przykład ilustruje sposób użycia <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> do serializacji i deserializacji instrukcji kodu dom.</span><span class="sxs-lookup"><span data-stu-id="09e83-104">The following example illustrates how to use <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to serialize and deserialize Code DOM statements.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#1)]
 [!code-csharp[IDesignerSerializationManagerSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#1)]
 [!code-vb[IDesignerSerializationManagerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="iDesignerSerializationManager.AddSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="09e83-105">Dostawca serializacji do dodania.</span><span class="sxs-lookup"><span data-stu-id="09e83-105">The serialization provider to add.</span></span></param>
        <summary><span data-ttu-id="09e83-106">Dodaje określonego dostawcę serializacji do menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-106">Adds the specified serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-107">Ta metoda dodaje niestandardowego dostawcę serializacji do menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-107">This method adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="09e83-108">Dostawcy serializacji mogą udostępniać niestandardowe serializatory dla określonego typu obiektu lub zestawu typów obiektów.</span><span class="sxs-lookup"><span data-stu-id="09e83-108">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="09e83-109">Podczas serializacji każdy niestandardowy dostawca serializacji jest wysyłany w celu zwrócenia serializatora dla określonego typu danych, jeśli może go udostępnić.</span><span class="sxs-lookup"><span data-stu-id="09e83-109">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="09e83-110">Menedżer serializacji używa niestandardowego serializatora dostarczonego przez tę metodę przed użyciem domyślnego serializatora dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="09e83-110">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.Design.Serialization.ContextStack" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09e83-111">Pobiera oparty na stosach obszar magazynu zdefiniowany przez użytkownika, który jest przydatny do komunikacji między serializatorami.</span><span class="sxs-lookup"><span data-stu-id="09e83-111">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span></span></summary>
        <value><span data-ttu-id="09e83-112">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> , który przechowuje dane.</span><span class="sxs-lookup"><span data-stu-id="09e83-112">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-113">Ten obszar magazynowania zapewnia komunikację z informacjami kontekstu obiektu do serializatorów.</span><span class="sxs-lookup"><span data-stu-id="09e83-113">This storage area provides communication of object context information to serializers.</span></span> <span data-ttu-id="09e83-114">Informacje kontekstowe dotyczące obiektów, które są serializowane, można przechowywać i uzyskiwać <xref:System.ComponentModel.Design.Serialization.ContextStack>do nich dostęp za poorednictwem tego elementu.</span><span class="sxs-lookup"><span data-stu-id="09e83-114">Context information about objects that are being serialized can be stored and accessed through this <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="iDesignerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="09e83-115">Typ danych do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="09e83-115">The data type to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="09e83-116">Argumenty, które mają zostać przekazane do konstruktora dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="09e83-116">The arguments to pass to the constructor for this type.</span></span></param>
        <param name="name"><span data-ttu-id="09e83-117">Nazwa obiektu.</span><span class="sxs-lookup"><span data-stu-id="09e83-117">The name of the object.</span></span> <span data-ttu-id="09e83-118">Ta nazwa może służyć do późniejszego dostępu do obiektu za <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />pomocą.</span><span class="sxs-lookup"><span data-stu-id="09e83-118">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span></span> <span data-ttu-id="09e83-119">Jeśli <see langword="null" /> jest zakończony, obiekt jest nadal tworzony, ale nie można uzyskać do niego dostępu według nazwy.</span><span class="sxs-lookup"><span data-stu-id="09e83-119">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="09e83-120">Jeśli <see langword="true" />ten obiekt jest dodawany do kontenera projektu.</span><span class="sxs-lookup"><span data-stu-id="09e83-120">If <see langword="true" />, this object is added to the design container.</span></span> <span data-ttu-id="09e83-121">Obiekt musi być zaimplementowany <see cref="T:System.ComponentModel.IComponent" /> dla tego elementu, aby miał efekt.</span><span class="sxs-lookup"><span data-stu-id="09e83-121">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="09e83-122">Tworzy wystąpienie określonego typu i dodaje je do kolekcji nazwanych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="09e83-122">Creates an instance of the specified type and adds it to a collection of named instances.</span></span></summary>
        <returns><span data-ttu-id="09e83-123">Nowo utworzony wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="09e83-123">The newly created object instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-124">Obiekty, które <xref:System.ComponentModel.IComponent> implementują, są dodawane do kontenera czasu projektowania, `addToContainer` Jeśli parametr `true`ma wartość.</span><span class="sxs-lookup"><span data-stu-id="09e83-124">Objects that implement <xref:System.ComponentModel.IComponent> are added to the design-time container if the `addToContainer` parameter is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public object GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstance (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInstance(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetInstance : string -&gt; obj" Usage="iDesignerSerializationManager.GetInstance name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09e83-125">Nazwa obiektu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="09e83-125">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="09e83-126">Pobiera wystąpienie utworzonego obiektu o określonej nazwie lub <see langword="null" /> Jeśli ten obiekt nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="09e83-126">Gets an instance of a created object of the specified name, or <see langword="null" /> if that object does not exist.</span></span></summary>
        <returns><span data-ttu-id="09e83-127">Wystąpienie obiektu o podaną nazwę lub <see langword="null" /> Jeśli nie można odnaleźć obiektu o tej nazwie.</span><span class="sxs-lookup"><span data-stu-id="09e83-127">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-128">Nazwa obiektu do pobrania musi być ustawiona za pomocą wcześniejszego wywołania do <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e83-128">The name of the object to retrieve must have been set through a prior call to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetName : obj -&gt; string" Usage="iDesignerSerializationManager.GetName value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09e83-129">Obiekt, dla którego ma zostać pobrana nazwa.</span><span class="sxs-lookup"><span data-stu-id="09e83-129">The object to retrieve the name for.</span></span></param>
        <summary><span data-ttu-id="09e83-130">Pobiera nazwę określonego obiektu lub <see langword="null" /> Jeśli obiekt nie ma nazwy.</span><span class="sxs-lookup"><span data-stu-id="09e83-130">Gets the name of the specified object, or <see langword="null" /> if the object has no name.</span></span></summary>
        <returns><span data-ttu-id="09e83-131">Nazwa obiektu lub <see langword="null" /> Jeśli obiekt jest bez nazwy.</span><span class="sxs-lookup"><span data-stu-id="09e83-131">The name of the object, or <see langword="null" /> if the object is unnamed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="abstract member GetSerializer : Type * Type -&gt; obj" Usage="iDesignerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="09e83-132">Typ obiektu, dla którego ma zostać pobrany serializator.</span><span class="sxs-lookup"><span data-stu-id="09e83-132">The type of the object to get the serializer for.</span></span></param>
        <param name="serializerType"><span data-ttu-id="09e83-133">Typ serializatora do pobrania.</span><span class="sxs-lookup"><span data-stu-id="09e83-133">The type of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="09e83-134">Pobiera serializator żądanego typu dla określonego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="09e83-134">Gets a serializer of the requested type for the specified object type.</span></span></summary>
        <returns><span data-ttu-id="09e83-135">Wystąpienie żądanego serializatora lub <see langword="null" /> Jeśli nie można zlokalizować odpowiedniego serializatora.</span><span class="sxs-lookup"><span data-stu-id="09e83-135">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="09e83-136">W pełni kwalifikowana nazwa typu do załadowania.</span><span class="sxs-lookup"><span data-stu-id="09e83-136">The fully qualified name of the type to load.</span></span></param>
        <summary><span data-ttu-id="09e83-137">Pobiera typ określonej nazwy.</span><span class="sxs-lookup"><span data-stu-id="09e83-137">Gets a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="09e83-138">Wystąpienie typu lub <see langword="null" /> , jeśli nie można załadować typu.</span><span class="sxs-lookup"><span data-stu-id="09e83-138">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09e83-139">Wskazuje niestandardowe właściwości, które można serializować przy użyciu dostępnych serializatorów.</span><span class="sxs-lookup"><span data-stu-id="09e83-139">Indicates custom properties that can be serializable with available serializers.</span></span></summary>
        <value><span data-ttu-id="09e83-140"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Zawierający właściwości, które mają być serializowane.</span><span class="sxs-lookup"><span data-stu-id="09e83-140">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-141">Ta właściwość może zawierać pustą kolekcję.</span><span class="sxs-lookup"><span data-stu-id="09e83-141">This property can contain an empty collection.</span></span> <span data-ttu-id="09e83-142">Serializator nie powinien założono, że takie właściwości istnieją.</span><span class="sxs-lookup"><span data-stu-id="09e83-142">A serializer should never assume that such properties exist.</span></span> <span data-ttu-id="09e83-143">Klasa pochodna lub implementacja <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> definiują zestaw właściwości, które są tutaj uwidocznione.</span><span class="sxs-lookup"><span data-stu-id="09e83-143">A derived class or implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> defines the set of properties that are exposed here.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="09e83-144">Tę właściwość można wypełnić przez kod użytkownika.</span><span class="sxs-lookup"><span data-stu-id="09e83-144">This property can be populated by user code.</span></span> <span data-ttu-id="09e83-145">Aby wypełnić tę kolekcję, może być konieczne wywołanie metody <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />. <see cref="T:System.ComponentModel.TypeDescriptor" /></span><span class="sxs-lookup"><span data-stu-id="09e83-145">It may be sufficient to call <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> of <see cref="T:System.ComponentModel.TypeDescriptor" /> to populate this collection.</span></span> <span data-ttu-id="09e83-146">Menedżer serializacji musi zwrócić pustą kolekcję, jeśli nie istnieją żadne właściwości niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="09e83-146">The serialization manager must return an empty collection if no custom properties exist.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="iDesignerSerializationManager.RemoveSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="09e83-147">Dostawca do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="09e83-147">The provider to remove.</span></span> <span data-ttu-id="09e83-148">Ten obiekt musi zostać dodany za pomocą <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="09e83-148">This object must have been added using <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span></span></param>
        <summary><span data-ttu-id="09e83-149">Usuwa niestandardowego dostawcę serializacji z menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-149">Removes a custom serialization provider from the serialization manager.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportError(System::Object ^ errorInformation);" />
      <MemberSignature Language="F#" Value="abstract member ReportError : obj -&gt; unit" Usage="iDesignerSerializationManager.ReportError errorInformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="09e83-150">Błąd do zgłoszenia.</span><span class="sxs-lookup"><span data-stu-id="09e83-150">The error to report.</span></span> <span data-ttu-id="09e83-151">Ten obiekt informacji może być dowolnego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="09e83-151">This information object can be of any object type.</span></span> <span data-ttu-id="09e83-152">Jeśli jest to wyjątek, komunikat wyjątku jest wyodrębniany i raportowany dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="09e83-152">If it is an exception, the message of the exception is extracted and reported to the user.</span></span> <span data-ttu-id="09e83-153">Jeśli jest to inny typ, <see cref="M:System.Object.ToString" /> jest wywoływana w celu wyświetlenia informacji dla użytkownika.</span><span class="sxs-lookup"><span data-stu-id="09e83-153">If it is any other type, <see cref="M:System.Object.ToString" /> is called to display the information to the user.</span></span></param>
        <summary><span data-ttu-id="09e83-154">Zgłasza błąd podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-154">Reports an error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-155">Jeśli Menedżer serializacji obsługuje rejestrowanie wielu błędów w jego implementacji <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, może zapisać obiekt informacji o błędzie dla przyszłego raportu, w którym wszystkie napotkane błędy mogą być wyświetlane jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="09e83-155">If the serialization manager supports logging multiple errors in its implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, it can store the error information object for a future report where all the errors encountered can be displayed at once.</span></span> <span data-ttu-id="09e83-156">Jeśli ta metoda przechowuje wiele błędów, serializacja może być kontynuowana po wywołaniu tej metody.</span><span class="sxs-lookup"><span data-stu-id="09e83-156">If this method stores multiple errors, serialization can continue after a call to this method.</span></span> <span data-ttu-id="09e83-157">Jeśli ta metoda nie obsługuje rejestrowania wielu błędów, ta metoda powinna zgłosić wyjątek, który przerywa serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-157">If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09e83-158">Menedżer serializacji nigdy nie powinien zgłosić wyjątku dla błędów napotkanych podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-158">The serialization manager should never throw an exception for errors encountered during serialization.</span></span> <span data-ttu-id="09e83-159">Należy zgłosić wyjątek tylko podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-159">It should only throw an exception during deserialization.</span></span> <span data-ttu-id="09e83-160">W przeciwnym razie użytkownicy stają się mylić, ponieważ zapisanie dokumentu nigdy nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="09e83-160">Otherwise, users become confused because saving the document should never fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Event ResolveName As ResolveNameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::Serialization::ResolveNameEventHandler ^ ResolveName;" />
      <MemberSignature Language="F#" Value="member this.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " Usage="member this.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09e83-161">Występuje, <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> gdy nie można zlokalizować określonej nazwy w tabeli nazw menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-161">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-162">To zdarzenie umożliwia serializatorowi utworzenie obiektu na żądanie, dzięki czemu serializator nie musi zamówić tworzenia obiektów przez zależność.</span><span class="sxs-lookup"><span data-stu-id="09e83-162">This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="09e83-163">Delegat dla tego zdarzenia jest czyszczony natychmiast po zakończeniu serializacji lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-163">The delegate for this event is cleared immediately after serialization or deserialization is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event SerializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SerializationComplete;" />
      <MemberSignature Language="F#" Value="member this.SerializationComplete : EventHandler " Usage="member this.SerializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09e83-164">Występuje, gdy Serializacja została ukończona.</span><span class="sxs-lookup"><span data-stu-id="09e83-164">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-165">To zdarzenie jest zgłaszane po zakończeniu serializacji lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-165">This event is raised when serialization or deserialization is complete.</span></span>  
  
 <span data-ttu-id="09e83-166">Ogólnie rzecz biorąc, kod serializacji jest zapisywana w celu emitowania danych serializacji i nie wymaga zwykle sprawdzania i przetwarzania związanego z stanem.</span><span class="sxs-lookup"><span data-stu-id="09e83-166">Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</span></span> <span data-ttu-id="09e83-167">Jeśli konieczne jest zachowanie danych stanu w trakcie serializacji, można ustawić dane i uzyskać do nich dostęp za pomocą serializatora, który może nasłuchiwać <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> zdarzenia, i wyczyścić dane po serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-167">If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and clear the data after serialization.</span></span> <span data-ttu-id="09e83-168">Przywrócenie odpowiedniego stanu po serializacji może być ważne, ponieważ serializatory mogą być ponownie używane podczas serializacji, a dane stanu pozostałości lub otwarte strumienie mogą być nieprawidłowe.</span><span class="sxs-lookup"><span data-stu-id="09e83-168">Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</span></span>  
  
 <span data-ttu-id="09e83-169">Na przykład, jeśli serializator musi zapisywać w innym pliku, takim jak plik zasobów, nie jest efektywna konstrukcja serializatora, aby zamknąć plik po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="09e83-169">For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</span></span> <span data-ttu-id="09e83-170">Serializowanie grafu obiektów zwykle wymaga kilku serializacji.</span><span class="sxs-lookup"><span data-stu-id="09e83-170">Serializing an object graph usually requires several serializers.</span></span> <span data-ttu-id="09e83-171">Plik zasobów zostanie otwarty i zamknięty wiele razy.</span><span class="sxs-lookup"><span data-stu-id="09e83-171">The resource file would be opened and closed many times.</span></span> <span data-ttu-id="09e83-172">Zamiast tego plik zasobów może być zamknięty na końcu serializacji przez obiekt, który nasłuchuje na <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="09e83-172">Instead, the resource file can be closed at the end of serialization by an object that listened to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public void SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetName (instance As Object, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetName(System::Object ^ instance, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member SetName : obj * string -&gt; unit" Usage="iDesignerSerializationManager.SetName (instance, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="09e83-173">Wystąpienie obiektu do nazwy.</span><span class="sxs-lookup"><span data-stu-id="09e83-173">The object instance to name.</span></span></param>
        <param name="name"><span data-ttu-id="09e83-174">Nazwa, która ma zostać przydana do wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="09e83-174">The name to give the instance.</span></span></param>
        <summary><span data-ttu-id="09e83-175">Ustawia nazwę określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="09e83-175">Sets the name of the specified existing object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e83-176">Ta metoda jest przydatna, gdy konieczne jest utworzenie instancji obiektu, a następnie jej nazwa, bez użycia <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e83-176">This method is useful when it is necessary to create and then name an instance of an object without using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span> <span data-ttu-id="09e83-177">Wyjątek jest zgłaszany w przypadku próby zmiany nazwy istniejącego obiektu lub próby nadania nowemu obiektowi nazwy, która jest już zajęta.</span><span class="sxs-lookup"><span data-stu-id="09e83-177">An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
