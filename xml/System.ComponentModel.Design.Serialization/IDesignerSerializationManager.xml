<Type Name="IDesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95972349a0e013fd6262bbccce75d1b14f4b6314" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36708960" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerSerializationManager implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerSerializationManager&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="F#" Value="type IDesignerSerializationManager = interface&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7a28f-101">Udostępnia interfejs, który można zarządzać serializacji czasu projektowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a28f-101">Provides an interface that can manage design-time serialization.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-102">Można korzystać z projektanta <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> dostęp do usług przydatne do zarządzania procesami serializacji czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="7a28f-102">A designer can utilize <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="7a28f-103">Na przykład klasa implementująca menedżera serializacji projektanta można użyć tego interfejsu do tworzenia obiektów, wyszukiwania typów, zidentyfikować obiekty i dostosowanie serializacji poszczególnych typów.</span><span class="sxs-lookup"><span data-stu-id="7a28f-103">For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a28f-104">Poniższy przykład przedstawia sposób użycia <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> do serializacji i deserializacji instrukcje modelu DOM kodu.</span><span class="sxs-lookup"><span data-stu-id="7a28f-104">The following example illustrates how to use <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to serialize and deserialize Code DOM statements.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#1)]
 [!code-csharp[IDesignerSerializationManagerSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#1)]
 [!code-vb[IDesignerSerializationManagerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="iDesignerSerializationManager.AddSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="7a28f-105">Dostawca serializacji do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-105">The serialization provider to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-106">Dodaje dostawcę serializacji określonego do tego menedżera serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-106">Adds the specified serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-107">Ta metoda Dodaje dostawcę niestandardowej serializacji do tego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="7a28f-107">This method adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="7a28f-108">Serializacja dostawców zapewniają serializatorów niestandardowe dla określonego typu obiektu lub zestaw obiektów.</span><span class="sxs-lookup"><span data-stu-id="7a28f-108">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="7a28f-109">Podczas serializacji każdy dostawca serializacji niestandardowej jest poddawany kwerendzie do zwrócenia serializator dla typu danych określonego, jeśli ma ona co.</span><span class="sxs-lookup"><span data-stu-id="7a28f-109">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="7a28f-110">Tego menedżera serializacji używa niestandardowego programu szeregującego udostępniane przez tę metodę. przed użyciem domyślnego elementu serializującego dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="7a28f-110">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.Design.Serialization.ContextStack" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a28f-111">Pobiera obszar magazynu opartego na stosie, zdefiniowane przez użytkownika, który jest przydatne w przypadku komunikacji między serializatorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-111">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a28f-112">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> która przechowuje dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-112">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-113">Ten obszar magazynowania zapewnia komunikację informacje o kontekście obiektu serializatorów.</span><span class="sxs-lookup"><span data-stu-id="7a28f-113">This storage area provides communication of object context information to serializers.</span></span> <span data-ttu-id="7a28f-114">Informacje o kontekście dotyczące obiektów, które jest serializowana mogą być przechowywane i dostępne za pośrednictwem to <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="7a28f-114">Context information about objects that are being serialized can be stored and accessed through this <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="iDesignerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7a28f-115">Typ danych do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-115">The data type to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="7a28f-116">Argumenty do przekazania do konstruktora dla tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-116">The arguments to pass to the constructor for this type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7a28f-117">Nazwa obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-117">The name of the object.</span>
          </span>
          <span data-ttu-id="7a28f-118">Ta nazwa może być używana do dostępu do obiektu później za pomocą <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-118">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="7a28f-119">Jeśli <see langword="null" /> jest przekazany, nadal jest tworzony obiekt ale nazwa nie może uzyskać dostępu do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-119">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="7a28f-120">Jeśli <see langword="true" />, ten obiekt jest dodawany do kontenera projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-120">If <see langword="true" />, this object is added to the design container.</span>
          </span>
          <span data-ttu-id="7a28f-121">Obiekt musi implementować <see cref="T:System.ComponentModel.IComponent" /> w tym celu ma żadnego efektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-121">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-122">Tworzy wystąpienie określonego typu i dodaje go do kolekcji nazwanych wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-122">Creates an instance of the specified type and adds it to a collection of named instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a28f-123">Wystąpienie nowo utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-123">The newly created object instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-124">Obiekty, które implementują <xref:System.ComponentModel.IComponent> są dodawane do kontenera czasu projektowania, jeśli `addToContainer` parametr jest `true`.</span><span class="sxs-lookup"><span data-stu-id="7a28f-124">Objects that implement <xref:System.ComponentModel.IComponent> are added to the design-time container if the `addToContainer` parameter is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public object GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstance (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInstance(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetInstance : string -&gt; obj" Usage="iDesignerSerializationManager.GetInstance name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7a28f-125">Nazwa obiektu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-125">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-126">Pobiera wystąpienie elementu utworzonego obiektu o określonej nazwie lub <see langword="null" /> Jeśli ten obiekt nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-126">Gets an instance of a created object of the specified name, or <see langword="null" /> if that object does not exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a28f-127">Wystąpienie obiektu o podanej nazwie lub <see langword="null" /> w przypadku nieodnalezienia nie obiektu o takiej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-127">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-128">Nazwa obiektu do pobrania musi ustawić przez poprzednie wywołanie <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="7a28f-128">The name of the object to retrieve must have been set through a prior call to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetName : obj -&gt; string" Usage="iDesignerSerializationManager.GetName value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7a28f-129">Obiekt, który można pobrać nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-129">The object to retrieve the name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-130">Pobiera nazwę określonego obiektu lub <see langword="null" /> Jeśli obiekt nie ma nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-130">Gets the name of the specified object, or <see langword="null" /> if the object has no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a28f-131">Nazwa obiektu, lub <see langword="null" /> Jeśli obiekt jest bez nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-131">The name of the object, or <see langword="null" /> if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="abstract member GetSerializer : Type * Type -&gt; obj" Usage="iDesignerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="7a28f-132">Typ obiektu do pobrania elementu serializującego dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-132">The type of the object to get the serializer for.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="7a28f-133">Typ serializatora do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-133">The type of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-134">Pobiera serializator żądanego typu dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-134">Gets a serializer of the requested type for the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a28f-135">Wystąpienia żądanego serializator lub <see langword="null" /> Jeśli nie odpowiedni serializator może znajdować się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-135">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="7a28f-136">Pełna nazwa typu w celu załadowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-136">The fully qualified name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-137">Pobiera typ określonej nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-137">Gets a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a28f-138">Wystąpienie tego typu, lub <see langword="null" /> Jeśli typ nie może zostać załadowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-138">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a28f-139">Wskazuje właściwości niestandardowe, które mogą być możliwy do serializacji z dostępnych serializatorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-139">Indicates custom properties that can be serializable with available serializers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a28f-140">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zawierającego właściwości, aby można było serializować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-140">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-141">Ta właściwość może zawierać pustej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="7a28f-141">This property can contain an empty collection.</span></span> <span data-ttu-id="7a28f-142">Element serializujący powinien nigdy nie założyć, czy istnieją takie właściwości.</span><span class="sxs-lookup"><span data-stu-id="7a28f-142">A serializer should never assume that such properties exist.</span></span> <span data-ttu-id="7a28f-143">Klasa pochodna lub wykonania <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> definiuje zbiór właściwości, które są dostępne w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="7a28f-143">A derived class or implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> defines the set of properties that are exposed here.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="7a28f-144">
            <para>Tej właściwości można wypełniać przez kod użytkownika. Może być wystarczające, aby wywołać <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> z <see cref="T:System.ComponentModel.TypeDescriptor" /> do wypełniania tej kolekcji. Tego menedżera serializacji musi zwrócić pustą kolekcję, jeśli nie istnieją żadne właściwości niestandardowe.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-144">
              <para>This property can be populated by user code. It may be sufficient to call <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> of <see cref="T:System.ComponentModel.TypeDescriptor" /> to populate this collection. The serialization manager must return an empty collection if no custom properties exist.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="iDesignerSerializationManager.RemoveSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="7a28f-145">Dostawca do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-145">The provider to remove.</span>
          </span>
          <span data-ttu-id="7a28f-146">Ten obiekt musi zostały dodane przy użyciu <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-146">This object must have been added using <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-147">Usuwa dostawcy niestandardowej serializacji z tego menedżera serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-147">Removes a custom serialization provider from the serialization manager.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportError(System::Object ^ errorInformation);" />
      <MemberSignature Language="F#" Value="abstract member ReportError : obj -&gt; unit" Usage="iDesignerSerializationManager.ReportError errorInformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="7a28f-148">Błąd do raportu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-148">The error to report.</span>
          </span>
          <span data-ttu-id="7a28f-149">Ten obiekt informacji może być dowolnego typu obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-149">This information object can be of any object type.</span>
          </span>
          <span data-ttu-id="7a28f-150">Jeśli jest to wyjątek, komunikat wyjątku jest wyodrębnione i podać użytkownikowi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-150">If it is an exception, the message of the exception is extracted and reported to the user.</span>
          </span>
          <span data-ttu-id="7a28f-151">Jeśli jest innego typu <see cref="M:System.Object.ToString" /> jest wywoływana w celu wyświetlenia informacji do użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-151">If it is any other type, <see cref="M:System.Object.ToString" /> is called to display the information to the user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-152">Zgłasza błąd w serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-152">Reports an error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-153">Jeśli tego menedżera serializacji obsługuje rejestrowanie wiele błędów w jej implementacja <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, można przechowywać obiektów informacji błąd przyszłych raportu, w którym napotkano błędy mogą być jednocześnie wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="7a28f-153">If the serialization manager supports logging multiple errors in its implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, it can store the error information object for a future report where all the errors encountered can be displayed at once.</span></span> <span data-ttu-id="7a28f-154">Jeśli ta metoda przechowuje wiele błędów, nadal serializacji po wywołaniu tej metody.</span><span class="sxs-lookup"><span data-stu-id="7a28f-154">If this method stores multiple errors, serialization can continue after a call to this method.</span></span> <span data-ttu-id="7a28f-155">Jeśli ta metoda nie obsługuje rejestrowania wiele błędów, ta metoda powinien zgłosić wyjątek, przerwanie serializacji.</span><span class="sxs-lookup"><span data-stu-id="7a28f-155">If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a28f-156">Tego menedżera serializacji nigdy nie powinien zgłosić wyjątek dla błędów napotkanych podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="7a28f-156">The serialization manager should never throw an exception for errors encountered during serialization.</span></span> <span data-ttu-id="7a28f-157">Powinien on tylko zgłosić wyjątek podczas wykonywania deserializacji.</span><span class="sxs-lookup"><span data-stu-id="7a28f-157">It should only throw an exception during deserialization.</span></span> <span data-ttu-id="7a28f-158">W przeciwnym razie użytkownicy stać się mylące, ponieważ zapisanie dokumentu powinna nigdy nie zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="7a28f-158">Otherwise, users become confused because saving the document should never fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Event ResolveName As ResolveNameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::Serialization::ResolveNameEventHandler ^ ResolveName;" />
      <MemberSignature Language="F#" Value="member this.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " Usage="member this.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a28f-159">Występuje, gdy <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> nie można zlokalizować określonej nazwy tabeli nazwy tego menedżera serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-159">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-160">To zdarzenie umożliwia serializatora do utworzenia obiektu na żądanie, dzięki czemu Serializator nie ma do tworzenia obiektów kolejności przez zależność.</span><span class="sxs-lookup"><span data-stu-id="7a28f-160">This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="7a28f-161">Delegat dla tego zdarzenia zostanie wyczyszczony natychmiast po serializacji lub deserializacji została ukończona.</span><span class="sxs-lookup"><span data-stu-id="7a28f-161">The delegate for this event is cleared immediately after serialization or deserialization is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event SerializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SerializationComplete;" />
      <MemberSignature Language="F#" Value="member this.SerializationComplete : EventHandler " Usage="member this.SerializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a28f-162">Występuje po zakończeniu serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-162">Occurs when serialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-163">To zdarzenie jest wywoływane po ukończeniu serializacji lub deserializacji.</span><span class="sxs-lookup"><span data-stu-id="7a28f-163">This event is raised when serialization or deserialization is complete.</span></span>  
  
 <span data-ttu-id="7a28f-164">Ogólnie rzecz biorąc kodu serializacji są zapisywane do wysyłania danych serializacji i nie wymaga się zwykle związanych z sprawdzanie i przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="7a28f-164">Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</span></span> <span data-ttu-id="7a28f-165">Jeśli jest to niezbędne do przechowywania danych stanu w całym serializacji danych można ustawić i używane przez serializator, w którym można słuchać <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> zdarzeń i wyczyść zaznaczenie danych po serializacji.</span><span class="sxs-lookup"><span data-stu-id="7a28f-165">If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and clear the data after serialization.</span></span> <span data-ttu-id="7a28f-166">Przywracanie stanu prawidłowego, po serializacji może być istotne, ponieważ serializatorów mogą być ponownie używane podczas serializacji, a dane o stanie pozostałość lub Otwórz strumieni mogą być nieprawidłowe.</span><span class="sxs-lookup"><span data-stu-id="7a28f-166">Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</span></span>  
  
 <span data-ttu-id="7a28f-167">Na przykład jeśli element serializujący musi zapisywać do innego pliku, na przykład plik zasobu jest nieefektywne zaprojektować serializator można zamknąć pliku po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="7a28f-167">For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</span></span> <span data-ttu-id="7a28f-168">Wykres serializacji obiektu zwykle wymaga kilku serializatorów.</span><span class="sxs-lookup"><span data-stu-id="7a28f-168">Serializing an object graph usually requires several serializers.</span></span> <span data-ttu-id="7a28f-169">Plik zasobów czy otwierania i zamykania wiele razy.</span><span class="sxs-lookup"><span data-stu-id="7a28f-169">The resource file would be opened and closed many times.</span></span> <span data-ttu-id="7a28f-170">Zamiast tego pliku zasobu może zostać zamknięty na końcu serializacji przez obiekt nasłuch do <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="7a28f-170">Instead, the resource file can be closed at the end of serialization by an object that listened to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public void SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetName (instance As Object, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetName(System::Object ^ instance, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member SetName : obj * string -&gt; unit" Usage="iDesignerSerializationManager.SetName (instance, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7a28f-171">Wystąpienie obiektu do nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-171">The object instance to name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7a28f-172">Nazwa umożliwiają wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-172">The name to give the instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a28f-173">Ustawia nazwę określonego istniejącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a28f-173">Sets the name of the specified existing object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a28f-174">Ta metoda jest przydatna, gdy jest to niezbędne do tworzenia i następnie nazwa wystąpienia obiektu bez korzystania z <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="7a28f-174">This method is useful when it is necessary to create and then name an instance of an object without using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span> <span data-ttu-id="7a28f-175">Jeśli spróbujesz zmienić nazwę istniejącego obiektu lub spróbuj podać nazwę, która jest już zajęta nowy obiekt jest zwracany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7a28f-175">An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>