<Type Name="CodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="560dd92bb8158105dfaf98315343c5d6bbc5a5c0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440286" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serializuje wykres obiektu do serii instrukcji CodeDOM. Ta klasa udostępnia abstrakcyjną klasę podstawową dla serializatora.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zaimplementować niestandardowego <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> do kontrolowania generowania kodu inicjowania składników dla typu składnika w czasie projektowania.  
  
 Aby wdrożyć niestandardowy <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> dla typu, musi:  
  
1.  Definiowanie klasy, która jest pochodną <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>.  
  
2.  Implementuje metody przesłonięcia metody serializacji lub deserializacji. (Zobacz poniższe informacje, aby uzyskać szczegółowe informacje).  
  
3.  Skojarz niestandardowe <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> implementacji typu za pomocą składnika <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>.  
  
 Aby zaimplementować metody serializacji dla generowania kodu konfiguracji dla składnika:  
  
1.  W obrębie klasy, która jest pochodną <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, Zastąp odpowiednie serializacji lub deserializacji metody klasy podstawowej.  
  
2.  Jeśli chcesz wygenerować instrukcji kodu, które wykonują domyślnej konfiguracji składnika domyślnego elementu serializującego, należy uzyskać i wywołać podstawową serializator dla składnika. Aby uzyskać podstawowe serializator dla składnika, należy wywołać <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A> metody <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> przekazany do metody zastąpienia. Przekaż <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A> metody typ składnika do serializacji konfigurację, wraz z typem bazowym serializator żądania dostępu, który jest <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>. Wywołać metody o tej samej nazwie są zastępowanie serializator podstawowy, za pomocą <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> i obiekt przekazywany do metody zastąpienia. W przypadku wdrażania <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A> metody <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A> metody podstawowej serializator zwróci obiektu. Typ obiektu, zależy od typu serializatora podstawowej, która zależy od typu składników, które są serializacji wartości. W przypadku wdrażania <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A>, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A>, lub <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> metody, należy utworzyć nowy <xref:System.CodeDom.CodeStatementCollection> zawierają instrukcje wygenerowanego kodu i przekazać go do metody.  
  
3.  Po wywołaniu metody podstawowej serializator, trzeba będzie <xref:System.CodeDom.CodeStatementCollection> zawierający instrukcje, aby wygenerować zainicjować składnika. W przeciwnym razie należy utworzyć <xref:System.CodeDom.CodeStatementCollection>. Możesz dodać <xref:System.CodeDom.CodeStatement> obiekty reprezentujące instrukcje, aby wygenerować kod konfiguracji składnika do tej kolekcji.  
  
4.  Zwraca <xref:System.CodeDom.CodeStatementCollection> reprezentujący kod źródłowy do generowania konfigurowania składnika.  
  
   
  
## Examples  
 Poniższy przykładowy kod ilustruje sposób tworzenia niestandardowych serializator CodeDOM, która pochodzi z <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>.  
  
 [!code-cpp[IDesignerSerializationManagerSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#1)]
 [!code-csharp[IDesignerSerializationManagerSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#1)]
 [!code-vb[IDesignerSerializationManagerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />, konieczne jest przesłonięcie następujących członków: <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" /> i <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />.</para>
    </block>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object codeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object codeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, codeObject As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ codeObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="codeObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Interfejs menedżera serializacji, który jest używany podczas deserializacji.</param>
        <param name="codeObject">Zserializowany obiekt CodeDOM do deserializacji.</param>
        <summary>Deserializuje określony obiekt serializacji CodeDOM do obiektu.</summary>
        <returns>Zdeserializowany obiekt CodeDOM.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda używa tego menedżera serializacji do tworzenia obiektów i rozwiązać typy danych. Wykres obiektu katalogu są zwracane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> lub <paramref name="codeObject" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeObject" /> jest elementem nieobsługiwany kod.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatementToInstance">
      <MemberSignature Language="C#" Value="protected object DeserializeStatementToInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeStatementToInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeserializeStatementToInstance (manager As IDesignerSerializationManager, statement As CodeStatement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ DeserializeStatementToInstance(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatement ^ statement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager">Tego menedżera serializacji do użycia na potrzeby serializacji.</param>
        <param name="statement">Instrukcja do deserializacji.</param>
        <summary>Deserializuje jednej instrukcji.</summary>
        <returns>Wystąpienie obiektu, w wyniku deserializacji <paramref name="statement" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance%2A> Odpowiada wywołania metody <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A>, ale jeśli wynikowa instrukcja instrukcji przypisania zmiennej, deklaracji zmiennej init wyrażenia lub instrukcji przypisania pola Zwraca wystąpienie obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetTargetComponentName (System.CodeDom.CodeStatement statement, System.CodeDom.CodeExpression expression, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTargetComponentName(class System.CodeDom.CodeStatement statement, class System.CodeDom.CodeExpression expression, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTargetComponentName (statement As CodeStatement, expression As CodeExpression, targetType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTargetComponentName(System::CodeDom::CodeStatement ^ statement, System::CodeDom::CodeExpression ^ expression, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="statement">
          <see cref="T:System.CodeDom.CodeStatement" /> Dla którego można określić grupy.</param>
        <param name="expression">A <see cref="T:System.CodeDom.CodeExpression" /> który <c>instrukcji</c> została zmniejszona do.</param>
        <param name="targetType">
          <see cref="T:System.Type" /> z <c>instrukcji</c>.</param>
        <summary>Określa grupę instrukcji w danej instrukcji powinna należeć do.</summary>
        <returns>Nazwa składnika, z którym <paramref name="statement" /> powinny zostać utworzone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual object Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Tego menedżera serializacji do użycia podczas serializacji.</param>
        <param name="value">Obiekt do zserializowania.</param>
        <summary>Serializuje określony obiekt na obiekt CodeDOM.</summary>
        <returns>Obiekt CodeDOM reprezentujący obiekt, który został serializacji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> lub <paramref name="value" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeAbsolute">
      <MemberSignature Language="C#" Value="public virtual object SerializeAbsolute (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SerializeAbsolute(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SerializeAbsolute (manager As IDesignerSerializationManager, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ SerializeAbsolute(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Tego menedżera serializacji do użycia na potrzeby serializacji.</param>
        <param name="value">Obiekt do zserializowania.</param>
        <summary>Wykonuje serializację danego obiektu dla wartości domyślnej.</summary>
        <returns>Reprezentujący obiekt CodeDom <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> lub <paramref name="value" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeMember">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeStatementCollection SerializeMember (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeStatementCollection SerializeMember(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SerializeMember (manager As IDesignerSerializationManager, owningObject As Object, member As MemberDescriptor) As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeStatementCollection ^ SerializeMember(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">Tego menedżera serializacji do użycia na potrzeby serializacji.</param>
        <param name="owningObject">Obiekt, do którego jest <c>elementu członkowskiego</c> dołączony.</param>
        <param name="member">Element członkowski do serializacji.</param>
        <summary>Wykonuje serializację danego elementu członkowskiego dla danego obiektu.</summary>
        <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> reprezentujący Zserializowany stan <paramref name="member" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />, <paramref name="owningObject" />, lub <paramref name="member" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="member" /> nie jest typem umożliwiającym serializację.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeMemberAbsolute">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeStatementCollection SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeStatementCollection SerializeMemberAbsolute(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SerializeMemberAbsolute (manager As IDesignerSerializationManager, owningObject As Object, member As MemberDescriptor) As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeStatementCollection ^ SerializeMemberAbsolute(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">Tego menedżera serializacji do użycia na potrzeby serializacji.</param>
        <param name="owningObject">Obiekt, do którego jest <c>elementu członkowskiego</c> dołączony.</param>
        <param name="member">Element członkowski do serializacji.</param>
        <summary>Wykonuje serializację danego elementu członkowskiego dla wartości domyślnej.</summary>
        <returns>Reprezentujący obiekt CodeDom <paramref name="member" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />, <paramref name="owningObject" />, lub <paramref name="member" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="member" /> nie jest typem umożliwiającym serializację.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeToReferenceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToReferenceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToReferenceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToReferenceExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToReferenceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use SerializeToExpression or GetExpression instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Tego menedżera serializacji do użycia podczas serializacji.</param>
        <param name="value">Obiekt do zserializowania.</param>
        <summary>Serializuje określonej wartości wyrażenia CodeDOM.</summary>
        <returns>Wartość zserializowana. To polecenie zwróci <see langword="null" /> wyrażenie odwołania do nie można uzyskać określoną wartość, czy wartość nie może być serializowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest podobna do <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, ale zatrzymuje się jeśli nie można uzyskać wyrażenia proste odwołania do wartości. Tę metodę można wywołać, jeśli będziesz wynikowe wyrażenie ma być używany jako parametr lub docelowy instrukcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>