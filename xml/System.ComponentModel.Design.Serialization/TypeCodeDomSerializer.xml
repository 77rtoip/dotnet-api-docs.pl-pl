<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeCodeDomSerializer.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac565c87864b4321c7a14ca30be60b486679a4325c4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65c87864b4321c7a14ca30be60b486679a4325c4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
          <source>Serializes an object to a new type.</source>
          <target state="translated">Serializuje obiekt do nowego typu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;</ph> class performs the same tasks as a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph>, but serializing an object through this class defines a new type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;</ph> Klasa wykonuje te same zadania jako <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph>, ale szeregowania obiektu za pomocą tej klasy definiuje nowego typu.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">Tego menedżera serializacji do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Type declaration to use for serialization.</source>
          <target state="translated">Deklaracji do użycia na potrzeby serializacji typu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Deserializes the given type declaration.</source>
          <target state="translated">Deserializuje deklaracji danego typu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The root object.</source>
          <target state="translated">Główny obiekt.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A&gt;</ph> method deserializes a previously serialized code type declaration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A&gt;</ph> Metody deserializuje deklaracji typu kodu wcześniej serializacji.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The following table shows the tasks default implementation performs.</source>
          <target state="translated">Poniższa tabela przedstawia wykonuje domyślną implementację zadania.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Task</source>
          <target state="translated">Zadanie</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Case Sensitivity Checks</source>
          <target state="translated">Kontroli wielkości liter</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The implementation searches for a <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> service to decide if it should treat members as case sensitive or case insensitive.</source>
          <target state="translated">Implementacja wyszukuje <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> usługi zdecydować, czy elementy Członkowskie powinny traktować jako wielkość liter lub bez uwzględniania wielkości liter.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Statement Sorting</source>
          <target state="translated">Sortowanie — instrukcja</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>All member variables and local variables from init methods are stored in a table.</source>
          <target state="translated">Wszystkie zmienne Członkowskie i zmienne lokalne z metody init są przechowywane w tabeli.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</source>
          <target state="translated">Każda instrukcja metody init jest dodawana do kolekcji instrukcji pogrupowane według jego po lewej stronie, aby wszystkie deklaracje Przypisywanie lub działających na konkretnej zmiennej są zgrupowane w tej zmiennej.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Variables that have no statements are discarded.</source>
          <target state="translated">Zmienne, które mają żadnych instrukcji zostaną odrzucone.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Deserialization</source>
          <target state="translated">Deserializacja</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The statement collections for each variable are deserialized according to the variable.</source>
          <target state="translated">Kolekcje instrukcji dla każdej zmiennej są rozszeregować zgodnie ze zmienną.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The following table shows the services the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A&gt;</ph> method requires.</source>
          <target state="translated">W poniższej tabeli przedstawiono usługi <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A&gt;</ph> wymaga metody.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Service</source>
          <target state="translated">Usługa</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</source>
          <target state="translated">Podczas nie niezbędne, usługi, jeśli jest dostępna, służy do określenia, czy serializacji powinny być uwzględniana wielkość liter lub bez uwzględniania wielkości liter.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>If an object does not exist in the name table during deserialization, a query for <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> is made.</source>
          <target state="translated">Jeśli obiekt nie istnieje w tabeli nazw podczas deserializacji, zapytanie dotyczące <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> staje się.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>If this query succeeds, the container is checked for the object.</source>
          <target state="translated">Jeśli ta kwerenda zakończy się powodzeniem, kontener jest sprawdzany pod kątem obiektu.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The container is also used as a stand-in for any container argument needed by components.</source>
          <target state="translated">Kontener jest również używane jako elementu zastępczego argumentu kontenera, wymagane przez składniki.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">Tego menedżera serializacji do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The type declaration to use for serialization.</source>
          <target state="translated">Deklaracja typu na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The value to use for serialization.</source>
          <target state="translated">Wartość do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>Returns the method where statements used to serialize a member are stored.</source>
          <target state="translated">Zwraca metodę przechowywania instrukcje służący do serializowania elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The method used to emit all of the initialization code for the given member.</source>
          <target state="translated">Metoda używana do wysyłania cały kod inicjowania dla danego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph> method returns the method to emit all of the initialization code for the given member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph> Metoda zwraca metodę, aby emitować cały kod inicjowania dla danego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The default implementation returns an empty constructor.</source>
          <target state="translated">Domyślna implementacja zwraca pustego konstruktora.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>If the same method is to be returned for multiple values, the same instance of the method should be returned.</source>
          <target state="translated">Jeśli ta sama metoda jest zwracana dla wielu wartości, to samo wystąpienie metody ma zostać zwrócony.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType&gt;</ph> dictionary to remember methods you have created.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType&gt;</ph> słownika do zapamiętania metod, które zostały utworzone.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The <ph id="ph1">`typeDecl`</ph> parameter can also be used to add infrastructure methods.</source>
          <target state="translated"><ph id="ph1">`typeDecl`</ph> Parametr można również dodać metod infrastruktury.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</source>
          <target state="translated">Na przykład jeśli chcesz Emituj oddzielnych metodach dla każdego obiektu, należy pojedynczej metody, która wywołuje wszystkie te metody z kolei.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>This method can be added to the code type declaration as needed.</source>
          <target state="translated">Tej metody można dodać do deklaracji typu kodu, w razie potrzeby.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph>, lub <ph id="ph3">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">Tego menedżera serializacji do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The type declaration to use for serialization.</source>
          <target state="translated">Deklaracja typu na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Returns an array of methods to be interpreted during deserialization.</source>
          <target state="translated">Zwraca tablicę metod, które należy interpretować podczas deserializacji.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberMethod" /&gt;</ph> array of methods to be interpreted during deserialization.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberMethod" /&gt;</ph> tablicy metod, które należy interpretować podczas deserializacji.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The default implementation returns a single-element array with the constructor in it.</source>
          <target state="translated">Domyślna implementacja zwraca tablicą jednego elementu z konstruktora.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">Tego menedżera serializacji do użycia na potrzeby serializacji.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The object to serialize.</source>
          <target state="translated">Obiekt do zserializowania.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Optional collection of members.</source>
          <target state="translated">Opcjonalne kolekcji elementów członkowskich.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or empty.</source>
          <target state="translated">Może być <ph id="ph1">&lt;see langword="null" /&gt;</ph> lub jest pusty.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Serializes the object root by creating a new type declaration that defines root.</source>
          <target state="translated">Serializuje obiekt główny, tworząc nowe deklaracji typu, która definiuje katalogu głównego.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> that defines the root object.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> definiuje obiekt główny.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> method serializes the given root object and optional collection of members to create a new type definition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> Metoda wykonuje serializację obiektu danego głównego i opcjonalne kolekcję elementów, aby utworzyć nową definicję typu.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>If the <ph id="ph1">`members`</ph> collection contains values, these values are serialized.</source>
          <target state="translated">Jeśli <ph id="ph1">`members`</ph> kolekcja zawiera wartości, te wartości są serializowane.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Values themselves may serialize as either member variables or local variables.</source>
          <target state="translated">Same wartości może serializować jako zmienne Członkowskie lub zmiennych lokalnych.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>This determination is done by searching for an extender property on the object called <ph id="ph1">`GenerateMember`</ph>.</source>
          <target state="translated">To jest realizowane przez wyszukiwanie właściwości rozszerzeń dla obiektu o nazwie <ph id="ph1">`GenerateMember`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>If <ph id="ph1">`true`</ph>, a member is generated.</source>
          <target state="translated">Jeśli <ph id="ph1">`true`</ph>, generowany jest elementem członkowskim.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Otherwise, a local variable is generated.</source>
          <target state="translated">W przeciwnym razie wartość zmiennej lokalnej jest generowany.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>For convenience, the <ph id="ph1">`members`</ph> collection can contain the root object.</source>
          <target state="translated">Dla wygody <ph id="ph1">`members`</ph> Kolekcja może zawierać obiektu głównego.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>In this case, the root object is not also added as a member or local variable.</source>
          <target state="translated">W takim przypadku główny obiekt nie jest również dodać jako elementu członkowskiego lub zmiennej lokalnej.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The name of the returned type is taken from the root object’s name, if it was a named object.</source>
          <target state="translated">Nazwa zwróconego typu jest pobierana z nazwy obiektu głównego, jeśli był nazwanego obiektu.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>If not, a name is fabricated from the simple type name of the root class.</source>
          <target state="translated">Jeśli nie, nazwę jest wykonane z nazwy typu prostego klasy głównym.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The following table shows the tasks performed by the default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">W poniższej tabeli przedstawiono zadania wykonywane przez domyślną implementację elementu <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Task</source>
          <target state="translated">Zadanie</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Context Seeding</source>
          <target state="translated">Wstępne wypełnianie kontekstu</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The serialization context is initialized with data including the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph> and <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph></source>
          <target state="translated">Kontekst serializacji jest inicjowany z tym dane <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph> i <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Member Serialization</source>
          <target state="translated">Serializacja elementu członkowskiego</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Next, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> walks all of the members and calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>.</source>
          <target state="translated">Następnie <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> przeprowadzi wszystkie elementy członkowskie i wywołania <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Because serialization is done opportunistically in <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>, this ensures that serialization is not done twice.</source>
          <target state="translated">Ponieważ serializacja jest wykonywana tylko wtedy w <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>, daje to pewność, że serializacji nie jest wykonywane dwukrotnie.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Root Serialization</source>
          <target state="translated">Serializacja głównego</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Next, the root object is serialized and its statements are added to the statement collection.</source>
          <target state="translated">Następnie serializowany jest obiekt główny i jego instrukcje są dodawane do kolekcji instrukcji.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Statement Integration</source>
          <target state="translated">Integracja — instrukcja</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>After all objects are serialized, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> method orders the statements and adds them to a method returned from <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>.</source>
          <target state="translated">Po wszystkie obiekty są serializowane, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> metody porządkuje instrukcje i dodaje je do zwrócony z metody <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Finally, a constructor is fabricated that calls all of the methods returned from <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>.</source>
          <target state="translated">Na koniec jest wykonane konstruktora wywołującą wszystkie zwrócony z metody <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The following table shows the objects the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> method places on the context stack.</source>
          <target state="translated">W poniższej tabeli przedstawiono obiekty <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> metoda umieszcza na stos kontekstu.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Instance</source>
          <target state="translated">Wystąpienie</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>This serializer.</source>
          <target state="translated">Ten serializator.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Deriving classes may find it useful to add public properties to this class.</source>
          <target state="translated">Wyprowadzanie klas może być przydatna w celu dodania właściwości publicznej do tej klasy.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The type being created.</source>
          <target state="translated">Typ tworzony.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Most objects do not need direct access to this.</source>
          <target state="translated">Większość obiektów nie ma potrzeby bezpośredniego dostępu do tego.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="root" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="root" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>