<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd1200813ae92e620c0a1166e22d51908c6824dd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69349912" /></Metadata><TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="60256-101">Serializacja obiektu do nowego typu.</span><span class="sxs-lookup"><span data-stu-id="60256-101">Serializes an object to a new type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60256-102">Klasa wykonuje te same zadania <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>co, ale serializacja obiektu za pomocą tej klasy definiuje nowy typ. <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer></span><span class="sxs-lookup"><span data-stu-id="60256-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="60256-103">Dynamiczne generowanie i kompilacja kodu źródłowego</span><span class="sxs-lookup"><span data-stu-id="60256-103">Dynamic Source Code Generation and Compilation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60256-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="60256-104">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="60256-105">Menedżer serializacji do użycia na potrzeby serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-105">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="60256-106">Deklaracja typu używana do serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-106">Type declaration to use for serialization.</span></span></param>
        <summary><span data-ttu-id="60256-107">Deserializacji danej deklaracji typu.</span><span class="sxs-lookup"><span data-stu-id="60256-107">Deserializes the given type declaration.</span></span></summary>
        <returns><span data-ttu-id="60256-108">Obiekt główny.</span><span class="sxs-lookup"><span data-stu-id="60256-108">The root object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60256-109"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> Metoda deserializacji poprzednio serializowanej deklaracji typu kodu.</span><span class="sxs-lookup"><span data-stu-id="60256-109">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="60256-110">W poniższej tabeli przedstawiono zadania, które są wykonywane domyślnie przez implementację.</span><span class="sxs-lookup"><span data-stu-id="60256-110">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="60256-111">Zadanie</span><span class="sxs-lookup"><span data-stu-id="60256-111">Task</span></span>|<span data-ttu-id="60256-112">Opis</span><span class="sxs-lookup"><span data-stu-id="60256-112">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="60256-113">Sprawdzanie czułości wielkości liter</span><span class="sxs-lookup"><span data-stu-id="60256-113">Case Sensitivity Checks</span></span>|<span data-ttu-id="60256-114">Implementacja wyszukuje <xref:System.CodeDom.Compiler.CodeDomProvider> usługę, aby zdecydować, czy powinna traktować elementy członkowskie jako wrażliwe na wielkość liter, czy bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="60256-114">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="60256-115">Sortowanie instrukcji</span><span class="sxs-lookup"><span data-stu-id="60256-115">Statement Sorting</span></span>|<span data-ttu-id="60256-116">Wszystkie zmienne Członkowskie i zmienne lokalne z metod Init są przechowywane w tabeli.</span><span class="sxs-lookup"><span data-stu-id="60256-116">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="60256-117">Następnie każda instrukcja w metodzie init jest dodawana do kolekcji instrukcji pogrupowanej według jej lewej strony, dlatego wszystkie instrukcje przypisujące lub działające na określonej zmiennej są pogrupowane w ramach tej zmiennej.</span><span class="sxs-lookup"><span data-stu-id="60256-117">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="60256-118">Zmienne, które nie mają żadnych instrukcji, są odrzucane.</span><span class="sxs-lookup"><span data-stu-id="60256-118">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="60256-119">Deserializacji</span><span class="sxs-lookup"><span data-stu-id="60256-119">Deserialization</span></span>|<span data-ttu-id="60256-120">Kolekcje instrukcji dla każdej zmiennej są deserializowane zgodnie ze zmienną.</span><span class="sxs-lookup"><span data-stu-id="60256-120">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="60256-121">W poniższej tabeli przedstawiono usługi wymagane przez <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="60256-121">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="60256-122">Usługa</span><span class="sxs-lookup"><span data-stu-id="60256-122">Service</span></span>|<span data-ttu-id="60256-123">Opis</span><span class="sxs-lookup"><span data-stu-id="60256-123">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="60256-124">Chociaż nie jest to konieczne, usługa, jeśli jest dostępna, jest używana do określenia, czy Serializacja powinna uwzględniać wielkość liter czy uwzględniać wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="60256-124">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="60256-125">Jeśli obiekt nie istnieje w tabeli nazw podczas deserializacji, <xref:System.ComponentModel.IContainer> zostanie wykonane zapytanie.</span><span class="sxs-lookup"><span data-stu-id="60256-125">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="60256-126">Jeśli to zapytanie powiodło się, kontener zostanie sprawdzony dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="60256-126">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="60256-127">Kontener jest również używany jako autonomiczny dla dowolnego argumentu kontenera wymaganego przez składniki.</span><span class="sxs-lookup"><span data-stu-id="60256-127">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60256-128"><paramref name="manager" />lub <paramref name="typeDecl" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60256-128"><paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="60256-129">Dynamiczne generowanie i kompilacja kodu źródłowego</span><span class="sxs-lookup"><span data-stu-id="60256-129">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="60256-130">Menedżer serializacji do użycia na potrzeby serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-130">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="60256-131">Deklaracja typu używana do serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-131">The type declaration to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="60256-132">Wartość, która ma być używana do serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-132">The value to use for serialization.</span></span></param>
        <summary><span data-ttu-id="60256-133">Zwraca metodę, w której są przechowywane instrukcje używane do serializacji elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="60256-133">Returns the method where statements used to serialize a member are stored.</span></span></summary>
        <returns><span data-ttu-id="60256-134">Metoda używana do emisji wszystkich kodów inicjacji danego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="60256-134">The method used to emit all of the initialization code for the given member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60256-135"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> Metoda zwraca metodę, aby wyemitować wszystkie kod inicjalizacji danego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="60256-135">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="60256-136">Implementacja domyślna zwraca pusty Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="60256-136">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="60256-137">Jeśli ta sama metoda ma zostać zwrócona dla wielu wartości, należy zwrócić to samo wystąpienie metody.</span><span class="sxs-lookup"><span data-stu-id="60256-137">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="60256-138">Można użyć <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> słownika do zapamiętania utworzonych metod.</span><span class="sxs-lookup"><span data-stu-id="60256-138">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="60256-139">Ten `typeDecl` parametr może być również używany do dodawania metod infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="60256-139">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="60256-140">Na przykład jeśli chcesz emitować oddzielną metodę dla każdego obiektu, potrzebna jest pojedyncza Metoda, która wywołuje wszystkie te metody z kolei.</span><span class="sxs-lookup"><span data-stu-id="60256-140">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="60256-141">Tę metodę można dodać do deklaracji typu kodu zgodnie z wymaganiami.</span><span class="sxs-lookup"><span data-stu-id="60256-141">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60256-142"><paramref name="manager" />, <paramref name="typeDecl" />, lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60256-142"><paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="60256-143">Dynamiczne generowanie i kompilacja kodu źródłowego</span><span class="sxs-lookup"><span data-stu-id="60256-143">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="60256-144">Menedżer serializacji do użycia na potrzeby serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-144">The serialization manager to use for serialization.</span></span></param>
        <param name="declaration"><span data-ttu-id="60256-145">Deklaracja typu używana do serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-145">The type declaration to use for serialization.</span></span></param>
        <summary><span data-ttu-id="60256-146">Zwraca tablicę metod, które mają być interpretowane podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-146">Returns an array of methods to be interpreted during deserialization.</span></span></summary>
        <returns><span data-ttu-id="60256-147"><see cref="T:System.CodeDom.CodeMemberMethod" /> Tablica metod do interpretowania podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-147">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60256-148">Domyślna implementacja zwraca tablicę jednoelementową z konstruktorem w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="60256-148">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60256-149"><paramref name="manager" />lub <paramref name="typeDecl" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60256-149"><paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="60256-150">Dynamiczne generowanie i kompilacja kodu źródłowego</span><span class="sxs-lookup"><span data-stu-id="60256-150">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="60256-151">Menedżer serializacji do użycia na potrzeby serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-151">The serialization manager to use for serialization.</span></span></param>
        <param name="root"><span data-ttu-id="60256-152">Obiekt do serializacji.</span><span class="sxs-lookup"><span data-stu-id="60256-152">The object to serialize.</span></span></param>
        <param name="members"><span data-ttu-id="60256-153">Opcjonalna Kolekcja elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="60256-153">Optional collection of members.</span></span> <span data-ttu-id="60256-154">Może być <see langword="null" /> lub puste.</span><span class="sxs-lookup"><span data-stu-id="60256-154">Can be <see langword="null" /> or empty.</span></span></param>
        <summary><span data-ttu-id="60256-155">Serializować element główny obiektu przez utworzenie nowej deklaracji typu, która definiuje element główny.</span><span class="sxs-lookup"><span data-stu-id="60256-155">Serializes the object root by creating a new type declaration that defines root.</span></span></summary>
        <returns><span data-ttu-id="60256-156">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> który definiuje obiekt główny.</span><span class="sxs-lookup"><span data-stu-id="60256-156">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60256-157"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> Metoda serializacji podanego obiektu głównego i opcjonalnej kolekcji elementów członkowskich w celu utworzenia nowej definicji typu.</span><span class="sxs-lookup"><span data-stu-id="60256-157">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="60256-158">`members` Jeśli kolekcja zawiera wartości, te wartości są serializowane.</span><span class="sxs-lookup"><span data-stu-id="60256-158">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="60256-159">Same wartości mogą serializować jako zmienne składowe lub zmienne lokalne.</span><span class="sxs-lookup"><span data-stu-id="60256-159">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="60256-160">W tym celu należy wyszukać Właściwość Extender dla obiektu o nazwie `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="60256-160">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="60256-161">W `true`przypadku wygenerowania elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="60256-161">If `true`, a member is generated.</span></span> <span data-ttu-id="60256-162">W przeciwnym razie jest generowana zmienna lokalna.</span><span class="sxs-lookup"><span data-stu-id="60256-162">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="60256-163">Dla wygody `members` kolekcja może zawierać obiekt główny.</span><span class="sxs-lookup"><span data-stu-id="60256-163">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="60256-164">W takim przypadku obiekt główny nie jest również dodawany jako zmienna lokalna lub.</span><span class="sxs-lookup"><span data-stu-id="60256-164">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="60256-165">Nazwa zwracanego typu jest pobierana z nazwy obiektu głównego, jeśli był to nazwany obiekt.</span><span class="sxs-lookup"><span data-stu-id="60256-165">The name of the returned type is taken from the root object's name, if it was a named object.</span></span> <span data-ttu-id="60256-166">Jeśli nie, nazwa jest wygotowana z prostej nazwy typu klasy głównej.</span><span class="sxs-lookup"><span data-stu-id="60256-166">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="60256-167">W poniższej tabeli przedstawiono zadania wykonywane przez domyślną implementację <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="60256-167">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="60256-168">Zadanie</span><span class="sxs-lookup"><span data-stu-id="60256-168">Task</span></span>|<span data-ttu-id="60256-169">Opis</span><span class="sxs-lookup"><span data-stu-id="60256-169">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="60256-170">Rozmieszczanie kontekstu</span><span class="sxs-lookup"><span data-stu-id="60256-170">Context Seeding</span></span>|<span data-ttu-id="60256-171">Kontekst serializacji jest inicjowany z danymi, w <xref:System.ComponentModel.Design.Serialization.RootContext> tym i<xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="60256-171">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="60256-172">Serializacja elementu członkowskiego</span><span class="sxs-lookup"><span data-stu-id="60256-172">Member Serialization</span></span>|<span data-ttu-id="60256-173">Następnie program <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> przeprowadzi wszystkie elementy członkowskie i wywołania <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="60256-173">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="60256-174">Ponieważ Serializacja jest wykonywana odpowiednio Uzgodnij w <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, to gwarantuje, że Serializacja nie zostanie wykonana dwukrotnie.</span><span class="sxs-lookup"><span data-stu-id="60256-174">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="60256-175">Serializacja główna</span><span class="sxs-lookup"><span data-stu-id="60256-175">Root Serialization</span></span>|<span data-ttu-id="60256-176">Następnie obiekt główny jest serializowany, a jego instrukcje są dodawane do kolekcji instrukcji.</span><span class="sxs-lookup"><span data-stu-id="60256-176">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="60256-177">Integracja instrukcji</span><span class="sxs-lookup"><span data-stu-id="60256-177">Statement Integration</span></span>|<span data-ttu-id="60256-178">Po serializacji <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> wszystkich obiektów Metoda porządkuje instrukcje i dodaje je do metody zwróconej z <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="60256-178">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="60256-179">Na koniec Konstruktor jest wywoływany, który wywołuje wszystkie metody zwrócone z <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="60256-179">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="60256-180">W poniższej tabeli przedstawiono obiekty, które <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> Metoda umieszcza w stosie kontekstowym.</span><span class="sxs-lookup"><span data-stu-id="60256-180">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="60256-181">Wystąpienie</span><span class="sxs-lookup"><span data-stu-id="60256-181">Instance</span></span>|<span data-ttu-id="60256-182">Opis</span><span class="sxs-lookup"><span data-stu-id="60256-182">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="60256-183">Ten serializator.</span><span class="sxs-lookup"><span data-stu-id="60256-183">This serializer.</span></span> <span data-ttu-id="60256-184">Klasy wywodzące mogą być przydatne do dodawania właściwości publicznych do tej klasy.</span><span class="sxs-lookup"><span data-stu-id="60256-184">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="60256-185">Tworzony typ.</span><span class="sxs-lookup"><span data-stu-id="60256-185">The type being created.</span></span> <span data-ttu-id="60256-186">Większość obiektów nie potrzebuje bezpośredniego dostępu do tego.</span><span class="sxs-lookup"><span data-stu-id="60256-186">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60256-187"><paramref name="manager" />lub <paramref name="root" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60256-187"><paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="60256-188">Dynamiczne generowanie i kompilacja kodu źródłowego</span><span class="sxs-lookup"><span data-stu-id="60256-188">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
