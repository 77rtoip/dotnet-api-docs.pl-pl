<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ed621eb87ec6d9d13852b9699538b4e26c02d66" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51906924" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c1986-101">Serializuje obiekt, do nowego typu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1986-101">Serializes an object to a new type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1986-102"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> Klasa wykonuje te same zadania co <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, ale serializacji obiektu za pomocą tej klasy definiuje nowy typ.</span><span class="sxs-lookup"><span data-stu-id="c1986-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">
      <span data-ttu-id="c1986-103">Dynamiczne generowanie i kompilacja kodu źródłowego</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1986-103">Dynamic Source Code Generation and Compilation</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1986-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-104">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c1986-105">Menedżer serializacji do użycia dla serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-105">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="c1986-106">Deklaracji na potrzeby serializacji typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-106">Type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1986-107">Deserializuje deklaracji danego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-107">Deserializes the given type declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1986-108">Główny obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-108">The root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1986-109"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> Metoda deserializuje deklaracji typu kodu wcześniej serializacji.</span><span class="sxs-lookup"><span data-stu-id="c1986-109">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="c1986-110">W poniższej tabeli przedstawiono, że wykonuje domyślną implementację zadania.</span><span class="sxs-lookup"><span data-stu-id="c1986-110">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="c1986-111">Zadanie</span><span class="sxs-lookup"><span data-stu-id="c1986-111">Task</span></span>|<span data-ttu-id="c1986-112">Opis</span><span class="sxs-lookup"><span data-stu-id="c1986-112">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="c1986-113">Sprawdzanie rozróżnianie wielkości liter</span><span class="sxs-lookup"><span data-stu-id="c1986-113">Case Sensitivity Checks</span></span>|<span data-ttu-id="c1986-114">Implementacja wyszukuje <xref:System.CodeDom.Compiler.CodeDomProvider> usługę, aby zdecydować, jeśli elementy Członkowskie powinny traktować jako wielkość liter lub bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="c1986-114">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="c1986-115">Sortowanie — instrukcja</span><span class="sxs-lookup"><span data-stu-id="c1986-115">Statement Sorting</span></span>|<span data-ttu-id="c1986-116">Wszystkie zmienne Członkowskie i zmienne lokalne, metody init są przechowywane w tabeli.</span><span class="sxs-lookup"><span data-stu-id="c1986-116">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="c1986-117">Następnie każdej instrukcji w metodzie init jest dodawany do kolekcji instrukcji, pogrupowane według po lewej stronie, dzięki czemu wszystkie instrukcje przypisywania lub działających na konkretnej zmiennej są zgrupowane w tej zmiennej.</span><span class="sxs-lookup"><span data-stu-id="c1986-117">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="c1986-118">Zmienne, które mają żadnych oświadczeń są odrzucane.</span><span class="sxs-lookup"><span data-stu-id="c1986-118">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="c1986-119">Deserializacja</span><span class="sxs-lookup"><span data-stu-id="c1986-119">Deserialization</span></span>|<span data-ttu-id="c1986-120">Kolekcje instrukcji dla każdej zmiennej są deserializacji zgodnie ze zmienną.</span><span class="sxs-lookup"><span data-stu-id="c1986-120">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="c1986-121">W poniższej tabeli przedstawiono usługi <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> wymaga metody.</span><span class="sxs-lookup"><span data-stu-id="c1986-121">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="c1986-122">Usługa</span><span class="sxs-lookup"><span data-stu-id="c1986-122">Service</span></span>|<span data-ttu-id="c1986-123">Opis</span><span class="sxs-lookup"><span data-stu-id="c1986-123">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="c1986-124">Nie niezbędne, usługi, jeśli jest dostępna, jest używane, aby określić, czy serializacji powinna być uwzględniana wielkość liter lub bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="c1986-124">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="c1986-125">Jeśli obiekt nie istnieje w tabeli nazw podczas deserializacji, zapytanie dotyczące <xref:System.ComponentModel.IContainer> wykonano.</span><span class="sxs-lookup"><span data-stu-id="c1986-125">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="c1986-126">Jeśli to zapytanie powiedzie się, kontener jest sprawdzane dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="c1986-126">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="c1986-127">Kontener jest również używane jako elementu zastępczego argumentu kontenera, wymagane przez składniki.</span><span class="sxs-lookup"><span data-stu-id="c1986-127">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1986-128">
            <paramref name="manager" /> lub <paramref name="typeDecl" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-128">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">
          <span data-ttu-id="c1986-129">Dynamiczne generowanie i kompilacja kodu źródłowego</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-129">Dynamic Source Code Generation and Compilation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c1986-130">Menedżer serializacji do użycia dla serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-130">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="c1986-131">Deklaracja typu na potrzeby serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-131">The type declaration to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1986-132">Wartość używana do serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-132">The value to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1986-133">Zwraca metodę, gdzie są przechowywane instrukcji służący do serializowania elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-133">Returns the method where statements used to serialize a member are stored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1986-134">Metoda używany do emitowania całego kodu inicjowania dla danego elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-134">The method used to emit all of the initialization code for the given member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1986-135"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> Metoda zwraca metodę, aby emitować całego kodu inicjowania dla danego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="c1986-135">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="c1986-136">Domyślna implementacja zwraca pustego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c1986-136">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="c1986-137">W przypadku tej samej metody do zwrócenia dla wielu wartości, to samo wystąpienie elementu metody powinny być zwrócone.</span><span class="sxs-lookup"><span data-stu-id="c1986-137">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="c1986-138">Możesz użyć <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> słownika do zapamiętania metod, które zostały utworzone.</span><span class="sxs-lookup"><span data-stu-id="c1986-138">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="c1986-139">`typeDecl` Parametru można również dodać metod infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="c1986-139">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="c1986-140">Na przykład jeśli chcesz emitować metodę osobne dla każdego obiektu, należy pojedynczą metodę, która wywołuje wszystkie z tych metod z osobna.</span><span class="sxs-lookup"><span data-stu-id="c1986-140">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="c1986-141">Tej metody można dodać do deklaracji typu kodu, zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="c1986-141">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1986-142">
            <paramref name="manager" />, <paramref name="typeDecl" />, lub <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-142">
              <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">
          <span data-ttu-id="c1986-143">Dynamiczne generowanie i kompilacja kodu źródłowego</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-143">Dynamic Source Code Generation and Compilation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c1986-144">Menedżer serializacji do użycia dla serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-144">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="c1986-145">Deklaracja typu na potrzeby serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-145">The type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1986-146">Zwraca tablicę metody należy interpretować podczas deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-146">Returns an array of methods to be interpreted during deserialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1986-147">A <see cref="T:System.CodeDom.CodeMemberMethod" /> szereg metod, które należy interpretować podczas deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-147">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1986-148">Domyślna implementacja zwraca jednoelementowa tablica za pomocą konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c1986-148">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1986-149">
            <paramref name="manager" /> lub <paramref name="typeDecl" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-149">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">
          <span data-ttu-id="c1986-150">Dynamiczne generowanie i kompilacja kodu źródłowego</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-150">Dynamic Source Code Generation and Compilation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="c1986-151">Menedżer serializacji do użycia dla serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-151">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="c1986-152">Obiekt do zserializowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-152">The object to serialize.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="c1986-153">Opcjonalne Kolekcja elementów członkowskich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-153">Optional collection of members.</span>
          </span>
          <span data-ttu-id="c1986-154">Może być <see langword="null" /> lub jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-154">Can be <see langword="null" /> or empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1986-155">Serializuje obiekt katalogu głównego, tworząc nowe deklaracji typu, który definiuje głównego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-155">Serializes the object root by creating a new type declaration that defines root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1986-156">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> definiujący obiektu głównego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-156">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1986-157"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> Metoda wykonuje serializację obiektu danego głównego i opcjonalne kolekcji elementów członkowskich, aby utworzyć nową definicję typu.</span><span class="sxs-lookup"><span data-stu-id="c1986-157">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="c1986-158">Jeśli `members` kolekcja zawiera wartości, te wartości są serializowane.</span><span class="sxs-lookup"><span data-stu-id="c1986-158">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="c1986-159">Wartości może serializować jako zmienne Członkowskie lub zmiennych lokalnych.</span><span class="sxs-lookup"><span data-stu-id="c1986-159">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="c1986-160">Oznaczanie odbywa się przez wyszukiwanie właściwości rozszerzenia dla obiektu o nazwie `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="c1986-160">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="c1986-161">Jeśli `true`, generowany jest członkiem.</span><span class="sxs-lookup"><span data-stu-id="c1986-161">If `true`, a member is generated.</span></span> <span data-ttu-id="c1986-162">W przeciwnym razie generowany jest zmienną lokalną.</span><span class="sxs-lookup"><span data-stu-id="c1986-162">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="c1986-163">Dla wygody `members` Kolekcja może zawierać obiektu głównego.</span><span class="sxs-lookup"><span data-stu-id="c1986-163">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="c1986-164">W tym przypadku obiekt główny nie zostanie również dodane jako członkowie lub zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="c1986-164">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="c1986-165">Nazwa typu zwracanego jest pobierana z nazwy obiektu głównego, jeśli został on nazwany obiekt.</span><span class="sxs-lookup"><span data-stu-id="c1986-165">The name of the returned type is taken from the root object’s name, if it was a named object.</span></span> <span data-ttu-id="c1986-166">W przeciwnym razie nazwa jest wykonane na podstawie nazwy typu prostego klasy głównej.</span><span class="sxs-lookup"><span data-stu-id="c1986-166">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="c1986-167">W poniższej tabeli przedstawiono zadania wykonywane przez domyślną implementację elementu <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c1986-167">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="c1986-168">Zadanie</span><span class="sxs-lookup"><span data-stu-id="c1986-168">Task</span></span>|<span data-ttu-id="c1986-169">Opis</span><span class="sxs-lookup"><span data-stu-id="c1986-169">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="c1986-170">Kontekst rozmieszczania</span><span class="sxs-lookup"><span data-stu-id="c1986-170">Context Seeding</span></span>|<span data-ttu-id="c1986-171">Kontekst serializacji jest inicjowany z danych, takie jak <xref:System.ComponentModel.Design.Serialization.RootContext> i <xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="c1986-171">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="c1986-172">Serializacja elementu członkowskiego</span><span class="sxs-lookup"><span data-stu-id="c1986-172">Member Serialization</span></span>|<span data-ttu-id="c1986-173">Następnie <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> zawiera wszystkie elementy członkowskie i wywołania <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1986-173">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="c1986-174">Ponieważ serializacji jest wykonywane tylko wtedy w <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, daje to gwarancję, że serializacji nie jest wykonywane dwukrotnie.</span><span class="sxs-lookup"><span data-stu-id="c1986-174">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="c1986-175">Serializacja głównego</span><span class="sxs-lookup"><span data-stu-id="c1986-175">Root Serialization</span></span>|<span data-ttu-id="c1986-176">Następnie serializowany jest obiekt główny i jego instrukcje są dodawane do kolekcji instrukcji.</span><span class="sxs-lookup"><span data-stu-id="c1986-176">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="c1986-177">Integracja — instrukcja</span><span class="sxs-lookup"><span data-stu-id="c1986-177">Statement Integration</span></span>|<span data-ttu-id="c1986-178">Po wszystkie obiekty są serializowane, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> metoda porządkuje oświadczeń i dodaje je do zwrócony z metody <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1986-178">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="c1986-179">Na koniec Konstruktor jest wykonane, wszystkie metody zwrócony z wywołania <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1986-179">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="c1986-180">W poniższej tabeli przedstawiono obiekty <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> metoda umieszcza na stos kontekstu.</span><span class="sxs-lookup"><span data-stu-id="c1986-180">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="c1986-181">Wystąpienie</span><span class="sxs-lookup"><span data-stu-id="c1986-181">Instance</span></span>|<span data-ttu-id="c1986-182">Opis</span><span class="sxs-lookup"><span data-stu-id="c1986-182">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="c1986-183">Przez ten serializator.</span><span class="sxs-lookup"><span data-stu-id="c1986-183">This serializer.</span></span> <span data-ttu-id="c1986-184">Wyprowadzanie klasy przydatne może okazać się dodać właściwości publicznej do tej klasy.</span><span class="sxs-lookup"><span data-stu-id="c1986-184">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="c1986-185">Typ tworzenia.</span><span class="sxs-lookup"><span data-stu-id="c1986-185">The type being created.</span></span> <span data-ttu-id="c1986-186">Większość obiektów nie ma potrzeby bezpośredniego dostępu do tego.</span><span class="sxs-lookup"><span data-stu-id="c1986-186">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1986-187">
            <paramref name="manager" /> lub <paramref name="root" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-187">
              <paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">
          <span data-ttu-id="c1986-188">Dynamiczne generowanie i kompilacja kodu źródłowego</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1986-188">Dynamic Source Code Generation and Compilation</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>