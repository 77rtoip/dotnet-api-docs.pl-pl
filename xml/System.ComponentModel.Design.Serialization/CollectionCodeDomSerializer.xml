<Type Name="CollectionCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
  <TypeSignature Language="C#" Value="public class CollectionCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionCodeDomSerializer&#xA;Inherits CodeDomSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="07791-101">Serializuje kolekcji.</span><span class="sxs-lookup"><span data-stu-id="07791-101">Serializes collections.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07791-102"><xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> Klasy można utworzyć instrukcji lub wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="07791-102">The <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> class can create either statements or expressions.</span></span> <span data-ttu-id="07791-103">Jeśli obiekt do zserializowania jest tablicą, <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> utworzy wyrażenia i przypisz go do instrukcji w stosie bieżącego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="07791-103">If the object to serialize is an array, the <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> will create an expression and assign it to the statement in the current context stack.</span></span> <span data-ttu-id="07791-104">Jeśli obiekt jest kolekcja o *AddRange* lub podobnej metody <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> utworzy instrukcję, która wywołuje metodę.</span><span class="sxs-lookup"><span data-stu-id="07791-104">If the object is a collection with an *AddRange* or similar method, the <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> will create a statement that calls the method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CollectionCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07791-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="07791-105">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodSupportsSerialization">
      <MemberSignature Language="C#" Value="protected bool MethodSupportsSerialization (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool MethodSupportsSerialization(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MethodSupportsSerialization (method As MethodInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool MethodSupportsSerialization(System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="07791-106"><see cref="T:System.Reflection.MethodInfo" /> Do sprawdzenia atrybutów serializacji.</span><span class="sxs-lookup"><span data-stu-id="07791-106">The <see cref="T:System.Reflection.MethodInfo" /> to check for serialization attributes.</span></span></param>
        <summary><span data-ttu-id="07791-107">Sprawdza, czy obsługa serializacji przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="07791-107">Verifies serialization support by the <paramref name="method" />.</span></span></summary>
        <returns>
          <span data-ttu-id="07791-108"><see langword="true" /> Jeśli <paramref name="method" /> obsługuje serializacji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07791-108"><see langword="true" /> if the <paramref name="method" /> supports serialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07791-109">Sprawdza `method` atrybutów, aby zobaczyć, czy obsługują one serializacji.</span><span class="sxs-lookup"><span data-stu-id="07791-109">Checks the `method` attributes to see if they support serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07791-110"><paramref name="method" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07791-110"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public override object Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Serialize (manager As IDesignerSerializationManager, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="07791-111"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Używany podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="07791-111">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</span></span></param>
        <param name="value"><span data-ttu-id="07791-112">Obiekt do zserializowania.</span><span class="sxs-lookup"><span data-stu-id="07791-112">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="07791-113">Serializuje danej kolekcji do obiektu CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="07791-113">Serializes the given collection into a CodeDOM object.</span></span></summary>
        <returns><span data-ttu-id="07791-114">Reprezentujący obiekt CodeDOM <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="07791-114">A CodeDOM object representing <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07791-115">Kolekcje są serializowane w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="07791-115">Collections are serialized as follows:</span></span>  
  
1.  <span data-ttu-id="07791-116">Jeśli kolekcja jest tablicą, tablicy są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="07791-116">If the collection is an array, the array is written.</span></span>  
  
    1.  <span data-ttu-id="07791-117">Jeśli kolekcja zawiera *AddRange* metoda zostanie wywołana i wyposażone w tablicy.</span><span class="sxs-lookup"><span data-stu-id="07791-117">If the collection has an *AddRange* method, it will be called and provided with an array.</span></span>  
  
    2.  <span data-ttu-id="07791-118">Jeśli kolekcja zawiera *Dodaj* metody, będzie ona wywoływana wielokrotnie, dopóki wszystkie elementy w kolekcji są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="07791-118">If the collection has an *Add* method, it will be called repeatedly until all items in the collection are written.</span></span>  
  
2.  <span data-ttu-id="07791-119">Jeśli kolekcja jest <xref:System.Collections.IList>, <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize%2A> metoda będzie rzutowania kolekcji do <xref:System.Collections.IList> i dodać za pomocą tego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="07791-119">If the collection is an <xref:System.Collections.IList>, the <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize%2A> method will cast the collection to an <xref:System.Collections.IList> and add through that interface.</span></span>  
  
    1.  <span data-ttu-id="07791-120">Jeśli kolekcja nie ma *Dodaj* metody, ale jest oznaczony atrybutem <xref:System.ComponentModel.DesignerSerializationVisibility.Content?displayProperty=nameWithType>, <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize%2A> będzie wyliczyć kolekcji i serializacji każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="07791-120">If the collection has no *Add* method, but is marked with <xref:System.ComponentModel.DesignerSerializationVisibility.Content?displayProperty=nameWithType>, <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize%2A> will enumerate the collection and serialize each element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07791-121"><paramref name="manager" /> lub <paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07791-121"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="SerializeCollection">
      <MemberSignature Language="C#" Value="protected virtual object SerializeCollection (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeExpression targetExpression, Type targetType, System.Collections.ICollection originalCollection, System.Collections.ICollection valuesToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SerializeCollection(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeExpression targetExpression, class System.Type targetType, class System.Collections.ICollection originalCollection, class System.Collections.ICollection valuesToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SerializeCollection (manager As IDesignerSerializationManager, targetExpression As CodeExpression, targetType As Type, originalCollection As ICollection, valuesToSerialize As ICollection) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SerializeCollection(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeExpression ^ targetExpression, Type ^ targetType, System::Collections::ICollection ^ originalCollection, System::Collections::ICollection ^ valuesToSerialize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="targetExpression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="originalCollection" Type="System.Collections.ICollection" />
        <Parameter Name="valuesToSerialize" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="07791-122"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Używany podczas serializacji.</span><span class="sxs-lookup"><span data-stu-id="07791-122">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</span></span></param>
        <param name="targetExpression"><span data-ttu-id="07791-123"><see cref="T:System.CodeDom.CodeExpression" /> Odwołujący się do kolekcji</span><span class="sxs-lookup"><span data-stu-id="07791-123">The <see cref="T:System.CodeDom.CodeExpression" /> that refers to the collection</span></span></param>
        <param name="targetType"><span data-ttu-id="07791-124"><see cref="T:System.Type" /> Kolekcji.</span><span class="sxs-lookup"><span data-stu-id="07791-124">The <see cref="T:System.Type" /> of the collection.</span></span></param>
        <param name="originalCollection"><span data-ttu-id="07791-125">Kolekcja do serializacji.</span><span class="sxs-lookup"><span data-stu-id="07791-125">The collection to serialize.</span></span></param>
        <param name="valuesToSerialize"><span data-ttu-id="07791-126">Wartości do serializacji.</span><span class="sxs-lookup"><span data-stu-id="07791-126">The values to serialize.</span></span></param>
        <summary><span data-ttu-id="07791-127">Serializuje danej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="07791-127">Serializes the given collection.</span></span></summary>
        <returns><span data-ttu-id="07791-128">Serializacji kolekcji, jeśli proces serializacji zakończyło się pomyślnie; w przeciwnym razie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07791-128">Serialized collection if the serialization process succeeded; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07791-129"><xref:System.CodeDom.CodeExpression> Odwołujący się do kolekcji można `null`.</span><span class="sxs-lookup"><span data-stu-id="07791-129">The <xref:System.CodeDom.CodeExpression> that refers to the collection can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07791-130"><paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" />, lub <paramref name="valuesToSerialize" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07791-130"><paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" />, or <paramref name="valuesToSerialize" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
  </Members>
</Type>