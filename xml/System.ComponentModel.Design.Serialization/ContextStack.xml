<Type Name="ContextStack" FullName="System.ComponentModel.Design.Serialization.ContextStack">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee39372e13e8e5c6bb6ac16568007f4114539221" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440019" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ContextStack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextStack extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ContextStack" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextStack" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextStack sealed" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a03ca-101">Udostępnia obiekt stosu, który pozwala przez serializator udostępnią informacje o serializatorów zagnieżdżonych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a03ca-101">Provides a stack object that can be used by a serializer to make information available to nested serializers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a03ca-102">Niektóre serializatorów wymagają informacje o kontekście obiektu poprawnie utrwalić stanu.</span><span class="sxs-lookup"><span data-stu-id="a03ca-102">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="a03ca-103"><xref:System.ComponentModel.Design.Serialization.ContextStack> Klasa umożliwia serializator ustawić danych o kontekście obiektu, który jest serializowana stos, w którym inny element serializujący do niego dostęp.</span><span class="sxs-lookup"><span data-stu-id="a03ca-103">The <xref:System.ComponentModel.Design.Serialization.ContextStack> class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.</span></span> <span data-ttu-id="a03ca-104">Wartość <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> właściwość jest udostępniana przez <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> do udostępniania informacji do użytku niektórych serializatorów.</span><span class="sxs-lookup"><span data-stu-id="a03ca-104">The value of the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property is provided by an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to share information of use to some serializers.</span></span>  
  
 <span data-ttu-id="a03ca-105">Stos kontekstu jest przydatne, ponieważ głęboko zagnieżdżone procesu szeregowania dokument projektowy i obiektów na każdym poziomie zagnieżdżenia może wymagać informacje o kontekście poprawnie utrwalić stanu obiektu.</span><span class="sxs-lookup"><span data-stu-id="a03ca-105">A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.</span></span> <span data-ttu-id="a03ca-106">Element serializujący można ustawić obiekt kontekstu stosu przed wywołaniem zagnieżdżonych serializatora.</span><span class="sxs-lookup"><span data-stu-id="a03ca-106">A serializer can set a context object to the stack before invoking a nested serializer.</span></span> <span data-ttu-id="a03ca-107">Każdy obiekt ustawioną na stosie powinien zostać usunięty przez serializator ustawioną go po powrocie wywołania zagnieżdżonych serializatora.</span><span class="sxs-lookup"><span data-stu-id="a03ca-107">Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.</span></span>  
  
 <span data-ttu-id="a03ca-108">Na ogół obiektów na stosie zawierają informacje o kontekście bieżącego obiektu, który jest serializowana.</span><span class="sxs-lookup"><span data-stu-id="a03ca-108">Typically, the objects on the stack contain information about the context of the current object that is being serialized.</span></span> <span data-ttu-id="a03ca-109">Serializator nadrzędnego dodaje informacje o kontekście stosu o następny obiekt, który można serializować, wywołuje odpowiedni serializator i, po zakończeniu serializator wykonywania dla obiektu, usuwa informacje o kontekście ze stosu.</span><span class="sxs-lookup"><span data-stu-id="a03ca-109">A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.</span></span> <span data-ttu-id="a03ca-110">Jest implementacja każdego serializatora do określenia, jakie obiekty uzyskać wypychana tej stosu.</span><span class="sxs-lookup"><span data-stu-id="a03ca-110">It is up to the implementation of each serializer to determine what objects get pushed on this stack.</span></span>  
  
 <span data-ttu-id="a03ca-111">Na przykład o nazwie obiektu z właściwością `Enabled` ma typ danych elementu <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="a03ca-111">As an example, an object with a property named `Enabled` has a data type of <xref:System.Boolean>.</span></span> <span data-ttu-id="a03ca-112">Jeśli serializatora zapisuje tę wartość w strumieniu danych, może być konieczne uwzględnienie kontekstu lub typ właściwości go zapisuje.</span><span class="sxs-lookup"><span data-stu-id="a03ca-112">If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.</span></span> <span data-ttu-id="a03ca-113">Serializator nie zawiera te informacje, ponieważ tylko instrukcje zapisu <xref:System.Boolean> wartość.</span><span class="sxs-lookup"><span data-stu-id="a03ca-113">The serializer does not have this information, however, because it is only instructed to write the <xref:System.Boolean> value.</span></span> <span data-ttu-id="a03ca-114">Może przekazać tę informację do serializatora, serializator nadrzędnego może wypchnąć <xref:System.ComponentModel.PropertyDescriptor> wskazującego `Enabled` właściwości na stos kontekstu.</span><span class="sxs-lookup"><span data-stu-id="a03ca-114">To provide this information to the serializer, the parent serializer can push a <xref:System.ComponentModel.PropertyDescriptor> that points to the `Enabled` property on the context stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a03ca-115">Poniższy przykład kodu pokazuje, za pomocą <xref:System.ComponentModel.Design.Serialization.ContextStack> do wypychania, a następnie usuń wartości 10.</span><span class="sxs-lookup"><span data-stu-id="a03ca-115">The following code example demonstrates using a <xref:System.ComponentModel.Design.Serialization.ContextStack> to push and then remove 10 values.</span></span>  
  
 [!code-cpp[ContextStackExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#1)]
 [!code-csharp[ContextStackExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#1)]
 [!code-vb[ContextStackExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="a03ca-116">Aby uzyskać dostęp do zasobów systemowych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a03ca-116">for full access to system resources.</span>
      </span>
      <span data-ttu-id="a03ca-117">Żądanie wartości: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a03ca-117">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="a03ca-118">Skojarzony stan:</span>
      <span class="sxs-lookup">
        <span data-stu-id="a03ca-118">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a03ca-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a03ca-120">W poniższym przykładzie kodu pokazano tworzenie <xref:System.ComponentModel.Design.Serialization.ContextStack> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a03ca-120">The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.</span></span>  
  
 [!code-cpp[ContextStackExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#2)]
 [!code-csharp[ContextStackExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#2)]
 [!code-vb[ContextStackExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Object ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a03ca-121">Obiekt kontekstu do dołączenia do stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-121">A context object to append to the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a03ca-122">Dołącza obiekt na koniec stosu, a nie wypychania go na wierzchu stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-122">Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a03ca-123">Ta metoda umożliwia serializatora do komunikowania się z innymi serializatorów przez dodawanie obiektów dane kontekstowe, które nie mają być usuwane w kolejności.</span><span class="sxs-lookup"><span data-stu-id="a03ca-123">This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.</span></span> <span data-ttu-id="a03ca-124">Nie istnieje sposób można usunąć obiektu, który został dodany na końcu stosu bez usuwania wszystkie inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="a03ca-124">There is no way to remove an object that was appended to the end of the stack without removing all other objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a03ca-125">
            <paramref name="context" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-125">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a03ca-126">Pobiera bieżący obiekt na stosie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-126">Gets the current object on the stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a03ca-127">Bieżący obiekt na stosie, lub <see langword="null" /> Jeśli żadne obiekty nie zostały przekazane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-127">The current object on the stack, or <see langword="null" /> if no objects were pushed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a03ca-128">Bieżący obiekt jest obiektem ze szczytu stosu lub obiektu, który został ostatnio dodany do stosu.</span><span class="sxs-lookup"><span data-stu-id="a03ca-128">The current object is the object at the top of the stack, or the object last added to the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a03ca-129">Pobiera lub ustawia obiekt na stosie na określonym poziomie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-129">Gets or sets the object on the stack at the specified level.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int level] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(level As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int level); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="a03ca-130">Poziom obiektu do pobrania na stosie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-130">The level of the object to retrieve on the stack.</span>
          </span>
          <span data-ttu-id="a03ca-131">Poziom 0 to górę stosu, poziom 1 jest następny w dół, i tak dalej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-131">Level 0 is the top of the stack, level 1 is the next down, and so on.</span>
          </span>
          <span data-ttu-id="a03ca-132">Ten poziom musi być mniejsza od 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-132">This level must be 0 or greater.</span>
          </span>
          <span data-ttu-id="a03ca-133">Jeśli poziom jest większa niż liczba poziomów na stosie, zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-133">If level is greater than the number of levels on the stack, it returns <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a03ca-134">Pobiera obiekt na stosie na określonym poziomie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-134">Gets the object on the stack at the specified level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a03ca-135">Obiekt na stosie na określonym poziomie, lub <see langword="null" /> Jeśli nie istnieje żaden obiekt na tym poziomie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-135">The object on the stack at the specified level, or <see langword="null" /> if no object exists at that level.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a03ca-136">
            <paramref name="level" /> jest mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-136">
              <paramref name="level" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[Type ^] { System::Object ^ get(Type ^ type); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a03ca-137">Typ do pobrania ze stosu kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-137">A type to retrieve from the context stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a03ca-138">Pobiera pierwszy obiekt na stosie, która dziedziczy lub implementuje określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-138">Gets the first object on the stack that inherits from or implements the specified type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a03ca-139">Pierwszy obiekt na stosie, która dziedziczy lub implementuje określonego typu lub <see langword="null" /> Jeśli typ implementuje żaden obiekt na stosie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-139">The first object on the stack that inherits from or implements the specified type, or <see langword="null" /> if no object on the stack implements the type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a03ca-140">Dokonuje na każdym poziomie stosu, wyszukiwanie obiektu, który implementuje lub dziedziczy `type`.</span><span class="sxs-lookup"><span data-stu-id="a03ca-140">A check is made on each level of the stack, searching for an object that implements or inherits `type`.</span></span> <span data-ttu-id="a03ca-141">Jeśli dopasowanie zostanie znaleziony, jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="a03ca-141">If a match is found, it is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a03ca-142">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-142">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Pop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a03ca-143">Usuwa bieżący obiekt wylogowuje stosu, zwracając wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-143">Removes the current object off of the stack, returning its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a03ca-144">Obiekt usunięty ze stosu; <see langword="null" /> Jeśli żadne obiekty nie są na stosie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-144">The object removed from the stack; <see langword="null" /> if no objects are on the stack.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a03ca-145">Poniższy przykład kodu pokazuje, usunięcie wartości z <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="a03ca-145">The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#4)]
 [!code-csharp[ContextStackExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#4)]
 [!code-vb[ContextStackExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(System::Object ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a03ca-146">Obiekt kontekstu do przekazania do stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-146">The context object to push onto the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a03ca-147">Wypchnięcia lub miejsc, jak określony obiekt na stosie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-147">Pushes, or places, the specified object onto the stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a03ca-148">Poniższy przykład kodu pokazuje położenia wartości <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="a03ca-148">The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#3)]
 [!code-csharp[ContextStackExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#3)]
 [!code-vb[ContextStackExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a03ca-149">
            <paramref name="context" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03ca-149">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>