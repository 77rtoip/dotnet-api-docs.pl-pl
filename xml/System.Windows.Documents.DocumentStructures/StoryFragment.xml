<Type Name="StoryFragment" FullName="System.Windows.Documents.DocumentStructures.StoryFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba0a8ad7ffd84e6c7510ea701a1472abaad36332" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69209663" /></Metadata><TypeSignature Language="C#" Value="public class StoryFragment : System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoryFragment extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.DocumentStructures.StoryFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class StoryFragment&#xA;Implements IAddChild, IEnumerable(Of BlockElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StoryFragment : System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type StoryFragment = class&#xA;    interface IAddChild&#xA;    interface seq&lt;BlockElement&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ContentProperty("BlockElementList")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje całość lub część wątku w dokumencie XPS.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Historia XPS w [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] dokumencie jest w przybliżeniu analogiczna do historii gazetowej lub czasopisma. Jest to fragment zawartości tekstowej i graficznej, zazwyczaj w jednym temacie, w jednym [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] dokumencie. Zazwyczaj obejmuje ona wiele stron, ale może być krótsza niż strona, taka jak ramka z paskiem bocznym — w magazynie. Wątek może być również nieciągły, jak historia gazetowa przedstronicowa, która jest kontynuowana na stronie 4. W związku z tym dana strona może zawierać więcej niż jeden wątek i części więcej niż jednego wątku. Nagłówek lub stopka jest również specjalnym rodzajem wątku, który jest całkowicie zawarty na jednej stronie.  
  
 <xref:System.Windows.Documents.DocumentStructures.StoryFragment> Reprezentuje wszystko lub część wątku. Może nigdy nie obejmować więcej niż jednej strony, ale może zajmować całą stronę lub udostępnić stronę z innymi fragmentami. Jeśli wątek znajduje się na więcej niż jednej stronie, każda jej część na każdej stronie jest osobnym fragmentem. Chociaż wątki mogą zawierać nieciągłe zestawy fragmentów, nie może być on ciągły.  
  
 Tylko element może być obiektem nadrzędnym <xref:System.Windows.Documents.DocumentStructures.StoryFragment>. <xref:System.Windows.Documents.DocumentStructures.StoryFragments>  Lokalizacja <xref:System.Windows.Documents.DocumentStructures.StoryBreak> elementów<xref:System.Windows.Documents.DocumentStructures.StoryFragment> w obrębie wskazuje, czy wątek jest zawarty w wielu fragmentach i czy dodatkowe fragmenty poprzedzają lub wykonują bieżący fragment.  
  
 `</StoryFragment>` `</TableRowGroupStructure>` [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] `<TableRowGroupStructure>`Gdy kończy się w środku pewnego elementu strukturalnego; Załóżmy, że aplikacje wytwarzające dokumenty muszą wstawić odpowiedni tag końcowy dla elementu (w tym przypadku) przed tagiem, nawet <xref:System.Windows.Documents.DocumentStructures.StoryFragment> Mimo że struktura jest kontynuowana w późniejszym fragmencie. (Jest to konieczne, aby upewnić się, że drzewo <xref:System.Windows.Documents.DocumentStructures.StoryFragment> elementów w prawidłowym formacie XML). Fragment, który kontynuuje wątek, musi rozpoczynać się od tagu otwierającego dla przerwanej struktury. Całe drzewo uszkodzonych struktur musi być traktowane w taki sam sposób (z jednym wyjątkiem opisanym poniżej): Należy dodać tagi końcowe dla każdego niedopasowanego tagu początkowego powyżej punktu przerwania.  
  
 Wyjątek ma zastosowanie, gdy przerwanie wątku zaczyna się bezpośrednio po `</TableCellStructure>` tagu, a następnie aplikacja do produkcji musi wstawić pustą strukturę komórki tabeli`<TableCellStructure></TableCellStructure>`() w odpowiednim punkcie fragmentu, który kontynuuje wątek. Jest to konieczne, aby używać w tym celu aplikacji, które muszą scalić wszystkie fragmenty danego wątku.  
  
 Załóżmy na przykład, że aplikacja chciała dodać do [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] dokumentu następujący materiał:  
  
```  
<SectionStructure>  
   <TableStructure>  
      <TableRowGroupStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="SomeContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="MoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="EvenMoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="LastContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
      </TableRowGroupStructure>  
   </TableStructure>  
</SectionStructure>  
```  
  
 Jeśli podział strony wymusza zakończenie fragmentu tuż po `</TableCellStructure>` elemencie dla elementu "SomeContent", aplikacja musi utworzyć podział, jak pokazano w następującym przykładzie:  
  
```  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="SomeContent" />  
                </ParagraphStructure>   
             </TableCellStructure>  
<!-- lines from here to end of fragment added by producer-->  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>   
              <!-- extra cell added by producer-->  
             </TableCellStructure>  
<!-- lines from here to start of fragment added by producer-->  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="MoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="EvenMoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="LastContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
```  
  
 Aplikacja, która odczytuje dokument, może być konieczne scalenie tej zawartości. Rozważmy na przykład przeglądarkę XPS z **kopią cała historia do schowka** ; lub **XPS dla** aplikacji niewidomej, która przekazała historie do syntezatora głosowego.  Niektóre aplikacje, które odczytają dokument, mogą być konieczne do scalenia podzestawu fragmentów wątku. Na przykład funkcja, która kopiuje cały akapit do schowka przez trzykrotnie klikanie, będzie musiała wykonać Scalanie za każdym razem, gdy akapit został podzielony na podział strony, ponieważ taki akapit byłby dzielony między dwa <xref:System.Windows.Documents.DocumentStructures.StoryFragment>s.  
  
 **Aby scalić, użyj tego algorytmu:**  
  
1.  Usuń od końca pierwszego fragmentu, który ma zostać scalony, i Usuń `<StoryFragment>` go od początku sekundy. `</StoryFragment>`  
  
2.  Jeśli ostatni tag zamykający pierwszego fragmentu jest tego samego typu co pierwszy tag otwierającego drugiego fragmentu (i nie `<NamedElement>` jest to tag), Usuń oba te elementy.  
  
3.  Powtórz krok 2 do momentu, gdy dwa fragmenty są w *dowolnym* z następujących stanów:  
  
    -   Nie istnieje już dopasowanie typu między ostatnim tagiem końcowym fragmentu wiodącym w pierwszym tagu początkowym fragmentu końcowego.  
  
    -   Ostatni tag wiodącego fragmentu pierwszego tagu początkowego fragmentu końcowego jest `<NamedElement>` znacznikiem.  
  
 W powyższym przykładzie, jeśli pusta komórka nie została dodana przez aplikację wytwarzającą, wówczas fuzja fragmentów tworzy tabelę, której pierwszy wiersz ma tylko jedną komórkę zawierającą zarówno odwołania "SomeContent", jak i "MoreContent" zamiast oryginalnego wiersz z dwiema komórkami, z których każdy zawiera pojedyncze odwołanie  
  
 Po scaleniu całego wątku algorytm należy powtórzyć dla każdego kolejnego fragmentu, który jest częścią tego samego artykułu. Fragmenty, które należą do wątku, są indeksowane w `<Story>` elemencie. Zapoznaj się [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] z sekcją 9.1.15 specyfikacji, którą można [uzyskać na XPS: Pobieranie](https://www.microsoft.com/whdc/xps/downloads.mspx)specyfikacji i licencji. Ostatni fragment dla danego wątku będzie miał <xref:System.Windows.Documents.DocumentStructures.StoryBreak> element jako ostatni element podrzędny.  
  
   
  
## Examples  
 Poniższy przykład pokazuje `<StoryFragment>` część [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" />
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoryFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StoryFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Documents.DocumentStructures.BlockElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Documents.DocumentStructures.BlockElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As BlockElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Documents::DocumentStructures::BlockElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Documents.DocumentStructures.BlockElement -&gt; unit" Usage="storyFragment.Add element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Documents.DocumentStructures.BlockElement" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element">Blok, który ma zostać dodany.</param>
        <summary>Dodaj blok do fragmentu wątku.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Przeszedł blok to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FragmentName">
      <MemberSignature Language="C#" Value="public string FragmentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FragmentName : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę fragmentu wątku.</summary>
        <value><see cref="T:System.String" /> Reprezentująca nazwę tego fragmentu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na `FragmentName` temat atrybutu `</StoryFragment>` części [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu, zobacz rozdział 9 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specyfikacji, którą można uzyskać na [XPS: Pobieranie](https://www.microsoft.com/whdc/xps/downloads.mspx)specyfikacji i licencji.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      </Docs>
    </Member>
    <Member MemberName="FragmentType">
      <MemberSignature Language="C#" Value="public string FragmentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FragmentType : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ fragmentu.</summary>
        <value><see cref="T:System.String" /> Reprezentujący typ fragmentu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możliwe wartości to "Header", "Stopka" i "Content".  
  
 Aby uzyskać więcej informacji na `FragmentType` temat atrybutu `</StoryFragment>` części [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu, zobacz rozdział 9 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specyfikacji, którą można uzyskać na [XPS: Pobieranie](https://www.microsoft.com/whdc/xps/downloads.mspx)specyfikacji i licencji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje `FragmentType` atrybut `<StoryFragment>` części [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="StoryName">
      <MemberSignature Language="C#" Value="public string StoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property StoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StoryName : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę wątku.</summary>
        <value><see cref="T:System.String" /> Reprezentująca nazwę wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie fragmenty danego wątku muszą mieć tę samą wartość dla tej właściwości. Musi być zgodna `StoryName` z atrybutem `<Story>` elementu. Zapoznaj się [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] z sekcją 9.1.15 specyfikacji, którą można [uzyskać na XPS: Pobieranie](https://www.microsoft.com/whdc/xps/downloads.mspx)specyfikacji i licencji.  
  
 Ta właściwość może być nieokreślona, <xref:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType%2A> jeśli jest nagłówkiem lub stopką.  
  
   
  
## Examples  
 Poniższy przykład pokazuje `StoryName` atrybut `<StoryFragment>` części [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt; IEnumerable&lt;BlockElement&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable&lt;System#Windows#Documents#DocumentStructures#BlockElement&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of BlockElement) Implements IEnumerable(Of BlockElement).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda nie została zaimplementowana.</summary>
        <returns>Zawsze podnosi <see cref="T:System.NotSupportedException" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda nie została zaimplementowana.</summary>
        <returns>Zawsze podnosi <see cref="T:System.NotSupportedException" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Element podrzędny <see cref="T:System.Object" /> , który jest dodawany.</param>
        <summary>Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodaje obiekt podrzędny do <xref:System.Windows.Documents.DocumentStructures.StoryFragment>elementu.  
  
 Musi istnieć co najmniej <xref:System.Windows.Documents.DocumentStructures.StoryFragment> jeden element podrzędny i elementy podrzędne mogą być tylko tymi typami: <xref:System.Windows.Documents.DocumentStructures.ParagraphStructure>, <xref:System.Windows.Documents.DocumentStructures.FigureStructure>, <xref:System.Windows.Documents.DocumentStructures.ListStructure> <xref:System.Windows.Documents.DocumentStructures.TableStructure> <xref:System.Windows.Documents.DocumentStructures.SectionStructure>,, i <xref:System.Windows.Documents.DocumentStructures.StoryBreak>.  
  
 Może być tylko pierwszy lub ostatni element podrzędny obiektu <xref:System.Windows.Documents.DocumentStructures.StoryFragment>. <xref:System.Windows.Documents.DocumentStructures.StoryBreak>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" />nie jest jednym z typów, które mogą być elementami podrzędnymi tej klasy. Zobacz **uwagi**.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać dodany do obiektu.</param>
        <summary>Dodaje zawartość tekstową węzła do obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
