<Type Name="StoryFragment" FullName="System.Windows.Documents.DocumentStructures.StoryFragment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56c6aae67acd8e131e6e76d907515d82b748963a" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51306832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StoryFragment : System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoryFragment extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.DocumentStructures.StoryFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class StoryFragment&#xA;Implements IAddChild, IEnumerable(Of BlockElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StoryFragment : System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type StoryFragment = class&#xA;    interface IAddChild&#xA;    interface seq&lt;BlockElement&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("BlockElementList")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje całość lub część artykułu w obrębie dokumentu XPS.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wątek XPS w [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] dokumentu jest z grubsza podobny do scenariusza w gazet i magazyn. To fragment tekstu i grafiki zawartości, zazwyczaj w pojedynczym temacie, w obrębie pojedynczego [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] dokumentu. Zazwyczaj obejmuje wiele stron, ale może być krótszy niż strony, takich jak pasek boczny — opakowanej wątku — w czasopiśmie. Można także nieciągłego, takich jak historią gazet pierwsza strona, która jest kontynuowane na stronie 4 wątku. W związku z tym danej strony może mieć więcej niż jeden wątek i części więcej niż jeden wątek. Nagłówek lub stopka jest również specjalny rodzaj artykułu, która zawiera się całkowicie na jednej stronie.  
  
 A <xref:System.Windows.Documents.DocumentStructures.StoryFragment> reprezentuje wszystkie lub część artykułu. Jego nigdy nie może obejmować więcej niż jednej strony, ale może zajmować całą stronę lub udostępnij stronę przy użyciu innych fragmentów. Artykułu znajduje się w więcej niż jedną stronę, każdej części na każdej stronie, czy osobne fragmentu. Mimo że wątki mogą mieć nieciągły zestawów fragmentów, nie fragmentu sam może być nieciągły.  
  
 Tylko <xref:System.Windows.Documents.DocumentStructures.StoryFragments> element może być elementem nadrzędnym <xref:System.Windows.Documents.DocumentStructures.StoryFragment>.  Lokalizacja <xref:System.Windows.Documents.DocumentStructures.StoryBreak> elementów w obrębie <xref:System.Windows.Documents.DocumentStructures.StoryFragment> wskazuje, jeśli wątek znajduje się w wielu fragmentach, a dodatkowe fragmenty albo poprzedzić lub postępować zgodnie z bieżącego fragmentu.  
  
 Podczas <xref:System.Windows.Documents.DocumentStructures.StoryFragment> kończy się na środku pewien element strukturalnych; say `<TableRowGroupStructure>`, następnie [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] produkujących dokumentu aplikacji należy wstawić tagu końcowego odpowiednie dla elementu (w tym przypadku `</TableRowGroupStructure>`) przed `</StoryFragment>` tag nawet jednak struktura jest kontynuowana w późniejszym fragmentu. (Jest to konieczne upewnić się, że drzewo elementów w obrębie <xref:System.Windows.Documents.DocumentStructures.StoryFragment> jest prawidłowym kodem XML.) Fragment, który zwiększa wątek musi zaczynać się od otwierający tag w strukturze przerwane. Całe drzewo przerwane struktury muszą być traktowane tak samo (z jednym wyjątkiem omówionych poniżej): znacznikami końcowymi, należy dodać do każdej niedopasowane taga powyżej punktu przerwania.  
  
 Wyjątek ma zastosowanie, gdy przerwanie wątku jest dostępna natychmiast po `</TableCellStructure>` tagu, a następnie tworzenie aplikacji należy wstawić strukturę komórki pustej tabeli (`<TableCellStructure></TableCellStructure>`) w tym punkcie odpowiedni fragment, który wątek będzie się powtarzać. Jest to konieczne, tak aby aplikacji wymagających Scal wszystkie fragmenty danego scenariusza można to zrobić za pomocą prosty algorytm.  
  
 Załóżmy na przykład aplikacji chciał dodać następujący materiał [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] dokumentu:  
  
```  
<SectionStructure>  
   <TableStructure>  
      <TableRowGroupStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="SomeContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="MoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="EvenMoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="LastContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
      </TableRowGroupStructure>  
   </TableStructure>  
</SectionStructure>  
```  
  
 Jeśli podział strony wymusza na koniec fragment tuż za `</TableCellStructure>` "SomeContent" w przypadku aplikacji musisz utworzyć podziału, jak pokazano w poniższym przykładzie:  
  
```  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="SomeContent" />  
                </ParagraphStructure>   
             </TableCellStructure>  
<!-- lines from here to end of fragment added by producer-->  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>   
              <!-- extra cell added by producer-->  
             </TableCellStructure>  
<!-- lines from here to start of fragment added by producer-->  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="MoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="EvenMoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="LastContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
```  
  
 Aplikacja, która odczytuje dokument może być konieczne do scalenia tej zawartości. Należy wziąć pod uwagę, na przykład przeglądarka plików XPS, za pomocą **przedstawiającym kopiowania do Schowka** przycisk; lub **XPS for the Blind** aplikacji, które przekazane wątków do Syntezator głosu.  Niektóre aplikacje, które odczytać dokument może być konieczne scalanie podzestawu fragmenty wątku. Na przykład funkcja, która kopiuje cały akapit do Schowka triple kliknięciem musi zrobić scalanie przy każdym akapicie łączone podziału strony, ponieważ takie akapitu by podzielić między dwoma <xref:System.Windows.Documents.DocumentStructures.StoryFragment>s.  
  
 **Aby scalić używać tego algorytmu:**  
  
1.  Usuń `</StoryFragment>` od końca pierwszy fragment do scalenia i usuwania `<StoryFragment>` od początku drugiego.  
  
2.  Jeśli ostatnie tagiem zamykającym pierwszego fragmentu jest tego samego typu co pierwszy tagu otwierającego drugi fragment (i nie są `<NamedElement>` tagi), usuń ich obu.  
  
3.  Powtórz krok 2, dopóki dwa fragmenty są w *albo* z tych stanów:  
  
    -   Nie ma już dopasowanie typu od ostatniego tagu końcowego fragmentu wiodących pierwszy tagu początkowego fragmentu końcowe.  
  
    -   Ostatnim tagu końcowego wiodące fragmentu pierwszy tagu początkowego fragmentu końcowe są `<NamedElement>` tagów.  
  
 W powyższym przykładzie Jeśli pustej komórki nie miał został dodany przez tworzenie aplikacji, następnie połączenie z fragmentów dałby w efekcie tabeli, którego pierwszy wiersz ma tylko jedną komórkę, najpierw zawierającego oba odwołania "SomeContent" i "MoreContent" zamiast oryginalny wiersz z dwóch komórek zawierających jedno odwołanie  
  
 Po scaleniu cały artykuł algorytm należy powtórzyć dla każdego kolejnych fragment, który jest częścią tego samego wątku. Fragmenty, które należą do wątku są indeksowane w `<Story>` elementu. W sekcji 9.1.15 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specyfikacji, który można uzyskać u [XPS: specyfikacja i pobiera licencję](http://www.microsoft.com/whdc/xps/downloads.mspx). Ostatni fragment dla danego scenariusza będzie miał <xref:System.Windows.Documents.DocumentStructures.StoryBreak> element jako jego ostatnim elementem podrzędnym.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono `<StoryFragment>` wchodzi w skład [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" />
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoryFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StoryFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Documents.DocumentStructures.BlockElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Documents.DocumentStructures.BlockElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As BlockElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Documents::DocumentStructures::BlockElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Documents.DocumentStructures.BlockElement -&gt; unit" Usage="storyFragment.Add element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Documents.DocumentStructures.BlockElement" />
      </Parameters>
      <Docs>
        <param name="element">Blok do dodania.</param>
        <summary>Dodaj blok fragmentu wątku.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Blok przekazywany jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FragmentName">
      <MemberSignature Language="C#" Value="public string FragmentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FragmentName : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę fragmentu wątku.</summary>
        <value>A <see cref="T:System.String" /> reprezentujący nazwę tego fragmentu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `FragmentName` atrybutu `</StoryFragment>` wchodzi w skład [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu, zobacz rozdział 9 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specyfikacji, który można uzyskać u [XPS: specyfikacja i licencji pobiera](http://www.microsoft.com/whdc/xps/downloads.mspx).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      </Docs>
    </Member>
    <Member MemberName="FragmentType">
      <MemberSignature Language="C#" Value="public string FragmentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FragmentType : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ fragmentu.</summary>
        <value>A <see cref="T:System.String" /> odpowiadającą typowi fragmentu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możliwe wartości to "Header", "Stopki" i "Zawartość".  
  
 Aby uzyskać więcej informacji na temat `FragmentType` atrybutu `</StoryFragment>` wchodzi w skład [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu, zobacz rozdział 9 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specyfikacji, który można uzyskać u [XPS: specyfikacja i licencji pobiera](http://www.microsoft.com/whdc/xps/downloads.mspx).  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono `FragmentType` atrybutu `<StoryFragment>` wchodzi w skład [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="StoryName">
      <MemberSignature Language="C#" Value="public string StoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property StoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StoryName : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę wątku.</summary>
        <value>A <see cref="T:System.String" /> reprezentujący nazwę wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie fragmenty danego scenariusza musi mieć taką samą wartość dla tej właściwości. Musi on być zgodny `StoryName` atrybutu `<Story>` elementu. W sekcji 9.1.15 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] specyfikacji, który można uzyskać u [XPS: specyfikacja i pobiera licencję](http://www.microsoft.com/whdc/xps/downloads.mspx).  
  
 Ta właściwość może być nieokreślony, jeżeli <xref:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType%2A> jest nagłówka lub stopki.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono `StoryName` atrybutu `<StoryFragment>` wchodzi w skład [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] dokumentu.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt; IEnumerable&lt;BlockElement&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable&lt;System#Windows#Documents#DocumentStructures#BlockElement&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of BlockElement) Implements IEnumerable(Of BlockElement).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda nie została zaimplementowana.</summary>
        <returns>Zawsze zgłasza <see cref="T:System.NotSupportedException" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda nie została zaimplementowana.</summary>
        <returns>Zawsze zgłasza <see cref="T:System.NotSupportedException" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Element podrzędny <see cref="T:System.Object" /> który został dodany.</param>
        <summary>Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodaje obiekt podrzędny do <xref:System.Windows.Documents.DocumentStructures.StoryFragment>.  
  
 Musi istnieć co najmniej jeden element podrzędny <xref:System.Windows.Documents.DocumentStructures.StoryFragment> i elementy podrzędne może składać się z następujących typów: <xref:System.Windows.Documents.DocumentStructures.ParagraphStructure>, <xref:System.Windows.Documents.DocumentStructures.FigureStructure>, <xref:System.Windows.Documents.DocumentStructures.ListStructure>, <xref:System.Windows.Documents.DocumentStructures.TableStructure>, <xref:System.Windows.Documents.DocumentStructures.SectionStructure>, i <xref:System.Windows.Documents.DocumentStructures.StoryBreak>.  
  
 A <xref:System.Windows.Documents.DocumentStructures.StoryBreak> może być tylko pierwszy lub ostatni podrzędny <xref:System.Windows.Documents.DocumentStructures.StoryFragment>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> nie jest jednym z typów, które mogą być obiektem podrzędnym obiektu tej klasy. Zobacz **uwagi**.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który można dodać do obiektu.</param>
        <summary>Dodaje zawartość tekstu dla węzła do obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>