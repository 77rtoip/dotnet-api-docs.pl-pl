<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4bd12d5380309862688eee03402aeafd14bf034f" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58548526" /></Metadata><TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <TypeSignature Language="F#" Value="type IInteractiveChannelInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody, które umożliwiają aplikacji klienckiej wyświetlić interfejs użytkownika do zbierania informacji o tożsamości przed utworzeniem kanału.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interfejsu, aby umożliwić aplikacji klienckiej wyświetlić interfejs użytkownika, który umożliwia użytkownikowi aplikacji Utwórz lub wybierz poświadczeń przed otwarciem kanału.  
  
 Aby zaimplementować <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, wykonaj następujące kroki w <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Monituj użytkownika i uzyskać odpowiednią <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.  
  
2.  Dodawanie obiektu parametr niestandardowy kanał do kolekcji zwróconej przez <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> metody <xref:System.ServiceModel.IClientChannel> obiektu z parametrem typu <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. Ten obiekt parametr kanał jest używany przez niestandardowy <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> nawiązać tokenów zabezpieczających dla kanału.  
  
3.  Zwraca.  
  
 Aby wstawić <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:  
  
1.  Zastąp <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> metody <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> klasy.  
  
2.  W tej metodzie należy określić, czy wymaga punktu końcowego <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> i jeśli tak, Dodaj <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> do <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> kolekcji.  
  
 Istnieją dwa sposoby, deweloperzy aplikacji mogą udostępnić użytkowania wstawiono <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>. Aplikacja kliencka może wywołać albo <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> lub <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (lub wersja asynchroniczna) przed otwierania kanału ( *jawne* podejście) lub po prostu wywołać pierwszą operacją ( *niejawne* podejście).  
  
 Jeśli w sposób niejawny, aplikacja musi wywołać pierwszą operacją na <xref:System.ServiceModel.ClientBase%601> lub <xref:System.ServiceModel.IClientChannel> rozszerzenia. Jeśli wywoływanych przez nią coś innego niż pierwszą operacją, zwracany jest wyjątek.  
  
 Jeśli przy użyciu podejścia jawne, aplikacja musi wykonać następujące kroki w kolejności:  
  
1.  Wywołaj opcję <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> lub <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (lub asynchronicznej wersji).  
  
2.  Po zwróceniu mieć inicjatory, wywołaj albo <xref:System.ServiceModel.ICommunicationObject.Open%2A> metody <xref:System.ServiceModel.IClientChannel> obiektu lub na <xref:System.ServiceModel.IClientChannel> obiekt zwracany z <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> właściwości.  
  
3.  Wywoływanie operacji.  
  
 Przez przyjęcie podejścia jawne, zaleca się tej kontrolki aplikacje wysokiej jakości procesu interfejsu użytkownika.  
  
 Aplikacje, które używają podejście niejawne wywołania inicjatory interfejsu użytkownika, ale jeśli użytkownik aplikacji nie odpowiedział w określonym przedziale czasu wysyłania powiązania, wyjątek jest generowany, gdy zwraca interfejs użytkownika.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : System.ServiceModel.IClientChannel * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInteractiveChannelInitializer.BeginDisplayInitializationUI (channel, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">Kanał klienta.</param>
        <param name="callback">Obiekt wywołania zwrotnego.</param>
        <param name="state">Wszelkie dane o stanie.</param>
        <summary>Wywołanie asynchroniczne, aby rozpocząć korzystanie z interfejsu użytkownika w celu uzyskania informacji o poświadczeniach.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Można użyć do wywołania po zakończeniu przetwarzania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zaimplementować <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, wykonaj następujące kroki w <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Monituj użytkownika, co sposób możesz korzystać zależnie od potrzeb i uzyskać odpowiednią <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.  
  
2.  Dodawanie obiektu parametr niestandardowy kanał do kolekcji zwróconej przez <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> metody <xref:System.ServiceModel.IClientChannel> obiektu z parametrem typu <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. Ten obiekt parametr kanał jest używany przez niestandardowy <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> nawiązać tokenów zabezpieczających dla kanału.  
  
3.  Zwraca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iInteractiveChannelInitializer.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />.</param>
        <summary>Wywoływane, gdy <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> zostało zakończone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>