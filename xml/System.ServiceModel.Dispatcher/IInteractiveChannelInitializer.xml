<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ee27237d92c1f72f43daa38c4e2fcd1a29c4680" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69150360" /></Metadata><TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <TypeSignature Language="F#" Value="type IInteractiveChannelInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody, które umożliwiają aplikacji klienckiej wyświetlanie interfejsu użytkownika w celu zebrania informacji o tożsamości przed utworzeniem kanału.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interfejs, aby umożliwić aplikacji klienckiej wyświetlanie interfejsu użytkownika, który umożliwia użytkownikowi aplikacji utworzenie lub wybranie poświadczeń przed otwarciem kanału.  
  
 Aby zaimplementować <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, wykonaj następujące kroki w <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Monituj użytkownika i uzyskaj odpowiednie <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.  
  
2.  Dodaj niestandardowy obiekt parametru kanału do kolekcji zwróconej przez <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> metodę <xref:System.ServiceModel.IClientChannel> dla obiektu <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>z parametrem typu. Ten obiekt parametru kanału jest używany przez niestandardowy <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> do ustanowienia tokenów zabezpieczających dla kanału.  
  
3.  Przesłać.  
  
 Aby wstawić <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:  
  
1.  Zastąp <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> metodę w klasie. <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType>  
  
2.  W tej metodzie Ustal, czy punkt końcowy wymaga <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> elementu i jeśli tak, <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> Dodaj do <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> kolekcji.  
  
 Istnieją dwa sposoby użycia wstawionego <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>przez deweloperów aplikacji. Aplikacja kliencka może wywołać jedną <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> lub <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (lub wersję asynchroniczną) przed otwarciem kanału ( *jawne* podejście) lub po prostu wywołać pierwszą operację (niejawne ** podejście).  
  
 W przypadku użycia podejścia niejawnego aplikacja musi wywołać pierwszą operację na <xref:System.ServiceModel.ClientBase%601> rozszerzeniu lub. <xref:System.ServiceModel.IClientChannel> Jeśli wywołuje coś innego niż pierwsza operacja, zgłaszany jest wyjątek.  
  
 W przypadku użycia jawnego podejścia aplikacja musi wykonać następujące kroki w kolejności:  
  
1.  Wywołaj <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> jedną <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> lub (lub wersję asynchroniczną).  
  
2.  Gdy inicjatory zostały <xref:System.ServiceModel.ICommunicationObject.Open%2A> zwrócone, należy wywołać metodę <xref:System.ServiceModel.IClientChannel> dla obiektu lub <xref:System.ServiceModel.IClientChannel> obiektu zwróconego z <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> właściwości.  
  
3.  Wywołania operacji.  
  
 Zaleca się, aby aplikacje klasy produkcyjnej miały kontrolę nad procesem interfejsu użytkownika, przyjmując jawne podejście.  
  
 Aplikacje korzystające z niejawnej metody wywołują inicjatory interfejsu użytkownika, ale jeśli użytkownik aplikacji nie odpowie w okresie limitu czasu wysyłania powiązania, zostanie wygenerowany wyjątek, gdy interfejs użytkownika zwróci wartość.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : System.ServiceModel.IClientChannel * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInteractiveChannelInitializer.BeginDisplayInitializationUI (channel, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">Kanał klienta.</param>
        <param name="callback">Obiekt wywołania zwrotnego.</param>
        <param name="state">Wszystkie dane stanu.</param>
        <summary>Wywołanie asynchroniczne do rozpoczęcia korzystania z interfejsu użytkownika w celu uzyskania informacji o poświadczeniu.</summary>
        <returns>, <see cref="T:System.IAsyncResult" /> Aby użyć do wywołania zwrotnego po zakończeniu przetwarzania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zaimplementować <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, wykonaj następujące kroki w <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Monituj użytkownika w sposób dopasowany i uzyskaj odpowiednie <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.  
  
2.  Dodaj niestandardowy obiekt parametru kanału do kolekcji zwróconej przez <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> metodę <xref:System.ServiceModel.IClientChannel> dla obiektu <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>z parametrem typu. Ten obiekt parametru kanału jest używany przez niestandardowy <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> do ustanowienia tokenów zabezpieczających dla kanału.  
  
3.  Przesłać.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iInteractiveChannelInitializer.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />.</param>
        <summary>Wywoływana po <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> zakończeniu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
