<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e764d8c47caf6ddf0e2748dedaba492a73bc67b1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30575776" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody, które umożliwiają aplikacji klienckiej wyświetlić interfejs użytkownika, aby zebrać informacje o tożsamości przed utworzeniem kanału.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interfejsu, aby umożliwić aplikacji klienckiej wyświetlić interfejs użytkownika, który umożliwia użytkownikowi aplikacji do tworzenia lub Wybierz poświadczenia przed otwarciem kanału.  
  
 Aby zaimplementować <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, wykonaj następujące kroki w <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Monituj użytkownika i uzyskać odpowiednie <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.  
  
2.  Dodaj obiekt parameter niestandardowy kanał do kolekcji zwróconej przez <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> metoda <xref:System.ServiceModel.IClientChannel> obiektu z parametrem typu <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. Ten obiekt parametru kanał jest używany przez niestandardowe <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> ustanowienie tokeny zabezpieczające dla kanału.  
  
3.  Zwraca.  
  
 Aby wstawić <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:  
  
1.  Zastąpienie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> metoda <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> klasy.  
  
2.  W tej metody, należy określić, czy punkt końcowy wymaga <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> , a jeśli tak, Dodaj <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> do <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> kolekcji.  
  
 Istnieją dwa sposoby ułatwia deweloperom aplikacji użycie wstawionego <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>. Aplikacja kliencka można wywołać albo <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> lub <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (lub asynchroniczną wersję) przed otwarciem kanał ( *jawne* podejście) lub po prostu wywołaj operację pierwszy ( *niejawne* podejście).  
  
 Jeśli w sposób niejawny, aplikacja musi wywołać pierwszą operacją na <xref:System.ServiceModel.ClientBase%601> lub <xref:System.ServiceModel.IClientChannel> rozszerzenia. Jeśli wywołuje inny niż pierwsza operacja, jest zwracany wyjątek.  
  
 Jeśli używa jawnego podejście, aplikacji, należy wykonać następujące kroki w kolejności:  
  
1.  Wywołaj albo <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> lub <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (lub asynchroniczną wersję).  
  
2.  Zwracanie inicjatory ma wywoływać albo <xref:System.ServiceModel.ICommunicationObject.Open%2A> metoda <xref:System.ServiceModel.IClientChannel> obiektu lub na <xref:System.ServiceModel.IClientChannel> obiektu zwróconego z <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> właściwości.  
  
3.  Wywoływanie operacji.  
  
 Przez przyjęcie podejścia jawne, zaleca się tego formantu wysokiej jakości aplikacji procesu interfejsu użytkownika.  
  
 Aplikacje używające niejawnego metody invoke inicjatory interfejsu użytkownika, ale jeśli użytkownik aplikacji nie odpowiada przed upływem limitu czasu wysyłania w powiązania, jest zwracany wyjątek, po powrocie z interfejsu użytkownika.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">Kanał klienta.</param>
        <param name="callback">Obiektu wywołania zwrotnego.</param>
        <param name="state">Wszystkie dane o stanie.</param>
        <summary>Wywołanie asynchroniczne, aby rozpocząć korzystanie z interfejsu użytkownika można uzyskać informacji o poświadczeniach.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Można użyć do wywołania po zakończeniu przetwarzania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zaimplementować <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, wykonaj następujące kroki w <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Monituj użytkownika, w jakie sposób należy mieści się w temacie i uzyskać odpowiednie <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.  
  
2.  Dodaj obiekt parameter niestandardowy kanał do kolekcji zwróconej przez <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> metoda <xref:System.ServiceModel.IClientChannel> obiektu z parametrem typu <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. Ten obiekt parametru kanał jest używany przez niestandardowe <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> ustanowienie tokeny zabezpieczające dla kanału.  
  
3.  Zwraca.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" />.</param>
        <summary>Wywoływane, gdy <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> zostało zakończone.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>