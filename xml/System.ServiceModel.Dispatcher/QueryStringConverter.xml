<Type Name="QueryStringConverter" FullName="System.ServiceModel.Dispatcher.QueryStringConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f21394278c041232441fd431fd04b6b8f65ebf30" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69104394" /></Metadata><TypeSignature Language="C#" Value="public class QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryStringConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryStringConverter" />
  <TypeSignature Language="F#" Value="type QueryStringConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f2d31-101">Ta klasa Konwertuje parametr w ciągu zapytania na obiekt odpowiedniego typu.</span><span class="sxs-lookup"><span data-stu-id="f2d31-101">This class converts a parameter in a query string to an object of the appropriate type.</span></span> <span data-ttu-id="f2d31-102">Może również skonwertować parametr z obiektu na jego reprezentację w postaci ciągu zapytania.</span><span class="sxs-lookup"><span data-stu-id="f2d31-102">It can also convert a parameter from an object to its query string representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2d31-103">Parametry można określić w ciągu zapytania w adresie URL.</span><span class="sxs-lookup"><span data-stu-id="f2d31-103">Parameters can be specified in a query string within a URL.</span></span> <span data-ttu-id="f2d31-104">Ta klasa pobiera te parametry określone w ciągu i konwertuje je na obiekty.</span><span class="sxs-lookup"><span data-stu-id="f2d31-104">This class takes those parameters specified in a string and converts them into objects.</span></span> <span data-ttu-id="f2d31-105">Na przykład następujący kontrakt jest zdefiniowany.</span><span class="sxs-lookup"><span data-stu-id="f2d31-105">For example, the following contract is defined.</span></span>  
  
```csharp
[ServiceContract]  
interface Calculator  
{  
   [WebGet(UriTemplate="Add?n1={n1}&n2={n2}")]  
   [OperationContract]  
   long Add(long n1, long n2);  
}  
```  
  
 <span data-ttu-id="f2d31-106">Usługa Windows Communication Foundation (WCF) implementuje ten interfejs i uwidacznia go w punkcie końcowym z funkcją <xref:System.ServiceModel.Description.WebHttpBehavior> at `http://localhost:8000/MyCalcService`.</span><span class="sxs-lookup"><span data-stu-id="f2d31-106">A Windows Communication Foundation (WCF) service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at `http://localhost:8000/MyCalcService`.</span></span> <span data-ttu-id="f2d31-107">Operację usługi można wywołać przez wysłanie http get do `http://localhost:8000/MyCalcService/Add?n1=10&n2=5`. `Add`</span><span class="sxs-lookup"><span data-stu-id="f2d31-107">The `Add` service operation can be called by sending an HTTP GET to `http://localhost:8000/MyCalcService/Add?n1=10&n2=5`.</span></span> <span data-ttu-id="f2d31-108">Odbiera ten adres URL i konwertuje dwa parametry (N1 i N2) określone w adresie URL na dwa `long` obiekty z odpowiednimi wartościami. <xref:System.ServiceModel.Dispatcher.QueryStringConverter></span><span class="sxs-lookup"><span data-stu-id="f2d31-108">The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.</span></span>  
  
 <span data-ttu-id="f2d31-109">Można utworzyć klasę z <xref:System.ServiceModel.Dispatcher.QueryStringConverter> , aby kontrolować sposób, w jaki parametry ciągu zapytania są mapowane na parametry operacji usługi.</span><span class="sxs-lookup"><span data-stu-id="f2d31-109">You can derive a class from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> to control how query string parameters are mapped into a service operation's parameters.</span></span>  
  
 <span data-ttu-id="f2d31-110">Domyślnie <xref:System.ServiceModel.Dispatcher.QueryStringConverter> obsługuje następujące typy:</span><span class="sxs-lookup"><span data-stu-id="f2d31-110">The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supports the following types by default:</span></span>  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <span data-ttu-id="f2d31-111"><xref:System.Byte>macierzy</span><span class="sxs-lookup"><span data-stu-id="f2d31-111"><xref:System.Byte> array</span></span>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
-   <xref:System.DateTimeOffset>  
  
-   <span data-ttu-id="f2d31-112">Wyliczenia</span><span class="sxs-lookup"><span data-stu-id="f2d31-112">Enums</span></span>  
  
-   <span data-ttu-id="f2d31-113">Typy, które mają `TypeConverterAttribute` możliwość konwersji typu do i z reprezentacji w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="f2d31-113">Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2d31-114">Poniższy kod pokazuje, <xref:System.ServiceModel.Dispatcher.QueryStringConverter> jak używać klasy do konwersji między ciągiem a 32-bitową liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="f2d31-114">The following code shows how to use the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class to convert between a string and a 32-bit integer.</span></span>  
  
 [!code-csharp[QueryStringConverter#0](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#0)]
 [!code-vb[QueryStringConverter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2d31-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f2d31-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2d31-116">Poniższy kod przedstawia sposób tworzenia wystąpienia <xref:System.ServiceModel.Dispatcher.QueryStringConverter> klasy.</span><span class="sxs-lookup"><span data-stu-id="f2d31-116">The following code shows how to create an instance of the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class.</span></span>  
  
 [!code-csharp[QueryStringConverter#1](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#1)]
 [!code-vb[QueryStringConverter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public virtual bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvert(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CanConvert : Type -&gt; bool&#xA;override this.CanConvert : Type -&gt; bool" Usage="queryStringConverter.CanConvert type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f2d31-117"><see cref="T:System.Type" /> Do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="f2d31-117">The <see cref="T:System.Type" /> to convert.</span></span></param>
        <summary><span data-ttu-id="f2d31-118">Określa, czy określony typ może być konwertowany do i z reprezentacji w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="f2d31-118">Determines whether the specified type can be converted to and from a string representation.</span></span></summary>
        <returns><span data-ttu-id="f2d31-119">Wartość określająca, czy typ można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="f2d31-119">A value that specifies whether the type can be converted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2d31-120">Poniższy kod pokazuje, jak ustalić, <xref:System.ServiceModel.Dispatcher.QueryStringConverter> czy można konwertować do i z określonego typu.</span><span class="sxs-lookup"><span data-stu-id="f2d31-120">The following code shows how to determine whether the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> can convert to and from the specified type.</span></span>  
  
 [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]
 [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public virtual object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertStringToValue : string * Type -&gt; obj&#xA;override this.ConvertStringToValue : string * Type -&gt; obj" Usage="queryStringConverter.ConvertStringToValue (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="f2d31-121">Ciąg w postaci ciągu parametrów i wartości.</span><span class="sxs-lookup"><span data-stu-id="f2d31-121">The string form of the parameter and value.</span></span></param>
        <param name="parameterType"><span data-ttu-id="f2d31-122"><see cref="T:System.Type" /> Do konwersji parametru na.</span><span class="sxs-lookup"><span data-stu-id="f2d31-122">The <see cref="T:System.Type" /> to convert the parameter to.</span></span></param>
        <summary><span data-ttu-id="f2d31-123">Konwertuje parametr ciągu zapytania na określony typ.</span><span class="sxs-lookup"><span data-stu-id="f2d31-123">Converts a query string parameter to the specified type.</span></span></summary>
        <returns><span data-ttu-id="f2d31-124">Przekonwertowany parametr.</span><span class="sxs-lookup"><span data-stu-id="f2d31-124">The converted parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2d31-125">Jeśli jest typem wartości i parametrem jest `null`, zwracana `parameterType` jest wartość domyślna elementu. `parameterType`</span><span class="sxs-lookup"><span data-stu-id="f2d31-125">If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2d31-126">Poniższy kod ilustruje sposób konwersji ciągu na określony typ.</span><span class="sxs-lookup"><span data-stu-id="f2d31-126">The following code shows how to convert a string to the specified type.</span></span>  
  
 [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]
 [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="f2d31-127">Podany ciąg nie ma poprawnego formatu.</span><span class="sxs-lookup"><span data-stu-id="f2d31-127">The provided string does not have the correct format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertValueToString : obj * Type -&gt; string&#xA;override this.ConvertValueToString : obj * Type -&gt; string" Usage="queryStringConverter.ConvertValueToString (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="f2d31-128">Parametr do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="f2d31-128">The parameter to convert.</span></span></param>
        <param name="parameterType"><span data-ttu-id="f2d31-129"><see cref="T:System.Type" /> Parametr do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="f2d31-129">The <see cref="T:System.Type" /> of the parameter to convert.</span></span></param>
        <summary><span data-ttu-id="f2d31-130">Konwertuje parametr na reprezentację ciągu zapytania.</span><span class="sxs-lookup"><span data-stu-id="f2d31-130">Converts a parameter to a query string representation.</span></span></summary>
        <returns><span data-ttu-id="f2d31-131">Nazwa i wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="f2d31-131">The parameter name and value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2d31-132">Poniższy kod pokazuje, jak przekonwertować wpisaną wartość na ciąg reprezentujący wartość.</span><span class="sxs-lookup"><span data-stu-id="f2d31-132">The following code shows how to convert a typed value into a string representation of the value.</span></span>  
  
 [!code-csharp[QueryStringConverter#3](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#3)]
 [!code-vb[QueryStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
