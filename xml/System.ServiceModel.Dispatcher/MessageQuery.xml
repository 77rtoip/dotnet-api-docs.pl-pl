<Type Name="MessageQuery" FullName="System.ServiceModel.Dispatcher.MessageQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e8f7b196503a823c71e89561e216a1f41b97d76" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36415481" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQuery abstract" />
  <TypeSignature Language="F#" Value="type MessageQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa zachowanie podstawowe klasy używane do wyszukiwania określonych danych skorelowana w wiadomości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.MessageQuery> Klasy jest podobna do <xref:System.ServiceModel.Dispatcher.MessageFilter> klasy.  Jednakże, zamiast zwracać dopasowania, <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> metoda zwraca wyniki oceny kwerendę komunikatu. Wynik kwerendy jest wartością w komunikacie. Użyj wartości jako klucza do skorelowania wiadomości na inne komunikaty. Aby dodać nową właściwość danych, użyj <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> metody <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty> klasy.  
  
> [!NOTE]
>  Dla konkretną implementację <xref:System.ServiceModel.Dispatcher.MessageQuery>, zobacz <xref:System.ServiceModel.XPathMessageQuery> klasy.  
  
## <a name="using-the-xpathmessagequery-and-messagequerycollection-classes"></a>Przy użyciu klas XPathMessageQuery i MessageQueryCollection  
 Aby zoptymalizować proces wykonywania zapytania, tworząc zestaw obiektów zapytania i wstawianie ich do wystąpienia <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> klasy.  
  
> [!NOTE]
>  Dla konkretną implementację <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>, zobacz <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> klasy.  
  
 Typowe obciążenie jest o zapytań, które mają tego samego predykatu języka XPath, ale które różnią się jedynie wartości końcowej typu liść. Na przykład następujące kwerendy XPath są identyczne z wyjątkiem klauzuli końcowego. Pierwszy zapytania dotyczące wszystkich elementów, które mają atrybut ilość jest równa 1, a drugiego zapytania dotyczące elementów z atrybutem produktu równa się "Contoso"):  
  
```  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]"  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = 'Contoso']"  
```  
  
 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> Klasa umożliwia tworzenie tabel zapytań, które różnią się tylko nieznacznie, umożliwiające efektywniejsze przetwarzania.  
  
 Alternatywnie można użyć <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601> klasy do przechowywania i ocenić kwerendy dotyczące komunikatów.  
  
   
  
## Examples  
 Poniższy przykład tworzy komunikat i kwerendy dotyczące komunikatów XPath. Zapytania są oceniane przez <xref:System.ServiceModel.XPathMessageQuery> obiektów zawartych w <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> obiektu. Wyniki każdego zapytania są testowane za pomocą <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> właściwość <xref:System.ServiceModel.Dispatcher.XPathResult> klasy.  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.XPathMessageQuery" />
    <altmember cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathResult" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQuery();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageQueryCollection">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageQueryCollection () As MessageQueryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Dispatcher::MessageQueryCollection ^ CreateMessageQueryCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection&#xA;override this.CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection" Usage="messageQuery.CreateMessageQueryCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageQueryCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kolekcję kwerendy zwracającej określonego typu danych skojarzone z nim.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> Kolekcja zapytania skojarzone z typem danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona do użycia przez <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, przeprowadza kwerendę dla komunikatu i zwraca wartość, która spełnia zapytania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to różnica między dwa przeciążenia jedną przyjmuje <xref:System.ServiceModel.Channels.Message> parametru i nie można zbadać treści; innych przyjmuje <xref:System.ServiceModel.Channels.MessageBuffer> parametru i można sprawdzić wszystkie części komunikatu. Nagłówki komunikatów są automatycznie buforowane i może być badana nie są używane. Jednak jeśli treść jest można wykonać zapytania, następnie cały komunikat musi być buforowane ponieważ treść komunikatu Niebuforowane mogą być używane przez zapytanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.Message -&gt; 'Result" Usage="messageQuery.Evaluate message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Typ wartości do zwrócenia.</typeparam>
        <param name="message">Komunikat do zapytania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, przeprowadza kwerendę dla komunikatu i zwraca wynik. Nie można zbadać treści.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  Ustalony zbiór wyników spełniających kryteria zapytania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (buffer As MessageBuffer) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.MessageBuffer -&gt; 'Result" Usage="messageQuery.Evaluate buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">Typ obiektu do zwrócenia.</typeparam>
        <param name="buffer">Komunikat do zapytania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, przeprowadza kwerendę dla komunikatu i zwraca wynik.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  Ustalony zbiór wyników spełniających kryteria zapytania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy komunikat i kwerendy dotyczące komunikatów XPath. Zapytania są oceniane przez <xref:System.ServiceModel.XPathMessageQuery> obiektów zawartych w <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> obiektu. Wyniki każdego zapytania są testowane za pomocą <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> właściwość <xref:System.ServiceModel.Dispatcher.XPathResult> klasy.  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>