<Type Name="EndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5df79058c4d3b6d1bc524f8589689890e275bebd" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64032968" /></Metadata><TypeSignature Language="C#" Value="public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <TypeSignature Language="F#" Value="type EndpointAddressMessageFilter = class&#xA;    inherit MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="93225-101">Reprezentuje zapytanie, które sprawdza, czy komunikat spełniający wymagania to adres określony punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="93225-101">Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93225-102">Ten filtr sprawdza, czy komunikat spełnia adres konkretny punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="93225-102">This filter tests whether a message satisfies a particular endpoint address.</span></span> <span data-ttu-id="93225-103"><xref:System.ServiceModel.EndpointAddress> Obiekt zawiera identyfikator URI i opcjonalnie zbiór adresowania nagłówków.</span><span class="sxs-lookup"><span data-stu-id="93225-103">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="93225-104">Nagłówki adresów i wiadomości są w postaci kanonicznej aby można było porównać pod kątem równości.</span><span class="sxs-lookup"><span data-stu-id="93225-104">The addressing and message headers are canonicalized in order to be compared for equality.</span></span> <span data-ttu-id="93225-105">Jeśli parametr znajduje się w więcej niż jeden raz w <xref:System.ServiceModel.EndpointAddress>, odpowiedniego nagłówka musi znajdować się w komunikacie o co najmniej oznacza wiele razy.</span><span class="sxs-lookup"><span data-stu-id="93225-105">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="93225-106">Usługi IIS i źródłowy system plików (NTFS lub systemu plików FAT) jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="93225-106">IIS and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="93225-107">Porównywanie identyfikatora URI, wykonywane przez tę klasę również jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="93225-107">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="93225-108">Tak więc, na przykład http://www.microsoft.com jest oceniane jako równe http://WWW.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="93225-108">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93225-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="93225-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter : System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="93225-110"><see cref="T:System.ServiceModel.EndpointAddress" /> Względem wiadomości, które są badane.</span><span class="sxs-lookup"><span data-stu-id="93225-110">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <summary><span data-ttu-id="93225-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> klasy przy użyciu określonego adresu testujące wiadomość.</span><span class="sxs-lookup"><span data-stu-id="93225-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class with a specified address against which to test a message.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93225-112"><paramref name="address" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93225-112"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter : System.ServiceModel.EndpointAddress * bool -&gt; System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter (address, includeHostNameInComparison)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="93225-113"><see cref="T:System.ServiceModel.EndpointAddress" /> Względem wiadomości, które są badane.</span><span class="sxs-lookup"><span data-stu-id="93225-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <param name="includeHostNameInComparison"><span data-ttu-id="93225-114"><see langword="true" /> Jeśli nazwa hosta jest objęty porównaniem adres punktu końcowego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93225-114"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="93225-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="93225-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93225-116">Jeśli masz usługę sieci web zainstalowany na komputerze lokalnym, istnieje wiele sposobów równoważne odwołać się do niego, takie jak następujące:</span><span class="sxs-lookup"><span data-stu-id="93225-116">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="93225-117">http://[my-machine-name]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="93225-117">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="93225-118">http://[my-machine-name].[my-company].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="93225-118">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="93225-119">Jeśli wartość `includeHostNameInComparison` parametr jest `false`, powyżej identyfikatorów URI wszystkie rozwiązania do tego samego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="93225-119">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93225-120"><paramref name="address" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93225-120"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93225-121">Pobiera adres <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> testy wiadomości.</span><span class="sxs-lookup"><span data-stu-id="93225-121">Gets the address that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></summary>
        <value><span data-ttu-id="93225-122"><see cref="T:System.ServiceModel.EndpointAddress" /> , <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> Testy wiadomości.</span><span class="sxs-lookup"><span data-stu-id="93225-122">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="endpointAddressMessageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="93225-123">Dane skojarzone z filtrami w tabeli.</span><span class="sxs-lookup"><span data-stu-id="93225-123">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="93225-124">Tworzy nową tabelę filtru, która sprawdza komunikat względem wielu adresy punktów końcowych, jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="93225-124">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span></span></summary>
        <returns><span data-ttu-id="93225-125">Obiekt, który implementuje <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interfejsu, który może zawierać <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />s ze skojarzonych <paramref name="FilterData" />.</span><span class="sxs-lookup"><span data-stu-id="93225-125">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93225-126">Metoda ta zwraca wystąpienie <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> który jest zoptymalizowany do testowania dla punktów końcowych szczegółowy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="93225-126">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="93225-127">Ta metoda jest przeznaczona do użycia przez <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="93225-127">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="93225-128">Użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> konstruktorów do tworzenia filtru tabeli wystąpień.</span><span class="sxs-lookup"><span data-stu-id="93225-128">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> constructors to create filter table instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostNameInComparison : bool" Usage="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93225-129">Pobiera wartość wskazującą, czy nazwa hosta jest włączony w porównania adres punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="93225-129">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span></span></summary>
        <value><span data-ttu-id="93225-130"><see langword="true" /> Jeśli nazwa hosta jest objęty porównaniem adres punktu końcowego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93225-130"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93225-131">Jeśli masz usługę sieci web zainstalowany na komputerze lokalnym, istnieje wiele sposobów równoważne odwołać się do niego, takie jak następujące:</span><span class="sxs-lookup"><span data-stu-id="93225-131">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="93225-132">http://[my-machine-name]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="93225-132">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="93225-133">http://[my-machine-name].[my-company].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="93225-133">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="93225-134">Wartość domyślna tej właściwości to `false`, dlatego powyżej identyfikatorów URI wszystkie rozwiązania do tego samego punktu końcowego, jeśli nie zmienisz tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="93225-134">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93225-135">Sprawdza, czy wiadomość lub buforowanych wiadomości nie będzie spełniał kryteriów filtru punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="93225-135">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93225-136">Różnica między dwa przeciążenia metody <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> metodą jest, że ten, który trwa <xref:System.ServiceModel.Channels.MessageBuffer> parametr jest dozwolony do sprawdzenia treść komunikatu, gdy testowanie pod kątem dopasowanie, podczas gdy ten, który przyjmuje <xref:System.ServiceModel.Channels.Message> parametr nie jest.</span><span class="sxs-lookup"><span data-stu-id="93225-136">The difference between the two overloads of the <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> method is that the one that takes the <xref:System.ServiceModel.Channels.MessageBuffer> parameter is permitted to examine the body of a message when testing for a match, while the one that takes the <xref:System.ServiceModel.Channels.Message> parameter is not.</span></span>  
  
 <span data-ttu-id="93225-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> nie sprawdza zawartość treści wiadomości, dzięki czemu te dwie metody są równoważne.</span><span class="sxs-lookup"><span data-stu-id="93225-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> does not test the contents of the body of a message, so these two methods are equivalent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="endpointAddressMessageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="93225-138"><see cref="T:System.ServiceModel.Channels.Message" /> Obiekt do testowania.</span><span class="sxs-lookup"><span data-stu-id="93225-138">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="93225-139">Sprawdza, czy komunikat spełnia adresu określonego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="93225-139">Tests whether a message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="93225-140"><see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Channels.Message" /> obiektu spełnia adres punktu końcowego określonego w filtrze; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93225-140"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93225-141">Dwa przeciążenia tej metody są równoważne, ponieważ oba zbadać tylko nagłówki wiadomości.</span><span class="sxs-lookup"><span data-stu-id="93225-141">The two overloads of this method are equivalent because they both examine only message headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93225-142"><paramref name="message" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93225-142"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="endpointAddressMessageFilter.Match messageBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="93225-143"><see cref="T:System.ServiceModel.Channels.MessageBuffer" /> Obiekt do testowania.</span><span class="sxs-lookup"><span data-stu-id="93225-143">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="93225-144">Sprawdza, czy buforowanego komunikatu spełnia adresu określonego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="93225-144">Tests whether a buffered message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="93225-145"><see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> obiektu spełnia adres punktu końcowego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="93225-145"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93225-146">Dwa przeciążenia tej metody są równoważne, ponieważ oba zbadać tylko nagłówki wiadomości.</span><span class="sxs-lookup"><span data-stu-id="93225-146">The two overloads of this method are equivalent because they both examine only message headers.</span></span> <span data-ttu-id="93225-147">To jedyny przypadek, kiedy używać tego przeciążenia, jeśli użytkownik ma już `messageBuffer` dostępne i nie wiadomość, ponieważ ta metoda konwertuje `messageBuffer` do wiadomości.</span><span class="sxs-lookup"><span data-stu-id="93225-147">The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93225-148"><paramref name="messageBuffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="93225-148"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>