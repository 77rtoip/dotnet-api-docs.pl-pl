<Type Name="EndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
  <TypeSignature Language="C#" Value="public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2e772-101">Reprezentuje zapytanie, które sprawdza, czy wiadomość spełniający wymagania adres określony punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="2e772-101">Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e772-102">Ten filtr sprawdzenie, czy wiadomość spełnia adres danego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2e772-102">This filter tests whether a message satisfies a particular endpoint address.</span></span> <span data-ttu-id="2e772-103"><xref:System.ServiceModel.EndpointAddress> Obiekt zawiera identyfikator URI i opcjonalnie kolekcji adresowania nagłówków.</span><span class="sxs-lookup"><span data-stu-id="2e772-103">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="2e772-104">Nagłówki adresowania i wiadomości są w postaci kanonicznej celu pod kątem równości.</span><span class="sxs-lookup"><span data-stu-id="2e772-104">The addressing and message headers are canonicalized in order to be compared for equality.</span></span> <span data-ttu-id="2e772-105">Jeśli parametr znajduje się więcej niż raz w <xref:System.ServiceModel.EndpointAddress>, odpowiedni nagłówek musi występować w komunikacie co najmniej to wiele razy.</span><span class="sxs-lookup"><span data-stu-id="2e772-105">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="2e772-106">Usługi IIS i źródłowy system plików (NTFS lub FAT) jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="2e772-106">IIS and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="2e772-107">Wykonywane przez tę klasę porównywaniu identyfikatorów URI również jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="2e772-107">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="2e772-108">Tak, na przykład http://www.microsoft.com jest szacowana jako równe http://WWW.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="2e772-108">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e772-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e772-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="2e772-110"><see cref="T:System.ServiceModel.EndpointAddress" /> Przed wiadomości, które zostały przetestowane.</span><span class="sxs-lookup"><span data-stu-id="2e772-110">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <summary><span data-ttu-id="2e772-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> klasy mającym określony adres testujące wiadomości.</span><span class="sxs-lookup"><span data-stu-id="2e772-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class with a specified address against which to test a message.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e772-112"><paramref name="address" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-112"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="2e772-113"><see cref="T:System.ServiceModel.EndpointAddress" /> Przed wiadomości, które zostały przetestowane.</span><span class="sxs-lookup"><span data-stu-id="2e772-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <param name="includeHostNameInComparison">
          <span data-ttu-id="2e772-114"><see langword="true" /> Jeśli nazwa hosta jest uwzględniona w porównanie adres punktu końcowego. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-114"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2e772-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2e772-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e772-116">Jeśli masz usługi sieci web zainstalowany na komputerze lokalnym, istnieje wiele sposobów równoważne odwołanie do niego, takie jak następujące:</span><span class="sxs-lookup"><span data-stu-id="2e772-116">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="2e772-117">http://[my-machine-name]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="2e772-117">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="2e772-118">http://[my-machine-name].[my-company].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="2e772-118">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="2e772-119">Jeśli wartość `includeHostNameInComparison` parametr jest `false`, powyżej identyfikatorów URI wszystkie rozwiązania do tego samego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2e772-119">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e772-120"><paramref name="address" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-120"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e772-121">Pobiera adres, który <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> testów wiadomości.</span><span class="sxs-lookup"><span data-stu-id="2e772-121">Gets the address that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></summary>
        <value><span data-ttu-id="2e772-122"><see cref="T:System.ServiceModel.EndpointAddress" /> Który <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> testów wiadomości.</span><span class="sxs-lookup"><span data-stu-id="2e772-122">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="2e772-123">Dane skojarzone z filtry w tabeli.</span><span class="sxs-lookup"><span data-stu-id="2e772-123">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="2e772-124">Tworzy nową tabelę filtru sprawdzający jednocześnie komunikat z wieloma adresy punktów końcowych.</span><span class="sxs-lookup"><span data-stu-id="2e772-124">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span></span></summary>
        <returns><span data-ttu-id="2e772-125">Obiekt, który implementuje <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interfejs, który może zawierać <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />skojarzone s z <paramref name="FilterData" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-125">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e772-126">Metoda zwraca wystąpienie klasy <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> która została zoptymalizowana do testowania dla punktów końcowych określonego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="2e772-126">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="2e772-127">Ta metoda jest przeznaczona do użycia przez <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="2e772-127">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="2e772-128">Użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> konstruktorów, aby utworzyć Filtruj wystąpienia tabeli.</span><span class="sxs-lookup"><span data-stu-id="2e772-128">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> constructors to create filter table instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e772-129">Pobiera wartość wskazującą, czy nazwa hosta jest dołączona do porównania adres punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2e772-129">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span></span></summary>
        <value>
          <span data-ttu-id="2e772-130"><see langword="true" /> Jeśli nazwa hosta jest uwzględniona w porównanie adres punktu końcowego. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-130"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e772-131">Jeśli masz usługi sieci web zainstalowany na komputerze lokalnym, istnieje wiele sposobów równoważne odwołanie do niego, takie jak następujące:</span><span class="sxs-lookup"><span data-stu-id="2e772-131">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="2e772-132">http://[my-machine-name]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="2e772-132">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="2e772-133">http://[my-machine-name].[my-company].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="2e772-133">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="2e772-134">Wartość domyślna tej właściwości to `false`, dlatego powyżej identyfikatorów URI wszystkie rozwiązania do tego samego punktu końcowego, o ile nie można zmienić tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="2e772-134">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e772-135">Sprawdza, czy wiadomości lub buforowanych wiadomości nie będzie spełniał kryteriów filtru punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2e772-135">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e772-136">Różnica między dwoma przeciążeń <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> metoda jest, że, który ma <xref:System.ServiceModel.Channels.MessageBuffer> parametru jest dozwolona zbadanie treści komunikatu podczas testowania pod kątem dopasowania, podczas gdy jeden, który przyjmuje <xref:System.ServiceModel.Channels.Message> parametr nie jest.</span><span class="sxs-lookup"><span data-stu-id="2e772-136">The difference between the two overloads of the <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> method is that the one that takes the <xref:System.ServiceModel.Channels.MessageBuffer> parameter is permitted to examine the body of a message when testing for a match, while the one that takes the <xref:System.ServiceModel.Channels.Message> parameter is not.</span></span>  
  
 <span data-ttu-id="2e772-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> nie sprawdza zawartość treści wiadomości, więc te dwie metody są równoważne.</span><span class="sxs-lookup"><span data-stu-id="2e772-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> does not test the contents of the body of a message, so these two methods are equivalent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2e772-138"><see cref="T:System.ServiceModel.Channels.Message" /> Obiektu do testowania.</span><span class="sxs-lookup"><span data-stu-id="2e772-138">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="2e772-139">Sprawdza, czy wiadomość spełnia adres określony punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="2e772-139">Tests whether a message satisfies the specified endpoint address.</span></span></summary>
        <returns>
          <span data-ttu-id="2e772-140"><see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Channels.Message" /> obiektu spełnia adres punktu końcowego podana w filtrze; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-140"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e772-141">Dwa przeciążenia tej metody są równoważne, ponieważ obie zbadać tylko nagłówki komunikatów.</span><span class="sxs-lookup"><span data-stu-id="2e772-141">The two overloads of this method are equivalent because they both examine only message headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e772-142"><paramref name="message" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-142"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="2e772-143"><see cref="T:System.ServiceModel.Channels.MessageBuffer" /> Obiektu do testowania.</span><span class="sxs-lookup"><span data-stu-id="2e772-143">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="2e772-144">Sprawdza, czy buforowanego komunikatu spełnia adres określony punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="2e772-144">Tests whether a buffered message satisfies the specified endpoint address.</span></span></summary>
        <returns>
          <span data-ttu-id="2e772-145"><see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> obiektu spełnia adres punktu końcowego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-145"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e772-146">Dwa przeciążenia tej metody są równoważne, ponieważ obie zbadać tylko nagłówki komunikatów.</span><span class="sxs-lookup"><span data-stu-id="2e772-146">The two overloads of this method are equivalent because they both examine only message headers.</span></span> <span data-ttu-id="2e772-147">Jest tylko powód, aby użyć tego przeciążenia, jeśli użytkownik ma już `messageBuffer` dostępne i nie komunikatu, ponieważ ta metoda konwertuje `messageBuffer` do wiadomości.</span><span class="sxs-lookup"><span data-stu-id="2e772-147">The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e772-148"><paramref name="messageBuffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e772-148"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>