<Type Name="MessageQueryTable&lt;TItem&gt;" FullName="System.ServiceModel.Dispatcher.MessageQueryTable&lt;TItem&gt;">
  <TypeSignature Language="C#" Value="public class MessageQueryTable&lt;TItem&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueryTable`1&lt;TItem&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !TItem&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !TItem&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !TItem&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueryTable(Of TItem)&#xA;Implements ICollection(Of KeyValuePair(Of MessageQuery, TItem)), IDictionary(Of MessageQuery, TItem), IEnumerable(Of KeyValuePair(Of MessageQuery, TItem))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TItem&gt;&#xA;public ref class MessageQueryTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TItem&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TItem&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TItem&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TItem"><span data-ttu-id="b1fc2-101">Typ wartości zwracane przez zapytania.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-101">The type of the values returned by the queries.</span></span></typeparam>
    <summary><span data-ttu-id="b1fc2-102">Zarządza kolekcją obiektów kwerendy komunikatu.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-102">Manages a collection of message query objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1fc2-103">Poniższy przykład tworzy komunikat i kwerendy dotyczące komunikatów XPath.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-103">The following example creates a message and XPath message queries.</span></span> <span data-ttu-id="b1fc2-104">Zapytania są oceniane przez <xref:System.ServiceModel.XPathMessageQuery> obiektów zawartych w <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-104">The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object.</span></span> <span data-ttu-id="b1fc2-105">Wyniki każdego zapytania są testowane za pomocą <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> właściwość <xref:System.ServiceModel.Dispatcher.XPathResult> klasy.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-105">The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.</span></span> <span data-ttu-id="b1fc2-106">Usuń znaczniki komentarza inny kod, aby zobaczyć podobną funkcjonalność uruchomiona przy użyciu <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601>.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-106">Uncomment the alternate code to see similar functionality demonstrated using the <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601>.</span></span>  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueryTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueryTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1fc2-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1fc2-108">Dodaje element do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-108">Adds an item to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !TItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of MessageQuery, TItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TItem&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b1fc2-109">Ogólnego <see cref="T:System.Collections.Generic.KeyValuePair`2" /> do dodania.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-109">The generic <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add.</span></span></param>
        <summary><span data-ttu-id="b1fc2-110">Dodaje element zdefiniowany jako pary klucza/wartości.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-110">Adds an item defined as a key/value pair.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageQuery key, TItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ServiceModel.Dispatcher.MessageQuery key, !TItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.ServiceModel.Dispatcher.MessageQuery,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As MessageQuery, value As TItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ServiceModel::Dispatcher::MessageQuery ^ key, TItem value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.ServiceModel.Dispatcher.MessageQuery" />
        <Parameter Name="value" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b1fc2-111">A <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" /> działający jako klucza.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-111">A <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" /> that acts as a key.</span></span></param>
        <param name="value"><span data-ttu-id="b1fc2-112">Wartość do dodania, skojarzoną z kluczem.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-112">The value to add, associated with the key.</span></span></param>
        <summary><span data-ttu-id="b1fc2-113">Dodaje element do kolekcji przy użyciu systemu klucza i wartości.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-113">Adds an item to the collection using a key/value system.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1fc2-114">Usuwa wszystkie elementy członkowskie z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-114">Removes all members from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !TItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of MessageQuery, TItem)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TItem&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b1fc2-115">Klucz obiekt do zlokalizowania.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-115">The key of the object to locate.</span></span></param>
        <summary><span data-ttu-id="b1fc2-116">Określa, czy kolekcja zawiera konkretny element sformatowane jako struktura klucza i wartości.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-116">Determines whether the collection contains a specific item formatted as a key/value structure.</span></span></summary>
        <returns>
          <span data-ttu-id="b1fc2-117"><see cref="T:System.Boolean" />
          <see langword="true" /> Jeśli element zostanie znaleziony w kolekcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-117"><see cref="T:System.Boolean" />
<see langword="true" /> if the item is found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (System.ServiceModel.Dispatcher.MessageQuery key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.ServiceModel.Dispatcher.MessageQuery key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As MessageQuery) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::ServiceModel::Dispatcher::MessageQuery ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.ServiceModel.Dispatcher.MessageQuery" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b1fc2-118">Klucz do zlokalizowania.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-118">The key to locate.</span></span></param>
        <summary><span data-ttu-id="b1fc2-119">Określa, czy kolekcja zawiera element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-119">Determines whether the collection contains an element with the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="b1fc2-120"><see cref="T:System.Boolean" />
          <see langword="true" /> Jeśli kolekcja zawiera element z kluczem; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-120"><see cref="T:System.Boolean" />
<see langword="true" /> if the collection contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !TItem&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageQuery, TItem)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TItem&gt;&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b1fc2-121">Jednowymiarowa tablica, która jest miejscem docelowym elementów kopiowanych z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-121">The one-dimensional array that is the destination of the elements copied from the collection.</span></span> <span data-ttu-id="b1fc2-122">Tablica musi mieć indeksowane zaczynające od zera.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-122">The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="b1fc2-123">Rozpoczyna się od zera indeks w tablicy, od których kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-123">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="b1fc2-124">Kopiuje elementy kolekcji do <see cref="T:System.Array" />, rozpoczynając od określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-124">Copies the elements of the collection to an <see cref="T:System.Array" />, starting at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1fc2-125">Pobiera liczbę par zapytania/danych w tabeli.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-125">Gets the number of query/data pairs in the table.</span></span></summary>
        <value><span data-ttu-id="b1fc2-126">Zwraca <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-126">Returns <see cref="T:System.Int32" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1fc2-127">Przeprowadza kwerendę dla komunikatu i zwraca wynik.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-127">Runs a query against the message and returns a result.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt; Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !!TResult&gt;&gt; Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TResult&gt;&gt; ^ Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="b1fc2-128">Typ wyniku do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-128">The type of the result to return.</span></span></typeparam>
        <param name="message"><span data-ttu-id="b1fc2-129">Komunikat do zapytania.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-129">The message to query.</span></span></param>
        <summary><span data-ttu-id="b1fc2-130">Przeprowadza kwerendę dla komunikatu i zwraca zbiór wyników.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-130">Runs a query against the message and returns a collection of results.</span></span> <span data-ttu-id="b1fc2-131">Nie można zbadać treści.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-131">The body cannot be queried.</span></span></summary>
        <returns>
          <see cref="T:System.Collections.Generic.IEnumerable`1" />  
  
 <span data-ttu-id="b1fc2-132">Wyliczalny zbiór wyników.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-132">The enumerable collection of results.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt; Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !!TResult&gt;&gt; Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate(Of TResult) (buffer As MessageBuffer) As IEnumerable(Of KeyValuePair(Of MessageQuery, TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TResult&gt;&gt; ^ Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="b1fc2-133">Typ wyniku do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-133">The type of the result to return.</span></span></typeparam>
        <param name="buffer"><span data-ttu-id="b1fc2-134">Komunikat do zapytania.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-134">The message to query.</span></span></param>
        <summary><span data-ttu-id="b1fc2-135">Przeprowadza kwerendę dla komunikatu i zwraca wynik.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-135">Runs a query against the message and returns the result.</span></span></summary>
        <returns>
          <see cref="T:System.Collections.Generic.IEnumerable`1" />  
  
 <span data-ttu-id="b1fc2-136">Wynik kwerendy.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-136">The result of the query.</span></span> <span data-ttu-id="b1fc2-137">Za pomocą mogą być wyliczane wiele wyników.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-137">Multiple results can be enumerated through.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !TItem&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of MessageQuery, TItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TItem&gt;&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1fc2-138">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-138">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns>
          <see cref="T:System.Collections.Generic.IEnumerator`1" />  
  
 <span data-ttu-id="b1fc2-139">Obiekt moduł wyliczający, który może służyć do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-139">The enumerator object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1fc2-140">Pobiera wartość wskazującą, czy tabela jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-140">Gets a value that indicates whether the table is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="b1fc2-141"><see cref="T:System.Boolean" />
          <see langword="false" /> dla wszystkich tabel.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-141"><see cref="T:System.Boolean" />
<see langword="false" /> for all tables.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[System.ServiceModel.Dispatcher.MessageQuery key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(class System.ServiceModel.Dispatcher.MessageQuery)" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Item(System.ServiceModel.Dispatcher.MessageQuery)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As MessageQuery) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[System::ServiceModel::Dispatcher::MessageQuery ^] { TItem get(System::ServiceModel::Dispatcher::MessageQuery ^ key); void set(System::ServiceModel::Dispatcher::MessageQuery ^ key, TItem value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.ServiceModel.Dispatcher.MessageQuery" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b1fc2-142">Obiekt kwerendy do pobrania lub ustawienia.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-142">The query object to get or set.</span></span></param>
        <summary><span data-ttu-id="b1fc2-143">Pobiera lub ustawia obiekt zapytanie skojarzone z typem danych.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-143">Gets or sets the query object associated with the data type.</span></span></summary>
        <value><span data-ttu-id="b1fc2-144">Zwraca <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-144">Returns <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageQuery&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageQuery&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of MessageQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageQuery ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageQuery ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageQuery&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1fc2-145">Zwraca kolekcję wszystkich kluczy kolekcji zawartych w tabeli.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-145">Returns a collection of all the collection keys contained in the table.</span></span></summary>
        <value>
          <see cref="T:System.Collections.Generic.ICollection`1" />  
  
 <span data-ttu-id="b1fc2-146">Kolekcja wszystkich obiektów kwerendy zawarte w tabeli.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-146">A collection of all of the query objects contained in the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1fc2-147">Usuwa wystąpienie określonego obiektu z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-147">Removes the occurrence of a specific object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !TItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of MessageQuery, TItem)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TItem&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b1fc2-148"><see cref="T:System.Collections.Generic.KeyValuePair`2" /> Obiekt ma zostać usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-148">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="b1fc2-149">Usuwa pierwsze wystąpienie określonego obiektu z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-149">Removes the first occurrence of the specified object from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="b1fc2-150"><see cref="T:System.Boolean" />
          <see langword="true" /> Jeśli element został pomyślnie usunięty z kolekcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-150"><see cref="T:System.Boolean" />
<see langword="true" /> if the item was successfully removed from the collection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b1fc2-151">Ta metoda zwraca również wartość <see langword="false" /> Jeśli element nie zostanie znaleziony w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-151">This method also returns <see langword="false" /> if the item is not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.MessageQuery key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.ServiceModel.Dispatcher.MessageQuery key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.ServiceModel.Dispatcher.MessageQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As MessageQuery) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::ServiceModel::Dispatcher::MessageQuery ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.ServiceModel.Dispatcher.MessageQuery" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b1fc2-152">Klucz elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-152">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="b1fc2-153">Usuwa element skojarzony z określonym kluczem z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-153">Removes the item associated with the specified key from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="b1fc2-154"><see cref="T:System.Boolean" />
          <see langword="true" /> Jeśli element został znaleziony i usunięte; <see langword="false" /> Jeśli element nie został znaleziony.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-154"><see cref="T:System.Boolean" />
<see langword="true" /> if the item was found and removed; <see langword="false" /> if the item was not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1fc2-155">Zwraca moduł wyliczający, który może służyć do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-155">Returns an enumerator that can be used to iterate through the collection.</span></span></summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" />  
  
 <span data-ttu-id="b1fc2-156">Moduł wyliczający, używany do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-156">The enumerator used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.ServiceModel.Dispatcher.MessageQuery key, out TItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.ServiceModel.Dispatcher.MessageQuery key, [out] !TItem&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageQuery,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As MessageQuery, ByRef value As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::ServiceModel::Dispatcher::MessageQuery ^ key, [Runtime::InteropServices::Out] TItem % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.ServiceModel.Dispatcher.MessageQuery" />
        <Parameter Name="value" Type="TItem&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b1fc2-157">Zapytanie, do którego jest używany jako klucz w celu pobrania danych.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-157">The query that is used as a key to retrieve the data.</span></span></param>
        <param name="value"><span data-ttu-id="b1fc2-158">Wartość skojarzona z zapytaniem.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-158">The value associated with the query.</span></span></param>
        <summary><span data-ttu-id="b1fc2-159">Sprawdza, czy pasującego zapytania są przechowywane w tabeli.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-159">Checks whether a matching query is stored in the table.</span></span></summary>
        <returns>
          <span data-ttu-id="b1fc2-160"><see cref="T:System.Boolean" />
          <see langword="true" /> w przypadku dopasowania zapytania w tabeli (wartość skojarzoną z zapytaniem znajduje się w <see langword="out" /> <paramref name="value" /> parametru); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-160"><see cref="T:System.Boolean" />
<see langword="true" /> if there is a matching query in the table (the value associated with the query is found in the <see langword="out" /><paramref name="value" /> parameter); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TItem&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TItem&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TItem&gt; ^ Values { System::Collections::Generic::ICollection&lt;TItem&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1fc2-161">Pobiera kolekcję wartości wyniku zawarte w tabeli.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-161">Gets a collection of the result values contained in the table.</span></span></summary>
        <value>
          <see cref="T:System.Collections.Generic.ICollection`1" />  
  
 <span data-ttu-id="b1fc2-162">Wszystkie wartości wyniku zawarte w tabeli.</span><span class="sxs-lookup"><span data-stu-id="b1fc2-162">All of the result values contained in the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>