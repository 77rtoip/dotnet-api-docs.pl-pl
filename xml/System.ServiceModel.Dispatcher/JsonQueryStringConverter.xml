<Type Name="JsonQueryStringConverter" FullName="System.ServiceModel.Dispatcher.JsonQueryStringConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6006168ffe19ab54107532781dd7a079676f6893" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64032704" /></Metadata><TypeSignature Language="C#" Value="public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonQueryStringConverter extends System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonQueryStringConverter&#xA;Inherits QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonQueryStringConverter : System::ServiceModel::Dispatcher::QueryStringConverter" />
  <TypeSignature Language="F#" Value="type JsonQueryStringConverter = class&#xA;    inherit QueryStringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.QueryStringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ta klasa konwertuje wartość parametru z konsoli JavaScript Object Notation (JSON).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry można określić w formacie JSON ciągu zapytania w adresie URL. Ta klasa określa odwzorowania parametry ciągu zapytania JSON z parametrami operacji usługi i gdy <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> służy do przetwarzania żądania HTTP od klientów oparte na przeglądarce środowiska ASP.NET AJAX.  
  
 Ta klasa jest używana wewnętrznie przez Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> klasy dla punktów końcowych skonfigurowany do akceptowania żądań HTTP GET/POST, parametrami zakodowane w ciągu zapytania identyfikatora URI. Ta klasa jest używana do konwersji między obiektami CLR i wartości parametrów żądania poszczególnych operacji w ciągu zapytania identyfikatora URI. W przeciwieństwie do jego typ podstawowy ta klasa obsługuje wartości typów pierwotnych i złożone.  
  
 <xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> pochodzi od klasy <xref:System.ServiceModel.Dispatcher.QueryStringConverter> i obsługuje następujące typy:  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Array> Typu <xref:System.Byte>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
 W przeciwieństwie do jego typ podstawowy tego konwertera może obsłużyć dowolny typ, przestrzega modelu kontraktu danych. Zastępuje konwerter <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> tak, aby każdy parametr jest serializowany do formatu JSON przy użyciu domyślnego <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> i edytora XML JSON skonfigurowane do używania, kodowanie UTF-8. `null` Parametry są zwracane jako `null`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonQueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonQueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public override bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvert(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanConvert : Type -&gt; bool" Usage="jsonQueryStringConverter.CanConvert type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> Aby zweryfikować.</param>
        <summary>Pobiera wartość wskazującą, czy określony typ środowiska uruchomieniowego języka wspólnego (CLR) jest znany typ, który może być serializacji i deserializacji.</summary>
        <returns><see langword="true" /> Jeśli można wykonywać serializację typu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdza, czy można używać typu CLR w ciągu zapytania JSON. Typy CLR, które mogą być używane w taki ciąg znajdują się tylko te, które są obsługiwane przez <xref:System.Runtime.Serialization.DataContractSerializer>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public override object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="override this.ConvertStringToValue : string * Type -&gt; obj" Usage="jsonQueryStringConverter.ConvertStringToValue (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">Formularz JSON wartość tego parametru.</param>
        <param name="parameterType"><see cref="T:System.Type" /> Parametru do deserializacji.</param>
        <summary>Deserializuje parametr ciągu zapytania JavaScript Object Notation (JSON) na określony typ środowiska uruchomieniowego języka wspólnego (CLR).</summary>
        <returns>Wystąpienie typu CLR, do którego została przekonwertowana wartość tego parametru.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public override string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="override this.ConvertValueToString : obj * Type -&gt; string" Usage="jsonQueryStringConverter.ConvertValueToString (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">Wartość parametru do przekonwertowania.</param>
        <param name="parameterType"><see cref="T:System.Type" /> Parametru do serializacji.</param>
        <summary>Serializuje parametr typu środowiska uruchomieniowego języka wspólnego (CLR) do reprezentacji JavaScript Object Notation (JSON).</summary>
        <returns>Serializacja kodu JSON zapytania ciąg parametrów typu CLR. <see langword="null" /> jest zwracany, jeśli parametr jest <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastępuje konwerter <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> tak, aby każdy parametr jest serializowany do formatu JSON przy użyciu domyślnego <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> i edytora XML JSON skonfigurowane do używania, kodowanie UTF-8. W przeciwieństwie do jego typ podstawowy tego konwertera może obsłużyć dowolny typ, przestrzega modelu kontraktu danych.  
  
   
  
## Examples  
 Należy wziąć pod uwagę następujące działania.  
  
```  
[WebGet]  
[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  
```  
  
 Ta operacja tworzy adres URL, który jest zakodowane w adresie URL wersję poniżej.  
  
```  
http://localhost/quote.svc/GetOptionQuote?ticker="MSFT"&dte="\/Date(50067823)\/"&opt={"type":"call","strikePrice":"35"}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>