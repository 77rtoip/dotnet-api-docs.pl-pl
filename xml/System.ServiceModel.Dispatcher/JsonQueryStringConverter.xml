<Type Name="JsonQueryStringConverter" FullName="System.ServiceModel.Dispatcher.JsonQueryStringConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="248ec8625d66a7ee38325416efb7548324a9f81a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313801" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonQueryStringConverter extends System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonQueryStringConverter&#xA;Inherits QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonQueryStringConverter : System::ServiceModel::Dispatcher::QueryStringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.QueryStringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3f5ac-101">Ta klasa konwertuje wartość parametru z konsoli JavaScript Object Notation (JSON).</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f5ac-101">This class converts a parameter value to and from a JavaScript Object Notation (JSON).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f5ac-102">Parametry można określić w formacie JSON ciągu zapytania w adresie URL.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-102">Parameters can be specified in a JSON query string within a URL.</span></span> <span data-ttu-id="3f5ac-103">Ta klasa określa odwzorowania parametrów ciągu zapytania JSON z parametrami operacji usługi i po <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> służy do przetwarzania żądania HTTP od klientów przeglądarki ASP.NET AJAX.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-103">This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients.</span></span>  
  
 <span data-ttu-id="3f5ac-104">Ta klasa jest używana wewnętrznie przez Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> klasy punkty końcowe skonfigurowane do akceptowania żądań HTTP GET/POST z parametrami zakodowane w ciągu zapytania identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-104">This class is used internally by the Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.</span></span> <span data-ttu-id="3f5ac-105">Ta klasa jest używana do konwersji między obiektami CLR i wartości parametrów żądania poszczególnych działań w ciągu zapytania identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-105">This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.</span></span> <span data-ttu-id="3f5ac-106">W odróżnieniu od jego typu podstawowego ta klasa obsługuje zarówno podstawowego, jak i złożonych typów wartości.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-106">Unlike its base type, this class supports values of both primitive and complex types.</span></span>  
  
 <span data-ttu-id="3f5ac-107"><xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> pochodną <xref:System.ServiceModel.Dispatcher.QueryStringConverter> i obsługuje następujące typy:</span><span class="sxs-lookup"><span data-stu-id="3f5ac-107"><xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> derives from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> and supports the following types:</span></span>  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <span data-ttu-id="3f5ac-108"><xref:System.Array> Typu <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="3f5ac-108">An <xref:System.Array> of type <xref:System.Byte></span></span>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
 <span data-ttu-id="3f5ac-109">W odróżnieniu od jego typ podstawowy tego konwertera może obsługiwać dowolny typ przestrzegać modelu kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-109">Unlike its base type, this converter can handle any type adhering to the Data Contract model.</span></span> <span data-ttu-id="3f5ac-110">Konwerter zastępuje <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> tak, aby każdy parametr jest serializowany do ciągu JSON przy użyciu domyślnego <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> i Edytor XML JSON skonfigurowany do używania, kodowania UTF-8.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-110">The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding.</span></span> <span data-ttu-id="3f5ac-111">`null` Parametry są zwracane jako `null`.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-111">`null` parameters are returned as `null`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonQueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonQueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f5ac-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public override bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvert(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="3f5ac-113">
            <see cref="T:System.Type" /> Można zweryfikować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-113">The <see cref="T:System.Type" /> to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f5ac-114">Pobiera wartość wskazującą, czy określony typ środowiska uruchomieniowego języka wspólnego (CLR) jest znanym typem, który może być serializacji i deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-114">Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f5ac-115">
            <see langword="true" /> Jeśli typ można zserializować; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-115">
              <see langword="true" /> if the type can be serialized; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f5ac-116">Sprawdza, czy typ CLR mogą być używane w ciągu zapytania JSON.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-116">This checks whether a CLR type can be used in a JSON query string.</span></span> <span data-ttu-id="3f5ac-117">Typy CLR, które mogą być używane w taki ciąg są tylko te, które są obsługiwane przez <xref:System.Runtime.Serialization.DataContractSerializer>.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-117">The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f5ac-118">
            <paramref name="type" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-118">The <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public override object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="3f5ac-119">Formularz JSON wartość parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-119">The JSON form of the parameter value.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="3f5ac-120">
            <see cref="T:System.Type" /> Do parametru do deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-120">The <see cref="T:System.Type" /> to deserialize the parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f5ac-121">Deserializuje parametr ciągu zapytania JavaScript Object Notation (JSON) na określony typ środowiska uruchomieniowego języka wspólnego (CLR).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-121">Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f5ac-122">Wystąpienia typu CLR, do którego został przekonwertowany wartość parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-122">An instance of the CLR type to which the parameter value was converted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public override string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="3f5ac-123">Wartość parametru do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-123">The parameter value to convert.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="3f5ac-124">
            <see cref="T:System.Type" /> Parametru do serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-124">The <see cref="T:System.Type" /> of the parameter to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f5ac-125">Serializuje parametr typu środowiska uruchomieniowego języka wspólnego (CLR) do reprezentacji JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-125">Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f5ac-126">Serializację ciągu JSON zapytania ciąg parametru typu CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-126">The JSON query string parameter serialization of the CLR type.</span>
          </span>
          <span data-ttu-id="3f5ac-127">
            <see langword="null" /> jest zwracany, jeśli parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f5ac-127">
              <see langword="null" /> is returned if the parameter is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f5ac-128">Konwerter zastępuje <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> tak, aby każdy parametr jest serializowany do ciągu JSON przy użyciu domyślnego <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> i Edytor XML JSON skonfigurowany do używania, kodowania UTF-8.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-128">The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding.</span></span> <span data-ttu-id="3f5ac-129">W odróżnieniu od jego typ podstawowy tego konwertera może obsługiwać dowolny typ przestrzegać modelu kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-129">Unlike its base type, this converter can handle any type adhering to the Data Contract model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f5ac-130">Należy rozważyć następujące działania.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-130">Consider the following operation.</span></span>  
  
```  
[WebGet]  
[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  
```  
  
 <span data-ttu-id="3f5ac-131">Ta operacja powoduje adres URL, który jest wersją zakodowane w adresie URL z następujących czynności.</span><span class="sxs-lookup"><span data-stu-id="3f5ac-131">This operation produces a URL that is a URL-encoded version of the following.</span></span>  
  
```  
http://localhost/quote.svc/GetOptionQuote?ticker="MSFT"&dte="\/Date(50067823)\/"&opt={"type":"call","strikePrice":"35"}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>