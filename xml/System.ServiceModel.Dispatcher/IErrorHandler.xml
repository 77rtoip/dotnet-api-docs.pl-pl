<Type Name="IErrorHandler" FullName="System.ServiceModel.Dispatcher.IErrorHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8a4da782ccae3726e97d3194a82fddde8727ec0" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316743" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IErrorHandler" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IErrorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IErrorHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IErrorHandler" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Umożliwia implementujący do kontrolowania komunikat o błędzie zwracany do obiektu wywołującego i opcjonalnie wykonać przetwarzania, takich jak rejestrowanie błędów niestandardowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jawnie sterowania zachowaniem aplikacji w przypadku jest zwracany wyjątek, należy zaimplementować <xref:System.ServiceModel.Dispatcher.IErrorHandler> interfejsu i dodaj go do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>w <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> właściwości. <xref:System.ServiceModel.Dispatcher.IErrorHandler> Umożliwia jawnie sterowania błędu protokołu SOAP wygenerowane, zdecyduj, czy go wysłać do klienta i wykonywać zadania skojarzone, takie jak rejestrowanie. Błąd procedury obsługi są wywoływane w kolejności, w jakiej zostały dodane do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> właściwości.  
  
 Implementowanie <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> metody kontrolowania komunikat o błędzie, która jest zwracana do klienta.  
  
 Implementowanie <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> metody w celu zapewnienia zachowania związane z błędami Błąd rejestrowania, zapewniając błędu szybkie, zamykanie aplikacji, w tym i tak dalej.  
  
> [!NOTE]
>  Ponieważ <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> z wielu różnych miejscach nie ma żadnych gwarancji o który wątek wywołano metodę można wywołać metody. Nie są zależne od <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> metody wywoływane w wątku operację.  
  
 Wszystkie <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementacje są nazywane najpierw przed ich wysłaniem komunikatu odpowiedzi. Gdy wszystkie <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementacje została wywołana i przywrócić i w razie `fault` ma wartość inną niż`null`, są wysyłane do klienta zgodnie z kontrakt operacji. Jeśli `fault` jest `null` po wywołaniu wszystkich implementacji komunikat odpowiedzi jest kontrolowany przez <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> wartości właściwości.  
  
> [!NOTE]
>  Wyjątki mogą występować po wszystkich <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementacje są nazywane i komunikat odpowiedzi jest przekazywany do kanału. Jeśli wystąpi wyjątek kanału (na przykład trudności serializacji komunikatu) <xref:System.ServiceModel.Dispatcher.IErrorHandler> obiekty są powiadomienia. W takim przypadku należy nadal upewnij się, czy środowiska deweloperskiego przechwytuje i wyświetla takie wyjątki sprawia, że użycie śledzenia do odnajdywania problem. Aby uzyskać więcej informacji dotyczących śledzenia, zobacz [przy użyciu śledzenie, aby rozwiązać Twoja aplikacja](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).  
  
 Po odpowiedzi wiadomość została wysłana, wszystkie <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> implementacje są nazywane w tej samej kolejności.  
  
 Zazwyczaj <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementacji jest dodawany do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> właściwości usługi (i klienta w przypadku komunikacji dupleksowej).  
  
 Możesz dodać <xref:System.ServiceModel.Dispatcher.IErrorHandler> do środowiska wykonawczego zaimplementowanie zachowanie (albo <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>, lub <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> obiektu) i zachowanie programowo, w pliku konfiguracji lub z atrybutem niestandardowym do dołączenia Twoje <xref:System.ServiceModel.Dispatcher.IErrorHandler>.  
  
 Aby uzyskać więcej informacji na temat za pomocą zachowań, aby zmodyfikować środowiska uruchomieniowego, zobacz [Konfigurowanie i rozszerzanie środowiska uruchomieniowego za pomocą zachowań](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano to usługa, która implementuje <xref:System.ServiceModel.Dispatcher.IErrorHandler> zwracającą tylko <xref:System.ServiceModel.FaultException%601> typu `GreetingFault` gdy usługa metodę zarządzanym wyjątku.  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 Poniższy przykład kodu pokazuje, jak dodać za pomocą zachowanie usługi <xref:System.ServiceModel.Dispatcher.IErrorHandler> wykonania <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> właściwości.  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 Poniższy przykład kodu pokazuje, jak skonfigurować usługę załadować zachowanie usługi przy użyciu pliku konfiguracji aplikacji. Aby uzyskać więcej informacji o sposobie ujawnia w pliku konfiguracji zachowania usługi, zobacz <xref:System.ServiceModel.Description.IServiceBehavior>.  

 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleError">
      <MemberSignature Language="C#" Value="public bool HandleError (Exception error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception error) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleError (error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool HandleError (Exception exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception exception) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>Umożliwia przetwarzanie związane z błędami i zwraca wartość wskazującą, czy Dyspozytor przerywa sesji i kontekst wystąpienia w niektórych przypadkach.</summary>
        <returns>
          <see langword="true" /> Jeśli Windows Communication Foundation (WCF) nie może przerwać sesji (jeśli istnieje) i wystąpienia kontekstu, jeśli wystąpienie kontekstu nie jest <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> metody w celu wykonania powiązane z zachowań, takich jak rejestrowanie powiadomień systemowych, zamykanie aplikacji i tak dalej, błędów i zwraca wartość określającą, czy wyjątek został obsłużony odpowiednio.  
  
> [!NOTE]
>  Ponieważ <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> z wielu różnych miejscach nie ma żadnych gwarancji o który wątek wywołano metodę można wywołać metody. Nie są zależne od <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> metody wywoływane w wątku operację.  
  
 Wszystkie <xref:System.ServiceModel.Dispatcher.IErrorHandler> są nazywane implementacji. Domyślnie (gdy jest zwracana wartość `false`), w przypadku wyjątku, Dyspozytor przerywa dowolnej sesji i przerywa <xref:System.ServiceModel.InstanceContext> Jeśli <xref:System.ServiceModel.InstanceContextMode> niczego jest inny niż <xref:System.ServiceModel.InstanceContextMode.Single>.  Wyjątek jest on uznany za nieobsługiwany i każdy stan jest uznawany za uszkodzony.  
  
 Zwraca `true` z <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> zapobiegające to zachowanie domyślne. Jeśli zwróci żadnych program obsługi błędów `true` zleca WCF, które można bezpiecznie kontynuować korzystanie z stan skojarzony z żądaniem nie powiodło się.  
  
 Jeśli zwróci błąd obsługi `true` z <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> nieobsłużony wyjątek jest uznawany za — metoda i stosuje się domyślny może spowodować przerwane <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> i kanału podczas komunikacji kanału sesji lub <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> nie ustawiono właściwości <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.  
  
 `error` Nigdy nie jest parametr `null` i zawiera obiekt wyjątku, który został zgłoszony.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano to usługa, która implementuje <xref:System.ServiceModel.Dispatcher.IErrorHandler> zwracającą tylko <xref:System.ServiceModel.FaultException%601> typu `GreetingFault` gdy usługa metodę zarządzanym wyjątku.  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 Poniższy przykład kodu pokazuje, jak dodać za pomocą zachowanie usługi <xref:System.ServiceModel.Dispatcher.IErrorHandler> wykonania <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> właściwości.  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 Poniższy przykład kodu pokazuje, jak skonfigurować usługę załadować zachowanie usługi przy użyciu pliku konfiguracji aplikacji. Aby uzyskać więcej informacji o sposobie ujawnia w pliku konfiguracji zachowania usługi, zobacz <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideFault">
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception error, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception error, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProvideFault (error As Exception, version As MessageVersion, ByRef fault As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ error, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception exception, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception exception, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ exception, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="1" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.Message&amp;" RefType="ref" Index="2" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="version">Wersja protokołu SOAP wiadomości.</param>
        <param name="fault">
          <see cref="T:System.ServiceModel.Channels.Message" /> Obiektu, która jest zwracana do klienta lub usługi, w przypadku dupleksowych.</param>
        <summary>Umożliwia tworzenie niestandardowego <see cref="T:System.ServiceModel.FaultException`1" /> który zostanie zwrócony wyjątek w trakcie metody usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> metodę w celu utworzenia komunikat o błędzie niestandardowej, która jest zwracana do klienta.  <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> — Metoda będzie zawsze wywoływany dla wyjątków, które opuszczają operacji, z wyjątkiem podczas obsługi WCF rozpoznaje wyjątek jako szczególnie krytyczny i ponownie zgłasza wyjątek, sama. Gdy wszystkie <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> o nazwie implementacji, komunikat o błędzie zostanie wysłany do klienta (Jeśli `fault` ma wartość inną niż`null`). Jeśli `fault` parametr jest `null` błędów domyślne są wysyłane do klienta.  
  
> [!NOTE]
>  Wiadomości przychodzących, który spowodował błąd przetwarzania jest dostępny w tej metody z <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType> właściwości.  
  
> [!NOTE]
>  Ponieważ <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> z wielu różnych miejscach nie ma żadnych gwarancji o który wątek wywołano metodę można wywołać metody. Nie są zależne od <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> metody wywoływane w wątku operację.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano to usługa, która implementuje <xref:System.ServiceModel.Dispatcher.IErrorHandler> zwracającą tylko <xref:System.ServiceModel.FaultException%601> typu `GreetingFault` gdy usługa metodę zarządzanym wyjątku.  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 Poniższy przykład kodu pokazuje, jak dodać za pomocą zachowanie usługi <xref:System.ServiceModel.Dispatcher.IErrorHandler> wykonania <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> właściwości.  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 Poniższy przykład kodu pokazuje, jak skonfigurować usługę załadować zachowanie usługi przy użyciu pliku konfiguracji aplikacji. Aby uzyskać więcej informacji o sposobie ujawnia w pliku konfiguracji zachowania usługi, zobacz <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>