<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f7be2019a6908f866e6c2195411e3fa772cdd82" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36614869" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <TypeSignature Language="F#" Value="type MessageFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="43e21-101">
        <see langword="abstract" /> Klasa podstawowa dla różnych klas filtry używane do wiadomości zapytania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="43e21-101">
          <see langword="abstract" /> base class for different classes of filters used to query messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43e21-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> jest `abstract` klasy które implementują deweloperzy celu Określ kryteria używane do sprawdzania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="43e21-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages.</span></span> <span data-ttu-id="43e21-103">Zazwyczaj filtry są używane przez punkt końcowy aplikacji do określenia, jakie z komunikatu na podstawie badania niektórych części wiadomości.</span><span class="sxs-lookup"><span data-stu-id="43e21-103">Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.</span></span> <span data-ttu-id="43e21-104">Proces kolejkowania, na przykład można użyć zapytania XPath 1.0 do sprawdzenia elementu priority znane nagłówka do ustalenia, czy można przenieść komunikatu z przodu kolejki.</span><span class="sxs-lookup"><span data-stu-id="43e21-104">A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="43e21-105">Filtry są przechowywane w tabeli filtr, który implementuje <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="43e21-105">Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span></span> <span data-ttu-id="43e21-106">Każdy filtr w tabeli jest skojarzony z danymi określony filtr, który może służyć wskaż, jakie akcje do wykonania, jeśli komunikat jest zgodny z filtrem.</span><span class="sxs-lookup"><span data-stu-id="43e21-106">Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.</span></span> <span data-ttu-id="43e21-107"><xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> Metody są używane do określania, jeśli wiadomość ma spełnia filtru.</span><span class="sxs-lookup"><span data-stu-id="43e21-107">The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.</span></span>  
  
 <span data-ttu-id="43e21-108">Nie można zmienić kryteria używane w filtrze, gdy filtr jest tworzony, ponieważ tabele filtru nie ma możliwości wykrywa zmian.</span><span class="sxs-lookup"><span data-stu-id="43e21-108">The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.</span></span> <span data-ttu-id="43e21-109">Jedynym sposobem, aby zmodyfikować kryteria filtru jest utworzyć nowy i usuń istniejący filtr.</span><span class="sxs-lookup"><span data-stu-id="43e21-109">The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.</span></span>  
  
 <span data-ttu-id="43e21-110">Następujące klasy wdrożenie `abstract` <xref:System.ServiceModel.Dispatcher.MessageFilter> klasy:</span><span class="sxs-lookup"><span data-stu-id="43e21-110">The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:</span></span>  
  
-   <span data-ttu-id="43e21-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> wyrażenie XPath 1.0 nawiązywał Określ kryteria pod kątem dopasowania.</span><span class="sxs-lookup"><span data-stu-id="43e21-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.</span></span>  
  
-   <span data-ttu-id="43e21-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> Dopasowuje wszystkie komunikaty.</span><span class="sxs-lookup"><span data-stu-id="43e21-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.</span></span>  
  
-   <span data-ttu-id="43e21-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> odpowiada żadna wiadomość.</span><span class="sxs-lookup"><span data-stu-id="43e21-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.</span></span>  
  
-   <span data-ttu-id="43e21-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> sprawdza, czy akcja komunikatu jest jednym z określonego zestawu działań.</span><span class="sxs-lookup"><span data-stu-id="43e21-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.</span></span>  
  
-   <span data-ttu-id="43e21-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> sprawdza, czy wiadomość spełnia adres określony punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="43e21-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.</span></span>  
  
 <span data-ttu-id="43e21-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> jest `abstract` podstawowa klasa, która służy do pisania-kolejkowania odbiorników.</span><span class="sxs-lookup"><span data-stu-id="43e21-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43e21-117">Wywołanego w klasie pochodnej inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-117">When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43e21-118">Konstruktor jest chroniony tak, aby tylko filtry pochodzi od <xref:System.ServiceModel.Dispatcher.MessageFilter> można utworzyć wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="43e21-118">The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">
          <span data-ttu-id="43e21-119">Dane skojarzone z filtry w tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-119">Data associated with the filters in the table.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="43e21-120">Tworzy tabelę filtru dla filtru, który ma określony typ danych skojarzonych z nim.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-120">Creates a filter table for a filter that has a specified type of data associated with it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43e21-121">
            <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> Obiektu, do których filtrów skojarzonych z <paramref name="FilterData" /> do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-121">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43e21-122">Ta metoda jest przeznaczona do wywoływania <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="43e21-122">This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="43e21-123">Użytkownikom należy utworzyć tabelę filtru przez wywołanie konstruktora dla tabeli filtrów.</span><span class="sxs-lookup"><span data-stu-id="43e21-123">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="43e21-124">Domyślna implementacja tej metody zwraca tabelę filtru, który wywołuje <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> metody każdego filtru sekwencyjnie.</span><span class="sxs-lookup"><span data-stu-id="43e21-124">The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially.</span></span> <span data-ttu-id="43e21-125">Zastępuje tę metodę, aby skojarzyć tabeli niestandardowy filtr podczas implementowania filtr.</span><span class="sxs-lookup"><span data-stu-id="43e21-125">Override this method to associate a custom filter table when implementing a filter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43e21-126">W przypadku przesłonięcia w klasie pochodnej, sprawdza, czy buforowanego wiadomości lub wiadomości nie będzie spełniał kryteriów filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-126">When overridden in a derived class, tests whether a message or a buffered message satisfies the criteria of a filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43e21-127">Jest to różnica między dwa przeciążenia jedną przyjmuje <xref:System.ServiceModel.Channels.Message> parametru i nie można zbadać treści.</span><span class="sxs-lookup"><span data-stu-id="43e21-127">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="43e21-128">Inne przyjmuje <xref:System.ServiceModel.Channels.MessageBuffer> parametru i można sprawdzić wszystkie części komunikatu.</span><span class="sxs-lookup"><span data-stu-id="43e21-128">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="43e21-129">Nagłówki komunikatów są automatycznie buforowane i mogą być kontrolowane przez filtr nie są używane.</span><span class="sxs-lookup"><span data-stu-id="43e21-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="43e21-130">Zniszczone, ale jeśli treść ma być kontrolowane przez filtr, a następnie cały komunikat musi być buforowane, ponieważ treść komunikatu Niebuforowane może być zużyte przez zapytanie i jego zawartość.</span><span class="sxs-lookup"><span data-stu-id="43e21-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body can be consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="43e21-131">Użyj <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> Jeśli badania treści nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="43e21-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the body is not required.</span></span> <span data-ttu-id="43e21-132">Użyj <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> Jeśli treść jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="43e21-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the message body is required.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="43e21-133">
            <para>
              <see langword="Null" /> wiadomości są nieprawidłowe i powinno powodować <see cref="T:System.ArgumentNullException" /> zostanie wygenerowany.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-133">
              <para>
                <see langword="Null" /> messages are invalid, and should cause an <see cref="T:System.ArgumentNullException" /> to be thrown.</para>
            </span>
          </span>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="messageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="43e21-134">
            <see cref="T:System.ServiceModel.Channels.Message" /> Obiektu do testowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-134">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43e21-135">W przypadku przesłonięcia w klasie pochodnej, sprawdzenie, czy wiadomość spełnia kryteria filtrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-135">When overridden in a derived class, tests whether a message satisfies the filter criteria.</span>
          </span>
          <span data-ttu-id="43e21-136">Nie można zbadać treści.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-136">The body cannot be examined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43e21-137">
            <see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Channels.Message" /> obiektu spełnia kryteria filtru; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-137">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43e21-138">Ta metoda nie może sprawdzić zawartość treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="43e21-138">This method cannot inspect the contents of the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="43e21-139">
            <para>Jeśli filtr próbuje sprawdzić treści wiadomości Niebuforowane, a następnie filtr musi zgłosić <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />. Nie może zwracać <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-139">
              <para>If the filter attempts to examine the body of an unbuffered message, then the filter must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />. It should not return <see langword="false" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="messageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="43e21-140">
            <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> Obiektu do testowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-140">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43e21-141">W przypadku przesłonięcia w klasie pochodnej, sprawdza, czy buforowanego wiadomości nie będzie spełniał kryteriów filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-141">When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43e21-142">
            <see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> obiektu spełnia kryteria filtru; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43e21-142">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43e21-143">Wiadomość musi w pełni buforowane, jeśli treść jest poddanych przez filtr.</span><span class="sxs-lookup"><span data-stu-id="43e21-143">The message must be fully buffered if the body is to be inspected by the filter.</span></span> <span data-ttu-id="43e21-144">Treść <xref:System.ServiceModel.Channels.MessageBuffer> jest w pełni buforowane i mogą być kontrolowane przez filtr.</span><span class="sxs-lookup"><span data-stu-id="43e21-144">The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter.</span></span> <span data-ttu-id="43e21-145">Treść <xref:System.ServiceModel.Channels.Message> została pełni buforowane mogą być używane przez filtr inspekcji.</span><span class="sxs-lookup"><span data-stu-id="43e21-145">The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection.</span></span> <span data-ttu-id="43e21-146">Element nagłówka <xref:System.ServiceModel.Channels.Message> są automatycznie buforowane i mogą być kontrolowane nie są używane.</span><span class="sxs-lookup"><span data-stu-id="43e21-146">The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>