<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="900eb0a1c3384e42d84008d197d10be1ba63d1b8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69150643" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <TypeSignature Language="F#" Value="type MessageFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see langword="abstract" />Klasa bazowa dla różnych klas filtrów używanych do wykonywania zapytań dotyczących komunikatów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.MessageFilter>`abstract` jest klasą, którą deweloperzy implementują w celu określenia kryteriów do użycia podczas inspekcji komunikatów. Zazwyczaj filtry są używane przez aplikację Endpoint, aby określić, co należy zrobić z komunikatem na podstawie badania jakiejś części komunikatu. Proces kolejkowania, na przykład, może użyć zapytania XPath 1,0 do sprawdzenia elementu priorytet znanego nagłówka, aby określić, czy przenieść komunikat na pierwszy plan kolejki.  
  
 Filtry są przechowywane w tabeli filtrów implementującej <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>. Każdy filtr w tabeli jest skojarzony z określonymi danymi filtru, które mogą być używane do wskazywania, jakie akcje należy wykonać, jeśli komunikat jest zgodny z filtrem. Metody <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> są używane do określenia, czy komunikat spełnia kryteria filtru.  
  
 Kryteria używane przez filtr nie mogą zostać zmienione po skonstruowaniu filtru, ponieważ tabele filtrów nie mają możliwości wykrywania zmiany. Jedynym sposobem, aby zmodyfikować kryteria filtru, jest utworzenie nowego i usunięcie istniejącego filtru.  
  
 Następujące klasy implementują `abstract` <xref:System.ServiceModel.Dispatcher.MessageFilter> klasę:  
  
-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>używa wyrażenia XPath 1,0, aby określić kryteria dla dopasowania.  
  
-   <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter>dopasowuje wszystkie komunikaty.  
  
-   <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter>nie dopasowuje żadnego z komunikatów.  
  
-   <xref:System.ServiceModel.Dispatcher.ActionMessageFilter>testuje, czy Akcja komunikatu jest jednym z określonego zestawu akcji.  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>testuje, czy komunikat jest zgodny z określonym adresem punktu końcowego.  
  
 <xref:System.ServiceModel.Channels.ChannelListenerBase%601>jest klasą `abstract` bazową, której można użyć do pisania odbiorników, które nie obsługują kolejkowania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Gdy wywoływana w klasie pochodnej, Inicjuje nowe wystąpienie <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor jest chroniony, aby można było utworzyć wystąpienie tylko filtrów <xref:System.ServiceModel.Dispatcher.MessageFilter> pochodzących od.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">Dane skojarzone z filtrami w tabeli.</typeparam>
        <summary>Tworzy tabelę filtru dla filtru, który ma powiązane z nim dane.</summary>
        <returns>Obiekt, do którego można dodać filtry <paramref name="FilterData" /> skojarzone z. <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona do wywoływania przez <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. Użytkownicy powinni utworzyć tabelę filtru, wywołując Konstruktor dla tabeli filtrów. Domyślna implementacja tej metody zwraca tabelę filtru, która wywołuje <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> metodę każdego filtru sekwencyjnie. Zastąp tę metodę, aby skojarzyć tabelę filtru niestandardowego podczas implementowania filtra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, sprawdza, czy wiadomość lub buforowana wiadomość spełnia kryteria filtru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Różnica między dwoma przeciążeniami polega na tym, że jeden <xref:System.ServiceModel.Channels.Message> pobiera parametr i nie może przeanalizować treści. Druga przyjmuje <xref:System.ServiceModel.Channels.MessageBuffer> parametr i może przeanalizować każdą część komunikatu. Nagłówki komunikatów są automatycznie buforowane i mogą być sprawdzane przez filtr bez użycia. Jeśli jednak treść ma być sprawdzana przez filtr, cała wiadomość musi być buforowana, ponieważ niebuforowana treść komunikatu może być używana przez zapytanie i jego zawartość została zniszczona.  
  
 Użyj <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> , jeśli badanie treści nie jest wymagane. Użyj <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> , jeśli konieczne jest zbadanie treści komunikatu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Null" />komunikaty są nieprawidłowe i powinny być przyczyną <see cref="T:System.ArgumentNullException" /> zgłoszenia.</para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="messageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><see cref="T:System.ServiceModel.Channels.Message" /> Obiekt do przetestowania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, sprawdza, czy komunikat spełnia kryteria filtru. Nie można zbadać treści.</summary>
        <returns><see langword="true" />Jeśli obiekt spełnia kryteria filtrowania; w przeciwnym razie, <see langword="false" />. <see cref="T:System.ServiceModel.Channels.Message" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie może zbadać zawartości treści komunikatu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Jeśli filtr próbuje przeanalizować treść niebuforowanego komunikatu, filtr musi zgłosić <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />. Nie powinna być zwracana <see langword="false" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="messageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer"><see cref="T:System.ServiceModel.Channels.MessageBuffer" /> Obiekt do przetestowania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, sprawdza, czy buforowany komunikat spełnia kryteria filtru.</summary>
        <returns><see langword="true" />Jeśli obiekt spełnia kryteria filtrowania; w przeciwnym razie, <see langword="false" />. <see cref="T:System.ServiceModel.Channels.MessageBuffer" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komunikat musi być w pełni zbuforowany, jeśli treść ma być sprawdzana przez filtr. Treść <xref:System.ServiceModel.Channels.MessageBuffer> jest w pełni buforowana i dlatego może być sprawdzana przez filtr. Treść <xref:System.ServiceModel.Channels.Message> , która nie została w pełni buforowana, może być używana przez inspekcję filtru. Element <xref:System.ServiceModel.Channels.Message> nagłówka jest automatycznie buforowany i dlatego można go sprawdzić bez użycia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
