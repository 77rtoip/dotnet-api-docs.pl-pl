<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09416cea98600bff685c2b1432b5ba70f057f51f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39849456" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <TypeSignature Language="F#" Value="type MessageFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see langword="abstract" /> Klasa bazowa dla różnych klas filtry używany do kwerendy komunikatów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.MessageFilter> jest `abstract` klas które implementują deweloperów w celu Określ kryteria używane do sprawdzania komunikatów. Filtry są zazwyczaj używane przez aplikację punktu końcowego można określić, co należy zrobić komunikat na podstawie badania niektórych części wiadomości. Proces kolejkowania, na przykład, można użyć zapytania XPath 1.0 do sprawdzenia elementu priority znanych nagłówka w celu ustalenia, czy można przenieść komunikatu z przodu kolejki.  
  
 Filtry są przechowywane w tabeli filtr, który implementuje <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>. Każdy filtr w tabeli jest skojarzony z danymi określony filtr, który może służyć do wskazania, jakie działania należy podjąć, jeśli komunikat jest zgodny z filtrem. <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> Metody są używane do ustalenia, jeśli wiadomość spełnia filtru.  
  
 Nie można zmienić kryteria filtru, po filtr jest zbudowany, ponieważ tabele filtru nie ma możliwości wykrywania zmian. Jedynym sposobem, aby zmodyfikować kryteria filtru jest utworzyć nowy i usuń istniejący filtr.  
  
 Następujące klasy implementacji `abstract` <xref:System.ServiceModel.Dispatcher.MessageFilter> klasy:  
  
-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> używa wyrażenia XPath 1.0, aby określić kryteria dopasowania.  
  
-   <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> Dopasowuje wszystkie komunikaty.  
  
-   <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> Dopasowuje żadne komunikaty.  
  
-   <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> sprawdza, czy akcja wiadomość jest jednym z określonego zestawu działań.  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> sprawdza, czy komunikat spełnia to adres określony punkt końcowy.  
  
 <xref:System.ServiceModel.Channels.ChannelListenerBase%601> jest `abstract` podstawowa klasa, która służy do zapisywania-kolejkowania odbiorników.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Gdy zostanie wywołana w klasie pochodnej, inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor pozostaje chroniony i tylko filtry, który pochodzi od <xref:System.ServiceModel.Dispatcher.MessageFilter> można utworzyć wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">Dane skojarzone z filtrami w tabeli.</typeparam>
        <summary>Tworzy tabelę filtru dla filtru, który ma określony typ skojarzonych z nim danych.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> Obiektu, do których filtrów skojarzonych z <paramref name="FilterData" /> można dodać.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona do wywoływania przez <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. Użytkownicy powinni tworzyć tabelę filtru przez wywołanie konstruktora dla tabeli filtru. Domyślna implementacja tej metody zwraca tabelę filtru, który wywołuje <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> metoda każdego, filtrować sekwencyjnie. Zastępuje tę metodę, aby skojarzyć tabeli filtr niestandardowy podczas implementowania filtru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, sprawdza, czy komunikat lub buforowanych wiadomości nie będzie spełniał kryteriów filtru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Różnica między dwa przeciążenia jest jedno wykorzystuje <xref:System.ServiceModel.Channels.Message> parametru i Sprawdź treść nie jest dozwolone. Drugie <xref:System.ServiceModel.Channels.MessageBuffer> parametru i zbadać dowolnej części wiadomości. Nagłówki komunikatów są automatycznie buforowane i mogą być kontrolowane przez filtr nie są używane. Zniszczone, ale jeśli jednostka ma być kontrolowane przez filtr, a następnie cały komunikat musi być buforowane, ponieważ treść komunikatu Niebuforowane mogą być używane przez zapytanie i jego zawartość.  
  
 Użyj <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> Jeśli badanie treść nie jest wymagana. Użyj <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> Jeśli badanie treść komunikatu jest wymagana.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Null" /> komunikaty są nieprawidłowe i powinno spowodować <see cref="T:System.ArgumentNullException" /> zostanie wygenerowany.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="messageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.ServiceModel.Channels.Message" /> Obiekt do testowania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, sprawdza, czy komunikat nie będzie spełniał kryteriów filtru. Nie można zbadać treści.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Channels.Message" /> obiekt nie będzie spełniał kryteriów filtru; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie może sprawdzić zawartość treści wiadomości.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli filtr próbuje sprawdzić treści wiadomości Niebuforowane, a następnie filtr musi zgłosić <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />. Nie powinny zwracać <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="messageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> Obiekt do testowania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, sprawdza, czy buforowanego komunikatu nie będzie spełniał kryteriów filtru.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> obiekt nie będzie spełniał kryteriów filtru; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiadomość musi w pełni buforowane, jeśli treść jest do kontroli przez filtr. Treść <xref:System.ServiceModel.Channels.MessageBuffer> pełni są buforowane i mogą być kontrolowane przez filtr. Treść <xref:System.ServiceModel.Channels.Message> , nie został w pełni buforowanego maja być wykorzystane przez filtr inspekcji. Element nagłówka <xref:System.ServiceModel.Channels.Message> są automatycznie buforowane i mogą być kontrolowane bez są używane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>