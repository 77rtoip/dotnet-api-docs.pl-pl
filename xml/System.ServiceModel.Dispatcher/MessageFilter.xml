<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="900eb0a1c3384e42d84008d197d10be1ba63d1b8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69150643" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <TypeSignature Language="F#" Value="type MessageFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="179e8-101"><see langword="abstract" />Klasa bazowa dla różnych klas filtrów używanych do wykonywania zapytań dotyczących komunikatów.</span><span class="sxs-lookup"><span data-stu-id="179e8-101"><see langword="abstract" /> base class for different classes of filters used to query messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179e8-102"><xref:System.ServiceModel.Dispatcher.MessageFilter>`abstract` jest klasą, którą deweloperzy implementują w celu określenia kryteriów do użycia podczas inspekcji komunikatów.</span><span class="sxs-lookup"><span data-stu-id="179e8-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages.</span></span> <span data-ttu-id="179e8-103">Zazwyczaj filtry są używane przez aplikację Endpoint, aby określić, co należy zrobić z komunikatem na podstawie badania jakiejś części komunikatu.</span><span class="sxs-lookup"><span data-stu-id="179e8-103">Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.</span></span> <span data-ttu-id="179e8-104">Proces kolejkowania, na przykład, może użyć zapytania XPath 1,0 do sprawdzenia elementu priorytet znanego nagłówka, aby określić, czy przenieść komunikat na pierwszy plan kolejki.</span><span class="sxs-lookup"><span data-stu-id="179e8-104">A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="179e8-105">Filtry są przechowywane w tabeli filtrów implementującej <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="179e8-105">Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span></span> <span data-ttu-id="179e8-106">Każdy filtr w tabeli jest skojarzony z określonymi danymi filtru, które mogą być używane do wskazywania, jakie akcje należy wykonać, jeśli komunikat jest zgodny z filtrem.</span><span class="sxs-lookup"><span data-stu-id="179e8-106">Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.</span></span> <span data-ttu-id="179e8-107">Metody <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> są używane do określenia, czy komunikat spełnia kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="179e8-107">The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.</span></span>  
  
 <span data-ttu-id="179e8-108">Kryteria używane przez filtr nie mogą zostać zmienione po skonstruowaniu filtru, ponieważ tabele filtrów nie mają możliwości wykrywania zmiany.</span><span class="sxs-lookup"><span data-stu-id="179e8-108">The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.</span></span> <span data-ttu-id="179e8-109">Jedynym sposobem, aby zmodyfikować kryteria filtru, jest utworzenie nowego i usunięcie istniejącego filtru.</span><span class="sxs-lookup"><span data-stu-id="179e8-109">The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.</span></span>  
  
 <span data-ttu-id="179e8-110">Następujące klasy implementują `abstract` <xref:System.ServiceModel.Dispatcher.MessageFilter> klasę:</span><span class="sxs-lookup"><span data-stu-id="179e8-110">The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:</span></span>  
  
-   <span data-ttu-id="179e8-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter>używa wyrażenia XPath 1,0, aby określić kryteria dla dopasowania.</span><span class="sxs-lookup"><span data-stu-id="179e8-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.</span></span>  
  
-   <span data-ttu-id="179e8-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter>dopasowuje wszystkie komunikaty.</span><span class="sxs-lookup"><span data-stu-id="179e8-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.</span></span>  
  
-   <span data-ttu-id="179e8-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter>nie dopasowuje żadnego z komunikatów.</span><span class="sxs-lookup"><span data-stu-id="179e8-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.</span></span>  
  
-   <span data-ttu-id="179e8-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter>testuje, czy Akcja komunikatu jest jednym z określonego zestawu akcji.</span><span class="sxs-lookup"><span data-stu-id="179e8-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.</span></span>  
  
-   <span data-ttu-id="179e8-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>testuje, czy komunikat jest zgodny z określonym adresem punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="179e8-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.</span></span>  
  
 <span data-ttu-id="179e8-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601>jest klasą `abstract` bazową, której można użyć do pisania odbiorników, które nie obsługują kolejkowania.</span><span class="sxs-lookup"><span data-stu-id="179e8-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="179e8-117">Gdy wywoływana w klasie pochodnej, Inicjuje nowe wystąpienie <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="179e8-117">When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179e8-118">Konstruktor jest chroniony, aby można było utworzyć wystąpienie tylko filtrów <xref:System.ServiceModel.Dispatcher.MessageFilter> pochodzących od.</span><span class="sxs-lookup"><span data-stu-id="179e8-118">The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="179e8-119">Dane skojarzone z filtrami w tabeli.</span><span class="sxs-lookup"><span data-stu-id="179e8-119">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="179e8-120">Tworzy tabelę filtru dla filtru, który ma powiązane z nim dane.</span><span class="sxs-lookup"><span data-stu-id="179e8-120">Creates a filter table for a filter that has a specified type of data associated with it.</span></span></summary>
        <returns><span data-ttu-id="179e8-121">Obiekt, do którego można dodać filtry <paramref name="FilterData" /> skojarzone z. <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /></span><span class="sxs-lookup"><span data-stu-id="179e8-121">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179e8-122">Ta metoda jest przeznaczona do wywoływania przez <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="179e8-122">This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="179e8-123">Użytkownicy powinni utworzyć tabelę filtru, wywołując Konstruktor dla tabeli filtrów.</span><span class="sxs-lookup"><span data-stu-id="179e8-123">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="179e8-124">Domyślna implementacja tej metody zwraca tabelę filtru, która wywołuje <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> metodę każdego filtru sekwencyjnie.</span><span class="sxs-lookup"><span data-stu-id="179e8-124">The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially.</span></span> <span data-ttu-id="179e8-125">Zastąp tę metodę, aby skojarzyć tabelę filtru niestandardowego podczas implementowania filtra.</span><span class="sxs-lookup"><span data-stu-id="179e8-125">Override this method to associate a custom filter table when implementing a filter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="179e8-126">Gdy jest zastępowany w klasie pochodnej, sprawdza, czy wiadomość lub buforowana wiadomość spełnia kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="179e8-126">When overridden in a derived class, tests whether a message or a buffered message satisfies the criteria of a filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179e8-127">Różnica między dwoma przeciążeniami polega na tym, że jeden <xref:System.ServiceModel.Channels.Message> pobiera parametr i nie może przeanalizować treści.</span><span class="sxs-lookup"><span data-stu-id="179e8-127">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="179e8-128">Druga przyjmuje <xref:System.ServiceModel.Channels.MessageBuffer> parametr i może przeanalizować każdą część komunikatu.</span><span class="sxs-lookup"><span data-stu-id="179e8-128">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="179e8-129">Nagłówki komunikatów są automatycznie buforowane i mogą być sprawdzane przez filtr bez użycia.</span><span class="sxs-lookup"><span data-stu-id="179e8-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="179e8-130">Jeśli jednak treść ma być sprawdzana przez filtr, cała wiadomość musi być buforowana, ponieważ niebuforowana treść komunikatu może być używana przez zapytanie i jego zawartość została zniszczona.</span><span class="sxs-lookup"><span data-stu-id="179e8-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body can be consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="179e8-131">Użyj <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> , jeśli badanie treści nie jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="179e8-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the body is not required.</span></span> <span data-ttu-id="179e8-132">Użyj <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> , jeśli konieczne jest zbadanie treści komunikatu.</span><span class="sxs-lookup"><span data-stu-id="179e8-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the message body is required.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="179e8-133">
            <see langword="Null" />komunikaty są nieprawidłowe i powinny być przyczyną <see cref="T:System.ArgumentNullException" /> zgłoszenia.</span><span class="sxs-lookup"><span data-stu-id="179e8-133">
            <see langword="Null" /> messages are invalid, and should cause an <see cref="T:System.ArgumentNullException" /> to be thrown.</span></span></para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="messageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="179e8-134"><see cref="T:System.ServiceModel.Channels.Message" /> Obiekt do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="179e8-134">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="179e8-135">Gdy jest zastępowany w klasie pochodnej, sprawdza, czy komunikat spełnia kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="179e8-135">When overridden in a derived class, tests whether a message satisfies the filter criteria.</span></span> <span data-ttu-id="179e8-136">Nie można zbadać treści.</span><span class="sxs-lookup"><span data-stu-id="179e8-136">The body cannot be examined.</span></span></summary>
        <returns><span data-ttu-id="179e8-137"><see langword="true" />Jeśli obiekt spełnia kryteria filtrowania; w przeciwnym razie, <see langword="false" />. <see cref="T:System.ServiceModel.Channels.Message" /></span><span class="sxs-lookup"><span data-stu-id="179e8-137"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179e8-138">Ta metoda nie może zbadać zawartości treści komunikatu.</span><span class="sxs-lookup"><span data-stu-id="179e8-138">This method cannot inspect the contents of the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="179e8-139">Jeśli filtr próbuje przeanalizować treść niebuforowanego komunikatu, filtr musi zgłosić <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />.</span><span class="sxs-lookup"><span data-stu-id="179e8-139">If the filter attempts to examine the body of an unbuffered message, then the filter must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />.</span></span> <span data-ttu-id="179e8-140">Nie powinna być zwracana <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="179e8-140">It should not return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="messageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="179e8-141"><see cref="T:System.ServiceModel.Channels.MessageBuffer" /> Obiekt do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="179e8-141">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="179e8-142">Gdy jest zastępowany w klasie pochodnej, sprawdza, czy buforowany komunikat spełnia kryteria filtru.</span><span class="sxs-lookup"><span data-stu-id="179e8-142">When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</span></span></summary>
        <returns><span data-ttu-id="179e8-143"><see langword="true" />Jeśli obiekt spełnia kryteria filtrowania; w przeciwnym razie, <see langword="false" />. <see cref="T:System.ServiceModel.Channels.MessageBuffer" /></span><span class="sxs-lookup"><span data-stu-id="179e8-143"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179e8-144">Komunikat musi być w pełni zbuforowany, jeśli treść ma być sprawdzana przez filtr.</span><span class="sxs-lookup"><span data-stu-id="179e8-144">The message must be fully buffered if the body is to be inspected by the filter.</span></span> <span data-ttu-id="179e8-145">Treść <xref:System.ServiceModel.Channels.MessageBuffer> jest w pełni buforowana i dlatego może być sprawdzana przez filtr.</span><span class="sxs-lookup"><span data-stu-id="179e8-145">The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter.</span></span> <span data-ttu-id="179e8-146">Treść <xref:System.ServiceModel.Channels.Message> , która nie została w pełni buforowana, może być używana przez inspekcję filtru.</span><span class="sxs-lookup"><span data-stu-id="179e8-146">The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection.</span></span> <span data-ttu-id="179e8-147">Element <xref:System.ServiceModel.Channels.Message> nagłówka jest automatycznie buforowany i dlatego można go sprawdzić bez użycia.</span><span class="sxs-lookup"><span data-stu-id="179e8-147">The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
