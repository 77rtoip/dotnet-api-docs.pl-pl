<Type Name="ClientRuntime" FullName="System.ServiceModel.Dispatcher.ClientRuntime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6313b8d675d2c535ffc2a529a3a590fa0f64f40" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316784" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientRuntime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ClientRuntime" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientRuntime" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRuntime sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.ClientRuntimeCompatBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="xamarinandroid-7.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje punkt wstawienia dla klas, które zapewniają rozszerzenie funkcjonalności Windows Communication Foundation (WCF) obiektów klienta dla wszystkich komunikatów obsługiwanych przez aplikację klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekty klienta WCF, czy rozszerzenie <xref:System.ServiceModel.ClientBase%601> lub <xref:System.ServiceModel.IClientChannel>, są używane przez aplikacje klienckie usługi Windows Communication Foundation (WCF) Aby przekonwertować wywołania metody na wiadomości wychodzących i przekonwertować komunikatów przychodzących do obiektów i ich do przekazania Wyniki metody klienta.  
  
 <xref:System.ServiceModel.Dispatcher.ClientRuntime> Klasa jest punkcie rozszerzenia, do której można dodać rozszerzenia obiektów, które Przechwytywanie wiadomości i rozszerzyć zachowanie klienta na wszystkich operacji. Przechwycenie obiektów można przetworzyć wszystkie wiadomości w określonej umowy, przetwarzać tylko komunikaty dla określonej operacji, wykonać inicjacji kanału niestandardowych i implementacji inne zachowanie aplikacji klienta. Omówienie architektury klienta, zobacz [Architektura klienta WCF](~/docs/framework/wcf/feature-details/client-architecture.md). Aby uzyskać więcej informacji na temat programowania w języku klienta, zobacz [dostęp do usług za pomocą klienta WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md). Szczegóły dotyczące dostosowań oraz jak je przeprowadzić, zobacz [rozszerzanie klientów](~/docs/framework/wcf/extending/extending-clients.md).  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> Właściwość zwraca obiekt środowiska wykonawczego wysyłania dla operacji inicjowane przez usługę wywołania zwrotnego.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A> Właściwość akceptuje obiekt selektor operacji niestandardowych do kontrolowania routing komunikatów klienta.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A> Właściwość umożliwia dodanie inicjatora kanału, który można sprawdzić lub zmodyfikować kanału klienta.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A> Właściwość może być używana do wyświetlania visual monit umożliwia użytkownikowi wybranie poświadczeń przed otwarciem kanału.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> Właściwości pobiera kolekcję <xref:System.ServiceModel.Dispatcher.ClientOperation> obiektów, do których można dodać interceptory niestandardowe wiadomości, które zapewniają funkcje specyficzne dla wiadomości w tej operacji.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> Właściwość umożliwia aplikacji wyłączyć niektóre automatyczne nagłówki adresowania bezpośrednio kontrolować adresowania.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A> Właściwość umożliwia klientowi limit rozmiaru wiadomości usterek, które akceptuje klienta.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> Właściwości pobiera kolekcję <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> obiektów, do których można dodać interceptory niestandardową wiadomość dla wszystkich komunikatów przesyłanych za pośrednictwem klienta.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A> Właściwość zwraca operacji, do której są przekazywane nieoczekiwane komunikaty.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A> Właściwości informuje system czy go należy się upewnić, że nagłówki SOAP oznaczona jako `MustUnderstand` w rzeczywistości rozumiem.  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A> Właściwość ustawia wartości docelowej wiadomości na poziomie transportu do obsługi pośredników i innych scenariuszy.  
  
 Ponadto istnieje wiele innych właściwości, które pobrać informacji o umowy klienta:  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractName%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType%2A>  
  
 Jeśli klient jest dupleksowy klienta, następujące właściwości również pobierać typ wywołania zwrotnego klienta i środowiska uruchomieniowego:  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A>  
  
   
  
## Examples  
 W poniższym przykładzie kodu <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> wstawia <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> w czasie wykonywania klienta przez dodanie go do <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> właściwości.  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 Poniższy przykładowy kod przedstawia plik konfiguracji, który ładuje zachowania punktu końcowego do punktu końcowego klienta.  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CallbackClientType">
      <MemberSignature Language="C#" Value="public Type CallbackClientType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackClientType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType" />
      <MemberSignature Language="VB.NET" Value="Public Property CallbackClientType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackClientType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ kontraktu wywołania zwrotnego klienta dupleksowych.</summary>
        <value>A <see cref="T:System.Type" /> obiekt, który reprezentuje kontrakt wywołania zwrotnego skojarzona dupleksu klienta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackDispatchRuntime">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.DispatchRuntime CallbackDispatchRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.DispatchRuntime CallbackDispatchRuntime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallbackDispatchRuntime As DispatchRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::DispatchRuntime ^ CallbackDispatchRuntime { System::ServiceModel::Dispatcher::DispatchRuntime ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.DispatchRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wykonawczej wysyłania, która wywołuje inicjowane przez usługę operations.</summary>
        <value>A <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> obiektu. Jeśli kontraktu dupleksowego, zachowania wysyłania zawiera inicjowane przez usługę operations; w przeciwnym razie zachowania wysyłania zawiera żadnych operacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelInitializers As SynchronizedCollection(Of IChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ ChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję inicjatora kanału obiekty używane w celu dostosowania kanału klienta.</summary>
        <value>Kolekcja <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> implementacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A> właściwości, aby dodać niestandardowe <xref:System.ServiceModel.Dispatcher.IChannelInitializer> obiekt, który można sprawdzić kanału, który jest skojarzony z klientem na tworzenie, rejestrowanie zdarzeń w kanale i skojarzyć stanu z kanałem przy użyciu <xref:System.ServiceModel.IExtension%601>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientMessageInspectors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt; ClientMessageInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.IClientMessageInspector&gt; ClientMessageInspectors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientMessageInspectors As ICollection(Of IClientMessageInspector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ ClientMessageInspectors { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów inspektora komunikat umożliwia wyświetlanie i modyfikowanie komunikatów operacji określonej usługi.</summary>
        <value>Kolekcja obiektów inspektora komunikat umożliwia wyświetlanie i modyfikowanie komunikatów operacji określonej usługi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ClientMessateInspectors to kolekcja awaryjny wątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientOperations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.ClientOperation&gt; ClientOperations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.ClientOperation&gt; ClientOperations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientOperations As ICollection(Of ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ ClientOperations { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.ClientOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów operacji klienta używany do dołączania obiektów rozszerzeń, które inspekcja lub modyfikowanie komunikatów i zachowanie operacji określonej usługi.</summary>
        <value>Kolekcja obiektów operacji klienta używany do dołączania obiektów rozszerzeń, które inspekcja lub modyfikowanie komunikatów i zachowanie operacji określonej usługi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ClientOperations to kolekcja awaryjny wątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractClientType">
      <MemberSignature Language="C#" Value="public Type ContractClientType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractClientType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContractClientType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractClientType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ kontraktu skojarzonych z klientem.</summary>
        <value>
          <see cref="T:System.Type" /> Obiekt, który reprezentuje kontrakt skojarzony z tym klientem.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę kontraktu skojarzonych z klientem.</summary>
        <value>Nazwa kontraktu dla klienta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractNamespace">
      <MemberSignature Language="C#" Value="public string ContractNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obszar nazw kontraktu skojarzonych z klientem.</summary>
        <value>Przestrzeń nazw kontraktu skojarzonych z klientem.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InteractiveChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt; InteractiveChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt; InteractiveChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InteractiveChannelInitializers As SynchronizedCollection(Of IInteractiveChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInteractiveChannelInitializer ^&gt; ^ InteractiveChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInteractiveChannelInitializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję kanału interaktywnego inicjatora.</summary>
        <value>Zsynchronizowane kolekcję typu <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o sposobie używania inicjatory interakcyjne kanału, zobacz [dostęp do usług za pomocą klienta WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia zachowania punktu końcowego, aby wstawić kanału interaktywnego inicjatora.  
  
 [!code-csharp[IInteractiveChannelInitializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/iinteractivechannelinitializer/cs/insertingbehaviors.cs#10)]
 [!code-vb[IInteractiveChannelInitializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/iinteractivechannelinitializer/vb/insertingbehaviors.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy klient dodaje nagłówki adresów do wiadomości żądanie odpowiedź.</summary>
        <value>
          <see langword="true" /> Jeśli klient nie dodaje żadnych nagłówków adresowych; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> właściwości `true` chcesz uniemożliwić dodawanie nagłówków adresowania identyfikator wiadomości i odpowiedzi na komunikaty żądania/odpowiedzi, dzięki czemu aplikacja może kontrolować te nagłówki klienta.  
  
> [!NOTE]
>  Jeśli <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> jest `true`, klient nie obsługuje operacji żądanie odpowiedź za pośrednictwem kanału dwukierunkowego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxFaultSize">
      <MemberSignature Language="C#" Value="public int MaxFaultSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxFaultSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFaultSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxFaultSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar maksymalny błędów.</summary>
        <value>Liczba całkowita reprezentująca błędny maksymalny rozmiar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A> właściwości do ograniczania rozmiaru komunikatów "fault" zaakceptowane przez środowisko uruchomieniowe klienta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageInspectors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt; MessageInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IClientMessageInspector&gt; MessageInspectors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageInspectors As SynchronizedCollection(Of IClientMessageInspector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ MessageInspectors { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję implementacji inspektora komunikatu dla klienta.</summary>
        <value>Kolekcja <see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" /> implementacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> właściwość, aby dołączyć niestandardowe <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> implementacje do inspekcja lub modyfikowanie wszystkich wiadomości, które przepływać przez klienta.  
  
   
  
## Examples  
 W poniższym przykładzie kodu <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> wstawia <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> w czasie wykonywania klienta przez dodanie go do <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> właściwości.  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 Poniższy przykładowy kod przedstawia plik konfiguracji, który ładuje zachowania punktu końcowego do punktu końcowego klienta.  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersionNoneFaultsEnabled">
      <MemberSignature Language="C#" Value="public bool MessageVersionNoneFaultsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MessageVersionNoneFaultsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageVersionNoneFaultsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MessageVersionNoneFaultsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ustawiono właściwość MessageVersionNoneFaultsEnabled.</summary>
        <value>
          <see langword="true" /> Jeśli ustawiono właściwość MessageVersionNoneFaultsEnabled; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedKeyedCollection&lt;string,System.ServiceModel.Dispatcher.ClientOperation&gt; Operations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedKeyedCollection`2&lt;string, class System.ServiceModel.Dispatcher.ClientOperation&gt; Operations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operations As SynchronizedKeyedCollection(Of String, ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedKeyedCollection&lt;System::String ^, System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ Operations { System::Collections::Generic::SynchronizedKeyedCollection&lt;System::String ^, System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedKeyedCollection&lt;System.String,System.ServiceModel.Dispatcher.ClientOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję operacji klienta dla klienta.</summary>
        <value>Kolekcja zsynchronizowane <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> właściwości do pobrania zbiór wszystkich operacji klienta dla tego klienta, który można dołączyć rozszerzenia obiektów, które inspekcja lub modyfikowanie komunikatów i zachowanie ograniczone do określonej operacji. Aby uzyskać więcej informacji, zobacz <xref:System.ServiceModel.Dispatcher.ClientOperation>.  
  
   
  
## Examples  
 W poniższym przykładzie kodu <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> wstawia <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> w czasie wykonywania klienta przez dodanie go do każdego <xref:System.ServiceModel.Dispatcher.ClientOperation> w <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> właściwości.  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationSelector">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.IClientOperationSelector OperationSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.IClientOperationSelector OperationSelector" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property OperationSelector As IClientOperationSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::IClientOperationSelector ^ OperationSelector { System::ServiceModel::Dispatcher::IClientOperationSelector ^ get(); void set(System::ServiceModel::Dispatcher::IClientOperationSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IClientOperationSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> wdrożenia, który może służyć do wybrania <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</summary>
        <value>
          <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> Obiekt, który wybiera <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A> zmodyfikować zaznaczenie operacji, gdy klient wywołuje metodę określonej dla właściwości. Domyślny algorytm jest użycie nazwy <xref:System.ServiceModel.OperationContractAttribute.Name%2A> metody operacji jako klucz, aby znaleźć <xref:System.ServiceModel.Dispatcher.ClientOperation> w <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> kolekcji. Jeśli pasujących <xref:System.ServiceModel.Dispatcher.ClientOperation> odnaleziono obiektu, wywołanie jest wysyłane do <xref:System.ServiceModel.Dispatcher.ClientOperation> obiektu zwróconego z <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledClientOperation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ClientOperation UnhandledClientOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ClientOperation UnhandledClientOperation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnhandledClientOperation As ClientOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ClientOperation ^ UnhandledClientOperation { System::ServiceModel::Dispatcher::ClientOperation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ClientOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera operację klienta dla metod, które nie mają odpowiadającego <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> w <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> kolekcji.</summary>
        <value>A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> reprezentujący metodę, do której są kierowane bieżącą zawartość wiadomości, gdy selektor operacji nie można odnaleźć operacji zgodny komunikat.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMustUnderstand">
      <MemberSignature Language="C#" Value="public bool ValidateMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateMustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateMustUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy system lub aplikacja wymusza SOAP <see langword="MustUnderstand" /> przetwarzanie nagłówka.</summary>
        <value>
          <see langword="true" /> Jeśli system jest wykonanie nagłówka SOAP <see langword="MustUnderstand" /> przetwarzania; w przeciwnym razie <see langword="false" />, co oznacza, że aplikacja jest wykonywane to przetwarzanie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A> właściwości, aby wyłączyć wymuszone weryfikacji nadchodzących nagłówki komunikatów. Podczas wykonywania normalnych, nagłówki komunikatów są porównywane <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> właściwości, aby upewnić się, że nagłówki nadchodzących jawnie są obsługiwane przez usługę. Ustaw tę wartość na `false` wyłączenie tego sprawdzenia. Jeśli wartość `false`, aplikacja musi sprawdzać dla nagłówków oznaczony atrybutem MustUnderstand = "true" i zwraca błąd, jeśli co najmniej jeden z nich są niezrozumiałe. Jest to przydatne, gdy aplikacja ma akceptować zwracane wiadomości SOAP (na przykład, gdy wpisany przy użyciu lub bez typu wiadomości) i przetwarzania niestandardowego nagłówka.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.Via" />
      <MemberSignature Language="VB.NET" Value="Public Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres transportu, który służy do wysyłania wiadomości przez klienta.</summary>
        <value>A <see cref="T:System.Uri" /> czyli adres docelowy dla transportu. Wartość domyślna to <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> wartość klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A> właściwości w celu określenia adresem transportu wiadomości, gdy natychmiastowe docelowym wiadomości nie jest klienta <xref:System.ServiceModel.EndpointAddress.Uri%2A>. Dzięki temu można określić pośredników SOAP i obsługiwać scenariusze, w którym wartość <xref:System.ServiceModel.EndpointAddress.Uri%2A> właściwość klienta jest nazwę logiczną.  
  
 Jest to wartość, która <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType> zestawów z pliku konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>