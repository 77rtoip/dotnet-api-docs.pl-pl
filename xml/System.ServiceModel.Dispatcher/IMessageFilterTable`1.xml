<Type Name="IMessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00d5d35b0f4aa562f58353eb5b4a4878b095821d" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317298" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilterTable`1&lt;TFilterData&gt; implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public interface class IMessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFilterData">Typ danych skojarzonych z każdym filtru w tabeli.</typeparam>
    <summary>
      <see langword="interface" /> Definiuje kontrakt, który musi implementować tabeli filtrów, aby sprawdzić wiadomości z kryteriami zapytania pochodzące z co najmniej jeden filtr.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabela filtru jest podstawowym składnikiem aparat filtru. Podstawowym zastosowaniem filtru aparatu w systemie Windows Communication Foundation (WCF) jest odpowiadające aplikacji logiki do wiadomości przez wyszukiwanie wszystkie filtry, które spełniają wiadomości.  
  
 Tabela Filtr umożliwia wielu filtrów można dopasować efektywniej niż oddzielnie zgodny z pojedynczym komunikacie. Tabela Filtr kojarzy filtrowanie danych z filtrów. Tabela jest kolekcją par klucz wartość, gdy klucz jest <xref:System.ServiceModel.Dispatcher.MessageFilter>, a wartość to dane skojarzone filtru. Filtrowanie danych może być wszystkie dane tego typu określonego w parametrze ogólnym i może służyć do określenia, jakie akcje do wykonania, jeśli komunikat jest uwzględniony przez filtr w tabeli.  
  
 Wpisy tabeli filtrów można uzyskać dostęp za pomocą <xref:System.Collections.Generic.IDictionary%602> funkcji który <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> dziedziczy.  
  
 Należy pamiętać, że wystąpienie filtru mogą być dodawane tylko do danego <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> po. Aby dodać wiele wystąpień tego filtru do tej samej tabeli filtru, użyj Konstruktora filtru można utworzyć dodatkowe wystąpienia.  
  
 Kryteria filtru wiadomości, gdy wiadomość spełnia kryteria zapytania filtru. Istnieją cztery przeciążone metody dopasowania. Zwrócone dane mają dane filtru lub <xref:System.ServiceModel.Dispatcher.MessageFilter> same obiekty. Te dane, jest zwracana wiele dopasowań są dozwolone czy odpowiada tylko jeden. W poniższej tabeli przedstawiono te informacje dotyczące każdego przeciążenia.  
  
|Nazwa metody|Dopasowania|Dane zwrócone|  
|-----------------|-------------|-------------------|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>|Single|`FilterData`|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>|Single|<xref:System.ServiceModel.Dispatcher.MessageFilter>|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>|Wielokrotne|`FilterData`|  
|<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>|Wielokrotne|<xref:System.ServiceModel.Dispatcher.MessageFilter> Obiekty|  
  
 Każda metoda zawiera dwa przeciążenia. Jest to różnica między dwa przeciążenia jedną przyjmuje <xref:System.ServiceModel.Channels.Message> parametru i sprawdź zawartość treści; nie jest dozwolone innych przyjmuje <xref:System.ServiceModel.Channels.MessageBuffer> parametru i można sprawdzić wszystkie części komunikatu. Jeśli należy wywołać metodę z parametrem wiadomości, a tabela filtr zawiera filtr, który sprawdza, czy zawartość treści wiadomości, jest zwracany wyjątek. Jeśli nie wiesz o filtry w tabeli, należy wywołać przeciążenia, które przyjmuje buforu komunikatu.  
  
 Nagłówki komunikatów są automatycznie buforowane i mogą być kontrolowane przez filtr nie są używane. Zniszczone, ale jeśli treść ma być kontrolowane przez filtr, a następnie cały komunikat musi być buforowane, ponieważ treść komunikatu Niebuforowane jest używane przez zapytanie i jego zawartość.  
  
 Następujące klasy wdrożenie <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>:  
  
-   <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>  
  
-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>  
  
 ]]></format>
    </remarks>
    <threadsafe>Filtr tabele są wątkowo względem dopasowania działania, ale są nie obsługującej wielowątkowość względem modyfikacji. Wątków, które uzyskują dostęp do tabeli filtrów powinni zostać zsynchronizowani przy <see cref="T:System.Threading.ReaderWriterLock" /> lub podobne blokowania semantycznego. Ta blokada umożliwia wielu odczytów tabeli filtru (na przykład operacji dopasowania) do jednoczesnego uruchamiania, ale w celu zapisywania w tabeli filtru (na przykład Dodawanie filtru), wątek należy poczekać na wyłączność.  Wszystkie kompilacji odbywa się po dodaniu do tabeli filtrów. Jeśli wcześniej utworzyć tabelę filtru i nigdy nie można go edytować, blokowanie nie jest konieczne podczas dopasowania.</threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca filtr z tabeli, w której kryteria zapytania są spełnione przez określony komunikat, czy buforowanego wiadomości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy jeden filtr powinien zgodny komunikat i zgodne z filtrem jest wymagana.  
  
 Użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> Jeśli zawartość treści nie wymaga zbadania. Użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> Jeśli zawartość treść komunikatu może wymagać badania.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli filtr więcej niż jeden zgodny komunikat <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> musi zostać wygenerowany.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.ServiceModel.Channels.Message" /> Do testowania.</param>
        <param name="filter">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Zwraca wartość wskazującą, czy kryterium filtru dokładnie jeden w tabeli jest spełnione przez określony komunikat i zwraca ten filtr w <see langword="out" /> parametru.</summary>
        <returns>
          <see langword="true" /> Jeśli kryterium filtru co najmniej jednej tabeli spełniają warunek określony przez <paramref name="message" />; <see langword="false" /> Jeśli filtr nie zostanie spełniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy jeden filtr powinien zgodny komunikat i zgodne z filtrem jest wymagana.  
  
 Jeśli treść wiadomości muszą być kontrolowane przez filtr w tabeli filtrów, użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> wersja metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli filtr więcej niż jeden zgodny komunikat <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> musi zostać wygenerowany.  Ta wersja ma <see cref="T:System.ServiceModel.Channels.Message" /> i może zgłosić <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> Jeśli próbuje sprawdzić treść komunikatu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef result As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="result">To be added.</param>
        <summary>Zwraca wartość wskazującą, czy kryterium filtru dokładnie jeden w tabeli spełniać określony komunikat lub buforowanego komunikat i zwraca, dla których Filtruj w <see langword="out" /> parametru.</summary>
        <returns>
          <see langword="true" /> Jeśli kryterium filtru co najmniej jednej tabeli spełniają warunek określony przez <paramref name="messageBuffer" />; <see langword="false" /> Jeśli filtr nie zostanie spełniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy jeden filtr powinien zgodny komunikat buforowanego, zgodne z filtrem musi zostać zwrócona i treść komunikatu może być kontrolowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje filtry, których kryteria są spełnione przez określony komunikat, czy buforowanego komunikat do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj jednej z tych metod, gdy więcej niż jeden filtr powinien odpowiadać wiadomości i pasujące filtry są wymagane. Należy pamiętać, kolekcję, która zawiera filtry nie są czyszczone przed dodaniem są wyniki. Dzięki temu można Połącz wszystkie dopasowania na wiele tabel filtrów w jednej kolekcji.  
  
 Jeśli treść wiadomości muszą być kontrolowane przez filtr w tabeli filtrów, buforu wiadomości i przekaż go do <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A> metody. W przeciwnym razie użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.  
  
 Dopasowanie <xref:System.ServiceModel.Dispatcher.MessageFilter> obiekty są przechowywane w `results` parametru. Następnie można odzyskać dane z tabeli filtrów przy użyciu tych filtrów jako filtr kluczy o metody udostępniane przez <xref:System.Collections.Generic.IDictionary%602>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.ServiceModel.Channels.Message" /> Do testowania.</param>
        <param name="results">Parametr odwołania, który przechowuje <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> obiektów odpowiadających w <see cref="T:System.Collections.Generic.ICollection`1" /> &lt;filtru&gt;.</param>
        <summary>Zwraca wartość wskazującą, czy kryterium filtru w tabeli jest spełnione przez określony komunikat i dodaje pasujące filtry do kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli kryterium filtru co najmniej jednej tabeli spełniają warunek określony przez <paramref name="message" />; <see langword="false" /> Jeśli filtr nie zostanie spełniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy więcej niż jeden filtr powinien zgodny komunikat, pasujące filtry są wymagane, a treść wiadomości nie musi być kontrolowane.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ta wersja ma <see cref="T:System.ServiceModel.Channels.Message" /> i może zgłosić <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> Jeśli próbuje sprawdzić treść komunikatu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (buffer As MessageBuffer, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="results">Parametr odwołania, który przechowuje <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> obiektów odpowiadających w <see cref="T:System.Collections.Generic.ICollection`1" /> &lt;filtru&gt;.</param>
        <summary>Zwraca wartość wskazującą, czy spełnia warunek określony przez określony komunikat buforowanego kryterium filtru w tabeli i dodaje pasujące filtry do kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli kryterium filtru co najmniej jednej tabeli spełniają warunek określony przez <paramref name="messageBuffer" />; <see langword="false" /> Jeśli filtr nie zostanie spełniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy więcej niż jeden filtr do dopasowania komunikacie buforowanego dopasowywania filtru jest wymagana, a treść komunikatu może mieć kontrolę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy określony komunikat lub buforowanego komunikat i zwraca dane filtru dla filtru, który jest zgodny spełnieniu kryterium filtru w tabeli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy użyć jednej z tych metod, co najwyżej jeden filtr powinien odpowiadać wiadomości i musi zostać odzyskane dane filtru zgodne z filtrem. Te metody zwracają wartość logiczna wskazująca, czy zgodne z filtrem znaleziono i ustawić `data` odwołać się do parametru do dopasowywania danych filtru.  
  
 Użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> Jeśli treść wiadomości nie jest kontrolowane przez filtry w tabeli filtrów.  
  
 Jeśli treść wiadomości mogą być kontrolowane przez filtr w tabeli filtrów, buforu wiadomości i przekaż go do <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> wersja metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli filtr więcej niż jeden zgodny komunikat <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> musi zostać wygenerowany.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; value) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="value" Type="TFilterData&amp;" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.ServiceModel.Channels.Message" /> Do testowania.</param>
        <param name="value">To be added.</param>
        <param name="data">To be added.</param>
        <summary>Zwraca wartość wskazującą, czy kryterium filtru dokładnie jeden w tabeli jest spełnione przez określony komunikat i dodaje dopasowywania danych filtr do kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli dokładnie jedno kryterium dopasowania Filtruj w tabeli jest spełnione przez message; <see langword="false" /> Jeśli filtr nie zostanie spełniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy jeden filtr powinien zgodny komunikat i musi zostać odzyskane dane filtru zgodne z filtrem.  
  
 Ta metoda oczekuje co najwyżej jeden pasujący filtr. Jeśli więcej niż jeden filtr jest zgodny, <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException> musi zostać wygenerowany.  
  
 Jeśli treść wiadomości muszą być kontrolowane przez filtr w tabeli filtrów, buforu wiadomości przy użyciu <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> i przekaż go do <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A> wersja metody.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli filtr więcej niż jeden zgodny komunikat <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> musi zostać wygenerowany.  To przeciążenie przyjmuje <see cref="T:System.ServiceModel.Channels.Message" /> i może zgłosić <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> Jeśli próbuje sprawdzić treść komunikatu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] !TFilterData&amp; value) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] TFilterData % value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer buffer, out TFilterData data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer buffer, [out] !TFilterData&amp; data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (buffer As MessageBuffer, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] TFilterData % data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="value" Type="TFilterData&amp;" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="value">To be added.</param>
        <param name="data">To be added.</param>
        <summary>Zwraca wartość wskazującą, czy kryterium filtru dokładnie jeden w tabeli jest spełnione przez określony komunikat buforowanego i dodaje dopasowywania danych filtr do kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli dokładnie jedno kryterium dopasowania Filtruj w tabeli jest spełnione przez message; <see langword="false" /> Jeśli filtr nie zostanie spełniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pojedynczy filtr powinien zgodny komunikat buforowanego, musi zostać odzyskane dane filtru pasującego filtru i treść komunikatu może mieć kontrolę.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli filtr więcej niż jeden zgodny komunikat <see cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" /> musi zostać wygenerowany.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje dane filtru spełniających określony komunikat lub buforowanych wiadomości do kolekcji filtrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy więcej niż jeden filtr powinien odpowiadać i tylko pasujących danych filtru jest wymagana. Te metody zwracają wartość logiczna wskazująca, czy pasujące filtry znaleziono i umieszcza dopasowywania danych filtr do kolekcji.  
  
 Należy pamiętać, kolekcję, która zawiera dane filtru nie jest czyszczony przed dodaniem są wyniki. Dzięki temu można Połącz wszystkie dopasowania na wiele tabel filtrów w jednej kolekcji.  
  
 Użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> Jeśli zawartość treści wiadomości nie wymagają badania. Użyj <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> Jeśli badanie wymaga zawartość treści wiadomości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.ServiceModel.Channels.Message" /> Do testowania.</param>
        <param name="results">Parametr odwołania, który przechowuje dane filtru pasującego filtrów w zbiorze ogólnym.</param>
        <summary>Zwraca wartość wskazującą, czy spełnia warunek określony przez określony komunikat kryterium filtru co najmniej jednej tabeli i dodaje <paramref name="FilterData" /> pasujących filtrów w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli kryterium filtru co najmniej jednej tabeli spełniają warunek określony przez <paramref name="message" />; <see langword="false" /> Jeśli filtr nie zostanie spełniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda oczekuje co najmniej jeden filtr do dopasowania wiadomości, wymagane są tylko dane filtru i zawartość treści wiadomości nie mają być kontrolowane.  
  
 Do dopasowywania danych filtru <xref:System.ServiceModel.Dispatcher.MessageFilter> obiekty są przechowywane w `results` parametru.  
  
 Jeśli treść wiadomości jest kontrolowane przez filtr w tabeli filtrów, buforu wiadomości i przekaż go do <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A> wersja metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (buffer As MessageBuffer, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="results">Parametr odwołania, który przechowuje dane filtru pasującego filtry w ogólnej metodzie <see cref="T:System.Collections.Generic.ICollection`1" /> &lt; <c>danych filtru</c>&gt;.</param>
        <summary>Zwraca wartość wskazującą, czy spełnia warunek określony przez określony komunikat buforowanego kryterium filtru co najmniej jednej tabeli i dodaje <paramref name="FilterData" /> pasujących filtrów w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli kryterium filtru co najmniej jednej tabeli spełniają warunek określony przez <paramref name="messageBuffer" />; <see langword="false" /> Jeśli filtr nie zostanie spełniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda oczekuje co najmniej jeden filtr do dopasowania buforowanego wiadomości, wymagane są tylko dane filtru i treści wiadomości mogą wymagać inspekcji.  
  
 Do dopasowywania danych filtru <xref:System.ServiceModel.Dispatcher.MessageFilter> obiekty są przechowywane w `results` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>