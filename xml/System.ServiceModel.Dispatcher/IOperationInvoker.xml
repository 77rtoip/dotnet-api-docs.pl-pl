<Type Name="IOperationInvoker" FullName="System.ServiceModel.Dispatcher.IOperationInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3f2318f1f437be09ae8df4154bb7ac3a958893e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69150242" /></Metadata><TypeSignature Language="C#" Value="public interface IOperationInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationInvoker" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationInvoker" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationInvoker" />
  <TypeSignature Language="F#" Value="type IOperationInvoker = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Deklaruje metody, które pobierają obiekt i tablicę parametrów wyodrębnionych z komunikatu, wywołują metodę dla tego obiektu z tymi parametrami i zwracają wartość zwracaną przez metodę i parametry wyjściowe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj <xref:System.ServiceModel.Dispatcher.IOperationInvoker> interfejs, aby kontrolować konwersję z nieokreślonego obiektu i tablicy parametrów do wywołania metody o jednoznacznie określonym typie dla tego obiektu. Ma metodę synchroniczną <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> , która pobiera wystąpienie i zestaw danych wejściowych typu Object i zwraca obiekt i zestaw danych wyjściowych typu Object. Ma <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> także wariant i <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A> .  <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> Właściwość określa, czy metoda synchroniczna lub asynchroniczna powinna być używana.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocateInputs">
      <MemberSignature Language="C#" Value="public object[] AllocateInputs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] AllocateInputs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs" />
      <MemberSignature Language="VB.NET" Value="Public Function AllocateInputs () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ AllocateInputs();" />
      <MemberSignature Language="F#" Value="abstract member AllocateInputs : unit -&gt; obj[]" Usage="iOperationInvoker.AllocateInputs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt <see cref="T:System.Array" /> z parametrami.</summary>
        <returns>Parametry, które mają być używane jako argumenty operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj to, aby zwrócić tablicę parametrów dla operacji. Ta tablica jest wypełniana przez program formatujący i przenoszona z powrotem <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> do źródło, gdy jest wywoływana.  
  
 ]]></format>
        </remarks>
        <threadsafe>Implementacja tej metody musi przydzielić tablicę wejściową dla każdego wywołania. Zwrócenie tej samej tablicy dla wielu wywołań może spowodować nieprzewidywalne zachowanie.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object instance, object[] inputs, out object[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object instance, object[] inputs, [out] object[]&amp; outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (instance As Object, inputs As Object(), ByRef outputs As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * obj[] *  -&gt; obj" Usage="iOperationInvoker.Invoke (instance, inputs, outputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="outputs" Type="System.Object[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance">Obiekt, który ma zostać wywołany.</param>
        <param name="inputs">Dane wejściowe metody.</param>
        <param name="outputs">Dane wyjściowe metody.</param>
        <summary>Zwraca obiekt i zestaw obiektów wyjściowych z wystąpienia i zestawu obiektów wejściowych.</summary>
        <returns>Wartość zwracana.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeBegin">
      <MemberSignature Language="C#" Value="public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult InvokeBegin(object instance, object[] inputs, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeBegin (instance As Object, inputs As Object(), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ InvokeBegin(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member InvokeBegin : obj * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOperationInvoker.InvokeBegin (instance, inputs, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Obiekt, który ma zostać wywołany.</param>
        <param name="inputs">Dane wejściowe metody.</param>
        <param name="callback">Asynchroniczny obiekt wywołania zwrotnego.</param>
        <param name="state">Skojarzone dane stanu.</param>
        <summary>Asynchroniczna implementacja <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> metody.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Używany do ukończenia wywołania asynchronicznego.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEnd">
      <MemberSignature Language="C#" Value="public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeEnd(object instance, [out] object[]&amp; outputs, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeEnd (instance As Object, ByRef outputs As Object(), result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeEnd(System::Object ^ instance, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member InvokeEnd : obj *  * IAsyncResult -&gt; obj" Usage="iOperationInvoker.InvokeEnd (instance, outputs, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="outputs" Type="System.Object[]" RefType="out" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="instance">Wywołano obiekt.</param>
        <param name="outputs">Dane wyjściowe metody.</param>
        <param name="result"><see cref="T:System.IAsyncResult" /> Obiekt.</param>
        <summary>Metoda asynchroniczna.</summary>
        <returns>Wartość zwracana.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronous">
      <MemberSignature Language="C#" Value="public bool IsSynchronous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronous : bool" Usage="System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> Metoda lub <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> jest wywoływana przez dyspozytora.</summary>
        <value><see langword="true" />Jeśli Dyspozytor wywołuje operację synchroniczną; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie Źródło wysyła komunikaty do operacji synchronicznej domyślnie. Ta wartość jest buforowana przez dyspozytora i dlatego nie powinna się zmieniać w okresie istnienia obiektu, <xref:System.ServiceModel.Dispatcher.IOperationInvoker>który implementuje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
