<Type Name="ServiceThrottle" FullName="System.ServiceModel.Dispatcher.ServiceThrottle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30baa1f448cfc12d3818952ad9a311f2e15dcee1" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315449" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceThrottle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceThrottle extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceThrottle" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceThrottle sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Steruje przepływności usługi w celu optymalizacji wydajności i dostępności.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Dispatcher.ServiceThrottle> dostrajania charakterystyki wydajności usługi. Najprostszym sposobem na skonfigurowanie <xref:System.ServiceModel.Dispatcher.ServiceThrottle> dla usługi jest użycie <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, szczególnie z pliku konfiguracji aplikacji.  
  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> Właściwość określa maksymalną liczbę komunikatów aktywnie przetwarzanych w obrębie wszystkich obiektów dyspozytora w <xref:System.ServiceModel.ServiceHost> obiektu.  
  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> Właściwość określa maksymalną liczbę <xref:System.ServiceModel.InstanceContext> obiektów w usłudze.  
  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> Właściwość określa maksymalną liczbę sesji <xref:System.ServiceModel.ServiceHost> może zaakceptować.  
  
> [!NOTE]
>  Śledzenia są zapisywane podczas pierwszego wywołania <xref:System.ServiceModel.InstanceContext>, lub sesji znajduje się w kolejce na waitlist. Pierwszy śledzenia są zapisywane jako ostrzeżenia.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia typowych <xref:System.ServiceModel.Dispatcher.ServiceThrottle> odwołując <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> w pliku konfiguracyjnym aplikacji. W tym przypadku wartości, które są określone ustalić, co najwyżej jeden komunikat przetwarzania jednocześnie z jednego połączenia do jednego <xref:System.ServiceModel.InstanceContext>. Rzeczywiste użycie musi być określona za pomocą środowiska.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="MaxConcurrentCalls">
      <MemberSignature Language="C#" Value="public int MaxConcurrentCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentCalls" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentCalls As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentCalls { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę komunikatów aktywnie przetwarzanych w obrębie wszystkich obiektów dyspozytora w <see cref="T:System.ServiceModel.ServiceHost" />.</summary>
        <value>Górny limit active komunikatów w usłudze. Wartość domyślna to 16 * liczba procesorów w komputerze.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> Właściwość określa maksymalną liczbę komunikatów aktywnie przetwarzanych w obrębie wszystkich obiektów dyspozytora w <xref:System.ServiceModel.ServiceHost> obiektu. Każdy kanał może mieć jeden oczekujący komunikat, który nie odliczona wartość <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> do momentu rozpoczęcia Windows Communication Foundation (WCF) go przetworzyć.  
  
> [!NOTE]
>  Śledzenia są zapisywane za każdym razem, gdy zostanie przekroczona wartość tej właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia typowych <xref:System.ServiceModel.Dispatcher.ServiceThrottle> odwołując <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> w pliku konfiguracyjnym aplikacji. W tym przypadku wartości, które są określone ustalić, co najwyżej jeden komunikat przetwarzania jednocześnie z jednego połączenia do jednego <xref:System.ServiceModel.InstanceContext>. Rzeczywiste użycie musi być określona za pomocą środowiska.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentInstances">
      <MemberSignature Language="C#" Value="public int MaxConcurrentInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentInstances" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentInstances As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentInstances { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę obiektów usługi, które mogą być wykonywane w tym samym czasie.</summary>
        <value>Maksymalna liczba <see cref="T:System.ServiceModel.InstanceContext" /> obiektów w usłudze w tym samym czasie. Wartość domyślna to maksymalna równoczesnych wywołań + maksymalna liczba równoczesnych sesji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> Właściwość określa maksymalną liczbę <xref:System.ServiceModel.InstanceContext> obiektów w usłudze. Należy pamiętać o relacji między <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> właściwości i <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> właściwości. Jeśli <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> jest <xref:System.ServiceModel.InstanceContextMode.PerSession> wynikowej wartości jest całkowita liczba sesji. Jeśli <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> jest <xref:System.ServiceModel.InstanceContextMode.PerCall>, wartość wynikową jest liczba równoczesnych wywołań. Jeśli podczas maksymalną liczbę wiadomości <xref:System.ServiceModel.InstanceContext> obiektów już istnieje, wiadomość jest utrzymywana do <xref:System.ServiceModel.InstanceContext> obiekt zostanie zamknięty.  
  
> [!NOTE]
>  Śledzenia są zapisywane za każdym razem, gdy zostanie przekroczona wartość tej właściwości. Pierwszy śledzenia są zapisywane jako ostrzeżenia.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia typowych <xref:System.ServiceModel.Dispatcher.ServiceThrottle> odwołując <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> w pliku konfiguracyjnym aplikacji. W tym przypadku wartości, które są określone ustalić, co najwyżej jeden komunikat przetwarzania jednocześnie z jednego połączenia do jednego <xref:System.ServiceModel.InstanceContext>. Rzeczywiste użycie musi być określona za pomocą środowiska.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentSessions">
      <MemberSignature Language="C#" Value="public int MaxConcurrentSessions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentSessions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentSessions As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentSessions { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną liczbę sesji <see cref="T:System.ServiceModel.ServiceHost" /> obiektu może zaakceptować jednocześnie.</summary>
        <value>Maksymalna liczba sesji, który akceptuje hosta usługi. Wartość domyślna to 100 * Liczba procesorów w komputerze.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> Właściwość określa maksymalną liczbę kanałów <xref:System.ServiceModel.ServiceHost> może zaakceptować. Każdy obiekt odbiornika może mieć jeden oczekujący kanału, który nie odliczona wartość <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> dopóki WCF akceptuje kanału i rozpoczyna przetwarzanie komunikatów na nim. Ta właściwość jest najbardziej przydatna w scenariuszy, w których należy użyć sesji.  
  
> [!NOTE]
>  Śledzenia są zapisywane za każdym razem, gdy zostanie przekroczona wartość tej właściwości. Pierwszy śledzenia są zapisywane jako ostrzeżenia.  
  
 Aby uzyskać więcej informacji o sesji, zobacz [sesji przy użyciu](~/docs/framework/wcf/using-sessions.md).  
  
 Zwykle, ta właściwość jest ustawiona, przy użyciu <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=nameWithType> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia typowych <xref:System.ServiceModel.Dispatcher.ServiceThrottle> odwołując <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> w pliku konfiguracyjnym aplikacji. W tym przypadku wartości, które są określone ustalić, co najwyżej jeden komunikat przetwarzania jednocześnie z jednego połączenia do jednego <xref:System.ServiceModel.InstanceContext>. Rzeczywiste użycie musi być określona za pomocą środowiska.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>