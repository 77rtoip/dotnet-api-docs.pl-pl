<Type Name="IInstanceContextInitializer" FullName="System.ServiceModel.Dispatcher.IInstanceContextInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e512466290ea52f9212028b3820112e81d8e280" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30575350" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInstanceContextInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInstanceContextInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInstanceContextInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInstanceContextInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody konieczne inspekcja lub modyfikowanie tworzenie <see cref="T:System.ServiceModel.InstanceContext" /> obiektów na żądanie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby inspekcja lub modyfikowanie <xref:System.ServiceModel.InstanceContext> obiektów po ich utworzeniu wdrożenia <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer> interfejsu i użyj <xref:System.ServiceModel.Description.IContractBehavior> je dodać <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> właściwości.  
  
 Może to być dowolna liczba inicjatorów kontekst dla usługi. Zazwyczaj <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer> zostanie dodany do podłączenia rozszerzenie <xref:System.ServiceModel.InstanceContext> obiektu jako mechanizm przekazywania danych w całej aplikacji.  
  
 Jeśli chcesz uczestniczyć w udostępnianiu lub wybranie <xref:System.ServiceModel.InstanceContext> obiekt, który przetwarza wiadomości, zobacz <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=nameWithType>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="instanceContext">Kontekst wystąpienia dostarczony przez system.</param>
        <param name="message">Komunikat, który powoduje utworzenie wystąpienia kontekstu.</param>
        <summary>Zapewnia możliwość modyfikowania nowo utworzony <see cref="T:System.ServiceModel.InstanceContext" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize%2A> Metoda jest wywoływana, gdy <xref:System.ServiceModel.InstanceContext> tworzony jest obiekt. Zwykle ta metoda jest używana, można dołączyć rozszerzenia, dzięki czemu dane niestandardowe są dostępne w całej aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>