<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventListener.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55480267b4cc4099ed5038e8eba1ce5464a5580f5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5480267b4cc4099ed5038e8eba1ce5464a5580f5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Provides methods for enabling and disabling events from event sources.</source>
          <target state="translated">Udostępnia metody włączania i wyłączania zdarzeń od źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>An event listener represents the target for all events generated by event source (<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> object) implementations in the current application domain.</source>
          <target state="translated">Odbiornik zdarzeń reprezentuje element docelowy dla wszystkie zdarzenia wygenerowane przez źródło zdarzenia (<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> obiektu) implementacji w bieżącej domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>When a new event listener is created, it is logically attached to all event sources in that application domain.</source>
          <target state="translated">Po utworzeniu nowego odbiornik zdarzeń logicznie jest dołączony do wszystkich źródeł zdarzeń w tej domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ten typ implementuje <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>When you have finished using the type, you must dispose of it either directly or indirectly.</source>
          <target state="translated">Po zakończeniu przy użyciu typu musi dysponować go bezpośrednio lub pośrednio.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Do usuwania tego typu, należy wywołać jej <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metody w <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloku.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak <ph id="ph1">`using`</ph> (w języku C#) lub <ph id="ph2">`Using`</ph> (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu tematu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>An event listener can enable or disable on a per-current event source basis by using event levels (<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventLevel&gt;</ph>) and event keywords (<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventKeywords&gt;</ph>) to further restrict the set of events to be sent to the listener.</source>
          <target state="translated">Odbiornik zdarzeń można włączyć lub wyłączyć na podstawie źródła zdarzeń dla bieżącego za pomocą poziomów zdarzeń (<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventLevel&gt;</ph>) i słowa kluczowe zdarzeń (<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventKeywords&gt;</ph>) bardziej ograniczyć zestaw zdarzenia mają być wysyłane do odbiornika.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>The listener can also send arbitrary commands to a specific current event source by using the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> method.</source>
          <target state="translated">Odbiornik można również wysłać dowolne polecenia do określonych bieżące źródło zdarzeń przy użyciu <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>The meanings of the commands are specific to the implementation of the event source.</source>
          <target state="translated">Znaczenie polecenia są specyficzne dla implementację źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> object that is used to enable or disable events is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, all event sources in the application domain are affected.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> właściwości w <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> jest obiekt, który jest używany, aby włączyć lub wyłączyć zdarzenia <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, dotyczy wszystkich źródeł zdarzeń w domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Multiple event listeners can be defined in a single application domain.</source>
          <target state="translated">Można zdefiniować wiele odbiorników zdarzeń w domenie pojedynczej aplikacji.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Each listener is logically independent of the other listeners so that events that are enabled or disabled by one listener affect only that listener.</source>
          <target state="translated">Każdy odbiornika jest logicznie niezależny od innych obiektów nasłuchujących tak, aby tylko tego odbiornika wpływają na zdarzenia, które są włączone lub wyłączone przez jeden odbiornik.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>It is possible for commands sent with the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> method to do a semantic operation (such as a garbage collection or flushing data) that affects the other listeners, but this is the exception rather than the rule.</source>
          <target state="translated">Istnieje możliwość polecenia przesyłane z <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> metodą wykonania operacji semantyczne (np. pamięci lub opróżniania danych), czy ma wpływ na inne odbiorników, ale jest wyjątek zamiast reguły.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Each event source   keeps a list of event listeners that it sends events to.</source>
          <target state="translated">Każdy źródło zdarzenia przechowuje listę odbiorników zdarzeń, które wysyła zdarzenia do.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>A set of filtering criteria is associated with each event source-listener pair.</source>
          <target state="translated">Zestaw kryteriów filtrowania jest skojarzony z każdej pary źródłowym odbiornika zdarzeń.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>These criteria determine the events that listener will receive for the current event source.</source>
          <target state="translated">Te kryteria określić zdarzenia otrzymają tego odbiornika dla bieżącego źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Listeners receive the events on their <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A&gt;</ph> method.</source>
          <target state="translated">Odbiorniki odbieranie zdarzeń na ich <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Therefore, subclasses of <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> must override this method to do something useful with the data.</source>
          <target state="translated">W związku z tym podklasy <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> muszą przesłaniać tę metodę do czymś przydatne z danymi.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>When a new event source is created, the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> method is called.</source>
          <target state="translated">Podczas tworzenia nowego źródła zdarzeń <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Every current event listener gets exactly one <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> call for every current event source that can send it log messages.</source>
          <target state="translated">Pobiera co bieżący odbiornik zdarzeń, dokładnie jeden <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> Wywołaj dla każdego bieżącego źródła zdarzeń, który może wysyłać go komunikaty dziennika.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>When an event listener is created, a series of <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> calls are made to notify the new listener of all the event sources that existed before the listener was created.</source>
          <target state="translated">Podczas tworzenia odbiornika zdarzeń, szereg <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> wywołań powiadomiono nowe odbiornika wszystkich źródeł zdarzeń, które istniały przed utworzeniem odbiornika.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventListener" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventListener" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.#ctor">
          <source>All events are disabled when a new instance is created.</source>
          <target state="translated">Wszystkie zdarzenia są wyłączone, po utworzeniu nowego wystąpienia.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A&gt;</ph> methods to enable events.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A&gt;</ph> metody w celu umożliwienia zdarzenia.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
          <source>The event source to disable events for.</source>
          <target state="translated">Źródło zdarzenia można wyłączyć zdarzenia.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
          <source>Disables all events for the specified event source.</source>
          <target state="translated">Wyłącza wszystkie zdarzenia dla źródła określone zdarzenie.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property for <ph id="ph2">`eventSource`</ph> is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, events for all event sources in the application domain are disabled for this event listener.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> właściwość <ph id="ph2">`eventSource`</ph> jest <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, zdarzenia dla wszystkich źródeł zdarzeń w domenie aplikacji są wyłączone dla tego odbiornika zdarzeń.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventListener" /&gt;</ph> class.</source>
          <target state="translated">Zwalnia zasoby używane przez bieżące wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventListener" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph>.</source>
          <target state="translated">Wywołanie <ph id="ph1">`Dispose`</ph> po zakończeniu przy użyciu <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> Pozostawia metody <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> w stanie uniemożliwiającym jego używanie.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> was occupying.</source>
          <target state="translated">Po wywołaniu <ph id="ph1">`Dispose`</ph>, konieczne jest zwolnienie wszystkich odwołań do <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> i <bpt id="p2">[</bpt>implementacja metody Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventListener">
          <source>Enables events for the specified event source.</source>
          <target state="translated">Umożliwia zdarzeń źródła określone zdarzenie.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
          <source>The event source to enable events for.</source>
          <target state="translated">Źródło zdarzenia, aby włączyć zdarzenia dla.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
          <source>The level of events to enable.</source>
          <target state="translated">Poziom zdarzenia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
          <source>Enables events for the specified event source that has the specified verbosity level or lower.</source>
          <target state="translated">Umożliwia zdarzeń źródła określonego zdarzenia, zawierający określony poziom szczegółowości, poziomu lub niższy.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property in the specified <ph id="ph2">`eventSource`</ph> is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, all event sources in the application domain are affected.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> właściwości w określonym <ph id="ph2">`eventSource`</ph> jest <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, dotyczy wszystkich źródeł zdarzeń w domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The event source to enable events for.</source>
          <target state="translated">Źródło zdarzenia, aby włączyć zdarzenia dla.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The level of events to enable.</source>
          <target state="translated">Poziom zdarzenia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The keyword flags necessary to enable the events.</source>
          <target state="translated">Flagi — słowo kluczowe jest niezbędne do obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Enables events for the specified event source that has the specified verbosity level or lower, and matching keyword flags.</source>
          <target state="translated">Umożliwia zdarzenia źródło określonego zdarzenia, które ma określony poziom szczegółowości flagi poziomu lub mniejszą i dopasowania słów kluczowych.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property in the specified <ph id="ph2">`eventSource`</ph> is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, all event sources in the application domain are affected.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> właściwości w określonym <ph id="ph2">`eventSource`</ph> jest <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, dotyczy wszystkich źródeł zdarzeń w domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The event source to enable events for.</source>
          <target state="translated">Źródło zdarzenia, aby włączyć zdarzenia dla.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The level of events to enable.</source>
          <target state="translated">Poziom zdarzenia.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The keyword flags necessary to enable the events.</source>
          <target state="translated">Flagi — słowo kluczowe jest niezbędne do obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The arguments to be matched to enable the events.</source>
          <target state="translated">Argumenty powinna być dopasowana do włączenia zdarzenia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Enables events for the specified event source that has the specified verbosity level or lower, matching event keyword flag, and matching arguments.</source>
          <target state="translated">Umożliwia zdarzeń źródła określonego zdarzenia, który ma poziom szczegółowości określony lub mniej, dopasowywania flagi — słowo kluczowe zdarzenia i dopasowania argumentów.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> property in the specified <ph id="ph2">`eventSource`</ph> is <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, all event sources in the application domain are affected.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.Guid%2A&gt;</ph> właściwości w określonym <ph id="ph2">`eventSource`</ph> jest <ph id="ph3">&lt;xref:System.Guid.Empty&gt;</ph>, dotyczy wszystkich źródeł zdarzeń w domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated">
          <source>Occurs when an event source (<ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> object) is attached to the dispatcher.</source>
          <target state="translated">Występuje, gdy źródłem zdarzenia (<ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> obiektu) jest dołączony do dyspozytora.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated&gt;</ph> occurs for all existing event sources when the event listener is created, as well as for any event sources that are created after the event listener's creation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated&gt;</ph> Występuje dla wszystkich istniejących źródeł zdarzeń, gdy utworzony odbiornik zdarzeń, jak również podobnie jak w przypadku dowolnego źródła zdarzeń, które są tworzone po utworzeniu odbiornika zdarzeń.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>The event source to find the index for.</source>
          <target state="translated">Źródło zdarzenia można znaleźć indeksu.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>Gets a small non-negative number that represents the specified event source.</source>
          <target state="translated">Pobiera małą liczbą nieujemną, które reprezentuje źródło określonego zdarzenia.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>A small non-negative number that represents the specified event source.</source>
          <target state="translated">Niewielka liczba ujemna, które reprezentuje źródło określonego zdarzenia.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>The value returned by <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A&gt;</ph> identifies an event source that is suitable for indexing an array.</source>
          <target state="translated">Wartość zwrócona przez <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A&gt;</ph> identyfikuje źródła zdarzenia, które jest odpowiednie dla indeksowanie tablicy.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>This integer is unique within the application domain.</source>
          <target state="translated">Ta liczba całkowita jest unikatowa w domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>An event listener might find it useful to store additional information about each event source that is connected to it.</source>
          <target state="translated">Odbiornik zdarzeń może być bardzo przydatne do przechowywania dodatkowe informacje na temat każdego źródła zdarzeń, który jest połączony.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
          <source>The value returned by <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A&gt;</ph> allows this extra information to be efficiently stored in a  expandable array such as <ph id="ph2">`List&lt;T&gt;`</ph>.</source>
          <target state="translated">Wartość zwrócona przez <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A&gt;</ph> umożliwia to dodatkowe informacje wydajnie były przechowywane w tablicy można rozwijać na takich jak <ph id="ph2">`List&lt;T&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Tracing.EventListener.EventWritten">
          <source>Occurs when an event has been written by an event source (<ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> object) for which the event listener has enabled events.</source>
          <target state="translated">Występuje, gdy zdarzenie została zapisana przez źródło zdarzenia (<ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> obiektu) dla której włączono odbiornik zdarzeń zdarzenia.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
          <source>The event source.</source>
          <target state="translated">Źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
          <source>Called for all existing event sources when the event listener is created and when a new event source is attached to the listener.</source>
          <target state="translated">Wywołuje się dla wszystkich istniejących źródeł zdarzeń podczas jest utworzony odbiornik zdarzeń i nowe źródło zdarzeń jest dołączony do odbiornika.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
          <source>Event source implementations should be aware that these callbacks are issued for existing event sources when the event listener is instantiated.</source>
          <target state="translated">Implementacje źródła zdarzeń należy zwrócić uwagę, że te wywołania zwrotne są wystawiane dla istniejących źródeł zdarzeń odbiornik zdarzeń jest uruchomione.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
          <source>In a multithreaded environment, it is possible for <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A&gt;</ph> callbacks  to occur before the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> callback.</source>
          <target state="translated">W środowisku wielowątkowym, istnieje możliwość <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A&gt;</ph> wywołania zwrotne występuje przed <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A&gt;</ph> wywołania zwrotnego.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
          <source>The event arguments that describe the event.</source>
          <target state="translated">Argumenty zdarzenia, opisujące zdarzenia.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
          <source>Called whenever an event has been written by an event source for which the event listener has enabled events.</source>
          <target state="translated">Wywoływana, gdy zdarzenie została zapisana przez źródło zdarzenia, dla którego włączono odbiornik zdarzeń zdarzenia.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>