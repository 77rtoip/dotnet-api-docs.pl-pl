<Type Name="EventListener" FullName="System.Diagnostics.Tracing.EventListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b310ed7d5ba89022d120de88bbab3d5bad79a809" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69253391" /></Metadata><TypeSignature Language="C#" Value="public abstract class EventListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventListener" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventListener abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type EventListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dbf7a-101">Zapewnia metody włączania i wyłączania zdarzeń ze źródeł zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-101">Provides methods for enabling and disabling events from event sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-102">Odbiornik zdarzeń reprezentuje element docelowy dla wszystkich zdarzeń generowanych przez implementacje źródła<xref:System.Diagnostics.Tracing.EventSource> zdarzeń w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-102">An event listener represents the target for all events generated by event source (<xref:System.Diagnostics.Tracing.EventSource> object) implementations in the current application domain.</span></span> <span data-ttu-id="dbf7a-103">Po utworzeniu nowego odbiornika zdarzeń jest on logicznie dołączany do wszystkich źródeł zdarzeń w tej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-103">When a new event listener is created, it is logically attached to all event sources in that application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dbf7a-104">Ten typ implementuje <xref:System.IDisposable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="dbf7a-105">Po zakończeniu korzystania z typu należy usunąć go bezpośrednio lub pośrednio.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-105">When you have finished using the type, you must dispose of it either directly or indirectly.</span></span> <span data-ttu-id="dbf7a-106">Aby usunąć typ bezpośrednio <xref:System.IDisposable.Dispose%2A> , wywołaj jego metodę `try` / `catch` w bloku.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="dbf7a-107">Aby usunąć go pośrednio, użyj konstrukcji języka, takiej jak `using` (in C#) lub `Using` (w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="dbf7a-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="dbf7a-108">Aby uzyskać więcej informacji, zobacz sekcję "Używanie obiektu implementującego <xref:System.IDisposable> interfejs IDisposable" w temacie dotyczącym interfejsu.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="dbf7a-109">Odbiornik zdarzeń można włączać lub wyłączać na podstawie bieżącego źródła zdarzeń przy użyciu poziomów zdarzeń (<xref:System.Diagnostics.Tracing.EventLevel>) i słów kluczowych zdarzenia (<xref:System.Diagnostics.Tracing.EventKeywords>), aby bardziej ograniczyć zestaw zdarzeń do wysłania do odbiornika.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-109">An event listener can enable or disable on a per-current event source basis by using event levels (<xref:System.Diagnostics.Tracing.EventLevel>) and event keywords (<xref:System.Diagnostics.Tracing.EventKeywords>) to further restrict the set of events to be sent to the listener.</span></span> <span data-ttu-id="dbf7a-110">Odbiornik może również wysyłać dowolne polecenia do określonego bieżącego źródła zdarzeń przy użyciu <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-110">The listener can also send arbitrary commands to a specific current event source by using the <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> method.</span></span> <span data-ttu-id="dbf7a-111">Znaczenie poleceń jest specyficzne dla implementacji źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-111">The meanings of the commands are specific to the implementation of the event source.</span></span>  
  
 <span data-ttu-id="dbf7a-112">Jeśli właściwość <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> <xref:System.Diagnostics.Tracing.EventSource> w obiekcie, która jest używana do włączania lub wyłączania <xref:System.Guid.Empty>zdarzeń, jest zależna od wszystkich źródeł zdarzeń w domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-112">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the <xref:System.Diagnostics.Tracing.EventSource> object that is used to enable or disable events is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 <span data-ttu-id="dbf7a-113">W jednej domenie aplikacji można definiować wiele odbiorników zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-113">Multiple event listeners can be defined in a single application domain.</span></span> <span data-ttu-id="dbf7a-114">Każdy odbiornik jest logicznie niezależny od innych odbiorników, dzięki czemu zdarzenia, które są włączone lub wyłączone przez jeden odbiornik, wpływają tylko na ten odbiornik.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-114">Each listener is logically independent of the other listeners so that events that are enabled or disabled by one listener affect only that listener.</span></span> <span data-ttu-id="dbf7a-115">Dla poleceń wysyłanych za pomocą <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> metody można wykonać operację semantyczną (na przykład odzyskiwanie pamięci lub dane opróżniania), która ma wpływ na inne detektory, ale jest to wyjątek, a nie reguła.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-115">It is possible for commands sent with the <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> method to do a semantic operation (such as a garbage collection or flushing data) that affects the other listeners, but this is the exception rather than the rule.</span></span>  
  
 <span data-ttu-id="dbf7a-116">Każde źródło zdarzenia zachowuje listę detektorów zdarzeń, do których wysyła zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-116">Each event source   keeps a list of event listeners that it sends events to.</span></span> <span data-ttu-id="dbf7a-117">Zestaw kryteriów filtrowania jest skojarzony z każdą parą źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-117">A set of filtering criteria is associated with each event source-listener pair.</span></span> <span data-ttu-id="dbf7a-118">Te kryteria określają zdarzenia odbierane przez odbiornik dla bieżącego źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-118">These criteria determine the events that listener will receive for the current event source.</span></span> <span data-ttu-id="dbf7a-119">Odbiorniki odbierają zdarzenia w <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-119">Listeners receive the events on their <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> method.</span></span> <span data-ttu-id="dbf7a-120">W związku z tym podklasy <xref:System.Diagnostics.Tracing.EventListener> muszą przesłaniać tę metodę, aby wykonać coś przydatnego w przypadku danych.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-120">Therefore, subclasses of <xref:System.Diagnostics.Tracing.EventListener> must override this method to do something useful with the data.</span></span>  
  
 <span data-ttu-id="dbf7a-121">Po utworzeniu <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> nowego źródła zdarzenia wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-121">When a new event source is created, the <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> method is called.</span></span> <span data-ttu-id="dbf7a-122">Każdy bieżący odbiornik zdarzeń pobiera dokładnie jedno <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> wywołanie dla każdego bieżącego źródła zdarzeń, które może wysyłać komunikaty dziennika IT.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-122">Every current event listener gets exactly one <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> call for every current event source that can send it log messages.</span></span> <span data-ttu-id="dbf7a-123">Po utworzeniu odbiornika zdarzeń jest wykonywana seria <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> wywołań w celu powiadomienia nowego odbiornika o wszystkich źródłach zdarzeń, które istniały przed utworzeniem odbiornika.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-123">When an event listener is created, a series of <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> calls are made to notify the new listener of all the event sources that existed before the listener was created.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dbf7a-124">Tworzy nowe wystąpienie <see cref="T:System.Diagnostics.Tracing.EventListener" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-124">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-125">Wszystkie zdarzenia są wyłączone po utworzeniu nowego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-125">All events are disabled when a new instance is created.</span></span> <span data-ttu-id="dbf7a-126">Użyj metod <xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A> , aby włączyć zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-126">Use the <xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A> methods to enable events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableEvents">
      <MemberSignature Language="C#" Value="public void DisableEvents (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableEvents(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="member this.DisableEvents : System.Diagnostics.Tracing.EventSource -&gt; unit" Usage="eventListener.DisableEvents eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="dbf7a-127">Źródło zdarzenia, dla którego mają zostać wyłączone zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-127">The event source to disable events for.</span></span></param>
        <summary><span data-ttu-id="dbf7a-128">Wyłącza wszystkie zdarzenia dla określonego źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-128">Disables all events for the specified event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-129"><xref:System.Diagnostics.Tracing.EventSource.Guid%2A> Jeśli Właściwośćjest<xref:System.Guid.Empty>,zdarzenia dla wszystkich źródeł zdarzeń w domenie aplikacji są wyłączone dla tego odbiornika zdarzeń. `eventSource`</span><span class="sxs-lookup"><span data-stu-id="dbf7a-129">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property for `eventSource` is <xref:System.Guid.Empty>, events for all event sources in the application domain are disabled for this event listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dbf7a-130">Zwalnia zasoby używane przez bieżące wystąpienie <see cref="T:System.Diagnostics.Tracing.EventListener" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-130">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-131">Wywołaj `Dispose` po zakończeniu korzystania z <xref:System.Diagnostics.Tracing.EventListener>.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-131">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventListener>.</span></span> <span data-ttu-id="dbf7a-132">`Dispose` Metoda<xref:System.Diagnostics.Tracing.EventListener> pozostawia w stanie niezdatnym do użytku.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-132">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventListener> in an unusable state.</span></span> <span data-ttu-id="dbf7a-133">Po wywołaniu `Dispose`należy wydać wszystkie odwołania <xref:System.Diagnostics.Tracing.EventListener> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Diagnostics.Tracing.EventListener> , którą zajmował.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-133">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventListener> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventListener> was occupying.</span></span>  
  
 <span data-ttu-id="dbf7a-134">Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="dbf7a-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableEvents">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dbf7a-135">Włącza zdarzenia dla określonego źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-135">Enables events for the specified event source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="dbf7a-136">Źródło zdarzenia, dla którego mają zostać włączone zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-136">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="dbf7a-137">Poziom zdarzeń do włączenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-137">The level of events to enable.</span></span></param>
        <summary><span data-ttu-id="dbf7a-138">Włącza zdarzenia dla określonego źródła zdarzeń o określonym poziomie szczegółowości lub niższym.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-138">Enables events for the specified event source that has the specified verbosity level or lower.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-139">Jeśli właściwość określona `eventSource` ma wartość <xref:System.Guid.Empty>, ma to zastosowanie do wszystkich źródeł zdarzeń w domenie aplikacji. <xref:System.Diagnostics.Tracing.EventSource.Guid%2A></span><span class="sxs-lookup"><span data-stu-id="dbf7a-139">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords matchAnyKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level, matchAnyKeyword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="dbf7a-140">Źródło zdarzenia, dla którego mają zostać włączone zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-140">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="dbf7a-141">Poziom zdarzeń do włączenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-141">The level of events to enable.</span></span></param>
        <param name="matchAnyKeyword"><span data-ttu-id="dbf7a-142">Słowa kluczowe wymagane do włączenia zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-142">The keyword flags necessary to enable the events.</span></span></param>
        <summary><span data-ttu-id="dbf7a-143">Włącza zdarzenia dla określonego źródła zdarzeń, które ma określony poziom szczegółowości lub niższy oraz dopasowuje flagi słowa kluczowego.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-143">Enables events for the specified event source that has the specified verbosity level or lower, and matching keyword flags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-144">Jeśli właściwość określona `eventSource` ma wartość <xref:System.Guid.Empty>, ma to zastosowanie do wszystkich źródeł zdarzeń w domenie aplikacji. <xref:System.Diagnostics.Tracing.EventSource.Guid%2A></span><span class="sxs-lookup"><span data-stu-id="dbf7a-144">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, System.Collections.Generic.IDictionary&lt;string,string&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level, matchAnyKeyword, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="dbf7a-145">Źródło zdarzenia, dla którego mają zostać włączone zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-145">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="dbf7a-146">Poziom zdarzeń do włączenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-146">The level of events to enable.</span></span></param>
        <param name="matchAnyKeyword"><span data-ttu-id="dbf7a-147">Słowa kluczowe wymagane do włączenia zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-147">The keyword flags necessary to enable the events.</span></span></param>
        <param name="arguments"><span data-ttu-id="dbf7a-148">Argumenty, które mają być dopasowane, aby włączyć zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-148">The arguments to be matched to enable the events.</span></span></param>
        <summary><span data-ttu-id="dbf7a-149">Włącza zdarzenia dla określonego źródła zdarzeń, które ma określony poziom szczegółowości lub niższy, dopasowuje flagę słowa kluczowego zdarzenia i pasujące argumenty.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-149">Enables events for the specified event source that has the specified verbosity level or lower, matching event keyword flag, and matching arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-150">Jeśli właściwość określona `eventSource` ma wartość <xref:System.Guid.Empty>, ma to zastosowanie do wszystkich źródeł zdarzeń w domenie aplikacji. <xref:System.Diagnostics.Tracing.EventSource.Guid%2A></span><span class="sxs-lookup"><span data-stu-id="dbf7a-150">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; EventSourceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; EventSourceCreated" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventSourceCreated As EventHandler(Of EventSourceCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventSourceCreatedEventArgs ^&gt; ^ EventSourceCreated;" />
      <MemberSignature Language="F#" Value="member this.EventSourceCreated : EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; " Usage="member this.EventSourceCreated : System.EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbf7a-151">Występuje, gdy źródło zdarzeń (<see cref="T:System.Diagnostics.Tracing.EventSource" /> Object) jest dołączone do dyspozytora.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-151">Occurs when an event source (<see cref="T:System.Diagnostics.Tracing.EventSource" /> object) is attached to the dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-152"><xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated> Występuje dla wszystkich istniejących źródeł zdarzeń podczas tworzenia odbiornika zdarzeń, a także dla wszystkich źródeł zdarzeń utworzonych po utworzeniu odbiornika zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-152">The <xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated> occurs for all existing event sources when the event listener is created, as well as for any event sources that are created after the event listener's creation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceIndex">
      <MemberSignature Language="C#" Value="public static int EventSourceIndex (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 EventSourceIndex(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int EventSourceIndex(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="static member EventSourceIndex : System.Diagnostics.Tracing.EventSource -&gt; int" Usage="System.Diagnostics.Tracing.EventListener.EventSourceIndex eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="dbf7a-153">Źródło zdarzenia, dla którego ma zostać znaleziony indeks.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-153">The event source to find the index for.</span></span></param>
        <summary><span data-ttu-id="dbf7a-154">Pobiera małą liczbę nieujemną reprezentującą określone źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-154">Gets a small non-negative number that represents the specified event source.</span></span></summary>
        <returns><span data-ttu-id="dbf7a-155">Mała liczba nieujemna reprezentująca określone źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-155">A small non-negative number that represents the specified event source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-156">Wartość zwracana przez <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> identyfikuje źródło zdarzenia odpowiednie do indeksowania tablicy.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-156">The value returned by <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> identifies an event source that is suitable for indexing an array.</span></span> <span data-ttu-id="dbf7a-157">Ta liczba całkowita jest unikatowa w domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-157">This integer is unique within the application domain.</span></span> <span data-ttu-id="dbf7a-158">Odbiornik zdarzeń może ułatwić przechowywanie dodatkowych informacji o wszystkich źródłach zdarzeń, które są z nim połączone.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-158">An event listener might find it useful to store additional information about each event source that is connected to it.</span></span> <span data-ttu-id="dbf7a-159">Wartość zwracana przez <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> program umożliwia efektywne przechowywanie dodatkowych informacji w tablicy rozszerzalnej, takiej jak `List<T>`.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-159">The value returned by <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> allows this extra information to be efficiently stored in a  expandable array such as `List<T>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventWritten">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; EventWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventWrittenEventArgs&gt; EventWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventListener.EventWritten" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventWritten As EventHandler(Of EventWrittenEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventWrittenEventArgs ^&gt; ^ EventWritten;" />
      <MemberSignature Language="F#" Value="member this.EventWritten : EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; " Usage="member this.EventWritten : System.EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dbf7a-160">Występuje po zapisaniu zdarzenia przez Źródło zdarzenia (<see cref="T:System.Diagnostics.Tracing.EventSource" /> obiekt), dla którego odbiornik zdarzeń włączył zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-160">Occurs when an event has been written by an event source (<see cref="T:System.Diagnostics.Tracing.EventSource" /> object) for which the event listener has enabled events.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventSourceCreated">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEventSourceCreated (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEventSourceCreated(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEventSourceCreated(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member OnEventSourceCreated : System.Diagnostics.Tracing.EventSource -&gt; unit&#xA;override this.OnEventSourceCreated : System.Diagnostics.Tracing.EventSource -&gt; unit" Usage="eventListener.OnEventSourceCreated eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="dbf7a-161">Źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-161">The event source.</span></span></param>
        <summary><span data-ttu-id="dbf7a-162">Wywoływana dla wszystkich istniejących źródeł zdarzeń podczas tworzenia odbiornika zdarzeń i gdy do odbiornika jest dołączone nowe źródło zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-162">Called for all existing event sources when the event listener is created and when a new event source is attached to the listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbf7a-163">Implementacje źródeł zdarzeń powinny mieć świadomość, że te wywołania zwrotne są wydawane dla istniejących źródeł zdarzeń po utworzeniu wystąpienia odbiornika zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-163">Event source implementations should be aware that these callbacks are issued for existing event sources when the event listener is instantiated.</span></span>  
  
 <span data-ttu-id="dbf7a-164">W środowisku wielowątkowym jest możliwe <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> , aby wywołania zwrotne miały miejsce <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> przed wywołaniem zwrotnym.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-164">In a multithreaded environment, it is possible for <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> callbacks  to occur before the <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> callback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventWritten">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEventWritten (System.Diagnostics.Tracing.EventWrittenEventArgs eventData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEventWritten(class System.Diagnostics.Tracing.EventWrittenEventArgs eventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEventWritten (eventData As EventWrittenEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEventWritten(System::Diagnostics::Tracing::EventWrittenEventArgs ^ eventData);" />
      <MemberSignature Language="F#" Value="abstract member OnEventWritten : System.Diagnostics.Tracing.EventWrittenEventArgs -&gt; unit" Usage="eventListener.OnEventWritten eventData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="System.Diagnostics.Tracing.EventWrittenEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventData"><span data-ttu-id="dbf7a-165">Argumenty zdarzenia opisujące zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-165">The event arguments that describe the event.</span></span></param>
        <summary><span data-ttu-id="dbf7a-166">Wywoływana za każdym razem, gdy zdarzenie zostało zapisaną przez Źródło zdarzenia, dla którego odbiornik zdarzeń włączył zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="dbf7a-166">Called whenever an event has been written by an event source for which the event listener has enabled events.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
