<Type Name="EventSource" FullName="System.Diagnostics.Tracing.EventSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6736ac0fc9f26ddd67969a70736a98d86106eefa" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39746359" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSource&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSource : IDisposable" />
  <TypeSignature Language="F#" Value="type EventSource = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0dfde-101">Zapewnia możliwość tworzenia zdarzenia do śledzenia zdarzeń dla Windows (ETW).</span>
      <span class="sxs-lookup">
        <span data-stu-id="0dfde-101">Provides the ability to create events for event tracing for Windows (ETW).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-102">Ta klasa ma dziedziczyć klasa użytkownika, która zawiera określone zdarzenia, które ma być używany dla funkcji ETW.</span><span class="sxs-lookup"><span data-stu-id="0dfde-102">This class is intended to be inherited by a user class that provides specific events to be used for ETW.</span></span> <span data-ttu-id="0dfde-103"><xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> Metody są wywoływane w celu rejestrowania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-103">The <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> methods are called to log the events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0dfde-104">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="0dfde-105">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="0dfde-106">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> method in Class metoda `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="0dfde-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="0dfde-107">Aby usunąć ją pośrednio, użyj konstrukcją języka pierwszej klasy takiej jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0dfde-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="0dfde-108">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="0dfde-109">Podstawowe funkcje <xref:System.Diagnostics.Tracing.EventSource> są wystarczające dla większości aplikacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-109">The basic functionality of <xref:System.Diagnostics.Tracing.EventSource> is sufficient for most applications.</span></span>  <span data-ttu-id="0dfde-110">Jeśli chcesz, aby mieć większą kontrolę nad manifestu ETW, który jest tworzony, możesz zastosować <xref:System.Diagnostics.Tracing.EventAttribute> atrybutu do metody.</span><span class="sxs-lookup"><span data-stu-id="0dfde-110">If you want more control over the ETW manifest that is created, you can apply the <xref:System.Diagnostics.Tracing.EventAttribute> attribute to the methods.</span></span> <span data-ttu-id="0dfde-111">Aplikacje źródła zdarzeń zaawansowane, jest możliwe, przechwytywać poleceń wysyłanych do źródła zdarzeń pochodnej i zmienić ustawienia filtrowania lub spowodować, że akcje (takie jak zrzucanie struktury danych) do wykonania przez inheritor.</span><span class="sxs-lookup"><span data-stu-id="0dfde-111">For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</span></span>  <span data-ttu-id="0dfde-112">Źródło zdarzenia można aktywować za pomocą kontrolerów Windows ETW, takiego jak narzędzie Logman natychmiast.</span><span class="sxs-lookup"><span data-stu-id="0dfde-112">An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</span></span>  <span data-ttu-id="0dfde-113">Jest również możliwe programowo kontroli i przechwytywać wysyłający dane.</span><span class="sxs-lookup"><span data-stu-id="0dfde-113">It is also possible to programmatically control and intercept the data dispatcher.</span></span>  <span data-ttu-id="0dfde-114"><xref:System.Diagnostics.Tracing.EventListener> Klasa udostępnia dodatkowe funkcje.</span><span class="sxs-lookup"><span data-stu-id="0dfde-114">The <xref:System.Diagnostics.Tracing.EventListener> class provides additional functionality.</span></span>  
  
 <span data-ttu-id="0dfde-115">Począwszy od [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> zapewnia kanałów pomocy technicznej, a niektóre z reguł sprawdzania poprawności źródła zdarzeń zostały złagodzone.</span><span class="sxs-lookup"><span data-stu-id="0dfde-115">Starting with [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> provides channel support and some of the event source validation rules have been relaxed.</span></span> <span data-ttu-id="0dfde-116">Oznacza to:</span><span class="sxs-lookup"><span data-stu-id="0dfde-116">This means:</span></span>  
  
-   <span data-ttu-id="0dfde-117"><xref:System.Diagnostics.Tracing.EventSource> typy teraz mogą implementować interfejsów.</span><span class="sxs-lookup"><span data-stu-id="0dfde-117"><xref:System.Diagnostics.Tracing.EventSource> types may now implement interfaces.</span></span> <span data-ttu-id="0dfde-118">Umożliwia to używanie typów źródła zdarzeń w systemach Zaawansowane rejestrowanie, które umożliwiają definiowanie wspólny cel rejestrowania interfejsów.</span><span class="sxs-lookup"><span data-stu-id="0dfde-118">This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</span></span>  
  
-   <span data-ttu-id="0dfde-119">Wprowadzono pojęcie narzędzie typu źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-119">The concept of a utility event source type has been introduced.</span></span> <span data-ttu-id="0dfde-120">Ta funkcja umożliwia udostępnianie kodu między wiele typów źródła zdarzeń w projekcie w celu umożliwienia scenariuszy takich zoptymalizowane pod kątem <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="0dfde-120">This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads.</span></span>  
  
 <span data-ttu-id="0dfde-121">Wersja dla <xref:System.Diagnostics.Tracing.EventSource> przeznaczonych do klasy, która zapewnia obsługę funkcji, takich jak kanał, możesz [!INCLUDE[net_v451](~/includes/net-v451-md.md)] lub wcześniej, zobacz [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span><span class="sxs-lookup"><span data-stu-id="0dfde-121">For a version of the <xref:System.Diagnostics.Tracing.EventSource> class that provides features such as channel support you are targeting [!INCLUDE[net_v451](~/includes/net-v451-md.md)] or earlier, see [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0dfde-122">W poniższym przykładzie przedstawiono proste wdrażanie <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="0dfde-122">The following example shows a simple implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTraceSmall#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtracesmall/cs/program.cs#1)]
 [!code-vb[ETWTraceSmall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtracesmall/vb/program.vb#1)]  
  
 <span data-ttu-id="0dfde-123">W poniższym przykładzie przedstawiono bardziej złożonych implementacji <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="0dfde-123">The following example shows a more complex implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#1)]
 [!code-vb[ETWTrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0dfde-124">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0dfde-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-125">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-125">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-126">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-126">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (bool throwOnEventWriteErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool throwOnEventWriteErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (throwOnEventWriteErrors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(bool throwOnEventWriteErrors);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : bool -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource throwOnEventWriteErrors" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwOnEventWriteErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="throwOnEventWriteErrors">
          <span data-ttu-id="0dfde-127">
            <see langword="true" /> Aby zgłosić wyjątek po wystąpieniu błędu w kodzie podstawowym Windows; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-127">
              <see langword="true" /> to throw an exception when an error occurs in the underlying Windows code; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-128">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy i określa, czy należy zgłosić wyjątek po wystąpieniu błędu w kodzie podstawowym Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-128">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : System.Diagnostics.Tracing.EventSourceSettings -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="0dfde-129">Bitowa kombinacja wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane do źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-129">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-130">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy przy użyciu ustawienia konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-130">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-131">Określanie `settings` podczas <xref:System.Diagnostics.Tracing.EventSource> jest konstruowany umożliwia określenie, czy zdarzenia są zapisywane w formacie samoopisujące lub na podstawie manifestu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-131">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="0dfde-132">Ponadto można określić, czy wyjątek powinien być wywoływany w przypadku, gdy wystąpi błąd podczas zapisywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-132">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource eventSourceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="0dfde-133">Nazwa do zastosowania do źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-133">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="0dfde-134">Nie może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-134">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-135">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-135">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0dfde-136">
            <paramref name="eventSourceName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-136">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : System.Diagnostics.Tracing.EventSourceSettings * string[] -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (settings, traits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="0dfde-137">Bitowa kombinacja wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane do źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-137">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="0dfde-138">Pary klucz wartość, które określają cech dla źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-138">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> ma być używany ze zdarzeniami bez umowy, które zawierają określone ustawienia i cech.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-139">Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> to be used with non-contract events that contains the specified settings and traits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-140">Cechy Podaj dodatkowe informacje dotyczące zdarzenia, a także będą interpretowane przez odbiornik zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-140">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="0dfde-141">Cechy są określone jako pary klucz wartość, a jeśli nie zostanie określony w parach, wystąpi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="0dfde-141">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="0dfde-142">Możesz pobrać cechę, przekazując klucz do <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, metoda.</span><span class="sxs-lookup"><span data-stu-id="0dfde-142">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="0dfde-143">Określanie `settings` podczas <xref:System.Diagnostics.Tracing.EventSource> jest konstruowany umożliwia określenie, czy zdarzenia są zapisywane w formacie samoopisujące lub na podstawie manifestu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-143">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="0dfde-144">Ponadto można określić, czy wyjątek powinien być wywoływany w przypadku, gdy wystąpi błąd podczas zapisywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-144">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0dfde-145">
            <paramref name="traits" /> nie jest określony w pary klucz wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-145">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string * System.Diagnostics.Tracing.EventSourceSettings -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (eventSourceName, config)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="0dfde-146">Nazwa do zastosowania do źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-146">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="0dfde-147">Nie może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-147">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="0dfde-148">Bitowa kombinacja wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane do źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-148">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-149">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy o określonej nazwie i ustawień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-149">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name and settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-150">Określanie `settings` podczas <xref:System.Diagnostics.Tracing.EventSource> jest konstruowany umożliwia określenie, czy zdarzenia są zapisywane w formacie samoopisujące lub na podstawie manifestu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-150">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="0dfde-151">Ponadto można określić, czy wyjątek powinien być wywoływany w przypadku, gdy wystąpi błąd podczas zapisywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-151">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0dfde-152">
            <paramref name="eventSourceName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-152">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string * System.Diagnostics.Tracing.EventSourceSettings * string[] -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (eventSourceName, config, traits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="0dfde-153">Nazwa do zastosowania do źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-153">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="0dfde-154">Nie może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-154">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="0dfde-155">Bitowa kombinacja wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane do źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-155">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="0dfde-156">Pary klucz wartość, które określają cech dla źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-156">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-157">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy przy użyciu ustawienia konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-157">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-158">Cechy Podaj dodatkowe informacje dotyczące zdarzenia, a także będą interpretowane przez odbiornik zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-158">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="0dfde-159">Cechy są określone jako pary klucz wartość, a jeśli nie zostanie określony w parach, wystąpi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="0dfde-159">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="0dfde-160">Możesz pobrać cechę, przekazując klucz do <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, metoda.</span><span class="sxs-lookup"><span data-stu-id="0dfde-160">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="0dfde-161">Określanie `config` podczas <xref:System.Diagnostics.Tracing.EventSource> jest konstruowany umożliwia określenie, czy zdarzenia są zapisywane w formacie samoopisujące lub na podstawie manifestu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-161">Specifying `config` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="0dfde-162">Ponadto można określić, czy wyjątek powinien być wywoływany w przypadku, gdy wystąpi błąd podczas zapisywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-162">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0dfde-163">
            <paramref name="eventSourceName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-163">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0dfde-164">
            <paramref name="traits" /> nie jest określony w pary klucz wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-164">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConstructionException">
      <MemberSignature Language="C#" Value="public Exception ConstructionException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConstructionException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConstructionException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionException : Exception" Usage="System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-165">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-165">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="0dfde-166">Pobiera każdy wyjątek, który został zgłoszony podczas konstruowania źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-166">Gets any exception that was thrown during the construction of the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0dfde-167">Wyjątek, który został wygenerowany podczas konstruowania źródła zdarzeń lub <see langword="null" /> Jeśli żaden wyjątek został zgłoszony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-167">The exception that was thrown during the construction of the event source, or <see langword="null" /> if no exception was thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-168"><xref:System.Diagnostics.Tracing.EventSource> Konstruktory nie zgłaszają wyjątki.</span><span class="sxs-lookup"><span data-stu-id="0dfde-168"><xref:System.Diagnostics.Tracing.EventSource> constructors do not throw exceptions.</span></span> <span data-ttu-id="0dfde-169">Zamiast tego każdy wyjątek, który jest generowany jest przypisany do <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> właściwości i rejestrowane przez <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="0dfde-169">Instead, any exception that is thrown is assigned to the <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> property and logged by the <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static Guid CurrentThreadActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid CurrentThreadActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThreadActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid CurrentThreadActivityId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentThreadActivityId : Guid" Usage="System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.5;netstandard-1.6">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netstandard-1.2;netstandard-1.3;netstandard-1.4">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-170">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-170">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="0dfde-171">Pobiera identyfikator działanie bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-171">Gets the activity ID of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0dfde-172">Identyfikator działania bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-172">The activity ID of the current thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-173">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-173">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-174">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-174">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-175">Wywołaj `Dispose` po zakończeniu przy użyciu <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="0dfde-175">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="0dfde-176">`Dispose` Pozostawia metoda <xref:System.Diagnostics.Tracing.EventSource> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="0dfde-176">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventSource> in an unusable state.</span></span> <span data-ttu-id="0dfde-177">Po wywołaniu `Dispose`, trzeba zwolnić wszystkie odwołania do <xref:System.Diagnostics.Tracing.EventSource> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Diagnostics.Tracing.EventSource> zajmowaną przez wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="0dfde-177">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventSource> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventSource> was occupying.</span></span>  
  
 <span data-ttu-id="0dfde-178">Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="0dfde-178">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0dfde-179">Zawsze wywołuj `Dispose` przed publikacją swoje ostatnie odwołanie do <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="0dfde-179">Always call `Dispose` before you release your last reference to the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="0dfde-180">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Diagnostics.Tracing.EventSource> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="0dfde-180">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Diagnostics.Tracing.EventSource> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0dfde-181">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-181">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-182">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-182">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-183">Ta metoda jest wywoływana przez publiczną `Dispose()` metody i `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="0dfde-183">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="0dfde-184">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-184">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0dfde-185">`Finalize` wywołuje `Dispose` z `disposing` równa `false`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-185">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0dfde-186">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.Diagnostics.Tracing.EventSource> odwołania.</span><span class="sxs-lookup"><span data-stu-id="0dfde-186">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.Tracing.EventSource> references.</span></span> <span data-ttu-id="0dfde-187">Ta metoda wywołuje `Dispose()` metoda każdego obiektu, do którego istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="0dfde-187">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0dfde-188">
            <para>
              <see langword="Dispose" /> może być wywoływana wiele razy przez inne obiekty. Podczas zastępowania <see langword="Dispose(Boolean)" />, nie należy odwoływać się do obiektów, które zostały wcześniej zlikwidowane we wcześniejszej wywołanie metody Dispose <see langword="Dispose" />. Aby uzyskać więcej informacji o sposobie wdrażania <see langword="Dispose(Boolean)" />, zobacz [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see langword="Finalize" />, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-188">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EventCommandExecuted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventCommandExecuted As EventHandler(Of EventCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventCommandEventArgs ^&gt; ^ EventCommandExecuted;" />
      <MemberSignature Language="F#" Value="member this.EventCommandExecuted : EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; " Usage="member this.EventCommandExecuted : System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-189">Występuje, gdy polecenie pochodzi z odbiornik zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-189">Occurs when a command comes from an event listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EventSource ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="eventSource.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-190">Umożliwia <see cref="T:System.Diagnostics.Tracing.EventSource" /> obiektu próbę zwolnić zasoby i wykonywać inne operacje oczyszczania, zanim obiekt jest odzyskiwane przez wyrzucanie elementów bezużytecznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-190">Allows the <see cref="T:System.Diagnostics.Tracing.EventSource" /> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateManifest">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-191">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-191">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="F#" Value="static member GenerateManifest : Type * string -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GenerateManifest (eventSourceType, assemblyPathToIncludeInManifest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="0dfde-192">Typ źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-192">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="0dfde-193">Ścieżka do pliku zestawu (.dll), które mają zostać objęte [dostawcy](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) elemencie manifestu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-193">The path to the assembly file (.dll) to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-194">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-194">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-195">Ciąg danych XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-195">The XML data string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-196">Zobacz informacje na temat schematu XML manifestu zdarzenia [schematu manifestu zdarzeń](http://go.microsoft.com/fwlink/?LinkId=228077) w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="0dfde-196">The information about the XML schema for the event manifest, see [Event Manifest Schema](http://go.microsoft.com/fwlink/?LinkId=228077) in the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest, valuetype System.Diagnostics.Tracing.EventManifestOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String, flags As EventManifestOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest, System::Diagnostics::Tracing::EventManifestOptions flags);" />
      <MemberSignature Language="F#" Value="static member GenerateManifest : Type * string * System.Diagnostics.Tracing.EventManifestOptions -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GenerateManifest (eventSourceType, assemblyPathToIncludeInManifest, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
        <Parameter Name="flags" Type="System.Diagnostics.Tracing.EventManifestOptions" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="0dfde-197">Typ źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-197">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="0dfde-198">Ścieżka do zestawu (.dll) plik do uwzględnienia w [dostawcy](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) elemencie manifestu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-198">The path to the assembly file (.dll) file to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="0dfde-199">Bitowa kombinacja wartości wyliczenia, które określają, jak jest generowany manifestu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-199">A bitwise combination of the enumeration values that specify how the manifest is generated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-200">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-200">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-201">Ciąg danych XML lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-201">The XML data string or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-202">Jeśli `flags` Określa `OnlyIfNeededForRegistration` i `eventSourceType` określonego nie wymaga jawnej rejestracji <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-202">If `flags` specifies `OnlyIfNeededForRegistration` and the `eventSourceType` specified does not require explicit registration, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGuid (eventSourceType As Type) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetGuid(Type ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="static member GetGuid : Type -&gt; Guid" Usage="System.Diagnostics.Tracing.EventSource.GetGuid eventSourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="0dfde-203">Typ źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-203">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-204">Pobiera unikatowy identyfikator dla tej implementacji źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-204">Gets the unique identifier for this implementation of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-205">Unikatowy identyfikator dla tego typu źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-205">A unique identifier for this event source type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (eventSourceType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="static member GetName : Type -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GetName eventSourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="0dfde-206">Typ źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-206">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-207">Pobiera przyjazną nazwę źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-207">Gets the friendly name of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-208">Przyjazna nazwa źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-208">The friendly name of the event source.</span>
          </span>
          <span data-ttu-id="0dfde-209">Wartość domyślna to prostą nazwę klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-209">The default is the simple name of the class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSources">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt; GetSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Diagnostics.Tracing.EventSource&gt; GetSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSources () As IEnumerable(Of EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Tracing::EventSource ^&gt; ^ GetSources();" />
      <MemberSignature Language="F#" Value="static member GetSources : unit -&gt; seq&lt;System.Diagnostics.Tracing.EventSource&gt;" Usage="System.Diagnostics.Tracing.EventSource.GetSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-210">Pobiera migawkę wszystkich źródeł zdarzeń dla domeny aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-210">Gets a snapshot of all the event sources for the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-211">Wyliczenie wszystkich źródeł zdarzeń w domenie aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-211">An enumeration of all the event sources in the application domain.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrait">
      <MemberSignature Language="C#" Value="public string GetTrait (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTrait(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrait (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTrait(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetTrait : string -&gt; string" Usage="eventSource.GetTrait key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0dfde-212">Klucz cechy, które można pobrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-212">The key of the trait to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-213">Pobiera wartość cechy skojarzone z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-213">Gets the trait value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-214">Wartość cechy skojarzona z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-214">The trait value associated with the specified key.</span>
          </span>
          <span data-ttu-id="0dfde-215">Jeśli klucz nie zostanie znaleziony, zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-215">If the key is not found, returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-216">Cechy Podaj dodatkowe informacje dotyczące zdarzenia, a także będą interpretowane przez odbiornik zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-216">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="0dfde-217">Cechy są określone jako pary klucz wartość, gdy jest konstruowany źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-217">Traits are specified as key-value pairs when the event source is constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Guid : Guid" Usage="System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-218">Unikatowy identyfikator dla źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-218">The unique identifier for the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0dfde-219">Unikatowy identyfikator dla źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-219">A unique identifier for the event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEnabled">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-220">Określa, czy bieżące źródło zdarzenia jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-220">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : unit -&gt; bool" Usage="eventSource.IsEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-221">Określa, czy bieżące źródło zdarzenia jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-221">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-222">
            <see langword="true" /> Jeśli włączono bieżące źródło zdarzenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-222">
              <see langword="true" /> if the current event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords -&gt; bool" Usage="eventSource.IsEnabled (level, keywords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="0dfde-223">Poziom źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-223">The level of the event source.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="0dfde-224">Słowo kluczowe źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-224">The keyword of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-225">Określa, czy bieżące źródło zdarzenia, który ma określony poziom i słowo kluczowe jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-225">Determines whether the current event source that has the specified level and keyword is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-226">
            <see langword="true" /> Jeśli włączono źródło zdarzenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-226">
              <see langword="true" /> if the event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-227">Wynikiem tej metody jest tylko przybliżeniem tego, czy konkretne zdarzenie jest aktywny.</span><span class="sxs-lookup"><span data-stu-id="0dfde-227">The result of this method is only an approximation of whether a particular event is active.</span></span>  <span data-ttu-id="0dfde-228">Użyj go, aby uniknąć kosztownych obliczenia dotyczące rejestrowania w momencie, gdy rejestracja jest wyłączona.</span><span class="sxs-lookup"><span data-stu-id="0dfde-228">Use it to avoid expensive computation for logging when logging is disabled.</span></span>   <span data-ttu-id="0dfde-229">Źródła zdarzeń może mieć dodatkowe filtrowania, która określa jego działania.</span><span class="sxs-lookup"><span data-stu-id="0dfde-229">Event sources may have additional filtering that determines their activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords, valuetype System.Diagnostics.Tracing.EventChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords, channel As EventChannel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords, System::Diagnostics::Tracing::EventChannel channel);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords * System.Diagnostics.Tracing.EventChannel -&gt; bool" Usage="eventSource.IsEnabled (level, keywords, channel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="channel" Type="System.Diagnostics.Tracing.EventChannel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="0dfde-230">Poziom zdarzenia do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-230">The event level to check.</span>
          </span>
          <span data-ttu-id="0dfde-231">Źródłem zdarzenia będą uznawane za włączone, gdy jego poziom jest większa niż lub równa <c>poziom</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-231">An event source will be considered enabled when its level is greater than or equal to <c>level</c>.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="0dfde-232">Słowa kluczowe zdarzenia do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-232">The event keywords to check.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="0dfde-233">Kanał zdarzenia do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-233">The event channel to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-234">Określa, czy bieżące źródło zdarzeń jest włączony dla zdarzeń o określonym poziomie, słowa kluczowe i kanału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-234">Determines whether the current event source is enabled for events with the specified level, keywords and channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-235">
            <see langword="true" /> Jeśli źródło zdarzenia jest włączona na poziomie określonego zdarzenia, słowa kluczowe i kanału w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-235">
              <see langword="true" /> if the event source is enabled for the specified event level, keywords and channel; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0dfde-236">Wynikiem tej metody jest tylko przybliżeniem tego, czy konkretne zdarzenie jest aktywny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-236">The result of this method is only an approximation of whether a particular event is active.</span>
          </span>
          <span data-ttu-id="0dfde-237">Użyj go, aby uniknąć kosztownych obliczenia dotyczące rejestrowania w momencie, gdy rejestracja jest wyłączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-237">Use it to avoid expensive computation for logging when logging is disabled.</span>
          </span>
          <span data-ttu-id="0dfde-238">Źródła zdarzeń może mieć dodatkowe filtrowania, która określa jego działania...</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-238">Event sources may have additional filtering that determines their activity..</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-239">Jeśli</span><span class="sxs-lookup"><span data-stu-id="0dfde-239">If the</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.Tracing.EventSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-240">Przyjazna nazwa klasy, która pochodzi ze źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-240">The friendly name of the class that is derived from the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0dfde-241">Przyjazna nazwa klasy pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-241">The friendly name of the derived class.</span>
          </span>
          <span data-ttu-id="0dfde-242">Wartość domyślna to prostą nazwę klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-242">The default is the simple name of the class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEventCommand(class System.Diagnostics.Tracing.EventCommandEventArgs command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEventCommand (command As EventCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEventCommand(System::Diagnostics::Tracing::EventCommandEventArgs ^ command);" />
      <MemberSignature Language="F#" Value="abstract member OnEventCommand : System.Diagnostics.Tracing.EventCommandEventArgs -&gt; unit&#xA;override this.OnEventCommand : System.Diagnostics.Tracing.EventCommandEventArgs -&gt; unit" Usage="eventSource.OnEventCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="0dfde-243">Argumenty dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-243">The arguments for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-244">Wywołuje się, gdy bieżące źródło zdarzenia jest aktualizowana przez kontroler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-244">Called when the current event source is updated by the controller.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary&lt;string,string&gt; commandArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendCommand(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventCommand command, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; commandArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendCommand(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventCommand command, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ commandArguments);" />
      <MemberSignature Language="F#" Value="static member SendCommand : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventCommand * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SendCommand (eventSource, command, commandArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommand" />
        <Parameter Name="commandArguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="0dfde-245">Źródło zdarzenia do wysłania polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-245">The event source to send the command to.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="0dfde-246">Polecenie zdarzenia do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-246">The event command to send.</span>
          </span>
        </param>
        <param name="commandArguments">
          <span data-ttu-id="0dfde-247">Argumenty dla polecenia zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-247">The arguments for the event command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-248">Wysyła polecenie do źródła określonego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-248">Sends a command to a specified event source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-249">Wywoływanie <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> przekazuje polecenie, aby <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="0dfde-249">Calling <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> forwards the command to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback.</span></span>  <span data-ttu-id="0dfde-250">Co <xref:System.Diagnostics.Tracing.EventSource> jest za pomocą polecenia i argumentów jest specyficzny dla źródła zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0dfde-250">What the <xref:System.Diagnostics.Tracing.EventSource> does with the command and its arguments is specific to the event source.</span></span>  <span data-ttu-id="0dfde-251">Polecenie i argumenty wiersza polecenia są przekazywane do <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> wywołania zwrotnego źródła określonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0dfde-251">The command and command arguments are passed to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback of the specified event source.</span></span>   <span data-ttu-id="0dfde-252">Jeśli to możliwe bieżące źródło zdarzeń nie powinna wpłynąć na inne odbiorniki zdarzeń filtrowania zdarzeń; jednak może to nie być możliwe w przypadku polecenia powoduje, że wyrzucania elementów bezużytecznych, opróżniania systemu lub globalnego działania.</span><span class="sxs-lookup"><span data-stu-id="0dfde-252">If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCurrentThreadActivityId">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-253">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-253">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="0dfde-254">Ustawia identyfikator działania w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-254">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId);" />
      <MemberSignature Language="F#" Value="static member SetCurrentThreadActivityId : Guid -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId activityId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="0dfde-255">Nowy identyfikator działanie bieżącego wątku lub <see cref="F:System.Guid.Empty" /> do wskazania, czy pracy w bieżącym wątku nie jest skojarzony z wszelkich działań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-255">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-256">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-256">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="0dfde-257">Ustawia identyfikator działania w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-257">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-258">Wywoływanie <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> metoda Ustawia identyfikator działania na podstawie na wątek.</span><span class="sxs-lookup"><span data-stu-id="0dfde-258">Calling the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> method sets the activity ID on a per-thread basis.</span></span> <span data-ttu-id="0dfde-259">Wszystkie zdarzenia w wątku będą miały ten identyfikator działania, aż nowe działanie jest uruchomiona na tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="0dfde-259">All events on the thread will have that activity ID until a new activity is started on the same thread.</span></span>  
  
 <span data-ttu-id="0dfde-260">Ta metoda jest wywoływana tylko przez bibliotek, które Zarządzanie własnych wątków.</span><span class="sxs-lookup"><span data-stu-id="0dfde-260">This method is called only by libraries that manage their own threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId, [out] valuetype System.Guid&amp; oldActivityThatWillContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid, ByRef oldActivityThatWillContinue As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId, [Runtime::InteropServices::Out] Guid % oldActivityThatWillContinue);" />
      <MemberSignature Language="F#" Value="static member SetCurrentThreadActivityId : Guid *  -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId (activityId, oldActivityThatWillContinue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
        <Parameter Name="oldActivityThatWillContinue" Type="System.Guid" RefType="out" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="0dfde-261">Nowy identyfikator działanie bieżącego wątku lub <see cref="F:System.Guid.Empty" /> do wskazania, czy pracy w bieżącym wątku nie jest skojarzony z wszelkich działań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-261">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <param name="oldActivityThatWillContinue">
          <span data-ttu-id="0dfde-262">Po powrocie z tej metody zawiera poprzedniej identyfikator działania w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-262">When this method returns, contains the previous activity ID on the current thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-263">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-263">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="0dfde-264">Ustawia identyfikator działania w bieżącym wątku, a następnie zwraca identyfikator poprzedniego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-264">Sets the activity ID on the current thread, and returns the previous activity ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-265">Możesz wywołać <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> metodę, aby tymczasowo zastąpić bieżącego wątku, identyfikator działania nowego identyfikatora działania.</span><span class="sxs-lookup"><span data-stu-id="0dfde-265">You can call the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> method to temporarily overwrite the current thread's activity ID with a new activity ID.</span></span> <span data-ttu-id="0dfde-266">Następnie należy przywrócić poprzednich identyfikator działania przez przekazanie `oldActivityThatWillContinue` argument <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> metody.</span><span class="sxs-lookup"><span data-stu-id="0dfde-266">You must then restore the previous activity ID by passing the `oldActivityThatWillContinue` argument to the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Tracing.EventSourceSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As EventSourceSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Tracing::EventSourceSettings Settings { System::Diagnostics::Tracing::EventSourceSettings get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Diagnostics.Tracing.EventSourceSettings" Usage="System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventSourceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-267">Pobiera ustawienia stosowane do tego źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-267">Gets the settings applied to this event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0dfde-268">Ustawienia stosowane do tego źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-268">The settings applied to this event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventSource.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-269">Pobiera reprezentację ciągu bieżącego wystąpienia źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-269">Obtains a string representation of the current event source instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0dfde-270">Nazwa i unikatowy identyfikator, które identyfikują bieżące źródło zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-270">The name and unique identifier that identify the current event source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-271">Zapisuje zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-271">Writes an event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="eventSource.Write eventName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="0dfde-272">Nazwa zdarzenia do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-272">The name of the event to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-273">Zapisuje zdarzenie bez pól, ale przy użyciu określonej nazwy i domyślne opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-273">Writes an event without fields, but with the specified name and default options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0dfde-274">
            <paramref name="eventName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-274">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String, options As EventSourceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options);" />
      <MemberSignature Language="F#" Value="member this.Write : string * System.Diagnostics.Tracing.EventSourceOptions -&gt; unit" Usage="eventSource.Write (eventName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="0dfde-275">Nazwa zdarzenia do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-275">The name of the event to write.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0dfde-276">Opcje, takie jak poziom, słowa kluczowe i kod operacji dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-276">The options such as level, keywords and operation code for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-277">Zapisuje zdarzenie bez pól, ale o określonej nazwie i opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-277">Writes an event without fields, but with the specified name and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0dfde-278">
            <paramref name="eventName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-278">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, T data);" />
      <MemberSignature Language="F#" Value="member this.Write : string * 'T -&gt; unit" Usage="eventSource.Write (eventName, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0dfde-279">Typ, który definiuje zdarzenia i skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-279">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="0dfde-280">Ten typ musi być typu anonimowego lub oznaczona za pomocą <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-280">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="0dfde-281">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-281">The name of the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0dfde-282">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-282">The event data.</span>
          </span>
          <span data-ttu-id="0dfde-283">Ten typ musi być typu anonimowego lub oznaczona za pomocą <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-283">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-284">Zapisuje zdarzenie o określonej nazwie i danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-284">Writes an event with the specified name and data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-285">Jeśli `eventName` jest `null`, nazwę wydarzenia automatycznie jest tworzony na podstawie danych zdarzeń typu firmy T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) lub określana na podstawie nazwy typu `T`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-285">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="0dfde-286">Publicznie wystąpienia właściwości `data` będą zapisywane cyklicznie, aby utworzyć pól zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-286">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, options As EventSourceOptions, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options, T data);" />
      <MemberSignature Language="F#" Value="member this.Write : string * System.Diagnostics.Tracing.EventSourceOptions * 'T -&gt; unit" Usage="eventSource.Write (eventName, options, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0dfde-287">Typ, który definiuje zdarzenia i skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-287">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="0dfde-288">Ten typ musi być typu anonimowego lub oznaczona za pomocą <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-288">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="0dfde-289">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-289">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0dfde-290">Opcje zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-290">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0dfde-291">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-291">The event data.</span>
          </span>
          <span data-ttu-id="0dfde-292">Ten typ musi być typu anonimowego lub oznaczona za pomocą <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-292">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-293">Zapisuje zdarzenie o określonej nazwie, dane zdarzeń i opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-293">Writes an event with the specified name, event data and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-294">Jeśli `eventName` jest `null`, nazwę wydarzenia automatycznie jest tworzony na podstawie danych zdarzeń typu firmy T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) lub określana na podstawie nazwy typu `T`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-294">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="0dfde-295">Publicznie wystąpienia właściwości `data` będą zapisywane cyklicznie, aby utworzyć pól zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-295">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, T % data);" />
      <MemberSignature Language="F#" Value="member this.Write : string *  *  -&gt; unit" Usage="eventSource.Write (eventName, options, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" RefType="ref" />
        <Parameter Name="data" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0dfde-296">Typ, który definiuje zdarzenia i skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-296">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="0dfde-297">Ten typ musi być typu anonimowego lub oznaczona za pomocą <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-297">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="0dfde-298">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-298">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0dfde-299">Opcje zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-299">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0dfde-300">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-300">The event data.</span>
          </span>
          <span data-ttu-id="0dfde-301">Ten typ musi być typu anonimowego lub oznaczona za pomocą <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-301">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-302">Zapisuje zdarzenie o określonej nazwie, opcji i dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-302">Writes an event with the specified name, options and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-303">Jeśli `eventName` jest `null`, nazwę wydarzenia automatycznie jest tworzony na podstawie danych zdarzeń typu firmy T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) lub określana na podstawie nazwy typu `T`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-303">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="0dfde-304">Publicznie wystąpienia właściwości `data` będą zapisywane cyklicznie, aby utworzyć pól zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-304">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, valuetype System.Guid&amp; activityId, valuetype System.Guid&amp; relatedActivityId, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef activityId As Guid, ByRef relatedActivityId As Guid, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, Guid % activityId, Guid % relatedActivityId, T % data);" />
      <MemberSignature Language="F#" Value="member this.Write : string *  *  *  *  -&gt; unit" Usage="eventSource.Write (eventName, options, activityId, relatedActivityId, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" RefType="ref" />
        <Parameter Name="activityId" Type="System.Guid" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid" RefType="ref" />
        <Parameter Name="data" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0dfde-305">Typ, który definiuje zdarzenia i skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-305">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="0dfde-306">Ten typ musi być typu anonimowego lub oznaczona za pomocą <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-306">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="0dfde-307">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-307">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0dfde-308">Opcje zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-308">The event options.</span>
          </span>
        </param>
        <param name="activityId">
          <span data-ttu-id="0dfde-309">Identyfikator działania skojarzonego ze zdarzeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-309">The ID of the activity associated with the event.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="0dfde-310">Identyfikator skojarzonego działania lub <see cref="F:System.Guid.Empty" /> Jeśli istnieje żadne skojarzone działanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-310">The ID of an associated activity, or <see cref="F:System.Guid.Empty" /> if there is no associated activity.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0dfde-311">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-311">The event data.</span>
          </span>
          <span data-ttu-id="0dfde-312">Ten typ musi być typu anonimowego lub oznaczona za pomocą <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-312">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-313">Zapisuje zdarzenie o określonej nazwie, opcje, pokrewne działania i dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-313">Writes an event with the specified name, options, related activity and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-314">Jeśli `eventName` jest `null`, nazwę wydarzenia automatycznie jest tworzony na podstawie danych zdarzeń typu firmy T (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) lub określana na podstawie nazwy typu `T`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-314">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="0dfde-315">Publicznie wystąpienia właściwości `data` będą zapisywane cyklicznie, aby utworzyć pól zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-315">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0dfde-316">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty opcjonalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-316">Writes an event by using the provided event identifier and optional arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-317">`WriteEvent` Metoda zapewnia przeciążenia przy użyciu kombinacji argumenty typu string i integer.</span><span class="sxs-lookup"><span data-stu-id="0dfde-317">The `WriteEvent` method provides overloads with combinations of string and integer arguments.</span></span> <span data-ttu-id="0dfde-318">Jeśli żadna z tych kombinacji parametrów połączenia, kompilator używa <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> przeciążenia, które jest znacznie wolniejsze niż inne przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="0dfde-318">If none of these combinations match the parameters for the call, the compiler uses the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload, which is considerably slower than the other overloads.</span></span> <span data-ttu-id="0dfde-319">Zobacz stronę przeciążenia, aby uzyskać szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="0dfde-319">See the overload page for details.</span></span>  
  
 <span data-ttu-id="0dfde-320">We wszystkich przypadkach `eventid` parametru powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-320">In all cases, the `eventid` parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-321">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-321">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-322">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-322">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-323">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-323">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-324">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-324">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 <span data-ttu-id="0dfde-325">Można również utworzyć niestandardowe przeciążenia przy użyciu <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="0dfde-325">You can also create a custom overload by using the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int -&gt; unit" Usage="eventSource.WriteEvent eventId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-326">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-326">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-327">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-327">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-328">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-328">Writes an event by using the provided event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-329">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-329">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-330">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-330">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-331">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-331">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-332">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-332">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-333">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-333">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="0dfde-334">Poniższy przykład pokazuje, jak używać tego przeciążenia metody, można zapisać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0dfde-334">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="0dfde-335">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="0dfde-335">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, cli::array &lt;System::Byte&gt; ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * byte[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-336">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-336">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-337">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-337">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-338">Argumentu w postaci tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-338">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-339">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-339">Writes an event by using the provided event identifier and byte array argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-340">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-340">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-341">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-341">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-342">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-342">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-343">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-343">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-344">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-344">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(byte[] arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-345">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-345">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-346">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-346">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-347">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-347">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-348">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 32-bitowych argumentów całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-348">Writes an event by using the provided event identifier and 32-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-349">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-349">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-350">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-350">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-351">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-351">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-352">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-352">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-353">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-353">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int  arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="0dfde-354">Poniższy przykład pokazuje, jak używać tego przeciążenia metody, można zapisać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0dfde-354">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="0dfde-355">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="0dfde-355">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]
 [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-356">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-356">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-357">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-357">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-358">64-bitowy argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-358">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-359">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 64-bitowych argumentów całkowitych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-359">Writes an event by using the provided event identifier and 64-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-360">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-360">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-361">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-361">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-362">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-362">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-363">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-363">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-364">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-364">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * obj[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-365">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-365">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-366">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-366">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="0dfde-367">Tablica obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-367">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-368">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i Tablica argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-368">Writes an event by using the provided event identifier and array of arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-369">Domyślnie kompilator wywołuje tego przeciążenia, jeśli parametry połączenia nie pasują do jednej z innych przeciążeń metody.</span><span class="sxs-lookup"><span data-stu-id="0dfde-369">By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</span></span> <span data-ttu-id="0dfde-370">To przeciążenie jest znacznie wolniejsze niż inne przeciążenia, ponieważ wykonuje następujące zadania:</span><span class="sxs-lookup"><span data-stu-id="0dfde-370">This overload is much slower than the other overloads, because it does the following:</span></span>  
  
1.  <span data-ttu-id="0dfde-371">Przydziela tablicy do przechowywania zmiennych argumentów.</span><span class="sxs-lookup"><span data-stu-id="0dfde-371">It allocates an array to hold the variable argument.</span></span>  
  
2.  <span data-ttu-id="0dfde-372">Rzuca każdego parametru do obiektu (co powoduje, że alokacji dla typów pierwotnych).</span><span class="sxs-lookup"><span data-stu-id="0dfde-372">It casts each parameter to an object (which causes allocations for primitive types).</span></span>  
  
3.  <span data-ttu-id="0dfde-373">Przypisuje te obiekty do tablicy.</span><span class="sxs-lookup"><span data-stu-id="0dfde-373">It assigns these objects to the array.</span></span>  
  
4.  <span data-ttu-id="0dfde-374">Wywołuje funkcję, która określa typ każdego argumentu, dzięki czemu może być serializowany dla funkcji ETW.</span><span class="sxs-lookup"><span data-stu-id="0dfde-374">It calls the function, which then determines the type of each argument so it can be serialized for ETW.</span></span>  
  
 <span data-ttu-id="0dfde-375">Wysokie koszty dla tego przeciążenia nie ma znaczenia śledzenia zdarzeń o małej ilości, ponieważ metoda jest używana tylko wtedy, gdy dostawca jest włączony.</span><span class="sxs-lookup"><span data-stu-id="0dfde-375">The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</span></span> <span data-ttu-id="0dfde-376">Jednak w przypadku dużej liczby zdarzeń, zmniejszenie wydajności mogą być znaczące.</span><span class="sxs-lookup"><span data-stu-id="0dfde-376">However, for high-volume events, the performance overhead can be significant.</span></span>  <span data-ttu-id="0dfde-377">Możesz uniknąć używania <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> dla dużej liczby ładunków przez utworzenie nowych, szybszych przeciążenia z <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="0dfde-377">You can avoid using <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> for high-volume payloads by creating a new, faster  overload with the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 <span data-ttu-id="0dfde-378">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-378">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-379">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-379">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-380">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-380">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-381">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-381">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-382">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-382">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-383">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-383">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-384">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-384">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-385">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-385">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-386">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-386">Writes an event by using the provided event identifier and string argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-387">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-387">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-388">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-388">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-389">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-389">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-390">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-390">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-391">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-391">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="0dfde-392">Poniższy przykład pokazuje, jak używać tego przeciążenia metody, można zapisać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="0dfde-392">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="0dfde-393">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="0dfde-393">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-394">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-394">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-395">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-395">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-396">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-396">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-397">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-397">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-398">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-398">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-399">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-399">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-400">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-400">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-401">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-401">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-402">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-402">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-403">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-403">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int arg1, int arg2, int arg3)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-404">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-404">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-405">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-405">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-406">Argument 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-406">A 32-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-407">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-407">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-408">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 32-bitową liczbę całkowitą i argumenty typu string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-408">Writes an event by using the provided event identifier and 32-bit integer and string arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, cli::array &lt;System::Byte&gt; ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * byte[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-409">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-409">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-410">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-410">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-411">Argument 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-411">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-412">Argumentu w postaci tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-412">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-413">Zapisuje dane zdarzeń przy użyciu określonego identyfikatora i 64-bitową liczbę całkowitą i argumentów tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-413">Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-414">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-414">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-415">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-415">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-416">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-416">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-417">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-417">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-418">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-418">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, Byte[] arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-419">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-419">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-420">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-420">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-421">64-bitowy argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-421">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-422">64-bitowy argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-422">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-423">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 64-bitowych argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-423">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-424">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-424">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-425">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-425">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-426">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-426">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-427">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-427">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-428">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-428">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-429">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-429">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-430">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-430">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-431">Argument 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-431">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-432">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-432">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-433">Zapisuje zdarzenie przy użyciu zdarzeń podany identyfikator, 64-bitową liczbę całkowitą i argumenty typu string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-433">Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-434">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-434">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-435">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-435">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-436">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-436">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-437">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-437">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-438">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-438">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, string arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-439">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-439">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-440">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-440">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-441">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-441">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-442">Argument liczby całkowitej 32-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-442">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-443">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-443">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-444">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-444">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-445">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-445">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-446">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-446">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-447">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-447">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-448">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-448">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, long arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-449">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-449">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-450">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-450">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-451">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-451">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-452">64-bitowy argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-452">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-453">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-453">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-454">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-454">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-455">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-455">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-456">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-456">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-457">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-457">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-458">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-458">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-459">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-459">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-460">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-460">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-461">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-461">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-462">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-462">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-463">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty typu string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-463">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-464">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-464">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-465">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-465">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-466">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-466">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-467">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-467">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-468">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-468">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-469">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-469">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-470">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-470">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-471">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-471">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-472">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-472">An integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="0dfde-473">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-473">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-474">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-474">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-475">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-475">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-476">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-476">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-477">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-477">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-478">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-478">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-479">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-479">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2, int64 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long, arg3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * int64 * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
        <Parameter Name="arg3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-480">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-480">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-481">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-481">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-482">64-bitowy argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-482">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-483">64-bitowy argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-483">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="0dfde-484">64-bitowy argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-484">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-485">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 64-bitowych argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-485">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-486">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-486">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-487">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-487">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-488">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-488">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-489">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-489">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-490">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-490">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2, int arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-491">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-491">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-492">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-492">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-493">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-493">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-494">Argument liczby całkowitej 32-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-494">A 32 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="0dfde-495">Argument liczby całkowitej 32-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-495">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-496">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-496">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-497">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-497">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-498">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-498">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-499">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-499">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-500">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-500">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-501">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-501">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String, arg3 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2, System::String ^ arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * string * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-502">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-502">The event identifier.</span>
          </span>
          <span data-ttu-id="0dfde-503">Ta wartość powinna być od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-503">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0dfde-504">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-504">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0dfde-505">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-505">A string argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="0dfde-506">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-506">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-507">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty typu string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-507">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-508">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-508">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-509">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-509">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-510">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-510">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-511">Podczas implementacji metody, która jest identyfikowana jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="0dfde-511">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="0dfde-512">Należy wywołać klasy bazowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metoda przekazywania <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metoda zaimplementowano podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-512">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventCore">
      <MemberSignature Language="C#" Value="protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventCore(int32 eventId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventCore(int eventId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" />
      <MemberSignature Language="F#" Value="member this.WriteEventCore : int * int * nativeptr&lt;System.Diagnostics.Tracing.EventSource.EventData&gt; -&gt; unit" Usage="eventSource.WriteEventCore (eventId, eventDataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="eventDataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-513">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-513">The event identifier.</span>
          </span>
        </param>
        <param name="eventDataCount">
          <span data-ttu-id="0dfde-514">Liczba elementów danych zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-514">The number of event data items.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0dfde-515">Struktura, która zawiera dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-515">The structure that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-516">Tworzy nową <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> przeciążenia przy użyciu identyfikatora podanego zdarzenia i dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-516">Creates a new <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> overload by using the provided event identifier and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-517">`eventid` powinna być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="0dfde-517">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="0dfde-518">Jeśli wystąpią błędy, można uzyskać więcej informacji na temat źródła błędu, sprawdzając w strumieniu wyjściowym debugera, jeśli masz debuger dołączony do procesu, wyzwalanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-518">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="0dfde-519">Można także wyszukać błędy zgłaszane w strumieniu zdarzeń ETW, jeśli masz ETW odbiornika źródła zdarzeń, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="0dfde-519">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="0dfde-520">Ta metoda chroniona pozwala użytkownikom na definiowanie nowych <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> przeciążenia, które są szybsze niż podana przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="0dfde-520">This protected method  enables users to define new <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads that are faster than the provided overloads.</span></span>   <span data-ttu-id="0dfde-521">Tworzenie też nowym przeciążeniem obejmuje niebezpieczny kod.</span><span class="sxs-lookup"><span data-stu-id="0dfde-521">Creating a new overload involves unsafe code.</span></span>  <span data-ttu-id="0dfde-522">Podstawowa procedura polega na tablicę deskryptory dane zdarzeń, która jest zgodna z liczbą elementów ładunku przydzielić stosu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-522">The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</span></span>   <span data-ttu-id="0dfde-523">Dla każdego elementu ładunku Ustaw prawidłowy rozmiar, a wartość w przypadku danych tablicy. Wywołaj <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> z zainicjowanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="0dfde-523">For each payload item, set the correct size and value in the event data array.Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> with the initialized array.</span></span>  
  
 <span data-ttu-id="0dfde-524">Poniższy przykład pokazuje, jak dodać <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> przeciążenia, które przyjmuje cztery argumenty.</span><span class="sxs-lookup"><span data-stu-id="0dfde-524">The following example shows how to add a <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload that accepts four arguments.</span></span> <span data-ttu-id="0dfde-525">Przykładem może być w przypadku rejestrowania zdarzeń, dzienniki ciągu i 3 liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="0dfde-525">An example would be if you have a logging event that logs a string and 3 integers.</span></span>  
  
```csharp  
  
[Event(1)]  
public void LogTime(string tag, int hour, int minute, int second)   
{  
    WriteEvent(1, tag, hour, minute, second);  
}  
  
```  
  
 <span data-ttu-id="0dfde-526">Można to zrobić bez wywoływania <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, ale będzie wolniejszy niż musi on być.</span><span class="sxs-lookup"><span data-stu-id="0dfde-526">You could do this without calling <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, but it would be slower than it needs to be.</span></span> <span data-ttu-id="0dfde-527">To, ponieważ używa odbicia i tablic do zorientować się, co należy zrobić.</span><span class="sxs-lookup"><span data-stu-id="0dfde-527">That is because it uses arrays and reflection to figure out what to do.</span></span> <span data-ttu-id="0dfde-528">Jeśli zalogujesz się one z dużą szybkością (> 1000 / s), może być warte wprowadzania szybkie pomocnika, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="0dfde-528">If you log these at a high rate (> 1000 / sec), it can be worth making a fast helper, as shown in the following example.</span></span> <span data-ttu-id="0dfde-529">Metoda zasłania istniejące <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="0dfde-529">The method shadows the existing <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span></span> <span data-ttu-id="0dfde-530">Ten sposób oryginalny kod wywołujący (LogTime) nie zmienia faktycznie, ale kompilator języka C# będą używać wersji bardziej wyspecjalizowany, który będzie szybsze.</span><span class="sxs-lookup"><span data-stu-id="0dfde-530">Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</span></span>  
  
 <span data-ttu-id="0dfde-531">Aby skompilować kod niebezpieczny, należy określić [/ unsafe (opcje kompilatora C#)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) — opcja kompilatora.</span><span class="sxs-lookup"><span data-stu-id="0dfde-531">To compile unsafe code, you must specify the [/unsafe (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) compiler option.</span></span>  
  
```csharp  
class AnotherEventSource : EventSource {  
  
    [NonEvent]  
    public unsafe void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)  
    {  
  
        fixed (char* arg1Ptr = arg1)  
        {  
            EventData* dataDesc = stackalloc EventData[4];  
  
            dataDesc[0].DataPointer = (IntPtr)arg1Ptr;  
            dataDesc[0].Size = (arg1.Length + 1) * 2; // Size in bytes, including a null terminator.   
            dataDesc[1].DataPointer = (IntPtr)(&arg2);  
            dataDesc[1].Size = 4;  
            dataDesc[2].DataPointer = (IntPtr)(&arg3);  
            dataDesc[2].Size = 4;  
            dataDesc[3].DataPointer = (IntPtr)(&arg4);  
            dataDesc[3].Size = 4;  
  
            WriteEventCore(eventId, 4, dataDesc);  
        }  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="0dfde-532">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-532">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0dfde-533">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-533">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityId">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, params object[] args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid relatedActivityId, object[] args) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, relatedActivityId As Guid, ParamArray args As Object())" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid childActivityID, params object[] args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid childActivityID, object[] args) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, childActivityID As Guid, ParamArray args As Object())" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid childActivityID, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.WriteEventWithRelatedActivityId : int * Guid * obj[] -&gt; unit" Usage="eventSource.WriteEventWithRelatedActivityId (eventId, relatedActivityId, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="args" Type="System.Object[]" Index="2">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-534">Identyfikator, który unikatowo identyfikuje to zdarzenie <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-534">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="0dfde-535">Identyfikator powiązane działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-535">The related activity identifier.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="args">
          <span data-ttu-id="0dfde-536">Tablica obiektów, które zawierają dane o zdarzeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-536">An array of objects that contain data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-537">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-537">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="0dfde-538">Zapisuje zdarzenie, który wskazuje, czy bieżące działanie jest związane z innego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-538">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-539"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> Metoda rejestruje zdarzenie transferu.</span><span class="sxs-lookup"><span data-stu-id="0dfde-539">The <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method logs a transfer event.</span></span> <span data-ttu-id="0dfde-540">Działanie bieżącego wątku jest rejestrowane ze zdarzeniem, a dzięki temu dwa działania powiązania przez odbiorcę zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0dfde-540">The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</span></span>  
  
 <span data-ttu-id="0dfde-541">Metoda zdarzenia ETW wywołaniu tej funkcji należy przestrzegać następujących wytycznych:</span><span class="sxs-lookup"><span data-stu-id="0dfde-541">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="0dfde-542">Określ jako pierwszy parametr <xref:System.Guid> o nazwie `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-542">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="0dfde-543">Wybierz opcję <xref:System.Diagnostics.Tracing.EventOpcode.Send> lub <xref:System.Diagnostics.Tracing.EventOpcode.Receive> jako <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0dfde-543">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="0dfde-544">Wywołaj <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> przekazywania w przypadku Identyfikatora, następuje powiązane identyfikator GUID następuje wszystkie parametry metody zdarzeń jest przekazywany w tej samej kolejności.</span><span class="sxs-lookup"><span data-stu-id="0dfde-544">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
 <span data-ttu-id="0dfde-545">Jeśli `args` jest nie używane jest konwertowany na się pusta tablica wynikowa wywołanie funkcji ETW.</span><span class="sxs-lookup"><span data-stu-id="0dfde-545">If `args` is not used, it is converted to an empty array for the resulting call to ETW.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0dfde-546">Poniższy przykład kodu pokazuje, jak może można określić źródło zdarzenia, który wywołuje <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span><span class="sxs-lookup"><span data-stu-id="0dfde-546">The following code example shows how you might can specify an event source that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#1)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityIdCore">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* relatedActivityId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* relatedActivityId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* childActivityID, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* childActivityID, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* childActivityID, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.WriteEventWithRelatedActivityIdCore : int * nativeptr&lt;Guid&gt; * int * nativeptr&lt;System.Diagnostics.Tracing.EventSource.EventData&gt; -&gt; unit" Usage="eventSource.WriteEventWithRelatedActivityIdCore (eventId, relatedActivityId, eventDataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid*" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid*" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="eventDataCount" Type="System.Int32" Index="2" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" Index="3" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="0dfde-547">Identyfikator, który unikatowo identyfikuje to zdarzenie <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-547">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="0dfde-548">Identyfikator wskaźnika, zgodnie z identyfikatorem GUID powiązane działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-548">A pointer to the GUID of the related activity ID.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="eventDataCount">
          <span data-ttu-id="0dfde-549">Liczba elementów w <c>danych</c> pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-549">The number of items in the <c>data</c> field.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="0dfde-550">Wskaźnik do pierwszego elementu w polu danych zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-550">A pointer to the first item in the event data field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0dfde-551">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-551">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="0dfde-552">Zapisuje zdarzenie, który wskazuje, czy bieżące działanie jest związane z innego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0dfde-552">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0dfde-553"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> jest podobny do <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> metody, ale oferuje lepszą wydajność, bevcause nie trzeba rozpakowania `childActivityID` i `data` argumentów.</span><span class="sxs-lookup"><span data-stu-id="0dfde-553"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> is similar to the <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method but offers better performance, bevcause it does not have to unbox the `childActivityID` and `data` arguments.</span></span>  
  
 <span data-ttu-id="0dfde-554">Metoda zdarzenia ETW wywołaniu tej funkcji należy przestrzegać następujących wytycznych:</span><span class="sxs-lookup"><span data-stu-id="0dfde-554">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="0dfde-555">Określ jako pierwszy parametr <xref:System.Guid> o nazwie `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="0dfde-555">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="0dfde-556">Wybierz opcję <xref:System.Diagnostics.Tracing.EventOpcode.Send> lub <xref:System.Diagnostics.Tracing.EventOpcode.Receive> jako <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="0dfde-556">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="0dfde-557">Wywołaj <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> przekazywania w przypadku Identyfikatora, następuje powiązane identyfikator GUID następuje wszystkie parametry metody zdarzeń jest przekazywany w tej samej kolejności.</span><span class="sxs-lookup"><span data-stu-id="0dfde-557">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0dfde-558">Poniższy przykład kodu C# pokazuje jak zdefiniować przeciążenia metody, która wywołuje <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="0dfde-558">The following C# code example shows how to define a method overload that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#5)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#3)]
[!code-vb[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>