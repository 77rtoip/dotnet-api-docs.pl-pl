<Type Name="EventSource" FullName="System.Diagnostics.Tracing.EventSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5daf229c103a69c7b6709895f511ed1fd50792e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSource&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSource : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="00103-101">Zapewnia możliwość tworzenia zdarzenia śledzenia zdarzeń systemu Windows (ETW).</span>
      <span class="sxs-lookup">
        <span data-stu-id="00103-101">Provides the ability to create events for event tracing for Windows (ETW).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-102">Ta klasa ma być dziedziczone przez klasę użytkownika, która zawiera określone zdarzenia do zastosowania w przypadku funkcji ETW.</span><span class="sxs-lookup"><span data-stu-id="00103-102">This class is intended to be inherited by a user class that provides specific events to be used for ETW.</span></span> <span data-ttu-id="00103-103"><xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> Metody są wywoływane ze zdarzeniami w rejestrze.</span><span class="sxs-lookup"><span data-stu-id="00103-103">The <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> methods are called to log the events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="00103-104">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="00103-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="00103-105">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego.</span><span class="sxs-lookup"><span data-stu-id="00103-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="00103-106">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> metody w `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="00103-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="00103-107">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="00103-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="00103-108">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu tematu.</span><span class="sxs-lookup"><span data-stu-id="00103-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="00103-109">Podstawowe funkcje <xref:System.Diagnostics.Tracing.EventSource> są wystarczające dla większości aplikacji.</span><span class="sxs-lookup"><span data-stu-id="00103-109">The basic functionality of <xref:System.Diagnostics.Tracing.EventSource> is sufficient for most applications.</span></span>  <span data-ttu-id="00103-110">Jeśli chcesz mieć większą kontrolę nad manifest ETW, który jest tworzony, możesz zastosować <xref:System.Diagnostics.Tracing.EventAttribute> atrybutu metody.</span><span class="sxs-lookup"><span data-stu-id="00103-110">If you want more control over the ETW manifest that is created, you can apply the <xref:System.Diagnostics.Tracing.EventAttribute> attribute to the methods.</span></span> <span data-ttu-id="00103-111">Dla aplikacji źródła zdarzeń zaawansowane, istnieje możliwość przechwycenia polecenia wysyłane do źródła zdarzeń pochodnej i zmienić ustawienia filtrowania, lub spowodować działania (takie jak zrzucanie to struktura danych) do wykonania przez inheritor.</span><span class="sxs-lookup"><span data-stu-id="00103-111">For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</span></span>  <span data-ttu-id="00103-112">Źródło zdarzenia można aktywować z kontrolerami ETW systemu Windows, takiego jak narzędzie Logman natychmiast.</span><span class="sxs-lookup"><span data-stu-id="00103-112">An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</span></span>  <span data-ttu-id="00103-113">Istnieje również możliwość programowo kontrolowanie i przechwycić wysyłający dane.</span><span class="sxs-lookup"><span data-stu-id="00103-113">It is also possible to programmatically control and intercept the data dispatcher.</span></span>  <span data-ttu-id="00103-114"><xref:System.Diagnostics.Tracing.EventListener> Klasa udostępnia dodatkowe funkcje.</span><span class="sxs-lookup"><span data-stu-id="00103-114">The <xref:System.Diagnostics.Tracing.EventListener> class provides additional functionality.</span></span>  
  
 <span data-ttu-id="00103-115">Począwszy od [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> zapewnia obsługę kanału i niektórych reguł sprawdzania poprawności źródła zdarzeń został rozluźnić.</span><span class="sxs-lookup"><span data-stu-id="00103-115">Starting with [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> provides channel support and some of the event source validation rules have been relaxed.</span></span> <span data-ttu-id="00103-116">Oznacza to:</span><span class="sxs-lookup"><span data-stu-id="00103-116">This means:</span></span>  
  
-   <span data-ttu-id="00103-117"><xref:System.Diagnostics.Tracing.EventSource> typy teraz mogą implementować interfejsów.</span><span class="sxs-lookup"><span data-stu-id="00103-117"><xref:System.Diagnostics.Tracing.EventSource> types may now implement interfaces.</span></span> <span data-ttu-id="00103-118">Umożliwia to korzystanie z typy źródeł zdarzeń w systemów Zaawansowane rejestrowanie, które używają interfejsów, aby zdefiniować wspólny cel rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="00103-118">This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</span></span>  
  
-   <span data-ttu-id="00103-119">Wprowadzono pojęcie narzędzie typu źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-119">The concept of a utility event source type has been introduced.</span></span> <span data-ttu-id="00103-120">Ta funkcja umożliwia udostępnianie kodu w wielu typy źródeł zdarzeń w projektach na potrzeby scenariuszy, takich jak zoptymalizowanych pod kątem <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="00103-120">This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads.</span></span>  
  
 <span data-ttu-id="00103-121">Wersja dla <xref:System.Diagnostics.Tracing.EventSource> przeznaczona dla klasy, która udostępnia funkcje, takie jak kanału pomagają [!INCLUDE[net_v451](~/includes/net-v451-md.md)] lub wcześniej, zobacz [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span><span class="sxs-lookup"><span data-stu-id="00103-121">For a version of the <xref:System.Diagnostics.Tracing.EventSource> class that provides features such as channel support you are targeting [!INCLUDE[net_v451](~/includes/net-v451-md.md)] or earlier, see [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00103-122">W poniższym przykładzie przedstawiono prosty implementacja <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-122">The following example shows a simple implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTraceSmall#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtracesmall/cs/program.cs#1)]
 [!code-vb[ETWTraceSmall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtracesmall/vb/program.vb#1)]  
  
 <span data-ttu-id="00103-123">W poniższym przykładzie przedstawiono bardziej złożone wdrożenia <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-123">The following example shows a more complex implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#1)]
 [!code-vb[ETWTrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="00103-124">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="00103-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00103-125">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-125">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00103-126">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-126">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (bool throwOnEventWriteErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool throwOnEventWriteErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (throwOnEventWriteErrors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(bool throwOnEventWriteErrors);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwOnEventWriteErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="throwOnEventWriteErrors">
          <span data-ttu-id="00103-127">
            <see langword="true" /> Aby zgłosić wyjątek po wystąpieniu błędu w kodzie podstawowej systemu Windows w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-127">
              <see langword="true" /> to throw an exception when an error occurs in the underlying Windows code; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-128">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy i określa, czy należy zgłosić wyjątek po wystąpieniu błędu w podstawowej kod systemu Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-128">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="00103-129">Bitowe połączenie wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-129">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-130">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy z określonych ustawień konfiguracyjnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-130">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-131">Określanie `settings` podczas <xref:System.Diagnostics.Tracing.EventSource> jest tworzony umożliwia określenie, czy zdarzenie jest zapisywane w formacie samoopisujące lub na podstawie manifestu.</span><span class="sxs-lookup"><span data-stu-id="00103-131">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="00103-132">Ponadto można określić, czy wyjątek powinien być wywoływany, gdy wystąpi błąd podczas zapisywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-132">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="00103-133">Nazwa do zastosowania w źródle zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-133">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="00103-134">Nie może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-134">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-135">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-135">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="00103-136">
            <paramref name="eventSourceName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-136">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="00103-137">Bitowe połączenie wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-137">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="00103-138">Pary klucz wartość, określających cech dla źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-138">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> do użycia z innych niż kontraktu zdarzenia, które zawiera określone ustawienia i cech.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-139">Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> to be used with non-contract events that contains the specified settings and traits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-140">Cechy znajdują się dodatkowe informacje dla każdego zdarzenia i będą interpretowane przez odbiornik zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-140">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="00103-141">Cechy są określone jako pary klucz wartość, a jeśli nie zostanie określony w parach, wystąpi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="00103-141">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="00103-142">Cechy można pobrać przez przekazanie klucza do <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, metody.</span><span class="sxs-lookup"><span data-stu-id="00103-142">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="00103-143">Określanie `settings` podczas <xref:System.Diagnostics.Tracing.EventSource> jest tworzony umożliwia określenie, czy zdarzenie jest zapisywane w formacie samoopisujące lub na podstawie manifestu.</span><span class="sxs-lookup"><span data-stu-id="00103-143">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="00103-144">Ponadto można określić, czy wyjątek powinien być wywoływany, gdy wystąpi błąd podczas zapisywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-144">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00103-145">
            <paramref name="traits" /> nie określono w pary klucz wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-145">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="00103-146">Nazwa do zastosowania w źródle zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-146">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="00103-147">Nie może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-147">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="00103-148">Bitowe połączenie wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-148">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-149">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> z określoną nazwą i ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-149">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name and settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-150">Określanie `settings` podczas <xref:System.Diagnostics.Tracing.EventSource> jest tworzony umożliwia określenie, czy zdarzenie jest zapisywane w formacie samoopisujące lub na podstawie manifestu.</span><span class="sxs-lookup"><span data-stu-id="00103-150">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="00103-151">Ponadto można określić, czy wyjątek powinien być wywoływany, gdy wystąpi błąd podczas zapisywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-151">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="00103-152">
            <paramref name="eventSourceName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-152">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="00103-153">Nazwa do zastosowania w źródle zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-153">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="00103-154">Nie może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-154">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="00103-155">Bitowe połączenie wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-155">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="00103-156">Pary klucz wartość, określających cech dla źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-156">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-157">Tworzy nowe wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy z określonych ustawień konfiguracyjnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-157">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-158">Cechy znajdują się dodatkowe informacje dla każdego zdarzenia i będą interpretowane przez odbiornik zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-158">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="00103-159">Cechy są określone jako pary klucz wartość, a jeśli nie zostanie określony w parach, wystąpi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="00103-159">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="00103-160">Cechy można pobrać przez przekazanie klucza do <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, metody.</span><span class="sxs-lookup"><span data-stu-id="00103-160">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="00103-161">Określanie `config` podczas <xref:System.Diagnostics.Tracing.EventSource> jest tworzony umożliwia określenie, czy zdarzenie jest zapisywane w formacie samoopisujące lub na podstawie manifestu.</span><span class="sxs-lookup"><span data-stu-id="00103-161">Specifying `config` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="00103-162">Ponadto można określić, czy wyjątek powinien być wywoływany, gdy wystąpi błąd podczas zapisywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-162">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="00103-163">
            <paramref name="eventSourceName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-163">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="00103-164">
            <paramref name="traits" /> nie określono w pary klucz wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-164">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConstructionException">
      <MemberSignature Language="C#" Value="public Exception ConstructionException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConstructionException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConstructionException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00103-165">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-165">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="00103-166">Pobiera wszystkie wyjątek zgłoszony podczas konstruowania źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-166">Gets any exception that was thrown during the construction of the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00103-167">Wyjątek zgłoszony podczas konstruowania źródła zdarzeń lub <see langword="null" /> Jeśli żaden wyjątek został zgłoszony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-167">The exception that was thrown during the construction of the event source, or <see langword="null" /> if no exception was thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-168"><xref:System.Diagnostics.Tracing.EventSource> Konstruktory nie zgłaszają wyjątki.</span><span class="sxs-lookup"><span data-stu-id="00103-168"><xref:System.Diagnostics.Tracing.EventSource> constructors do not throw exceptions.</span></span> <span data-ttu-id="00103-169">Zamiast tego każdy wyjątek zgłaszany jest przypisany do <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> właściwości i rejestrowane przez <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="00103-169">Instead, any exception that is thrown is assigned to the <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> property and logged by the <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static Guid CurrentThreadActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid CurrentThreadActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThreadActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid CurrentThreadActivityId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00103-170">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-170">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="00103-171">Pobiera identyfikator działania bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-171">Gets the activity ID of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00103-172">Identyfikator działania bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-172">The activity ID of the current thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00103-173">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-173">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00103-174">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Diagnostics.Tracing.EventSource" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-174">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-175">Wywołanie `Dispose` po zakończeniu przy użyciu <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="00103-175">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="00103-176">`Dispose` Pozostawia metody <xref:System.Diagnostics.Tracing.EventSource> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="00103-176">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventSource> in an unusable state.</span></span> <span data-ttu-id="00103-177">Po wywołaniu `Dispose`, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Diagnostics.Tracing.EventSource> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-177">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventSource> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventSource> was occupying.</span></span>  
  
 <span data-ttu-id="00103-178">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="00103-178">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00103-179">Wywoływanie zawsze `Dispose` przed zwolnieniem ostatniego odwołania do <xref:System.Diagnostics.Tracing.EventSource>.</span><span class="sxs-lookup"><span data-stu-id="00103-179">Always call `Dispose` before you release your last reference to the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="00103-180">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Diagnostics.Tracing.EventSource> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="00103-180">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Diagnostics.Tracing.EventSource> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="00103-181">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-181">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-182">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Diagnostics.Tracing.EventSource" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-182">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-183">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="00103-183">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="00103-184">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="00103-184">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="00103-185">`Finalize` wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="00103-185">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="00103-186">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Diagnostics.Tracing.EventSource> odwołania.</span><span class="sxs-lookup"><span data-stu-id="00103-186">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.Tracing.EventSource> references.</span></span> <span data-ttu-id="00103-187">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="00103-187">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="00103-188">
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty.</span>
            <span class="sxs-lookup">
              <span data-stu-id="00103-188">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="00103-189">W przypadku przesłaniania <see langword="Dispose(Boolean)" />, nie można odwoływać się do obiektów, które zostały wcześniej usunięty we wcześniejszej wywołanie metody Dispose <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="00103-189">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="00103-190">Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="00103-190">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="00103-191">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see langword="Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="00103-191">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EventCommandExecuted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventCommandExecuted As EventHandler(Of EventCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventCommandEventArgs ^&gt; ^ EventCommandExecuted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00103-192">Występuje, gdy polecenie pochodzi z odbiornik zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-192">Occurs when a command comes from an event listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EventSource ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00103-193">Umożliwia <see cref="T:System.Diagnostics.Tracing.EventSource" /> obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, zanim obiekt jest odzyskana przez wyrzucanie elementów bezużytecznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-193">Allows the <see cref="T:System.Diagnostics.Tracing.EventSource" /> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateManifest">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00103-194">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-194">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="00103-195">Typ źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-195">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="00103-196">Ścieżka do pliku zestawu (dll), aby uwzględnić w [dostawcy](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element manifestu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-196">The path to the assembly file (.dll) to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-197">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-197">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-198">Ciąg danych XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-198">The XML data string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-199">Zobacz informacje na temat schematu XML dla manifest zdarzeń [schematu manifestu zdarzeń](http://go.microsoft.com/fwlink/?LinkId=228077) w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="00103-199">The information about the XML schema for the event manifest, see [Event Manifest Schema](http://go.microsoft.com/fwlink/?LinkId=228077) in the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest, valuetype System.Diagnostics.Tracing.EventManifestOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String, flags As EventManifestOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest, System::Diagnostics::Tracing::EventManifestOptions flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
        <Parameter Name="flags" Type="System.Diagnostics.Tracing.EventManifestOptions" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="00103-200">Typ źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-200">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="00103-201">Ścieżka do zestawu (.dll) pliku do uwzględnienia w [dostawcy](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element manifestu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-201">The path to the assembly file (.dll) file to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="00103-202">Bitowe połączenie wartości wyliczenia, które określają, jak jest generowany plik manifestu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-202">A bitwise combination of the enumeration values that specify how the manifest is generated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-203">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-203">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-204">Ciąg danych XML lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-204">The XML data string or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-205">Jeśli `flags` Określa `OnlyIfNeededForRegistration` i `eventSourceType` określonego nie wymaga jawnej rejestracji <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="00103-205">If `flags` specifies `OnlyIfNeededForRegistration` and the `eventSourceType` specified does not require explicit registration, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGuid (eventSourceType As Type) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetGuid(Type ^ eventSourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="00103-206">Typ źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-206">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-207">Pobiera unikatowy identyfikator dla tej implementacji źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-207">Gets the unique identifier for this implementation of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-208">Unikatowy identyfikator dla tego typu źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-208">A unique identifier for this event source type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (eventSourceType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ eventSourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="00103-209">Typ źródła zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-209">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-210">Pobiera przyjazną nazwę źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-210">Gets the friendly name of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-211">Przyjazna nazwa źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-211">The friendly name of the event source.</span>
          </span>
          <span data-ttu-id="00103-212">Wartość domyślna to prosta nazwa klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-212">The default is the simple name of the class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSources">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt; GetSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Diagnostics.Tracing.EventSource&gt; GetSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSources () As IEnumerable(Of EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Tracing::EventSource ^&gt; ^ GetSources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00103-213">Pobiera migawkę wszystkich źródła zdarzeń dla domeny aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-213">Gets a snapshot of all the event sources for the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-214">Wyliczenie wszystkich źródeł zdarzeń w domenie aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-214">An enumeration of all the event sources in the application domain.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrait">
      <MemberSignature Language="C#" Value="public string GetTrait (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTrait(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrait (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTrait(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="00103-215">Klucz cechy do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-215">The key of the trait to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-216">Pobiera wartość cechy skojarzoną z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-216">Gets the trait value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-217">Wartość cechy skojarzoną z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-217">The trait value associated with the specified key.</span>
          </span>
          <span data-ttu-id="00103-218">Jeśli klucz nie zostanie znaleziony, zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-218">If the key is not found, returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-219">Cechy znajdują się dodatkowe informacje dla każdego zdarzenia i będą interpretowane przez odbiornik zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-219">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="00103-220">Cechy są określone jako pary klucz wartość, gdy źródło zdarzenia jest tworzony.</span><span class="sxs-lookup"><span data-stu-id="00103-220">Traits are specified as key-value pairs when the event source is constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00103-221">Unikatowy identyfikator dla źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-221">The unique identifier for the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00103-222">Unikatowy identyfikator dla źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-222">A unique identifier for the event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEnabled">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00103-223">Określa, czy bieżące źródło zdarzenia jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-223">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00103-224">Określa, czy bieżące źródło zdarzenia jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-224">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-225">
            <see langword="true" /> Jeśli włączono bieżące źródło zdarzenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-225">
              <see langword="true" /> if the current event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="00103-226">Poziom źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-226">The level of the event source.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="00103-227">Słowo kluczowe źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-227">The keyword of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-228">Określa, czy bieżące źródło zdarzenia, które ma określony poziom i słowo kluczowe jest włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-228">Determines whether the current event source that has the specified level and keyword is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-229">
            <see langword="true" /> Jeśli włączono źródło zdarzenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-229">
              <see langword="true" /> if the event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-230">Wynikiem tej metody jest tylko przybliżeniem czy określonego zdarzenia jest aktywny.</span><span class="sxs-lookup"><span data-stu-id="00103-230">The result of this method is only an approximation of whether a particular event is active.</span></span>  <span data-ttu-id="00103-231">Użyj, aby uniknąć kosztownych obliczeń do rejestrowania podczas rejestrowania jest wyłączona.</span><span class="sxs-lookup"><span data-stu-id="00103-231">Use it to avoid expensive computation for logging when logging is disabled.</span></span>   <span data-ttu-id="00103-232">Źródła zdarzeń mogą mieć dodatkowe filtrowania określająca ich działania.</span><span class="sxs-lookup"><span data-stu-id="00103-232">Event sources may have additional filtering that determines their activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords, valuetype System.Diagnostics.Tracing.EventChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords, channel As EventChannel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords, System::Diagnostics::Tracing::EventChannel channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="channel" Type="System.Diagnostics.Tracing.EventChannel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="00103-233">Poziom zdarzenia do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-233">The event level to check.</span>
          </span>
          <span data-ttu-id="00103-234">Źródłem zdarzenia jest uznawane za aktywny, gdy jego poziom jest większa niż lub równa <c>poziom</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-234">An event source will be considered enabled when its level is greater than or equal to <c>level</c>.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="00103-235">Słowa kluczowe zdarzeń do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-235">The event keywords to check.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="00103-236">Zdarzenia kanału do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-236">The event channel to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-237">Określa, czy bieżące źródło zdarzenia jest włączony dla zdarzeń o określonym poziomie, słowa kluczowe i kanał.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-237">Determines whether the current event source is enabled for events with the specified level, keywords and channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-238">
            <see langword="true" /> Jeśli źródło zdarzenia jest włączona dla poziomu określonego zdarzenia, słowa kluczowe i kanału; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-238">
              <see langword="true" /> if the event source is enabled for the specified event level, keywords and channel; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="00103-239">Wynikiem tej metody jest tylko przybliżeniem czy określonego zdarzenia jest aktywny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-239">The result of this method is only an approximation of whether a particular event is active.</span>
          </span>
          <span data-ttu-id="00103-240">Użyj, aby uniknąć kosztownych obliczeń do rejestrowania podczas rejestrowania jest wyłączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-240">Use it to avoid expensive computation for logging when logging is disabled.</span>
          </span>
          <span data-ttu-id="00103-241">Źródła zdarzeń może być dodatkowe filtrowania określająca ich działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-241">Event sources may have additional filtering that determines their activity..</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-242">Jeśli</span><span class="sxs-lookup"><span data-stu-id="00103-242">If the</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00103-243">Przyjazna nazwa klasy, która jest pochodną źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-243">The friendly name of the class that is derived from the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00103-244">Przyjazna nazwa klasy pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-244">The friendly name of the derived class.</span>
          </span>
          <span data-ttu-id="00103-245">Wartość domyślna to prosta nazwa klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-245">The default is the simple name of the class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEventCommand(class System.Diagnostics.Tracing.EventCommandEventArgs command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEventCommand (command As EventCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEventCommand(System::Diagnostics::Tracing::EventCommandEventArgs ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="00103-246">Argumenty dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-246">The arguments for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-247">Wywoływane, gdy bieżące źródło zdarzenia jest aktualizowany przez kontroler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-247">Called when the current event source is updated by the controller.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary&lt;string,string&gt; commandArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendCommand(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventCommand command, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; commandArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendCommand(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventCommand command, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ commandArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommand" />
        <Parameter Name="commandArguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="00103-248">Źródło zdarzenia, aby wysłać polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-248">The event source to send the command to.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="00103-249">Polecenie zdarzenia do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-249">The event command to send.</span>
          </span>
        </param>
        <param name="commandArguments">
          <span data-ttu-id="00103-250">Argumenty dla polecenia zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-250">The arguments for the event command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-251">Wysyła polecenie ze źródłem określonym zdarzeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-251">Sends a command to a specified event source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-252">Wywoływanie <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> przekazuje polecenia do <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="00103-252">Calling <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> forwards the command to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback.</span></span>  <span data-ttu-id="00103-253">Co <xref:System.Diagnostics.Tracing.EventSource> z polecenia i argumentów jest specyficzna dla źródła zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-253">What the <xref:System.Diagnostics.Tracing.EventSource> does with the command and its arguments is specific to the event source.</span></span>  <span data-ttu-id="00103-254">Polecenia i argumentów polecenia są przekazywane do <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> wywołania zwrotnego źródła określone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="00103-254">The command and command arguments are passed to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback of the specified event source.</span></span>   <span data-ttu-id="00103-255">Jeśli to możliwe bieżące źródło zdarzenia nie wpływają na inne odbiorników zdarzeń filtrowania zdarzeń; jednak może to nie być możliwe, jeśli polecenie powoduje, że wyrzucania elementów bezużytecznych, system opróżniania lub globalnego działania.</span><span class="sxs-lookup"><span data-stu-id="00103-255">If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCurrentThreadActivityId">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00103-256">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-256">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="00103-257">Ustawia identyfikator działania w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-257">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="00103-258">Nowy identyfikator działania bieżącego wątku lub <see cref="F:System.Guid.Empty" /> aby wskazać, że pracy w bieżącym wątku nie jest skojarzony z żadnego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-258">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-259">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-259">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="00103-260">Ustawia identyfikator działania w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-260">Sets the activity ID on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-261">Wywoływanie <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> metoda Ustawia identyfikator działania na podstawie dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="00103-261">Calling the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> method sets the activity ID on a per-thread basis.</span></span> <span data-ttu-id="00103-262">Wszystkie zdarzenia w wątku ma ten identyfikator działania, dopóki nowe działanie jest uruchomiona na tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="00103-262">All events on the thread will have that activity ID until a new activity is started on the same thread.</span></span>  
  
 <span data-ttu-id="00103-263">Ta metoda jest wywoływana tylko przez biblioteki zarządzających ich własnych wątków.</span><span class="sxs-lookup"><span data-stu-id="00103-263">This method is called only by libraries that manage their own threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId, [out] valuetype System.Guid&amp; oldActivityThatWillContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid, ByRef oldActivityThatWillContinue As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId, [Runtime::InteropServices::Out] Guid % oldActivityThatWillContinue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
        <Parameter Name="oldActivityThatWillContinue" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="00103-264">Nowy identyfikator działania bieżącego wątku lub <see cref="F:System.Guid.Empty" /> aby wskazać, że pracy w bieżącym wątku nie jest skojarzony z żadnego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-264">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <param name="oldActivityThatWillContinue">
          <span data-ttu-id="00103-265">Po powrocie z tej metody zawiera identyfikator poprzedniego działania w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-265">When this method returns, contains the previous activity ID on the current thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-266">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-266">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="00103-267">Ustawia identyfikator działania w bieżącym wątku i zwraca identyfikator poprzedniego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-267">Sets the activity ID on the current thread, and returns the previous activity ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-268">Możesz wywołać <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> metodę, aby tymczasowo zastąpić bieżący wątek identyfikator działania nowy identyfikator działania.</span><span class="sxs-lookup"><span data-stu-id="00103-268">You can call the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> method to temporarily overwrite the current thread's activity ID with a new activity ID.</span></span> <span data-ttu-id="00103-269">Następnie należy przywrócić identyfikator poprzedniego działania przez przekazanie `oldActivityThatWillContinue` argument <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> metody.</span><span class="sxs-lookup"><span data-stu-id="00103-269">You must then restore the previous activity ID by passing the `oldActivityThatWillContinue` argument to the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Tracing.EventSourceSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As EventSourceSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Tracing::EventSourceSettings Settings { System::Diagnostics::Tracing::EventSourceSettings get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventSourceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00103-270">Pobiera ustawienia stosowane do tego źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-270">Gets the settings applied to this event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00103-271">Ustawienia stosowane do tego źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-271">The settings applied to this event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00103-272">Pobiera reprezentację ciągu bieżącego wystąpienia źródła zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-272">Obtains a string representation of the current event source instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00103-273">Nazwa i unikatowym identyfikatorem identyfikujące bieżące źródło zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-273">The name and unique identifier that identify the current event source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00103-274">Zapisuje zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-274">Writes an event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="00103-275">Nazwa zdarzenia do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-275">The name of the event to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-276">Zapisuje zdarzenie bez pól, ale przy użyciu określonej nazwy i domyślne opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-276">Writes an event without fields, but with the specified name and default options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="00103-277">
            <paramref name="eventName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-277">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String, options As EventSourceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="00103-278">Nazwa zdarzenia do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-278">The name of the event to write.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="00103-279">Opcje, takie jak poziom, słowa kluczowe i kod operacji dla zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-279">The options such as level, keywords and operation code for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-280">Zapisuje zdarzenie bez pól, ale z określoną nazwą i opcjami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-280">Writes an event without fields, but with the specified name and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="00103-281">
            <paramref name="eventName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-281">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, T data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="00103-282">Typ, który definiuje zdarzenia i skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-282">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="00103-283">Ten typ musi być typu anonimowego lub oznaczonych <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-283">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="00103-284">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-284">The name of the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="00103-285">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-285">The event data.</span>
          </span>
          <span data-ttu-id="00103-286">Ten typ musi być typu anonimowego lub oznaczonych <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-286">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-287">Zapisuje zdarzenie o określonej nazwie i danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-287">Writes an event with the specified name and data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-288">Jeśli `eventName` jest `null`, Nazwa zdarzenia jest automatycznie pochodną typu T na dane zdarzeń (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) lub ustalić na podstawie nazwy typu `T`.</span><span class="sxs-lookup"><span data-stu-id="00103-288">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="00103-289">Właściwości wystąpienia publicznego `data` zostanie zapisany rekursywnie można utworzyć pola zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-289">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, options As EventSourceOptions, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options, T data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="00103-290">Typ, który definiuje zdarzenia i skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-290">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="00103-291">Ten typ musi być typu anonimowego lub oznaczonych <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-291">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="00103-292">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-292">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="00103-293">Opcje zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-293">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="00103-294">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-294">The event data.</span>
          </span>
          <span data-ttu-id="00103-295">Ten typ musi być typu anonimowego lub oznaczonych <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-295">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-296">Zapisuje zdarzenia o określonej nazwie, dane zdarzeń i opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-296">Writes an event with the specified name, event data and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-297">Jeśli `eventName` jest `null`, Nazwa zdarzenia jest automatycznie pochodną typu T na dane zdarzeń (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) lub ustalić na podstawie nazwy typu `T`.</span><span class="sxs-lookup"><span data-stu-id="00103-297">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="00103-298">Właściwości wystąpienia publicznego `data` zostanie zapisany rekursywnie można utworzyć pola zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-298">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="00103-299">Typ, który definiuje zdarzenia i skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-299">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="00103-300">Ten typ musi być typu anonimowego lub oznaczonych <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-300">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="00103-301">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-301">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="00103-302">Opcje zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-302">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="00103-303">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-303">The event data.</span>
          </span>
          <span data-ttu-id="00103-304">Ten typ musi być typu anonimowego lub oznaczonych <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-304">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-305">Zapisuje zdarzenia o określonej nazwie, opcje i dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-305">Writes an event with the specified name, options and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-306">Jeśli `eventName` jest `null`, Nazwa zdarzenia jest automatycznie pochodną typu T na dane zdarzeń (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) lub ustalić na podstawie nazwy typu `T`.</span><span class="sxs-lookup"><span data-stu-id="00103-306">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="00103-307">Właściwości wystąpienia publicznego `data` zostanie zapisany rekursywnie można utworzyć pola zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-307">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, valuetype System.Guid&amp; activityId, valuetype System.Guid&amp; relatedActivityId, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef activityId As Guid, ByRef relatedActivityId As Guid, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, Guid % activityId, Guid % relatedActivityId, T % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="activityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="00103-308">Typ, który definiuje zdarzenia i skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-308">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="00103-309">Ten typ musi być typu anonimowego lub oznaczonych <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-309">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="00103-310">Nazwa zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-310">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="00103-311">Opcje zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-311">The event options.</span>
          </span>
        </param>
        <param name="activityId">
          <span data-ttu-id="00103-312">Identyfikator działania skojarzonego ze zdarzeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-312">The ID of the activity associated with the event.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="00103-313">Identyfikator skojarzonego działania lub <see cref="F:System.Guid.Empty" /> Jeśli nic się nie skojarzone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-313">The ID of an associated activity, or <see cref="F:System.Guid.Empty" /> if there is no associated activity.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="00103-314">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-314">The event data.</span>
          </span>
          <span data-ttu-id="00103-315">Ten typ musi być typu anonimowego lub oznaczonych <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-315">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-316">Zapisuje zdarzenia o określonej nazwie, opcje, pokrewne działania i dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-316">Writes an event with the specified name, options, related activity and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-317">Jeśli `eventName` jest `null`, Nazwa zdarzenia jest automatycznie pochodną typu T na dane zdarzeń (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) lub ustalić na podstawie nazwy typu `T`.</span><span class="sxs-lookup"><span data-stu-id="00103-317">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="00103-318">Właściwości wystąpienia publicznego `data` zostanie zapisany rekursywnie można utworzyć pola zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-318">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00103-319">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty opcjonalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-319">Writes an event by using the provided event identifier and optional arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-320">`WriteEvent` Metoda zapewnia przeciążenia z kombinacji argumenty typu string i integer.</span><span class="sxs-lookup"><span data-stu-id="00103-320">The `WriteEvent` method provides overloads with combinations of string and integer arguments.</span></span> <span data-ttu-id="00103-321">Jeśli żadna z tych kombinacji parametrów połączenia, kompilator używa <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> przeciążenia, które jest znacznie mniejsza niż inne przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="00103-321">If none of these combinations match the parameters for the call, the compiler uses the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload, which is considerably slower than the other overloads.</span></span> <span data-ttu-id="00103-322">Odwiedź stronę przeciążenia, aby uzyskać szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="00103-322">See the overload page for details.</span></span>  
  
 <span data-ttu-id="00103-323">We wszystkich przypadkach `eventid` parametru musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-323">In all cases, the `eventid` parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-324">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-324">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-325">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-325">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-326">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-326">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-327">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-327">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 <span data-ttu-id="00103-328">Można również utworzyć niestandardowe przeciążenia przy użyciu <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="00103-328">You can also create a custom overload by using the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-329">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-329">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-330">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-330">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-331">Zapisuje zdarzenie za pomocą identyfikatora podanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-331">Writes an event by using the provided event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-332">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-332">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-333">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-333">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-334">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-334">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-335">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-335">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-336">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-336">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="00103-337">Poniższy przykład przedstawia użycie przeciążenie tej metody można zapisać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-337">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="00103-338">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-338">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, cli::array &lt;System::Byte&gt; ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-339">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-339">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-340">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-340">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-341">Argument tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-341">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-342">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-342">Writes an event by using the provided event identifier and byte array argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-343">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-343">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-344">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-344">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-345">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-345">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-346">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-346">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-347">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-347">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(byte[] arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-348">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-348">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-349">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-349">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-350">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-350">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-351">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-351">Writes an event by using the provided event identifier and 32-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-352">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-352">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-353">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-353">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-354">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-354">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-355">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-355">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-356">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-356">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int  arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="00103-357">Poniższy przykład przedstawia użycie przeciążenie tej metody można zapisać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-357">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="00103-358">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-358">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]
 [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-359">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-359">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-360">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-360">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-361">Argumentem 64-bitowa liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-361">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-362">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-362">Writes an event by using the provided event identifier and 64-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-363">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-363">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-364">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-364">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-365">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-365">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-366">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-366">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-367">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-367">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-368">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-368">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-369">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-369">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="00103-370">Tablica obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-370">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-371">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i tablicę argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-371">Writes an event by using the provided event identifier and array of arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-372">Domyślnie kompilator wywołuje tego przeciążenia, jeśli parametry połączenia nie są zgodne z jednego z innych przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="00103-372">By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</span></span> <span data-ttu-id="00103-373">To przeciążenie jest znacznie mniejsza niż inne przeciążenia, ponieważ wykonuje następujące zadania:</span><span class="sxs-lookup"><span data-stu-id="00103-373">This overload is much slower than the other overloads, because it does the following:</span></span>  
  
1.  <span data-ttu-id="00103-374">Przydzielania tablicy do przechowywania zmiennych argumentów.</span><span class="sxs-lookup"><span data-stu-id="00103-374">It allocates an array to hold the variable argument.</span></span>  
  
2.  <span data-ttu-id="00103-375">Rzutuje go każdego parametru do obiektu (co powoduje, że alokacji dla typów pierwotnych).</span><span class="sxs-lookup"><span data-stu-id="00103-375">It casts each parameter to an object (which causes allocations for primitive types).</span></span>  
  
3.  <span data-ttu-id="00103-376">Te obiekty przypisuje do tablicy.</span><span class="sxs-lookup"><span data-stu-id="00103-376">It assigns these objects to the array.</span></span>  
  
4.  <span data-ttu-id="00103-377">Wywołuje funkcję, która określa typ argumentu, dlatego może być Zserializowany dla funkcji ETW.</span><span class="sxs-lookup"><span data-stu-id="00103-377">It calls the function, which then determines the type of each argument so it can be serialized for ETW.</span></span>  
  
 <span data-ttu-id="00103-378">Wysokie obciążenie tego przeciążenia nie ma znaczenia podczas śledzenia zdarzeń niskim, ponieważ metoda jest używana tylko wtedy, gdy dostawca jest włączony.</span><span class="sxs-lookup"><span data-stu-id="00103-378">The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</span></span> <span data-ttu-id="00103-379">Jednak w przypadku dużej liczby zdarzeń, zmniejszenie wydajności może być istotne.</span><span class="sxs-lookup"><span data-stu-id="00103-379">However, for high-volume events, the performance overhead can be significant.</span></span>  <span data-ttu-id="00103-380">Możesz uniknąć używania <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> dla dużych ładunków przez utworzenie nowego, szybszego przeciążenia z <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="00103-380">You can avoid using <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> for high-volume payloads by creating a new, faster  overload with the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 <span data-ttu-id="00103-381">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-381">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-382">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-382">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-383">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-383">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-384">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-384">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-385">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-385">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-386">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-386">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-387">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-387">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-388">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-388">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-389">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-389">Writes an event by using the provided event identifier and string argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-390">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-390">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-391">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-391">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-392">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-392">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-393">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-393">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-394">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-394">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="00103-395">Poniższy przykład przedstawia użycie przeciążenie tej metody można zapisać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-395">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="00103-396">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.Tracing.EventSource> klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-396">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-397">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-397">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-398">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-398">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-399">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-399">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-400">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-400">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-401">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-401">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-402">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-402">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-403">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-403">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-404">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-404">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-405">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-405">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-406">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-406">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int arg1, int arg2, int arg3)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-407">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-407">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-408">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-408">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-409">Argument 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-409">A 32-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-410">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-410">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-411">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 32-bitową liczbę całkowitą i argumenty typu string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-411">Writes an event by using the provided event identifier and 32-bit integer and string arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, cli::array &lt;System::Byte&gt; ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-412">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-412">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-413">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-413">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-414">Argument 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-414">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-415">Argument tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-415">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-416">Zapisuje dane zdarzeń przy użyciu określonego identyfikatora i 64-bitową liczbę całkowitą i argumenty tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-416">Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-417">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-417">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-418">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-418">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-419">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-419">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-420">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-420">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-421">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-421">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, Byte[] arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-422">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-422">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-423">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-423">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-424">Argumentem 64-bitowa liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-424">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-425">Argumentem 64-bitowa liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-425">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-426">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 64-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-426">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-427">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-427">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-428">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-428">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-429">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-429">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-430">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-430">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-431">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-431">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-432">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-432">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-433">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-433">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-434">Argument 64-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-434">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-435">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-435">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-436">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 64-bitową liczbę całkowitą i argumenty typu string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-436">Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-437">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-437">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-438">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-438">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-439">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-439">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-440">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-440">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-441">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-441">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, string arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-442">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-442">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-443">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-443">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-444">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-444">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-445">Argument liczba całkowita 32-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-445">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-446">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-446">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-447">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-447">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-448">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-448">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-449">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-449">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-450">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-450">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-451">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-451">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, long arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-452">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-452">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-453">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-453">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-454">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-454">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-455">Argumentem 64-bitowa liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-455">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-456">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-456">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-457">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-457">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-458">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-458">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-459">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-459">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-460">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-460">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-461">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-461">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-462">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-462">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-463">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-463">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-464">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-464">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-465">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-465">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-466">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty typu string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-466">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-467">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-467">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-468">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-468">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-469">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-469">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-470">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-470">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-471">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-471">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2, int arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-472">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-472">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-473">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-473">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-474">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-474">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-475">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-475">An integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="00103-476">Argument liczby całkowitej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-476">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-477">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 32-bitową liczbę całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-477">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-478">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-478">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-479">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-479">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-480">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-480">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-481">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-481">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-482">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-482">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2, int64 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long, arg3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2, long arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
        <Parameter Name="arg3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-483">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-483">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-484">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-484">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-485">Argumentem 64-bitowa liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-485">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-486">Argumentem 64-bitowa liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-486">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="00103-487">Argumentem 64-bitowa liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-487">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-488">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 64-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-488">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-489">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-489">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-490">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-490">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-491">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-491">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-492">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-492">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-493">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-493">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2, int arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-494">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-494">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-495">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-495">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-496">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-496">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-497">Argument liczba całkowita 32-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-497">A 32 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="00103-498">Argument liczba całkowita 32-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-498">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-499">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-499">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-500">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-500">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-501">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-501">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-502">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-502">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-503">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-503">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-504">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-504">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String, arg3 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2, System::String ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-505">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-505">The event identifier.</span>
          </span>
          <span data-ttu-id="00103-506">Ta wartość powinna wynosić od 0 do 65535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-506">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="00103-507">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-507">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="00103-508">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-508">A string argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="00103-509">Argument ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-509">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-510">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty typu string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-510">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-511">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-511">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-512">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-512">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-513">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-513">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-514">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <xref:System.Diagnostics.Tracing.EventSource>-klasy.</span><span class="sxs-lookup"><span data-stu-id="00103-514">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="00103-515">Należy wywołać klasy podstawowej <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> metody przekazywanie <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> i te same argumenty co metody implementowane podobny do poniższego przykładu.</span><span class="sxs-lookup"><span data-stu-id="00103-515">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventCore">
      <MemberSignature Language="C#" Value="protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventCore(int32 eventId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventCore(int eventId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="eventDataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-516">Identyfikator zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-516">The event identifier.</span>
          </span>
        </param>
        <param name="eventDataCount">
          <span data-ttu-id="00103-517">Liczba elementów danych zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-517">The number of event data items.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="00103-518">Struktura, która zawiera dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-518">The structure that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-519">Tworzy nową <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> przeciążenia przy użyciu identyfikatora podanego zdarzenia i dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-519">Creates a new <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> overload by using the provided event identifier and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-520">`eventid` musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</span><span class="sxs-lookup"><span data-stu-id="00103-520">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="00103-521">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="00103-521">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="00103-522">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="00103-522">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="00103-523">Ta metoda chroniona umożliwia użytkownikom na definiowanie nowych <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> przeciążeń, które są szybsze niż podana przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="00103-523">This protected method  enables users to define new <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads that are faster than the provided overloads.</span></span>   <span data-ttu-id="00103-524">Tworzenie nowego przeciążenia obejmuje niebezpieczny kod.</span><span class="sxs-lookup"><span data-stu-id="00103-524">Creating a new overload involves unsafe code.</span></span>  <span data-ttu-id="00103-525">Podstawowa procedura polega na stosie przydzielić tablicy deskryptory danych zdarzenia jest zgodna z liczbą elementów ładunku.</span><span class="sxs-lookup"><span data-stu-id="00103-525">The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</span></span>   <span data-ttu-id="00103-526">Dla każdego elementu ładunku ustaw odpowiedni rozmiar, a wartość zdarzeń tablicy danych. Wywołanie <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> z zainicjowanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="00103-526">For each payload item, set the correct size and value in the event data array.Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> with the initialized array.</span></span>  
  
 <span data-ttu-id="00103-527">Poniższy przykład przedstawia sposób dodawania <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> przeciążenia, które akceptuje cztery argumenty.</span><span class="sxs-lookup"><span data-stu-id="00103-527">The following example shows how to add a <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload that accepts four arguments.</span></span> <span data-ttu-id="00103-528">Przykładem może być, jeśli masz rejestrowania zdarzeń, który rejestruje ciąg i 3 liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="00103-528">An example would be if you have a logging event that logs a string and 3 integers.</span></span>  
  
```csharp  
  
[Event(1)]  
public void LogTime(string tag, int hour, int minute, int second)   
{  
    WriteEvent(1, tag, hour, minute, second);  
}  
  
```  
  
 <span data-ttu-id="00103-529">Można to zrobić bez wywoływania elementu <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, ale jest mniejsza niż musi on być.</span><span class="sxs-lookup"><span data-stu-id="00103-529">You could do this without calling <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, but it would be slower than it needs to be.</span></span> <span data-ttu-id="00103-530">Wynika to z używa tablicami i odbicie Aby dowiedzieć się, co należy zrobić.</span><span class="sxs-lookup"><span data-stu-id="00103-530">That is because it uses arrays and reflection to figure out what to do.</span></span> <span data-ttu-id="00103-531">Jeśli użytkownik loguje się one z dużą szybkością (> 1000 / s), może być warto wprowadzania szybkiego pomocnika, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="00103-531">If you log these at a high rate (> 1000 / sec), it can be worth making a fast helper, as shown in the following example.</span></span> <span data-ttu-id="00103-532">Metoda zasłania istniejące <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="00103-532">The method shadows the existing <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span></span> <span data-ttu-id="00103-533">W związku z tym oryginalny kod wywołujący (LogTime) nie zmienia, ale kompilatora C# będą używać wersji wyspecjalizowanego, który będzie przebiegać szybciej.</span><span class="sxs-lookup"><span data-stu-id="00103-533">Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</span></span>  
  
 <span data-ttu-id="00103-534">Aby skompilować kod niezabezpieczony, należy określić [/ unsafe (opcje kompilatora C#)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) — opcja kompilatora.</span><span class="sxs-lookup"><span data-stu-id="00103-534">To compile unsafe code, you must specify the [/unsafe (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) compiler option.</span></span>  
  
```csharp  
class AnotherEventSource : EventSource {  
  
    [NonEvent]  
    public unsafe void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)  
    {  
  
        fixed (char* arg1Ptr = arg1)  
        {  
            EventData* dataDesc = stackalloc EventData[4];  
  
            dataDesc[0].DataPointer = (IntPtr)arg1Ptr;  
            dataDesc[0].Size = (arg1.Length + 1) * 2; // Size in bytes, including a null terminator.   
            dataDesc[1].DataPointer = (IntPtr)(&arg2);  
            dataDesc[1].Size = 4;  
            dataDesc[2].DataPointer = (IntPtr)(&arg3);  
            dataDesc[2].Size = 4;  
            dataDesc[3].DataPointer = (IntPtr)(&arg4);  
            dataDesc[3].Size = 4;  
  
            WriteEventCore(eventId, 4, dataDesc);  
        }  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="00103-535">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-535">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="00103-536">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-536">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityId">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, params object[] args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid relatedActivityId, object[] args) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, relatedActivityId As Guid, ParamArray args As Object())" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid childActivityID, params object[] args);" FrameworkAlternate="netframework-4.5.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid childActivityID, object[] args) cil managed" FrameworkAlternate="netframework-4.5.1" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" FrameworkAlternate="netframework-4.5.1" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, childActivityID As Guid, ParamArray args As Object())" FrameworkAlternate="netframework-4.5.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid childActivityID, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-4.5.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
        <Parameter Name="childActivityID" Type="System.Guid" Index="1" FrameworkAlternate="netframework-4.5.1" />
        <Parameter Name="args" Type="System.Object[]" Index="2">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-537">Identyfikator, który unikatowo identyfikuje to zdarzenie w ciągu <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-537">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="00103-538">Identyfikator powiązanej aktywności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-538">The related activity identifier.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="args">
          <span data-ttu-id="00103-539">Tablica obiektów, które zawierają dane o zdarzeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-539">An array of objects that contain data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-540">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-540">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="00103-541">Zapisuje zdarzenie, która wskazuje, że bieżące działanie jest powiązany z innego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-541">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-542"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> Metoda rejestruje zdarzenie transferu.</span><span class="sxs-lookup"><span data-stu-id="00103-542">The <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method logs a transfer event.</span></span> <span data-ttu-id="00103-543">Działanie bieżącego wątku jest rejestrowane razem ze zdarzeniem i dzięki temu dwa działania powiązania przez odbiorców zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="00103-543">The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</span></span>  
  
 <span data-ttu-id="00103-544">Zdarzenia ETW metodę wywoływania tej funkcji należy przestrzegać następujących zasad:</span><span class="sxs-lookup"><span data-stu-id="00103-544">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="00103-545">Określ jako pierwszy parametr <xref:System.Guid> o nazwie `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="00103-545">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="00103-546">Określ <xref:System.Diagnostics.Tracing.EventOpcode.Send> lub <xref:System.Diagnostics.Tracing.EventOpcode.Receive> jako <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="00103-546">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="00103-547">Wywołanie <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> przekazywanie w przypadku Identyfikatora, następuje pokrewne Identyfikatora GUID następuje wszystkie parametry metody event jest przekazywany w tej samej kolejności.</span><span class="sxs-lookup"><span data-stu-id="00103-547">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
 <span data-ttu-id="00103-548">Jeśli `args` jest nieużywane, zostanie przekonwertowane na się pusta tablica wynikowa wywołanie funkcji ETW.</span><span class="sxs-lookup"><span data-stu-id="00103-548">If `args` is not used, it is converted to an empty array for the resulting call to ETW.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00103-549">Poniższy przykład kodu pokazuje, jak może można określić źródła zdarzenia, który wywołuje <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span><span class="sxs-lookup"><span data-stu-id="00103-549">The following code example shows how you might can specify an event source that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#1)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityIdCore">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* relatedActivityId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* relatedActivityId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* childActivityID, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netframework-4.5.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* childActivityID, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netframework-4.5.1" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" FrameworkAlternate="netframework-4.5.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* childActivityID, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netframework-4.5.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid*" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5" />
        <Parameter Name="childActivityID" Type="System.Guid*" Index="1" FrameworkAlternate="netframework-4.5.1" />
        <Parameter Name="eventDataCount" Type="System.Int32" Index="2" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" Index="3" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="00103-550">Identyfikator, który unikatowo identyfikuje to zdarzenie w ciągu <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-550">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="00103-551">Wskaźnik do identyfikatora GUID, pokrewne działania identyfikatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-551">A pointer to the GUID of the related activity ID.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="eventDataCount">
          <span data-ttu-id="00103-552">Liczba elementów w <c>danych</c> pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-552">The number of items in the <c>data</c> field.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="00103-553">Wskaźnik do pierwszego elementu w polu danych zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-553">A pointer to the first item in the event data field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00103-554">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-554">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="00103-555">Zapisuje zdarzenie, która wskazuje, że bieżące działanie jest powiązany z innego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00103-555">Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00103-556"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> przypomina <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> metody ale oferuje lepszą wydajność, nie trzeba unbox — bevcause `childActivityID` i `data` argumentów.</span><span class="sxs-lookup"><span data-stu-id="00103-556"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> is similar to the <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method but offers better performance, bevcause it does not have to unbox the `childActivityID` and `data` arguments.</span></span>  
  
 <span data-ttu-id="00103-557">Zdarzenia ETW metodę wywoływania tej funkcji należy przestrzegać następujących zasad:</span><span class="sxs-lookup"><span data-stu-id="00103-557">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="00103-558">Określ jako pierwszy parametr <xref:System.Guid> o nazwie `relatedActivityId`.</span><span class="sxs-lookup"><span data-stu-id="00103-558">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="00103-559">Określ <xref:System.Diagnostics.Tracing.EventOpcode.Send> lub <xref:System.Diagnostics.Tracing.EventOpcode.Receive> jako <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="00103-559">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="00103-560">Wywołanie <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> przekazywanie w przypadku Identyfikatora, następuje pokrewne Identyfikatora GUID następuje wszystkie parametry metody event jest przekazywany w tej samej kolejności.</span><span class="sxs-lookup"><span data-stu-id="00103-560">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00103-561">Poniższy przykład kodu C# pokazano sposób definiowania przeciążenie metody, która wywołuje <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="00103-561">The following C# code example shows how to define a method overload that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#5)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#3)]
[!code-vb[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>