<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventSource.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca45660fa9656f72899783c29825f675f5a9aaf846b6a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60fa9656f72899783c29825f675f5a9aaf846b6a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Provides the ability to create events for event tracing for Windows (ETW).</source>
          <target state="translated">Zapewnia możliwość tworzenia zdarzenia śledzenia zdarzeń systemu Windows (ETW).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This class is intended to be inherited by a user class that provides specific events to be used for ETW.</source>
          <target state="translated">Ta klasa ma być dziedziczone przez klasę użytkownika, która zawiera określone zdarzenia do zastosowania w przypadku funkcji ETW.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> methods are called to log the events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> Metody są wywoływane ze zdarzeniami w rejestrze.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ten typ implementuje <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Do usuwania tego typu, należy wywołać jej <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> metody w <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloku.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak <ph id="ph1">`using`</ph> (w języku C#) lub <ph id="ph2">`Using`</ph> (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interfejsu tematu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The basic functionality of <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is sufficient for most applications.</source>
          <target state="translated">Podstawowe funkcje <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> są wystarczające dla większości aplikacji.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If you want more control over the ETW manifest that is created, you can apply the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventAttribute&gt;</ph> attribute to the methods.</source>
          <target state="translated">Jeśli chcesz mieć większą kontrolę nad manifest ETW, który jest tworzony, możesz zastosować <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventAttribute&gt;</ph> atrybutu metody.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</source>
          <target state="translated">Dla aplikacji źródła zdarzeń zaawansowane, istnieje możliwość przechwycenia polecenia wysyłane do źródła zdarzeń pochodnej i zmienić ustawienia filtrowania, lub spowodować działania (takie jak zrzucanie to struktura danych) do wykonania przez inheritor.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</source>
          <target state="translated">Źródło zdarzenia można aktywować z kontrolerami ETW systemu Windows, takiego jak narzędzie Logman natychmiast.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>It is also possible to programmatically control and intercept the data dispatcher.</source>
          <target state="translated">Istnieje również możliwość programowo kontrolowanie i przechwycić wysyłający dane.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> class provides additional functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> Klasa udostępnia dodatkowe funkcje.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Starting with <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> provides channel support and some of the event source validation rules have been relaxed.</source>
          <target state="translated">Począwszy od <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> zapewnia obsługę kanału i niektórych reguł sprawdzania poprawności źródła zdarzeń został rozluźnić.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This means:</source>
          <target state="translated">Oznacza to:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> types may now implement interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> typy teraz mogą implementować interfejsów.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</source>
          <target state="translated">Umożliwia to korzystanie z typy źródeł zdarzeń w systemów Zaawansowane rejestrowanie, które używają interfejsów, aby zdefiniować wspólny cel rejestrowania.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The concept of a utility event source type has been introduced.</source>
          <target state="translated">Wprowadzono pojęcie narzędzie typu źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overloads.</source>
          <target state="translated">Ta funkcja umożliwia udostępnianie kodu w wielu typy źródeł zdarzeń w projektach na potrzeby scenariuszy, takich jak zoptymalizowanych pod kątem <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> przeciążenia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For a version of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class that provides features such as channel support you are targeting <ph id="ph2">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> or earlier, see <bpt id="p1">[</bpt>Microsoft EventSource Library 1.0.16<ept id="p1">](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource)</ept>.</source>
          <target state="translated">Wersja dla <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> przeznaczona dla klasy, która udostępnia funkcje, takie jak kanału pomagają <ph id="ph2">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> lub wcześniej, zobacz <bpt id="p1">[</bpt>Microsoft EventSource Library 1.0.16<ept id="p1">](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The following example shows a simple implementation of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">W poniższym przykładzie przedstawiono prosty implementacja <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The following example shows a more complex implementation of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">W poniższym przykładzie przedstawiono bardziej złożone wdrożenia <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This type is thread safe.</source>
          <target state="translated">Ten typ jest bezpieczny wątkowo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception when an error occurs in the underlying Windows code; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zgłosić wyjątek po wystąpieniu błędu w kodzie podstawowej systemu Windows w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> klasy i określa, czy należy zgłosić wyjątek po wystąpieniu błędu w podstawowej kod systemu Windows.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">Bitowe połączenie wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified configuration settings.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> klasy z określonych ustawień konfiguracyjnych.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">Określanie <ph id="ph1">`settings`</ph> podczas <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> jest tworzony umożliwia określenie, czy zdarzenie jest zapisywane w formacie samoopisujące lub na podstawie manifestu.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">Ponadto można określić, czy wyjątek powinien być wywoływany, gdy wystąpi błąd podczas zapisywania zdarzeń.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>The name to apply to the event source.</source>
          <target state="translated">Nazwa do zastosowania w źródle zdarzeń.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified name.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> klasy o określonej nazwie.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">Bitowe połączenie wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The key-value pairs that specify traits for the event source.</source>
          <target state="translated">Pary klucz wartość, określających cech dla źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> to be used with non-contract events that contains the specified settings and traits.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> do użycia z innych niż kontraktu zdarzenia, które zawiera określone ustawienia i cech.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">Cechy znajdują się dodatkowe informacje dla każdego zdarzenia i będą interpretowane przez odbiornik zdarzeń.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</source>
          <target state="translated">Cechy są określone jako pary klucz wartość, a jeśli nie zostanie określony w parach, wystąpi wyjątek.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>You can retrieve a trait by passing the key to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, method.</source>
          <target state="translated">Cechy można pobrać przez przekazanie klucza do <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, metody.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">Określanie <ph id="ph1">`settings`</ph> podczas <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> jest tworzony umożliwia określenie, czy zdarzenie jest zapisywane w formacie samoopisujące lub na podstawie manifestu.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">Ponadto można określić, czy wyjątek powinien być wywoływany, gdy wystąpi błąd podczas zapisywania zdarzeń.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> is not specified in key-value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> nie określono w pary klucz wartość.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>The name to apply to the event source.</source>
          <target state="translated">Nazwa do zastosowania w źródle zdarzeń.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">Bitowe połączenie wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified name and settings.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> z określoną nazwą i ustawienia.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">Określanie <ph id="ph1">`settings`</ph> podczas <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> jest tworzony umożliwia określenie, czy zdarzenie jest zapisywane w formacie samoopisujące lub na podstawie manifestu.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">Ponadto można określić, czy wyjątek powinien być wywoływany, gdy wystąpi błąd podczas zapisywania zdarzeń.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The name to apply to the event source.</source>
          <target state="translated">Nazwa do zastosowania w źródle zdarzeń.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">Bitowe połączenie wartości wyliczenia, które określają ustawienia konfiguracji, które mają być stosowane źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The key-value pairs that specify traits for the event source.</source>
          <target state="translated">Pary klucz wartość, określających cech dla źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified configuration settings.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> klasy z określonych ustawień konfiguracyjnych.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">Cechy znajdują się dodatkowe informacje dla każdego zdarzenia i będą interpretowane przez odbiornik zdarzeń.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</source>
          <target state="translated">Cechy są określone jako pary klucz wartość, a jeśli nie zostanie określony w parach, wystąpi wyjątek.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>You can retrieve a trait by passing the key to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, method.</source>
          <target state="translated">Cechy można pobrać przez przekazanie klucza do <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, metody.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Specifying <ph id="ph1">`config`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">Określanie <ph id="ph1">`config`</ph> podczas <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> jest tworzony umożliwia określenie, czy zdarzenie jest zapisywane w formacie samoopisujące lub na podstawie manifestu.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">Ponadto można określić, czy wyjątek powinien być wywoływany, gdy wystąpi błąd podczas zapisywania zdarzeń.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> is not specified in key-value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> nie określono w pary klucz wartość.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>Gets any exception that was thrown during the construction of the event source.</source>
          <target state="translated">Pobiera wszystkie wyjątek zgłoszony podczas konstruowania źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>The exception that was thrown during the construction of the event source, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no exception was thrown.</source>
          <target state="translated">Wyjątek zgłoszony podczas konstruowania źródła zdarzeń lub <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli żaden wyjątek został zgłoszony.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> constructors do not throw exceptions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> Konstruktory nie zgłaszają wyjątki.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>Instead, any exception that is thrown is assigned to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A&gt;</ph> property and logged by the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Zamiast tego każdy wyjątek zgłaszany jest przypisany do <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A&gt;</ph> właściwości i rejestrowane przez <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>Gets the activity ID of the current thread.</source>
          <target state="translated">Pobiera identyfikator działania bieżącego wątku.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>The activity ID of the current thread.</source>
          <target state="translated">Identyfikator działania bieżącego wątku.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</source>
          <target state="translated">Wywołanie <ph id="ph1">`Dispose`</ph> po zakończeniu przy użyciu <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> Pozostawia metody <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> w stanie uniemożliwiającym jego używanie.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> was occupying.</source>
          <target state="translated">Po wywołaniu <ph id="ph1">`Dispose`</ph>, konieczne jest zwolnienie wszystkich odwołań do <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> i <bpt id="p2">[</bpt>implementacja metody Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</source>
          <target state="translated">Wywoływanie zawsze <ph id="ph1">`Dispose`</ph> przed zwolnieniem ostatniego odwołania do <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> obiektu <ph id="ph2">`Finalize`</ph> metody.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zwolnić zasoby zarządzane i niezarządzane; <ph id="ph2">&lt;see langword="false" /&gt;</ph> aby zwolnić tylko zasoby niezarządzane.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Zwalnia zasoby niezarządzane używane przez <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> i opcjonalnie zwalnia zasoby zarządzane.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Ta metoda jest wywoływana przez metodę publiczną <ph id="ph1">`Dispose()`</ph> — metoda i <ph id="ph2">`Finalize`</ph> metody.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> wywołuje chronioną metodę <ph id="ph2">`Dispose(Boolean)`</ph> metody z <ph id="ph3">`disposing`</ph> ustawiono parametr <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> wywołuje <ph id="ph2">`Dispose`</ph> z <ph id="ph3">`disposing`</ph> ustawioną <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> references.</source>
          <target state="translated">Gdy <ph id="ph1">`disposing`</ph> parametr jest <ph id="ph2">`true`</ph>, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> odwołania.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Ta metoda wywołuje <ph id="ph1">`Dispose()`</ph> metody każdego odwołuje się do obiektu.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> można wywoływać wielokrotnie przez inne obiekty.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">W przypadku przesłaniania <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, nie można odwoływać się do obiektów, które zostały wcześniej usunięty we wcześniejszej wywołanie metody Dispose <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat sposobu wdrażania <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, zobacz <bpt id="p1">[</bpt>implementacja metody Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> i <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted">
          <source>Occurs when a command comes from an event listener.</source>
          <target state="translated">Występuje, gdy polecenie pochodzi z odbiornik zdarzeń.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Finalize">
          <source>Allows the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</source>
          <target state="translated">Umożliwia <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, zanim obiekt jest odzyskana przez wyrzucanie elementów bezużytecznych.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The type of the event source.</source>
          <target state="translated">Typ źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The path to the assembly file (.dll) to include in the <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> element of the manifest.</source>
          <target state="translated">Ścieżka do pliku zestawu (dll), aby uwzględnić w <bpt id="p1">[</bpt>dostawcy<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> element manifestu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The XML data string.</source>
          <target state="translated">Ciąg danych XML.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The information about the XML schema for the event manifest, see <bpt id="p1">[</bpt>Event Manifest Schema<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228077)</ept> in the MSDN Library.</source>
          <target state="translated">Zobacz informacje na temat schematu XML dla manifest zdarzeń <bpt id="p1">[</bpt>schematu manifestu zdarzeń<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228077)</ept> w bibliotece MSDN.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The type of the event source.</source>
          <target state="translated">Typ źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The path to the assembly file (.dll) file to include in the <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> element of the manifest.</source>
          <target state="translated">Ścieżka do zestawu (.dll) pliku do uwzględnienia w <bpt id="p1">[</bpt>dostawcy<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> element manifestu.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>A bitwise combination of the enumeration values that specify how the manifest is generated.</source>
          <target state="translated">Bitowe połączenie wartości wyliczenia, które określają, jak jest generowany plik manifestu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">Zwraca ciąg manifestu XML, który jest skojarzony z bieżącego źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The XML data string or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ciąg danych XML lub <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>If <ph id="ph1">`flags`</ph> specifies <ph id="ph2">`OnlyIfNeededForRegistration`</ph> and the <ph id="ph3">`eventSourceType`</ph> specified does not require explicit registration, <ph id="ph4">&lt;xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A&gt;</ph> returns <ph id="ph5">`null`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`flags`</ph> Określa <ph id="ph2">`OnlyIfNeededForRegistration`</ph> i <ph id="ph3">`eventSourceType`</ph> określonego nie wymaga jawnej rejestracji <ph id="ph4">&lt;xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A&gt;</ph> zwraca <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>The type of the event source.</source>
          <target state="translated">Typ źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>Gets the unique identifier for this implementation of the event source.</source>
          <target state="translated">Pobiera unikatowy identyfikator dla tej implementacji źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>A unique identifier for this event source type.</source>
          <target state="translated">Unikatowy identyfikator dla tego typu źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The type of the event source.</source>
          <target state="translated">Typ źródła zdarzeń.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>Gets the friendly name of the event source.</source>
          <target state="translated">Pobiera przyjazną nazwę źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The friendly name of the event source.</source>
          <target state="translated">Przyjazna nazwa źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The default is the simple name of the class.</source>
          <target state="translated">Wartość domyślna to prosta nazwa klasy.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetSources">
          <source>Gets a snapshot of all the event sources for the application domain.</source>
          <target state="translated">Pobiera migawkę wszystkich źródła zdarzeń dla domeny aplikacji.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetSources">
          <source>An enumeration of all the event sources in the application domain.</source>
          <target state="translated">Wyliczenie wszystkich źródeł zdarzeń w domenie aplikacji.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>The key of the trait to get.</source>
          <target state="translated">Klucz cechy do pobrania.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Gets the trait value associated with the specified key.</source>
          <target state="translated">Pobiera wartość cechy skojarzoną z określonym kluczem.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>The trait value associated with the specified key.</source>
          <target state="translated">Wartość cechy skojarzoną z określonym kluczem.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>If the key is not found, returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Jeśli klucz nie zostanie znaleziony, zwraca <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">Cechy znajdują się dodatkowe informacje dla każdego zdarzenia i będą interpretowane przez odbiornik zdarzeń.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Traits are specified as key-value pairs when the event source is constructed.</source>
          <target state="translated">Cechy są określone jako pary klucz wartość, gdy źródło zdarzenia jest tworzony.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Guid">
          <source>The unique identifier for the event source.</source>
          <target state="translated">Unikatowy identyfikator dla źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Guid">
          <source>A unique identifier for the event source.</source>
          <target state="translated">Unikatowy identyfikator dla źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Determines whether the current event source is enabled.</source>
          <target state="translated">Określa, czy bieżące źródło zdarzenia jest włączone.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
          <source>Determines whether the current event source is enabled.</source>
          <target state="translated">Określa, czy bieżące źródło zdarzenia jest włączone.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current event source is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli włączono bieżące źródło zdarzenia; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The level of the event source.</source>
          <target state="translated">Poziom źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The keyword of the event source.</source>
          <target state="translated">Słowo kluczowe źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Determines whether the current event source that has the specified level and keyword is enabled.</source>
          <target state="translated">Określa, czy bieżące źródło zdarzenia, które ma określony poziom i słowo kluczowe jest włączone.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event source is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli włączono źródło zdarzenia; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The result of this method is only an approximation of whether a particular event is active.</source>
          <target state="translated">Wynikiem tej metody jest tylko przybliżeniem czy określonego zdarzenia jest aktywny.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Use it to avoid expensive computation for logging when logging is disabled.</source>
          <target state="translated">Użyj, aby uniknąć kosztownych obliczeń do rejestrowania podczas rejestrowania jest wyłączona.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Event sources may have additional filtering that determines their activity.</source>
          <target state="translated">Źródła zdarzeń mogą mieć dodatkowe filtrowania określająca ich działania.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event level to check.</source>
          <target state="translated">Poziom zdarzenia do sprawdzenia.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>An event source will be considered enabled when its level is greater than or equal to <bpt id="p1">&lt;c&gt;</bpt>level<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Źródłem zdarzenia jest uznawane za aktywny, gdy jego poziom jest większa niż lub równa <bpt id="p1">&lt;c&gt;</bpt>poziom<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event keywords to check.</source>
          <target state="translated">Słowa kluczowe zdarzeń do sprawdzenia.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event channel to check.</source>
          <target state="translated">Zdarzenia kanału do sprawdzenia.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Determines whether the current event source is enabled for events with the specified level, keywords and channel.</source>
          <target state="translated">Określa, czy bieżące źródło zdarzenia jest włączony dla zdarzeń o określonym poziomie, słowa kluczowe i kanał.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event source is enabled for the specified event level, keywords and channel; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli źródło zdarzenia jest włączona dla poziomu określonego zdarzenia, słowa kluczowe i kanału; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The result of this method is only an approximation of whether a particular event is active.</source>
          <target state="translated">Wynikiem tej metody jest tylko przybliżeniem czy określonego zdarzenia jest aktywny.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Use it to avoid expensive computation for logging when logging is disabled.</source>
          <target state="translated">Użyj, aby uniknąć kosztownych obliczeń do rejestrowania podczas rejestrowania jest wyłączona.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Event sources may have additional filtering that determines their activity..</source>
          <target state="translated">Źródła zdarzeń może być dodatkowe filtrowania określająca ich działania.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>If the</source>
          <target state="translated">Jeśli</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The friendly name of the class that is derived from the event source.</source>
          <target state="translated">Przyjazna nazwa klasy, która jest pochodną źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The friendly name of the derived class.</source>
          <target state="translated">Przyjazna nazwa klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The default is the simple name of the class.</source>
          <target state="translated">Wartość domyślna to prosta nazwa klasy.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
          <source>The arguments for the event.</source>
          <target state="translated">Argumenty dla zdarzenia.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
          <source>Called when the current event source is updated by the controller.</source>
          <target state="translated">Wywoływane, gdy bieżące źródło zdarzenia jest aktualizowany przez kontroler.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The event source to send the command to.</source>
          <target state="translated">Źródło zdarzenia, aby wysłać polecenie.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The event command to send.</source>
          <target state="translated">Polecenie zdarzenia do wysłania.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The arguments for the event command.</source>
          <target state="translated">Argumenty dla polecenia zdarzenia.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Sends a command to a specified event source.</source>
          <target state="translated">Wysyła polecenie ze źródłem określonym zdarzeniu.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> forwards the command to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> callback.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> przekazuje polecenia do <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> wywołania zwrotnego.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>What the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> does with the command and its arguments is specific to the event source.</source>
          <target state="translated">Co <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> z polecenia i argumentów jest specyficzna dla źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The command and command arguments are passed to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> callback of the specified event source.</source>
          <target state="translated">Polecenia i argumentów polecenia są przekazywane do <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> wywołania zwrotnego źródła określone zdarzenie.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</source>
          <target state="translated">Jeśli to możliwe bieżące źródło zdarzenia nie wpływają na inne odbiorników zdarzeń filtrowania zdarzeń; jednak może to nie być możliwe, jeśli polecenie powoduje, że wyrzucania elementów bezużytecznych, system opróżniania lub globalnego działania.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Sets the activity ID on the current thread.</source>
          <target state="translated">Ustawia identyfikator działania w bieżącym wątku.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>The current thread's new activity ID, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> to indicate that work on the current thread is not associated with any activity.</source>
          <target state="translated">Nowy identyfikator działania bieżącego wątku lub <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> aby wskazać, że pracy w bieżącym wątku nie jest skojarzony z żadnego działania.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>Sets the activity ID on the current thread.</source>
          <target state="translated">Ustawia identyfikator działania w bieżącym wątku.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A&gt;</ph> method sets the activity ID on a per-thread basis.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A&gt;</ph> metoda Ustawia identyfikator działania na podstawie dla każdego wątku.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>All events on the thread will have that activity ID until a new activity is started on the same thread.</source>
          <target state="translated">Wszystkie zdarzenia w wątku ma ten identyfikator działania, dopóki nowe działanie jest uruchomiona na tym samym wątku.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>This method is called only by libraries that manage their own threads.</source>
          <target state="translated">Ta metoda jest wywoływana tylko przez biblioteki zarządzających ich własnych wątków.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>The current thread's new activity ID, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> to indicate that work on the current thread is not associated with any activity.</source>
          <target state="translated">Nowy identyfikator działania bieżącego wątku lub <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> aby wskazać, że pracy w bieżącym wątku nie jest skojarzony z żadnego działania.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>When this method returns, contains the previous activity ID on the current thread.</source>
          <target state="translated">Po powrocie z tej metody zawiera identyfikator poprzedniego działania w bieżącym wątku.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>Sets the activity ID on the current thread, and returns the previous activity ID.</source>
          <target state="translated">Ustawia identyfikator działania w bieżącym wątku i zwraca identyfikator poprzedniego działania.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29&gt;</ph> method to temporarily overwrite the current thread's activity ID with a new activity ID.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29&gt;</ph> metodę, aby tymczasowo zastąpić bieżący wątek identyfikator działania nowy identyfikator działania.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>You must then restore the previous activity ID by passing the <ph id="ph1">`oldActivityThatWillContinue`</ph> argument to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29&gt;</ph> method.</source>
          <target state="translated">Następnie należy przywrócić identyfikator poprzedniego działania przez przekazanie <ph id="ph1">`oldActivityThatWillContinue`</ph> argument <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Settings">
          <source>Gets the settings applied to this event source.</source>
          <target state="translated">Pobiera ustawienia stosowane do tego źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Settings">
          <source>The settings applied to this event source.</source>
          <target state="translated">Ustawienia stosowane do tego źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.ToString">
          <source>Obtains a string representation of the current event source instance.</source>
          <target state="translated">Pobiera reprezentację ciągu bieżącego wystąpienia źródła zdarzenia.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.ToString">
          <source>The name and unique identifier that identify the current event source.</source>
          <target state="translated">Nazwa i unikatowym identyfikatorem identyfikujące bieżące źródło zdarzeń.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Writes an event.</source>
          <target state="translated">Zapisuje zdarzenie.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source>The name of the event to write.</source>
          <target state="translated">Nazwa zdarzenia do zapisu.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source>Writes an event without fields, but with the specified name and default options.</source>
          <target state="translated">Zapisuje zdarzenie bez pól, ale przy użyciu określonej nazwy i domyślne opcji.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>The name of the event to write.</source>
          <target state="translated">Nazwa zdarzenia do zapisu.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>The options such as level, keywords and operation code for the event.</source>
          <target state="translated">Opcje, takie jak poziom, słowa kluczowe i kod operacji dla zdarzenia.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>Writes an event without fields, but with the specified name and options.</source>
          <target state="translated">Zapisuje zdarzenie bez pól, ale z określoną nazwą i opcjami.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">Typ, który definiuje zdarzenia i skojarzonych danych.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Ten typ musi być typu anonimowego lub oznaczonych <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The name of the event.</source>
          <target state="translated">Nazwa zdarzenia.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The event data.</source>
          <target state="translated">Dane dotyczące zdarzenia.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Ten typ musi być typu anonimowego lub oznaczonych <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>Writes an event with the specified name and data.</source>
          <target state="translated">Zapisuje zdarzenie o określonej nazwie i danych.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`eventName`</ph> jest <ph id="ph2">`null`</ph>, Nazwa zdarzenia jest automatycznie pochodną typu T na dane zdarzeń (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) lub ustalić na podstawie nazwy typu <ph id="ph4">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">Właściwości wystąpienia publicznego <ph id="ph1">`data`</ph> zostanie zapisany rekursywnie można utworzyć pola zdarzeń.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">Typ, który definiuje zdarzenia i skojarzonych danych.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Ten typ musi być typu anonimowego lub oznaczonych <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The name of the event.</source>
          <target state="translated">Nazwa zdarzenia.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The event options.</source>
          <target state="translated">Opcje zdarzeń.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The event data.</source>
          <target state="translated">Dane dotyczące zdarzenia.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Ten typ musi być typu anonimowego lub oznaczonych <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>Writes an event with the specified name, event data and options.</source>
          <target state="translated">Zapisuje zdarzenia o określonej nazwie, dane zdarzeń i opcje.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`eventName`</ph> jest <ph id="ph2">`null`</ph>, Nazwa zdarzenia jest automatycznie pochodną typu T na dane zdarzeń (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) lub ustalić na podstawie nazwy typu <ph id="ph4">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">Właściwości wystąpienia publicznego <ph id="ph1">`data`</ph> zostanie zapisany rekursywnie można utworzyć pola zdarzeń.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">Typ, który definiuje zdarzenia i skojarzonych danych.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Ten typ musi być typu anonimowego lub oznaczonych <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The name of the event.</source>
          <target state="translated">Nazwa zdarzenia.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The event options.</source>
          <target state="translated">Opcje zdarzeń.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The event data.</source>
          <target state="translated">Dane dotyczące zdarzenia.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Ten typ musi być typu anonimowego lub oznaczonych <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>Writes an event with the specified name, options and event data.</source>
          <target state="translated">Zapisuje zdarzenia o określonej nazwie, opcje i dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`eventName`</ph> jest <ph id="ph2">`null`</ph>, Nazwa zdarzenia jest automatycznie pochodną typu T na dane zdarzeń (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) lub ustalić na podstawie nazwy typu <ph id="ph4">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">Właściwości wystąpienia publicznego <ph id="ph1">`data`</ph> zostanie zapisany rekursywnie można utworzyć pola zdarzeń.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">Typ, który definiuje zdarzenia i skojarzonych danych.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Ten typ musi być typu anonimowego lub oznaczonych <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The name of the event.</source>
          <target state="translated">Nazwa zdarzenia.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The event options.</source>
          <target state="translated">Opcje zdarzeń.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The ID of the activity associated with the event.</source>
          <target state="translated">Identyfikator działania skojarzonego ze zdarzeniem.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The ID of an associated activity, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> if there is no associated activity.</source>
          <target state="translated">Identyfikator skojarzonego działania lub <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> Jeśli nic się nie skojarzone.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The event data.</source>
          <target state="translated">Dane dotyczące zdarzenia.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Ten typ musi być typu anonimowego lub oznaczonych <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>Writes an event with the specified name, options, related activity and event data.</source>
          <target state="translated">Zapisuje zdarzenia o określonej nazwie, opcje, pokrewne działania i dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`eventName`</ph> jest <ph id="ph2">`null`</ph>, Nazwa zdarzenia jest automatycznie pochodną typu T na dane zdarzeń (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) lub ustalić na podstawie nazwy typu <ph id="ph4">`T`</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">Właściwości wystąpienia publicznego <ph id="ph1">`data`</ph> zostanie zapisany rekursywnie można utworzyć pola zdarzeń.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Writes an event by using the provided event identifier and optional arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty opcjonalne.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">`WriteEvent`</ph> method provides overloads with combinations of string and integer arguments.</source>
          <target state="translated"><ph id="ph1">`WriteEvent`</ph> Metoda zapewnia przeciążenia z kombinacji argumenty typu string i integer.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If none of these combinations match the parameters for the call, the compiler uses the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> overload, which is considerably slower than the other overloads.</source>
          <target state="translated">Jeśli żadna z tych kombinacji parametrów połączenia, kompilator używa <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> przeciążenia, które jest znacznie mniejsza niż inne przeciążenia.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>See the overload page for details.</source>
          <target state="translated">Odwiedź stronę przeciążenia, aby uzyskać szczegółowe informacje.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>In all cases, the <ph id="ph1">`eventid`</ph> parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated">We wszystkich przypadkach <ph id="ph1">`eventid`</ph> parametru musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You can also create a custom overload by using the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> method.</source>
          <target state="translated">Można również utworzyć niestandardowe przeciążenia przy użyciu <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>Writes an event by using the provided event identifier.</source>
          <target state="translated">Zapisuje zdarzenie za pomocą identyfikatora podanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">Poniższy przykład przedstawia użycie przeciążenie tej metody można zapisać zdarzenia.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>A byte array argument.</source>
          <target state="translated">Argument tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>Writes an event by using the provided event identifier and byte array argument.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argument liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer argument.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument 32-bitową liczbę całkowitą.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">Poniższy przykład przedstawia użycie przeciążenie tej metody można zapisać zdarzenia.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argumentem 64-bitowa liczba całkowita.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit integer argument.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument 64-bitową liczbę całkowitą.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>An array of objects.</source>
          <target state="translated">Tablica obiektów.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>Writes an event by using the provided event identifier and array of arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i tablicę argumentów.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</source>
          <target state="translated">Domyślnie kompilator wywołuje tego przeciążenia, jeśli parametry połączenia nie są zgodne z jednego z innych przeciążenia metody.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>This overload is much slower than the other overloads, because it does the following:</source>
          <target state="translated">To przeciążenie jest znacznie mniejsza niż inne przeciążenia, ponieważ wykonuje następujące zadania:</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It allocates an array to hold the variable argument.</source>
          <target state="translated">Przydzielania tablicy do przechowywania zmiennych argumentów.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It casts each parameter to an object (which causes allocations for primitive types).</source>
          <target state="translated">Rzutuje go każdego parametru do obiektu (co powoduje, że alokacji dla typów pierwotnych).</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It assigns these objects to the array.</source>
          <target state="translated">Te obiekty przypisuje do tablicy.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It calls the function, which then determines the type of each argument so it can be serialized for ETW.</source>
          <target state="translated">Wywołuje funkcję, która określa typ argumentu, dlatego może być Zserializowany dla funkcji ETW.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</source>
          <target state="translated">Wysokie obciążenie tego przeciążenia nie ma znaczenia podczas śledzenia zdarzeń niskim, ponieważ metoda jest używana tylko wtedy, gdy dostawca jest włączony.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>However, for high-volume events, the performance overhead can be significant.</source>
          <target state="translated">Jednak w przypadku dużej liczby zdarzeń, zmniejszenie wydajności może być istotne.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You can avoid using <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> for high-volume payloads by creating a new, faster  overload with the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> method.</source>
          <target state="translated">Możesz uniknąć używania <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> dla dużych ładunków przez utworzenie nowego, szybszego przeciążenia z <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>Writes an event by using the provided event identifier and string argument.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argument ciągu.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">Poniższy przykład przedstawia użycie przeciążenie tej metody można zapisać zdarzenia.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argument liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argument liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 32-bitową liczbę całkowitą.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>A 32-bit integer argument.</source>
          <target state="translated">Argument 32-bitową liczbę całkowitą.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>Writes an event by using the provided event identifier and 32-bit integer and string arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 32-bitową liczbę całkowitą i argumenty typu string.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>A 64-bit integer argument.</source>
          <target state="translated">Argument 64-bitową liczbę całkowitą.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>A byte array argument.</source>
          <target state="translated">Argument tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</source>
          <target state="translated">Zapisuje dane zdarzeń przy użyciu określonego identyfikatora i 64-bitową liczbę całkowitą i argumenty tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argumentem 64-bitowa liczba całkowita.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argumentem 64-bitowa liczba całkowita.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 64-bitowych.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>A 64-bit integer argument.</source>
          <target state="translated">Argument 64-bitową liczbę całkowitą.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i 64-bitową liczbę całkowitą i argumenty typu string.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">Argument liczba całkowita 32-bitowych.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argumentem 64-bitowa liczba całkowita.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>Writes an event by using the provided event identifier and string arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty typu string.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argument liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argument liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">Argument liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 32-bitową liczbę całkowitą.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argumentem 64-bitowa liczba całkowita.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argumentem 64-bitowa liczba całkowita.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">Argumentem 64-bitowa liczba całkowita.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty 64-bitowych.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">Argument liczba całkowita 32-bitowych.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">Argument liczba całkowita 32-bitowych.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumentów.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">Ta wartość powinna wynosić od 0 do 65535.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">Argument ciągu.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>Writes an event by using the provided event identifier and string arguments.</source>
          <target state="translated">Zapisuje zdarzenie przy użyciu identyfikatora podanego zdarzenia i argumenty typu string.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">Podczas implementacji metody, który jest identyfikowany jako zdarzenia ETW w <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-klasy.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">Należy wywołać klasy podstawowej <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> metody przekazywanie <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> i te same argumenty co metody implementowane podobny do poniższego przykładu.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The event identifier.</source>
          <target state="translated">Identyfikator zdarzenia.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The number of event data items.</source>
          <target state="translated">Liczba elementów danych zdarzenia.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The structure that contains the event data.</source>
          <target state="translated">Struktura, która zawiera dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Creates a new <ph id="ph1">&lt;see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /&gt;</ph> overload by using the provided event identifier and event data.</source>
          <target state="translated">Tworzy nową <ph id="ph1">&lt;see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /&gt;</ph> przeciążenia przy użyciu identyfikatora podanego zdarzenia i dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> musi być większa niż 0 i mniejsza niż 65535 lub mogą wystąpić błędy podczas operacji.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">Jeśli wystąpią błędy, możesz uzyskać więcej informacji o źródle błędu sprawdzając strumienia wyjściowego debugera, jeśli istnieje debuger dołączony do procesu wyzwalania zdarzenia.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">Można także wyszukać błędy raportowane w strumieniu zdarzeń funkcji ETW, jeśli odbiornik ETW na źródło zdarzenia, w którym występuje błąd.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>This protected method  enables users to define new <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overloads that are faster than the provided overloads.</source>
          <target state="translated">Ta metoda chroniona umożliwia użytkownikom na definiowanie nowych <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> przeciążeń, które są szybsze niż podana przeciążenia.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Creating a new overload involves unsafe code.</source>
          <target state="translated">Tworzenie nowego przeciążenia obejmuje niebezpieczny kod.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</source>
          <target state="translated">Podstawowa procedura polega na stosie przydzielić tablicy deskryptory danych zdarzenia jest zgodna z liczbą elementów ładunku.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>For each payload item, set the correct size and value in the event data array.Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> with the initialized array.</source>
          <target state="translated">Dla każdego elementu ładunku ustaw odpowiedni rozmiar, a wartość zdarzeń tablicy danych. Wywołanie <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> z zainicjowanej tablicy.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The following example shows how to add a <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overload that accepts four arguments.</source>
          <target state="translated">Poniższy przykład przedstawia sposób dodawania <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> przeciążenia, które akceptuje cztery argumenty.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>An example would be if you have a logging event that logs a string and 3 integers.</source>
          <target state="translated">Przykładem może być, jeśli masz rejestrowania zdarzeń, który rejestruje ciąg i 3 liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>You could do this without calling <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>, but it would be slower than it needs to be.</source>
          <target state="translated">Można to zrobić bez wywoływania elementu <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>, ale jest mniejsza niż musi on być.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>That is because it uses arrays and reflection to figure out what to do.</source>
          <target state="translated">Wynika to z używa tablicami i odbicie Aby dowiedzieć się, co należy zrobić.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>If you log these at a high rate (&gt; 1000 / sec), it can be worth making a fast helper, as shown in the following example.</source>
          <target state="translated">Jeśli użytkownik loguje się one z dużą szybkością (&gt; 1000 / s), może być warto wprowadzania szybkiego pomocnika, jak pokazano w poniższym przykładzie.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The method shadows the existing <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>.</source>
          <target state="translated">Metoda zasłania istniejące <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</source>
          <target state="translated">W związku z tym oryginalny kod wywołujący (LogTime) nie zmienia, ale kompilatora C# będą używać wersji wyspecjalizowanego, który będzie przebiegać szybciej.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>To compile unsafe code, you must specify the <bpt id="p1">[</bpt>/unsafe (C# Compiler Options)<ept id="p1">](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md)</ept> compiler option.</source>
          <target state="translated">Aby skompilować kod niezabezpieczony, należy określić <bpt id="p1">[</bpt>/ unsafe (opcje kompilatora C#)<ept id="p1">](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md)</ept> — opcja kompilatora.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>An identifier that uniquely identifies this event within the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</source>
          <target state="translated">Identyfikator, który unikatowo identyfikuje to zdarzenie w ciągu <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The related activity identifier.</source>
          <target state="translated">Identyfikator powiązanej aktywności.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>An array of objects that contain data about the event.</source>
          <target state="translated">Tablica obiektów, które zawierają dane o zdarzeniu.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Writes an event that indicates that the current activity is related to another activity.</source>
          <target state="translated">Zapisuje zdarzenie, która wskazuje, że bieżące działanie jest powiązany z innego działania.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> method logs a transfer event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> Metoda rejestruje zdarzenie transferu.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</source>
          <target state="translated">Działanie bieżącego wątku jest rejestrowane razem ze zdarzeniem i dzięki temu dwa działania powiązania przez odbiorców zdarzeń.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Your ETW event method calling this function must follow these guidelines:</source>
          <target state="translated">Zdarzenia ETW metodę wywoływania tej funkcji należy przestrzegać następujących zasad:</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Specify the first parameter as a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> named <ph id="ph2">`relatedActivityId`</ph>.</source>
          <target state="translated">Określ jako pierwszy parametr <ph id="ph1">&lt;xref:System.Guid&gt;</ph> o nazwie <ph id="ph2">`relatedActivityId`</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Specify either <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> as the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Określ <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> lub <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> jako <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> przekazywanie w przypadku Identyfikatora, następuje pokrewne Identyfikatora GUID następuje wszystkie parametry metody event jest przekazywany w tej samej kolejności.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>If <ph id="ph1">`args`</ph> is not used, it is converted to an empty array for the resulting call to ETW.</source>
          <target state="translated">Jeśli <ph id="ph1">`args`</ph> jest nieużywane, zostanie przekonwertowane na się pusta tablica wynikowa wywołanie funkcji ETW.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The following code example shows how you might can specify an event source that calls <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak może można określić źródła zdarzenia, który wywołuje <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>An identifier that uniquely identifies this event within the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</source>
          <target state="translated">Identyfikator, który unikatowo identyfikuje to zdarzenie w ciągu <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>A pointer to the GUID of the related activity ID.</source>
          <target state="translated">Wskaźnik do identyfikatora GUID, pokrewne działania identyfikatora.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The number of items in the <bpt id="p1">&lt;c&gt;</bpt>data<ept id="p1">&lt;/c&gt;</ept> field.</source>
          <target state="translated">Liczba elementów w <bpt id="p1">&lt;c&gt;</bpt>danych<ept id="p1">&lt;/c&gt;</ept> pola.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>A pointer to the first item in the event data field.</source>
          <target state="translated">Wskaźnik do pierwszego elementu w polu danych zdarzenia.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Writes an event that indicates that the current activity is related to another activity.</source>
          <target state="translated">Zapisuje zdarzenie, która wskazuje, że bieżące działanie jest powiązany z innego działania.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> is similar to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> method but offers better performance, bevcause it does not have to unbox the <ph id="ph3">`childActivityID`</ph> and <ph id="ph4">`data`</ph> arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> przypomina <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> metody ale oferuje lepszą wydajność, nie trzeba unbox — bevcause <ph id="ph3">`childActivityID`</ph> i <ph id="ph4">`data`</ph> argumentów.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Your ETW event method calling this function must follow these guidelines:</source>
          <target state="translated">Zdarzenia ETW metodę wywoływania tej funkcji należy przestrzegać następujących zasad:</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Specify the first parameter as a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> named <ph id="ph2">`relatedActivityId`</ph>.</source>
          <target state="translated">Określ jako pierwszy parametr <ph id="ph1">&lt;xref:System.Guid&gt;</ph> o nazwie <ph id="ph2">`relatedActivityId`</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Specify either <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> as the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Określ <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> lub <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> jako <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> przekazywanie w przypadku Identyfikatora, następuje pokrewne Identyfikatora GUID następuje wszystkie parametry metody event jest przekazywany w tej samej kolejności.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The following C# code example shows how to define a method overload that calls <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu C# pokazano sposób definiowania przeciążenie metody, która wywołuje <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>