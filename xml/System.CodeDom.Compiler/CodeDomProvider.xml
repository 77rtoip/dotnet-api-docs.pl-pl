<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c00ef54e956a8f875ecf66668178f9222eacafe4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36647509" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CodeDomProvider = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ccaae-101">Udostępnia klasę podstawową dla <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccaae-101">Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
      </span>
      <span data-ttu-id="ccaae-102">Ta klasa jest abstrakcyjna.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccaae-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> może służyć do tworzenia i pobierania wystąpień generatory kodu i kompilatory kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> can be used to create and retrieve instances of code generators and code compilers.</span></span> <span data-ttu-id="ccaae-104">Generatory kodu może służyć do generowania kodu w określonym języku, a kompilatory kodu może służyć do kompilowania kodu do zestawów.</span><span class="sxs-lookup"><span data-stu-id="ccaae-104">Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-105">W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], metody udostępniona w generatora kodu i kompilatora kodu są dostępne bezpośrednio od dostawcy kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-105">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider.</span></span> <span data-ttu-id="ccaae-106">Nie należy wywołać <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> lub <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> dostępu do metody i te metody są oznaczone jako przestarzałe.</span><span class="sxs-lookup"><span data-stu-id="ccaae-106">You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete.</span></span> <span data-ttu-id="ccaae-107">Dotyczy to istniejące wcześniej, a także nowy implementacji dostawcy kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-107">This applies to preexisting as well as new code provider implementations.</span></span>  
  
 <span data-ttu-id="ccaae-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji zwykle zawiera kod, kodu lub generowania interfejsów kompilacji dla generowania kodu i zarządzanie nimi kompilacji dla jednego języka programowania.</span><span class="sxs-lookup"><span data-stu-id="ccaae-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</span></span> <span data-ttu-id="ccaae-109">Wiele języków obsługiwanych przez <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji, które są dostarczane z [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ccaae-109">Several languages are supported by <xref:System.CodeDom.Compiler.CodeDomProvider> implementations that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span></span> <span data-ttu-id="ccaae-110">Te języki C#, Visual Basic C++ i JScript.</span><span class="sxs-lookup"><span data-stu-id="ccaae-110">These languages include C#, Visual Basic, C++, and JScript.</span></span> <span data-ttu-id="ccaae-111">Deweloperzy lub dostawców kompilatora można zaimplementować <xref:System.CodeDom.Compiler.ICodeGenerator> i <xref:System.CodeDom.Compiler.ICodeCompiler> interfejsy i podaj <xref:System.CodeDom.Compiler.CodeDomProvider> który oferuje rozszerzone wsparcie CodeDOM dla innych języków programowania.</span><span class="sxs-lookup"><span data-stu-id="ccaae-111">Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a <xref:System.CodeDom.Compiler.CodeDomProvider> that extends CodeDOM support to other programming languages.</span></span>  
  
 <span data-ttu-id="ccaae-112">[ &lt;System.codedom&gt; elementu](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) w konfiguracji maszyny pliku (Machine.config) zapewnia mechanizm deweloperom i dostawcom kompilatora dodać ustawienia konfiguracji dla dodatkowych <xref:System.CodeDom.Compiler.CodeDomProvider>implementacji.</span><span class="sxs-lookup"><span data-stu-id="ccaae-112">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <xref:System.CodeDom.Compiler.CodeDomProvider> implementations.</span></span>  
  
 <span data-ttu-id="ccaae-113"><xref:System.CodeDom.Compiler.CodeDomProvider> Klasa udostępnia metody statyczne do odnajdywania i wyliczyć <xref:System.CodeDom.Compiler.CodeDomProvider> implementacje na komputerze.</span><span class="sxs-lookup"><span data-stu-id="ccaae-113">The <xref:System.CodeDom.Compiler.CodeDomProvider> class provides static methods to discover and enumerate the <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="ccaae-114"><xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> Metoda zwróci wartość ustawienia dla wszystkich <xref:System.CodeDom.Compiler.CodeDomProvider> implementacje na komputerze.</span><span class="sxs-lookup"><span data-stu-id="ccaae-114">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="ccaae-115"><xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> Metoda zwróci wartość ustawienia dla określonego <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji, w oparciu o nazwę języka programowania.</span><span class="sxs-lookup"><span data-stu-id="ccaae-115">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific <xref:System.CodeDom.Compiler.CodeDomProvider> implementation, based on the programming language name.</span></span> <span data-ttu-id="ccaae-116"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> Metoda zwraca wystąpienie klasy <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji dla określonego języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-116">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="ccaae-117">Aby uzyskać więcej informacji na temat ustawień dostawcy języka w pliku konfiguracji, zobacz [schemat ustawień dostawcy języka i kompilatora](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span><span class="sxs-lookup"><span data-stu-id="ccaae-117">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-118">Ta klasa sprawia, że żądanie łącza i dziedziczenie żądanie na poziomie klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="ccaae-119">A <xref:System.Security.SecurityException> jest generowany, jeśli bezpośredniego obiektu wywołującego lub Klasa pochodna nie ma uprawnienia pełnego zaufania.</span><span class="sxs-lookup"><span data-stu-id="ccaae-119">A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission.</span></span> <span data-ttu-id="ccaae-120">Aby uzyskać szczegółowe informacje dotyczące żądania kontroli zabezpieczeń, zobacz [Linkdemand](~/docs/framework/misc/link-demands.md) i [Inheritancedemand](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="ccaae-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-121">Następujący przykład program może Generowanie i kompilowanie kodu źródłowego, na podstawie programu, który wyświetla "Hello World" przy użyciu modelu CodeDOM <xref:System.Console> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-121">The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <xref:System.Console> class.</span></span> <span data-ttu-id="ccaae-122">Podano interfejsu użytkownika formularzy systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="ccaae-122">A Windows Forms user interface is provided.</span></span> <span data-ttu-id="ccaae-123">Użytkownik może wybrać docelowy język z kilku opcji programowania: C#, Visual Basic i JScript.</span><span class="sxs-lookup"><span data-stu-id="ccaae-123">The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</span></span>  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="ccaae-124">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccaae-124">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="ccaae-125">Nie można użyć tej klasy w kodzie częściowo zaufanym.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccaae-125">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="ccaae-126">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccaae-126">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="ccaae-127">Klasa ta nie może być dziedziczona przez kod częściowo zaufany.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccaae-127">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="ccaae-128">
        <para>W wersji systemu .NET Framework 1.0 i 1.1 dostawców kodu składają się z implementacji <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, i <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />. W [! INCLUDE[dnprdnlong](~/includes/dnprdnlong-MD.MD)] <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, i <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metody są nieaktualne oraz metody <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> i <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> są bezpośrednio dostępne w <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> klasy. Należy zastąpić tych metod w implementacji dostawcy kodu i nie mogą wywoływać metod bazowych.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ccaae-128">
          <para>In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />. In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, and <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> methods are obsolete, and the methods of <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> are directly available in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class. You should override those methods in your code provider implementation and not call the base methods.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-129">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="ccaae-130">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-130">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ccaae-131">Nie można użyć tej klasy w kodzie częściowo zaufanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-131">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromDom (options, compilationUnits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="ccaae-132">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> obiekt, który wskazuje ustawienia kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-132">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="compilationUnits">
          <span data-ttu-id="ccaae-133">Tablica typu <see cref="T:System.CodeDom.CodeCompileUnit" /> wskazujące kodu do kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-133">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-134">Kompiluje zestawu na podstawie <see cref="N:System.CodeDom" /> drzew zawartych w określonej tablicy <see cref="T:System.CodeDom.CodeCompileUnit" /> obiektów przy użyciu ustawienia określonego kompilatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-134">Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-135">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> obiekt, który wskazuje wyniki kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-135">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-136">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeCompiler> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-136">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-137">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-137">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-138">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeCompiler> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-138">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-139">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-139">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-140">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metody dla zgodności z istniejących dostawców, które używają kompilatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> od dostawcy kodu, który nie korzysta z kompilatora kodu można wywołać metody klasy podstawowej.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-140">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromFile (options, fileNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="ccaae-141">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> obiekt, który wskazuje ustawienia kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-141">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="fileNames">
          <span data-ttu-id="ccaae-142">Tablica nazw plików do skompilowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-142">An array of the names of the files to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-143">Kompiluje zestawu z kodu źródłowego zawarte w określonych plików, za pomocą ustawienia określonego kompilatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-143">Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-144">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> obiekt, który wskazuje wyniki kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-144">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-145">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeCompiler> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-145">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-146">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-146">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-147">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeCompiler> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-147">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-148">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-148">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-149">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metody dla zgodności z istniejących dostawców, które używają kompilatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> od dostawcy kodu, który nie korzysta z kompilatora kodu można wywołać metody klasy podstawowej.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-149">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromSource (options, sources)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="ccaae-150">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> obiekt, który wskazuje Ustawienia kompilatora dla tej kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-150">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation.</span>
          </span>
        </param>
        <param name="sources">
          <span data-ttu-id="ccaae-151">Tablica ciągów kodu źródłowego do skompilowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-151">An array of source code strings to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-152">Kompiluje z określonej tablicy ciągi zawierające kod źródłowy, przy użyciu ustawienia kompilatora określonego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-152">Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-153">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> obiekt, który wskazuje wyniki kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-153">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-154">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeCompiler> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-154">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-155">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-155">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-156">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeCompiler> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-156">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-157">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-157">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-158">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> metody dla zgodności z istniejących dostawców, które używają kompilatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> od dostawcy kodu, który nie korzysta z kompilatora kodu można wywołać metody klasy podstawowej.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-158">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="abstract member CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="codeDomProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-159">W przypadku przesłonięcia w klasie pochodnej tworzy nowy kompilator kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-159">When overridden in a derived class, creates a new code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-160">
            <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> Które mogą być używane dla kompilacji <see cref="N:System.CodeDom" /> na podstawie reprezentacji kodu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-160">An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-161">Ta metoda jest przestarzała w [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ccaae-161">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="ccaae-162">Zalecaną alternatywą jest wywołanie <xref:System.CodeDom.Compiler.ICodeCompiler> metod, które są bezpośrednio dostępne w dostawcy kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-162">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-163">
            <para>W [! INCLUDE[dnprdnlong](~/includes/dnprdnlong-MD.MD)], należy zaimplementować <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> elementów członkowskich w <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> klasy i zgłosić <see cref="T:System.NotSupportedException" /> gdy ta metoda jest wywoływana.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-163">
              <para>In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string&#xA;override this.CreateEscapedIdentifier : string -&gt; string" Usage="codeDomProvider.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ccaae-164">Ciąg, do których chcesz utworzyć identyfikatora o zmienionym znaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-164">The string for which to create an escaped identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-165">Tworzy identyfikator o zmienionym znaczeniu dla określonej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-165">Creates an escaped identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-166">Identyfikator o zmienionym znaczeniu dla wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-166">The escaped identifier for the value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-167"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> testy czy identyfikator powoduje konflikt ze wszystkimi zastrzeżone lub słowa kluczowe języka, a jeśli tak, zwraca takiej nazwie formatowania kodu ucieczki specyficzny dla języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-167"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="ccaae-168">Jest to określane identyfikatora o zmienionym znaczeniu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-168">This is referred to an escaped identifier.</span></span> <span data-ttu-id="ccaae-169">Identyfikator o zmienionym znaczeniu zawiera takie same `value` , ale formatowanie kod wyjścia dodane do odróżnienia identyfikator ze słowem kluczowym.</span><span class="sxs-lookup"><span data-stu-id="ccaae-169">The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="ccaae-170">Dwa przykłady wdrożenia są poprzedzających `value` z "@" lub zestawianie `value` z "[" i "]".</span><span class="sxs-lookup"><span data-stu-id="ccaae-170">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-171">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-171">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-172">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-172">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-173">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-173">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-174">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-174">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-175">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-175">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-176">W przypadku przesłonięcia w klasie pochodnej tworzy nowy generator kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-176">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-177">W przypadku przesłonięcia w klasie pochodnej tworzy nowy generator kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-177">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-178">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> Można wygenerować <see cref="N:System.CodeDom" /> na podstawie reprezentacji kodu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-178">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-179">Ta metoda jest przestarzała w [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ccaae-179">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="ccaae-180">Zalecaną alternatywą jest wywołanie <xref:System.CodeDom.Compiler.ICodeGenerator> metod, które są bezpośrednio dostępne w <xref:System.CodeDom.Compiler.CodeDomProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-180">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-181">
            <para>W [! INCLUDE[dnprdnlong](~/includes/dnprdnlong-MD.MD)], należy zaimplementować <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> elementów członkowskich w <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> klasy i zgłosić <see cref="T:System.NotSupportedException" /> gdy ta metoda jest wywoływana.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-181">
              <para>In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="ccaae-182">A <see cref="T:System.IO.TextWriter" /> służące do danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-182">A <see cref="T:System.IO.TextWriter" /> to use to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-183">W przypadku przesłonięcia w klasie pochodnej tworzy nowy generator kodu przy użyciu określonego <see cref="T:System.IO.TextWriter" /> dla danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-183">When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-184">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> Można wygenerować <see cref="N:System.CodeDom" /> na podstawie reprezentacji kodu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-184">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-185">Ta metoda używa określonego <xref:System.IO.TextWriter> dla danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="ccaae-185">This method uses the specified <xref:System.IO.TextWriter> for output.</span></span> <span data-ttu-id="ccaae-186">Ta metoda obsługuje więcej zoptymalizowane generowanie kodu przyrostowo aktualizującym kodu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="ccaae-186">This method supports more optimized code generation that incrementally updates the source code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-187">Klasa podstawowa implementacja wywołuje <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę, która jest przestarzała w [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] i powoduje <xref:System.NotSupportedException> Jeśli <xref:System.CodeDom.Compiler.ICodeGenerator> obiektu nie są zwracane.</span><span class="sxs-lookup"><span data-stu-id="ccaae-187">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="ccaae-188">Nazwa pliku do wypełniania wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-188">The file name to output to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-189">W przypadku przesłonięcia w klasie pochodnej tworzy nowy generator kodu przy użyciu określonej nazwy pliku dla danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-189">When overridden in a derived class, creates a new code generator using the specified file name for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-190">
            <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> Można wygenerować <see cref="N:System.CodeDom" /> na podstawie reprezentacji kodu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-190">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-191">Ta metoda używa określonej nazwy pliku dla danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="ccaae-191">This method uses the specified file name for output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-192">Klasa podstawowa implementacja wywołuje <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę, która jest przestarzała w [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] i powoduje <xref:System.NotSupportedException> Jeśli <xref:System.CodeDom.Compiler.ICodeGenerator> obiektu nie są zwracane.</span><span class="sxs-lookup"><span data-stu-id="ccaae-192">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberSignature Language="F#" Value="abstract member CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser&#xA;override this.CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser" Usage="codeDomProvider.CreateParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-193">W przypadku przesłonięcia w klasie pochodnej tworzy nowy analizator kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-193">When overridden in a derived class, creates a new code parser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-194">
            <see cref="T:System.CodeDom.Compiler.ICodeParser" /> Można przeanalizować kodu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-194">An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code.</span>
          </span>
          <span data-ttu-id="ccaae-195">Podstawowa implementacja zawsze zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-195">The base implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-196">Pobiera <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> wystąpienia dla określonego języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-196">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="ccaae-197">Nazwa języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-197">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-198">Pobiera <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> wystąpienia dla określonego języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-198">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-199">Dostawcy CodeDOM, która jest zaimplementowana dla nazwy określonego języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-199">A CodeDOM provider that is implemented for the specified language name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-200">Ta metoda jest najczęściej używane do utworzenia wystąpienia dostawcy kodu w aplikacji, która może opcjonalnie użyj jednej z wielu dostawców.</span><span class="sxs-lookup"><span data-stu-id="ccaae-200">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="ccaae-201"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> można określić w czasie wykonywania dostawcy kodu, który chcesz utworzyć wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ccaae-201"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> allows you to specify at run time the code provider you wish to instantiate.</span></span> <span data-ttu-id="ccaae-202">Jeśli znasz w czasie projektowania, które kodu dostawcy ma być używany, użytkownik powinien utworzyć wystąpienia dostawcy tego kodu zamiast używać <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ccaae-202">If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method.</span></span>  
  
 <span data-ttu-id="ccaae-203"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> Metoda zwraca <xref:System.CodeDom.Compiler.CodeDomProvider> wystąpienie dla danego języka nazwy; jest podobna do wywoływania <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metody z typem dostawcy języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-203">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method with the language provider type.</span></span> <span data-ttu-id="ccaae-204">Użyj <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> Aby znaleźć dynamicznie implementacji skonfigurowanego dostawcy, jako nazwę języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-204">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> when you want to dynamically find a configured provider implementation for a language name.</span></span>  
  
 <span data-ttu-id="ccaae-205">Jeśli więcej niż jedna implementacja dostawcy jest skonfigurowany dla nazwy języka <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> zwraca wystąpienia dostawcy dla ostatniego pasującego elementu konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ccaae-205">If more than one provider implementation is configured for the language name, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> returns a provider instance for the last matching configuration element.</span></span>  
  
 <span data-ttu-id="ccaae-206">Użyj <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> metoda przeładowania implementacji dostawcy określonego języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-206">Use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload when you want a specific language provider implementation.</span></span> <span data-ttu-id="ccaae-207">Na przykład użyć <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> metodę, aby pobrać wystąpienia dostawcy, który obsługuje nazwy języka `"CSharp"`; użyj <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> przeciążenie metody można pobrać wystąpienia dostawcy specjalnie z myślą o <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementacji.</span><span class="sxs-lookup"><span data-stu-id="ccaae-207">For example, use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method to get a provider instance that supports the language name `"CSharp"`; use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="ccaae-208">Należy używać [\], CultureInfo, obiekt\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5b%5D%29?displayProperty=nameWithType > metodę, jeśli masz wiele dostawcy kodu dla języka i którymi chcesz utworzyć wystąpienia dostawcy określonego kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-208">You should use the [\], CultureInfo, Object\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</span></span>  
  
 <span data-ttu-id="ccaae-209"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> Metoda sprawdza, czy co najmniej jeden dostawca obsługuje określonego języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-209">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="ccaae-210">Sprawdź poprawność nazwy języka przy użyciu <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> przed przekazaniem go do <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span><span class="sxs-lookup"><span data-stu-id="ccaae-210">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span></span> <span data-ttu-id="ccaae-211">W przypadku przekazania nazwa nieobsługiwany język do <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="ccaae-211">If you pass an unsupported language name to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> is thrown.</span></span>  
  
 <span data-ttu-id="ccaae-212"><xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> Metoda może służyć do określenia wszystkich <xref:System.CodeDom.Compiler.CodeDomProvider> implementacje na komputerze, włączając dodatkowe implementacje zapewniane przez deweloperów i kompilatora dostawców, którzy są objęci [ &lt;system.codedom &gt; Elementu](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) w pliku konfiguracji komputera (Machine.config).</span><span class="sxs-lookup"><span data-stu-id="ccaae-212">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config).</span></span>  
  
 <span data-ttu-id="ccaae-213"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> Metoda zwraca wystąpienie klasy <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji dla określonego języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-213">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="ccaae-214">Język nazwy jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="ccaae-214">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-215">Poniższy przykład kodu Określa <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji dla języka i wyświetla skonfigurowane ustawienia dla dostawcy języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-215">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="ccaae-216">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.Compiler.CompilerInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-216">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="ccaae-217">
            <paramref name="language" /> Nie ma skonfigurowanego dostawcy na tym komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-217">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccaae-218">
            <paramref name="language" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-218">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ccaae-219">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-219">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="ccaae-220">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-220">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ccaae-221">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-221">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider (language, providerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="ccaae-222">Nazwa języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-222">The language name.</span>
          </span>
        </param>
        <param name="providerOptions">
          <span data-ttu-id="ccaae-223">Kolekcja opcje dostawcy z pliku konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-223">A collection of provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-224">Pobiera <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> wystąpienia dla określonych opcji języka i dostawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-224">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-225">Dostawcy CodeDOM implementowany nazwy określony język i opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-225">A CodeDOM provider that is implemented for the specified language name and options.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-226">Ta metoda jest najczęściej używane do utworzenia wystąpienia dostawcy kodu w aplikacji, która może opcjonalnie użyj jednej z wielu dostawców.</span><span class="sxs-lookup"><span data-stu-id="ccaae-226">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="ccaae-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> można określić w czasie wykonywania za pośrednictwem dostawcy kodu, który chcesz utworzyć wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ccaae-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> enables you to specify at run time the version of the code provider you want to instantiate.</span></span> <span data-ttu-id="ccaae-228">Jeśli znasz w czasie projektowania, które kodu dostawcy ma być używany, należy utworzyć wystąpienia dostawcy tego kodu zamiast <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> metody.</span><span class="sxs-lookup"><span data-stu-id="ccaae-228">If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="ccaae-229">Użyj <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> aby dynamicznie znaleźć implementacji skonfigurowanego dostawcy dla określonego języka i opcje.</span><span class="sxs-lookup"><span data-stu-id="ccaae-229">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> when you want to dynamically find a configured provider implementation for a specific language and options.</span></span> <span data-ttu-id="ccaae-230">Język nazwy jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="ccaae-230">Language names are case-insensitive.</span></span> <span data-ttu-id="ccaae-231">Informacji o obsługiwanych dostawcy opcjach Zobacz szczegółowej dokumentacji dostawcy CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="ccaae-231">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="ccaae-232">Uzyskać informacji o weryfikacji dostawcy i wywoływania dostawcy, jeśli więcej niż jedna implementacja dostawcy jest skonfigurowany dla nazwy języka, zobacz sekcję uwag <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> metody.</span><span class="sxs-lookup"><span data-stu-id="ccaae-232">For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-233">Poniższy przykład pokazuje, jak można utworzyć wystąpienia dostawcy przy użyciu `providerOptions` parametru.</span><span class="sxs-lookup"><span data-stu-id="ccaae-233">The following example shows how to create an instance of a provider by using the `providerOptions` parameter.</span></span>  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string&#xA;override this.CreateValidIdentifier : string -&gt; string" Usage="codeDomProvider.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ccaae-234">Ciąg, do których chcesz wygenerować prawidłowym identyfikatorem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-234">The string for which to generate a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-235">Tworzy prawidłowy identyfikator dla określonej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-235">Creates a valid identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-236">Nieprawidłowy identyfikator dla określonej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-236">A valid identifier for the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-237"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> sprawdza, czy identyfikator powoduje konflikt z zastrzeżonego lub słowa kluczowe języka, a jeśli tak, próbuje zwrócić prawidłowy identyfikator nazw, które nie powoduje konfliktu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-237"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</span></span> <span data-ttu-id="ccaae-238">Zazwyczaj zwrócony identyfikator tylko nieznacznie są modyfikowane w celu odróżnienia identyfikator od słowa kluczowego. na przykład nazwa może być poprzedzona znakiem podkreślenia ("_").</span><span class="sxs-lookup"><span data-stu-id="ccaae-238">Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-239">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-239">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-240">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-240">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-241">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-241">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-242">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-242">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-243">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-243">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-244">Pobiera domyślne rozszerzenie nazwy pliku do użycia na potrzeby plików kodu źródłowego w bieżącym języku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-244">Gets the default file name extension to use for source code files in the current language.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccaae-245">Rozszerzenie nazwy pliku odpowiadający rozszerzenia plików źródłowych bieżącego języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-245">A file name extension corresponding to the extension of the source files of the current language.</span>
          </span>
          <span data-ttu-id="ccaae-246">Podstawowa implementacja zawsze zwraca <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-246">The base implementation always returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-247">Ta właściwość jest używana przez generatory kodu i kompilatory kodu wskaż, jakie rozszerzenia plików powinny być generowane lub używane.</span><span class="sxs-lookup"><span data-stu-id="ccaae-247">This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-248">Poniższy przykład kodu tworzy wystąpienie <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ccaae-248">The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccaae-249">W przykładzie przedstawiono nazwę dostawcy, skrót kodu i domyślne rozszerzenie nazwy pliku dla nowego wystąpienia dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-249">The example displays the provider name, hash code and default file name extension for the new provider instance.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromCompileUnit (compileUnit, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="compileUnit">
          <span data-ttu-id="ccaae-250">A <see cref="T:System.CodeDom.CodeCompileUnit" /> do których chcesz wygenerować kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-250">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ccaae-251">
            <see cref="T:System.IO.TextWriter" /> Jest wysłany kod wyjścia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-251">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="ccaae-252">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> wskazujące opcje do użycia podczas generowania kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-252">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-253">Generuje kod dla określona jednostka kompilacji kodu Document Object Model (CodeDOM) i wysyła je w określonym składniku zapisywania tekstu, przy użyciu podanych opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-253">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-254">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-254">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-255">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-255">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-256">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-256">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-257">W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> do generowania kodu dla aplikacji "Hello World" z <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="ccaae-257">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> method to generate code for a "Hello World" application from a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="ccaae-258">Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.Compiler.CodeDomProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-258">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-259">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-259">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-260">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-260">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromExpression (expression, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="ccaae-261">A <see cref="T:System.CodeDom.CodeExpression" /> obiekt, który określa wyrażenie, do których chcesz wygenerować kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-261">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ccaae-262">
            <see cref="T:System.IO.TextWriter" /> Do których dane wyjściowe są wysyłane kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-262">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="ccaae-263">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> wskazujące opcje do użycia podczas generowania kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-263">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-264">Generuje kod dla określonego wyrażenia kodu Document Object Model (CodeDOM) i wysyła je w określonym składniku zapisywania tekstu, przy użyciu podanych opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-264">Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-265">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-265">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-266">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-266">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-267">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-267">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-268">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-268">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-269">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-269">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="ccaae-270">A <see cref="T:System.CodeDom.CodeTypeMember" /> obiekt, który wskazuje element członkowski, do których chcesz wygenerować kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-270">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ccaae-271">
            <see cref="T:System.IO.TextWriter" /> Do których dane wyjściowe są wysyłane kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-271">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="ccaae-272">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> wskazujące opcje do użycia podczas generowania kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-272">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-273">Generuje kod dla określonego deklaracji elementu członkowskiego kodu Document Object Model (CodeDOM) i wysyła je w określonym składniku zapisywania tekstu, przy użyciu podanych opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-273">Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-274">Klasa podstawowa implementacja zwraca <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="ccaae-274">The base class implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="ccaae-275">Zobacz <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> dokumentacji opisujące implementacja tej metody.</span><span class="sxs-lookup"><span data-stu-id="ccaae-275">See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> for documentation describing an implementation of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-276">W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> metody zaimplementowanego przez <xref:Microsoft.CSharp.CSharpCodeProvider> i <xref:Microsoft.VisualBasic.VBCodeProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-276">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-277">Ta metoda nie zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-277">This method is not overridden in a derived class.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromNamespace (codeNamespace, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">
          <span data-ttu-id="ccaae-278">A <see cref="T:System.CodeDom.CodeNamespace" /> obiekt, który wskazuje przestrzeń nazw, do których chcesz wygenerować kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-278">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ccaae-279">
            <see cref="T:System.IO.TextWriter" /> Do których dane wyjściowe są wysyłane kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-279">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="ccaae-280">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> wskazujące opcje do użycia podczas generowania kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-280">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-281">Generuje kod dla określonego obszaru nazw kodu Document Object Model (CodeDOM) i wysyła je w określonym składniku zapisywania tekstu, przy użyciu podanych opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-281">Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-282">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-282">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-283">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-283">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-284">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-284">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-285">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-285">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-286">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-286">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromStatement (statement, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="statement">
          <span data-ttu-id="ccaae-287">A <see cref="T:System.CodeDom.CodeStatement" /> zawierającej elementy CodeDOM, do których chcesz wygenerować kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-287">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ccaae-288">
            <see cref="T:System.IO.TextWriter" /> Do których dane wyjściowe są wysyłane kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-288">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="ccaae-289">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> wskazujące opcje do użycia podczas generowania kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-289">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-290">Generuje kod dla określonej instrukcji kodu Document Object Model (CodeDOM) i wysyła je w określonym składniku zapisywania tekstu, przy użyciu podanych opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-290">Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-291">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-291">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-292">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-292">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-293">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-293">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-294">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-294">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-295">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-295">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromType (codeType, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeType">
          <span data-ttu-id="ccaae-296">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiekt, który wskazuje typ, do których chcesz wygenerować kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-296">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ccaae-297">
            <see cref="T:System.IO.TextWriter" /> Do których dane wyjściowe są wysyłane kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-297">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="ccaae-298">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> wskazujące opcje do użycia podczas generowania kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-298">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-299">Generuje kod dla określonego deklaracji typu kodu Document Object Model (CodeDOM) i wysyła je w określonym składniku zapisywania tekstu, przy użyciu podanych opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-299">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-300">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-300">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-301">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-301">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-302">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-302">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-303">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-303">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-304">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-304">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberSignature Language="F#" Value="static member GetAllCompilerInfo : unit -&gt; System.CodeDom.Compiler.CompilerInfo[]" Usage="System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-305">Zwraca język ustawienia konfiguracji dostawcy i kompilatora dla tego komputera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-305">Returns the language provider and compiler configuration settings for this computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-306">Tablica typu <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> reprezentujący wszystkie skonfigurowane ustawienia <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-306">An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-307">Użyj <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> — metoda wyliczania ustawienia dostawcy języka na komputerze.</span><span class="sxs-lookup"><span data-stu-id="ccaae-307">Use the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method to enumerate the language provider settings on a computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-308">W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], języka domyślnych dostawców dostarczanych przez program .NET Framework nie są określone w [ &lt;system.codedom&gt; elementu](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) konfiguracji kompilatora sekcji i nie można usunąć, dlatego ta Metoda zwraca informacje o domyślnych dostawców i wszystkie określone w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ccaae-308">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-309">Poniższy przykład kodu wylicza dostawcy języka na komputerze i wyświetla ustawienia konfiguracji i kompilatora dla każdego dostawcy języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-309">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="ccaae-310">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.Compiler.CompilerInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-310">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ccaae-311">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-311">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="ccaae-312">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-312">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ccaae-313">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-313">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member GetCompilerInfo : string -&gt; System.CodeDom.Compiler.CompilerInfo" Usage="System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="ccaae-314">Nazwa języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-314">A language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-315">Zwraca język dostawcy i kompilatora ustawienia konfiguracji dla określonego języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-315">Returns the language provider and compiler configuration settings for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-316">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> obiektu wypełniane przy użyciu ustawienia skonfigurowanego <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-316">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-317">[ &lt;System.codedom&gt; elementu](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) w konfiguracji maszyny plik zawiera języka dostawcy i kompilatora ustawienia konfiguracji dla każdego <xref:System.CodeDom.Compiler.CodeDomProvider> wdrożenia na komputerze.</span><span class="sxs-lookup"><span data-stu-id="ccaae-317">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="ccaae-318">Informacje o plikach konfiguracji komputera, zobacz sekcję plików konfiguracji maszyny w [konfigurowania aplikacji](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span><span class="sxs-lookup"><span data-stu-id="ccaae-318">For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span></span> <span data-ttu-id="ccaae-319"><xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> Metoda szuka każdego elementu konfiguracji dostawcy dla nazwy określonego języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-319">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method searches each provider configuration element for the specified language name.</span></span> <span data-ttu-id="ccaae-320">Zwrócona <xref:System.CodeDom.Compiler.CompilerInfo> wystąpienie zawiera ustawienia dostawcy i kompilatora języka skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="ccaae-320">The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.</span></span>  
  
 <span data-ttu-id="ccaae-321"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> Metoda sprawdza, czy co najmniej jeden dostawca obsługuje określonego języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-321">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="ccaae-322">Sprawdź poprawność nazwy języka przy użyciu <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> przed przekazaniem go do <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="ccaae-322">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span></span> <span data-ttu-id="ccaae-323">Zapobiega to zgłaszanie <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> podczas uzyskiwania dostępu <xref:System.CodeDom.Compiler.CompilerInfo> wystąpienia dla nazwy nieobsługiwany język.</span><span class="sxs-lookup"><span data-stu-id="ccaae-323">This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.</span></span>  
  
 <span data-ttu-id="ccaae-324">Jeśli więcej niż jedna implementacja dostawcy jest skonfigurowany dla nazwy języka <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> zwraca ustawienia z ostatniego dostawcę pasującego elementu konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ccaae-324">If more than one provider implementation is configured for the input language name, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> returns the settings from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="ccaae-325">Język nazwy jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="ccaae-325">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-326">Poniższy przykład kodu Określa <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji dla języka i wyświetla skonfigurowane ustawienia dla dostawcy języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-326">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="ccaae-327">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.Compiler.CompilerInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-327">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="ccaae-328">
            <paramref name="language" /> Nie ma skonfigurowanego dostawcy na tym komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-328">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="ccaae-329">
            <paramref name="language" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-329">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ccaae-330">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-330">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="ccaae-331">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-331">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ccaae-332">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-332">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : Type -&gt; System.ComponentModel.TypeConverter&#xA;override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="codeDomProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="ccaae-333">Typ obiektu do pobrania dla konwertera typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-333">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-334">Pobiera <see cref="T:System.ComponentModel.TypeConverter" /> dla określonego typu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-334">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-335">A <see cref="T:System.ComponentModel.TypeConverter" /> dla określonego typu lub <see langword="null" /> Jeśli <see cref="T:System.ComponentModel.TypeConverter" /> dla nie można odnaleźć określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-335">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or <see langword="null" /> if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-336">Klasy pochodne mogą przesłaniać tę metodę zapewnienie określonych rodzajów typy konwerterów dla określonych typów danych.</span><span class="sxs-lookup"><span data-stu-id="ccaae-336">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member GetLanguageFromExtension : string -&gt; string" Usage="System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="ccaae-337">Rozszerzenie nazwy pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-337">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-338">Zwraca nazwę języka skojarzone z rozszerzeniem nazwy pliku, zgodnie z konfiguracją <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> kompilatora sekcji konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-338">Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-339">Nazwa języka, skojarzone z rozszerzeniem nazwy pliku, zgodnie z konfiguracją <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> Ustawienia kompilatora konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-339">A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-340">[ &lt;System.codedom&gt; elementu](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) w konfiguracji maszyny pliku (Machine.config) zawiera języka dostawcy i kompilatora ustawienia konfiguracji dla każdego <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji na poziomie komputer.</span><span class="sxs-lookup"><span data-stu-id="ccaae-340">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="ccaae-341"><xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> Metoda szuka każdego elementu konfiguracji dla określonego rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="ccaae-341">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> method searches each provider configuration element for the specified file name extension.</span></span>  
  
 <span data-ttu-id="ccaae-342"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> Metoda sprawdza, czy co najmniej jeden dostawca obsługuje konkretnego rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="ccaae-342">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension.</span></span> <span data-ttu-id="ccaae-343">Sprawdź poprawność using rozszerzenie nazwy pliku <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> przed przekazaniem go do <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="ccaae-343">You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span></span> <span data-ttu-id="ccaae-344">Zapobiega to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> z zgłaszanie <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> nieobsługiwane rozszerzenie.</span><span class="sxs-lookup"><span data-stu-id="ccaae-344">This prevents <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> for an unsupported file name extension.</span></span>  
  
 <span data-ttu-id="ccaae-345">Jeśli rozszerzenie nazwy pliku wejściowego obsługuje implementacji dostawcy i wielu języków skonfigurowanych dla tego dostawcy, następnie <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> zwraca nazwę języka pierwszy dla tego dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-345">If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the first language name for that provider.</span></span> <span data-ttu-id="ccaae-346">Jeśli więcej niż jedna implementacja dostawcy jest skonfigurowany dla danego rozszerzenia nazwy pliku wejściowego <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> zwraca nazwę języka z ostatniego dostawcę pasującego elementu konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ccaae-346">If more than one provider implementation is configured for the input file name extension, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the language name from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="ccaae-347">Język nazwy i rozszerzenia nazw plików jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="ccaae-347">Language names and file name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-348">Poniższy przykład kodu Określa <xref:System.CodeDom.Compiler.CodeDomProvider> wykonania na rozszerzenie nazwy pliku wejściowego i wyświetla skonfigurowane ustawienia dla dostawcy języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-348">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="ccaae-349">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.Compiler.CompilerInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-349">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="ccaae-350">
            <paramref name="extension" /> Nie ma dostawcy języka skonfigurowanych na tym komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-350">The <paramref name="extension" /> does not have a configured language provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="ccaae-351">
            <paramref name="extension" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-351">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ccaae-352">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-352">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="ccaae-353">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-353">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ccaae-354">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-354">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string&#xA;override this.GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeDomProvider.GetTypeOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="ccaae-355">A <see cref="T:System.CodeDom.CodeTypeReference" /> wskazujące typ do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-355">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-356">Pobiera typ wskazuje określony <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-356">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-357">Sformatowany tekst reprezentację określonego typu dla języka, w którym kod jest generowany przez tego generatora kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-357">A text representation of the specified type, formatted for the language in which code is generated by this code generator.</span>
          </span>
          <span data-ttu-id="ccaae-358">W języku Visual Basic, na przykład, przekazując <see cref="T:System.CodeDom.CodeTypeReference" /> dla <see cref="T:System.Int32" /> zwraca typ "Int".</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-358">In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-359">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-359">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-360">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-360">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-361">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-361">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-362">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-362">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-363">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-363">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member IsDefinedExtension : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="ccaae-364">Rozszerzenie nazwy pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-364">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-365">Sprawdza, czy rozszerzenie nazwy pliku ma skojarzoną <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementacji skonfigurowanych na komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-365">Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-366">
            <see langword="true" /> Jeśli <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementacja jest skonfigurowana dla określonego rozszerzenia nazwy pliku, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-366">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-367">[ &lt;System.codedom&gt; elementu](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) w konfiguracji maszyny pliku (Machine.config) zawiera języka dostawcy i kompilatora ustawienia konfiguracji dla każdego <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji na poziomie komputer.</span><span class="sxs-lookup"><span data-stu-id="ccaae-367">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="ccaae-368"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> Metody przeszukuje elementy konfiguracji dostawcy dla określonego rozszerzenia nazwy pliku.</span><span class="sxs-lookup"><span data-stu-id="ccaae-368">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method searches the provider configuration elements for the specified file name extension.</span></span>  
  
 <span data-ttu-id="ccaae-369">Rozszerzenia nazw plików jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="ccaae-369">File name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-370">Poniższy przykład kodu Określa <xref:System.CodeDom.Compiler.CodeDomProvider> wykonania na rozszerzenie nazwy pliku wejściowego i wyświetla skonfigurowane ustawienia dla dostawcy języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-370">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="ccaae-371">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.Compiler.CompilerInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-371">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccaae-372">
            <paramref name="extension" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-372">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ccaae-373">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-373">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="ccaae-374">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-374">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ccaae-375">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-375">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member IsDefinedLanguage : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="ccaae-376">Nazwa języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-376">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-377">Sprawdza, czy język ma <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementacji skonfigurowanych na komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-377">Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-378">
            <see langword="true" /> Jeśli <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementacja jest skonfigurowana dla określonego języka; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-378">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-379">[ &lt;System.codedom&gt; elementu](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) w konfiguracji maszyny pliku (Machine.config) zawiera języka dostawcy i kompilatora ustawienia konfiguracji dla każdego <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji na poziomie komputer.</span><span class="sxs-lookup"><span data-stu-id="ccaae-379">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="ccaae-380"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> Metody przeszukuje elementy konfiguracji dostawcy dla nazwy określonego języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-380">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method searches the provider configuration elements for the specified language name.</span></span>  
  
 <span data-ttu-id="ccaae-381">Język nazwy jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="ccaae-381">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccaae-382">Poniższy przykład kodu Określa <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji dla języka i wyświetla skonfigurowane ustawienia dla dostawcy języka.</span><span class="sxs-lookup"><span data-stu-id="ccaae-382">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="ccaae-383">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.Compiler.CompilerInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-383">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccaae-384">
            <paramref name="language" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-384">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ccaae-385">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-385">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="ccaae-386">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-386">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ccaae-387">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-387">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool&#xA;override this.IsValidIdentifier : string -&gt; bool" Usage="codeDomProvider.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ccaae-388">Wartość, aby sprawdzić jako prawidłowy identyfikator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-388">The value to verify as a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-389">Zwraca wartość wskazującą, czy określona wartość jest nieprawidłowym identyfikatorem dla bieżącego języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-389">Returns a value that indicates whether the specified value is a valid identifier for the current language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-390">
            <see langword="true" /> Jeśli <paramref name="value" /> parametr jest prawidłowy identyfikator; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-390">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-391">Ta metoda sprawdza, czy identyfikator jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-391">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="ccaae-392"><xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> Metoda jest właściwe dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-392">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> method is provider specific.</span></span> <span data-ttu-id="ccaae-393">Identyfikatory, które są prawidłowe dla jednego dostawcę może nie być prawidłowe dla innych dostawców.</span><span class="sxs-lookup"><span data-stu-id="ccaae-393">Identifiers that are valid for one provider might not be valid for other providers.</span></span> <span data-ttu-id="ccaae-394">Jeśli `value` zawiera znaki spoza zakresu znaków ASCII, Sprawdź identyfikator dla wszystkich języków, które mogą być wykorzystane do skompilować kod.</span><span class="sxs-lookup"><span data-stu-id="ccaae-394">If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-395">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-395">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-396">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-396">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-397">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-397">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-398">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-398">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-399">
            <para>W przypadku przesłaniania <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> w klasie pochodnej projektowania metodę, aby zwrócić <see langword="true" /> tylko wtedy, gdy wartość pasuje do reguły języka i nie powoduje konflikt ze słowem kluczowym.  Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-399">
              <para>When overriding <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in a derived class, design the method to return <see langword="true" /> only if the value fits the rules of the language and does not conflict with a keyword.  If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOptions : System.CodeDom.Compiler.LanguageOptions" Usage="System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccaae-400">Pobiera identyfikator funkcji języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-400">Gets a language features identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccaae-401">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> wskazujące specjalnych funkcji języka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-401">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomProvider.Parse codeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="codeStream">
          <span data-ttu-id="ccaae-402">A <see cref="T:System.IO.TextReader" /> obiekt, który jest używany do odczytu kodu do przeanalizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-402">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccaae-403">Kompiluje kod czytać ze strumienia określonego tekstu w <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-403">Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-404">A <see cref="T:System.CodeDom.CodeCompileUnit" /> zawierający reprezentację przeanalizowany kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-404">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-405">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeParser> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-405">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-406">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-406">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-407">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeParser> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-407">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-408">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-408">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-409">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy analizator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> metody dla zgodności z istniejących usługodawców analizatory składni kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeParser" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> od dostawcy kodu, który nie używa analizator kodu można wywołać metody klasy podstawowej.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-409">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a parser in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> method for compatibility with preexisting providers that use code parsers. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code parser.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool&#xA;override this.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeDomProvider.Supports supports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport">To be added.</param>
        <param name="supports">To be added.</param>
        <summary>
          <span data-ttu-id="ccaae-410">Zwraca wartość wskazującą, czy obsługują generowanie kodu określonego podano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-410">Returns a value indicating whether the specified code generation support is provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccaae-411">
            <see langword="true" /> Jeśli obsługują generowanie kodu określonego podano; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-411">
              <see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccaae-412">Ta metoda może być wywołana z liczbą <xref:System.CodeDom.Compiler.GeneratorSupport> flagi jednocześnie w celu zbadania zestaw funkcji, dołączając zestaw flag odpowiednia możliwość wraz z pliku binarnego `OR` — operator (&#124;).</span><span class="sxs-lookup"><span data-stu-id="ccaae-412">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccaae-413">W wersji systemu .NET Framework 1.0 i 1.1, ta metoda jest zapewniona przez <xref:System.CodeDom.Compiler.ICodeGenerator> wdrożenia, który jest zwracany przez <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> metodę dostawcy.</span><span class="sxs-lookup"><span data-stu-id="ccaae-413">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="ccaae-414">W wersji 2.0 ta metoda może być wywoływana bezpośrednio na dostawcy kodu nawet wtedy, gdy nie jest on przesłaniany przez dostawcę kodu.</span><span class="sxs-lookup"><span data-stu-id="ccaae-414">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="ccaae-415">Jeśli dostawca kodu nie przesłonić tę metodę <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji jest wywoływana przez klasę podstawową.</span><span class="sxs-lookup"><span data-stu-id="ccaae-415">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="ccaae-416">Żadna metoda ta ani <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metoda zostanie przesłonięta w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-416">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ccaae-417">
            <para>Jeśli przesłonięcia tej metody należy wywołać nie odpowiedniej metody klasy podstawowej. Klasa podstawowa metoda tworzy generator w klasie pochodnej przy użyciu przestarzałe <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> metody dla zgodności z istniejących dostawców, które używają generatory kodu. Klasa podstawowa metoda wywołuje metodę odpowiednik <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> wykonania tej funkcji. Otrzymasz <see cref="T:System.NotImplementedException" /> można wywołać metody klasy podstawowej od dostawcy kodu, który nie używa generatora kodu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ccaae-417">
              <para>If you override this method, you must not call the corresponding method of the base class. The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators. The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function. You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>