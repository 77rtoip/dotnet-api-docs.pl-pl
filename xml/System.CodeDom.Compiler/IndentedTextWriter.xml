<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IndentedTextWriter.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56c6c425bf138fa2189c8fa9ed63675d054078a35.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c6c425bf138fa2189c8fa9ed63675d054078a35</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>Provides a text writer that can indent new lines by a tab string token.</source>
          <target state="translated">Zawiera edytor tekstu, który można zmniejszyć wcięcia nowe wiersze przez tokenem ciągu kartę.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter&gt;</ph> extends a <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> by providing methods that insert a tab string and track the current indentation level.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter&gt;</ph> Rozszerza <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> zapewniając metod wstawiania ciągu kartę i śledzić bieżący poziom wcięcia.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>Text formatted with multiple indentation levels is useful for generated code, so this class is used by CodeDOM code generator implementations.</source>
          <target state="translated">Tekst sformatowany wiele poziomów wcięć jest przydatne dla wygenerowanego kodu, więc ta klasa jest używana przez implementacje generatora kodu CodeDOM.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>The tab string is the string that each indentation consists of.</source>
          <target state="translated">Ciąg kartę jest wcięcie każdego składa się z ciągu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>Typically the tab string contains white space.</source>
          <target state="translated">Zwykle ciąg karta zawiera biały znak.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">Ta klasa zawiera żądanie łącza i dziedziczenia na poziomie klasy stosowane do wszystkich składowych.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> jest generowany, gdy bezpośredniego obiektu wywołującego lub Klasa pochodna nie ma uprawnienia pełnego zaufania.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">Aby uzyskać szczegółowe informacje dotyczące żądania kontroli zabezpieczeń, zobacz <bpt id="p1">[</bpt>Linkdemand<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> i <bpt id="p2">[</bpt>Inheritancedemand<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>The following code example demonstrates using an <ph id="ph1">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter&gt;</ph> to write text at different levels of indentation.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, przy użyciu <ph id="ph1">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter&gt;</ph> próbę zapisania tekstu na różnych poziomach wcięcia.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">Nie można użyć tej klasy w kodzie częściowo zaufanym.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>for full trust for inheritors.</source>
          <target state="translated">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">Klasa ta nie może być dziedziczona przez kod częściowo zaufany.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /&gt;</ph> class using the specified text writer and default tab string.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /&gt;</ph> przy użyciu podanego modułu zapisującego i domyślne kartę ciągu znaków.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to use for output.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> Do użycia dla danych wyjściowych.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /&gt;</ph> class using the specified text writer and default tab string.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /&gt;</ph> przy użyciu podanego modułu zapisującego i domyślne kartę ciągu znaków.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez kod częściowo zaufany.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to use for output.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> Do użycia dla danych wyjściowych.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The tab string to use for indentation.</source>
          <target state="translated">Karta ciąg do użycia na potrzeby wcięcia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /&gt;</ph> class using the specified text writer and tab string.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /&gt;</ph> przy użyciu ciągu moduł zapisujący i kartę określony tekst.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The following code example demonstrates creating an <ph id="ph1">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter&gt;</ph> using a specified tab string.</source>
          <target state="translated">W poniższym przykładzie kodu pokazano tworzenie <ph id="ph1">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter&gt;</ph> za pomocą ciągu określonej karty.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez kod częściowo zaufany.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Close">
          <source>Closes the document being written to.</source>
          <target state="translated">Zamyka dokument zapisywana.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
          <source>Specifies the default tab string.</source>
          <target state="translated">Określa domyślny ciąg kartę.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
          <source>This field is constant.</source>
          <target state="translated">To pole jest stałe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
          <source>The default tab string consists of a single white space.</source>
          <target state="translated">Domyślny ciąg kartę składa się z jednego biały znak.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
          <source>(" ")</source>
          <target state="translated">(" ")</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez kod częściowo zaufany.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.IndentedTextWriter.Encoding">
          <source>Gets the encoding for the text writer to use.</source>
          <target state="translated">Pobiera kodowanie do użycia w składniku zapisywania tekstu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.IndentedTextWriter.Encoding">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> that indicates the encoding for the text writer to use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> Wskazujące kodowanie do użycia w składniku zapisywania tekstu.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Flush">
          <source>Flushes the stream.</source>
          <target state="translated">Opróżnienia strumienia.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Flush">
          <source>This clears the stream of any data.</source>
          <target state="translated">Czyści strumienia danych.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
          <source>Gets or sets the number of spaces to indent.</source>
          <target state="translated">Pobiera lub ustawia liczbę spacji wcięcia.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
          <source>The number of spaces to indent.</source>
          <target state="translated">Liczba spacji wcięcia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
          <source>The following code example demonstrates setting the indentation level of an <ph id="ph1">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje ustawienie poziom wcięcia <ph id="ph1">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
          <source>The indentation level is the number of tab strings to prefix each line with.</source>
          <target state="translated">Poziom wcięcia jest liczba parametrów kartę do prefiksu każdego wiersza.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.IndentedTextWriter.InnerWriter">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to use.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> do użycia.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.IndentedTextWriter.InnerWriter">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> Do użycia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.IndentedTextWriter.NewLine">
          <source>Gets or sets the new line character to use.</source>
          <target state="translated">Pobiera lub ustawia znaku nowego wiersza do użycia.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.IndentedTextWriter.NewLine">
          <source>The new line character to use.</source>
          <target state="translated">Znak nowego wiersza do użycia.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.OutputTabs">
          <source>Outputs the tab string once for each level of indentation according to the <ph id="ph1">&lt;see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" /&gt;</ph> property.</source>
          <target state="translated">Generuje ciąg kartę raz dla każdego poziomu wcięcia zgodnie z <ph id="ph1">&lt;see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>Writes the specified string to the text stream.</source>
          <target state="translated">Zapisuje określony ciąg strumienia tekstu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Boolean)">
          <source>The Boolean value to write.</source>
          <target state="translated">Wartość logiczna do zapisu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a Boolean value to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu wartość logiczna strumienia tekstu.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char)">
          <source>The character to write.</source>
          <target state="translated">Znak do zapisu.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char)">
          <source>Writes a character to the text stream.</source>
          <target state="translated">Zapisuje znak w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[])">
          <source>The character array to write.</source>
          <target state="translated">Tablica znaków do zapisu.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[])">
          <source>Writes a character array to the text stream.</source>
          <target state="translated">Zapisuje tablicy znaków w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;see langword="double" /&gt;</ph> to write.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="double" /&gt;</ph> Do zapisu.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Double)">
          <source>Writes the text representation of a Double to the text stream.</source>
          <target state="translated">Zapisuje reprezentację tekstu wartość o podwójnej precyzji strumienia tekstu.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int32)">
          <source>The integer to write.</source>
          <target state="translated">Liczba całkowita do zapisu.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int32)">
          <source>Writes the text representation of an integer to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu integer strumienia tekstu.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int64)">
          <source>The 8-byte integer to write.</source>
          <target state="translated">8-bajtowych liczb całkowitych do zapisu.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int64)">
          <source>Writes the text representation of an 8-byte integer to the text stream.</source>
          <target state="translated">Zapisuje reprezentację tekst 8-bajtowych liczb całkowitych strumienia tekstu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Object)">
          <source>The object to write.</source>
          <target state="translated">Obiekt do zapisania.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu obiektu strumienia tekstu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;see langword="single" /&gt;</ph> to write.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="single" /&gt;</ph> Do zapisu.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Single)">
          <source>Writes the text representation of a Single to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu jeden do strumienia tekstu.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String)">
          <source>The string to write.</source>
          <target state="translated">Ciąg do zapisu.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String)">
          <source>Writes the specified string to the text stream.</source>
          <target state="translated">Zapisuje określony ciąg strumienia tekstu.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object)">
          <source>The formatting string.</source>
          <target state="translated">Ciąg formatowania.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object)">
          <source>The object to write into the formatted string.</source>
          <target state="translated">Obiekt do zapisania w sformatowanego ciągu.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object)">
          <source>Writes out a formatted string, using the same semantics as specified.</source>
          <target state="translated">Dokonuje ciąg sformatowany przy użyciu tej samej semantyki określonego zapisu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object[])">
          <source>The formatting string to use.</source>
          <target state="translated">Ciąg formatowania do użycia.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object[])">
          <source>The argument array to output.</source>
          <target state="translated">Argument tablicy do danych wyjściowych.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object[])">
          <source>Writes out a formatted string, using the same semantics as specified.</source>
          <target state="translated">Dokonuje ciąg sformatowany przy użyciu tej samej semantyki określonego zapisu.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Tablica znaków do zapisywania danych z.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Starting index in the buffer.</source>
          <target state="translated">Indeks początkowy w buforze.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Liczba znaków, jaka ma zostać zapisana.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the text stream.</source>
          <target state="translated">Zapisuje subarray znaków w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The formatting string to use.</source>
          <target state="translated">Ciąg formatowania do użycia.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The first object to write into the formatted string.</source>
          <target state="translated">Pierwszy obiekt do zapisania w sformatowanego ciągu.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The second object to write into the formatted string.</source>
          <target state="translated">Drugi obiekt do zapisania w sformatowanego ciągu.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes out a formatted string, using the same semantics as specified.</source>
          <target state="translated">Dokonuje ciąg sformatowany przy użyciu tej samej semantyki określonego zapisu.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.IndentedTextWriter">
          <source>Writes the specified string, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje określony ciąg następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine">
          <source>Writes a line terminator.</source>
          <target state="translated">Zapisuje terminator wiersza.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Boolean)">
          <source>The Boolean to write.</source>
          <target state="translated">Wartość logiczna do zapisu.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Boolean)">
          <source>Writes the text representation of a Boolean, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu Boolean, następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char)">
          <source>The character to write.</source>
          <target state="translated">Znak do zapisu.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char)">
          <source>Writes a character, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje i znak terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[])">
          <source>The character array to write.</source>
          <target state="translated">Tablica znaków do zapisu.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[])">
          <source>Writes a character array, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje tablicy znaków, następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;see langword="double" /&gt;</ph> to write.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="double" /&gt;</ph> Do zapisu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Double)">
          <source>Writes the text representation of a Double, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje reprezentację tekstu wartość o podwójnej precyzji, następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int32)">
          <source>The integer to write.</source>
          <target state="translated">Liczba całkowita do zapisu.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int32)">
          <source>Writes the text representation of an integer, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu Liczba całkowita, następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int64)">
          <source>The 8-byte integer to write.</source>
          <target state="translated">8-bajtowych liczb całkowitych do zapisu.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int64)">
          <source>Writes the text representation of an 8-byte integer, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje reprezentację tekst 8-bajtowych liczb całkowitych, następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Object)">
          <source>The object to write.</source>
          <target state="translated">Obiekt do zapisania.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Object)">
          <source>Writes the text representation of an object, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu obiektu, następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;see langword="single" /&gt;</ph> to write.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="single" /&gt;</ph> Do zapisu.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Single)">
          <source>Writes the text representation of a Single, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu jeden, następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String)">
          <source>The string to write.</source>
          <target state="translated">Ciąg do zapisu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String)">
          <source>Writes the specified string, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje określony ciąg następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.UInt32)">
          <source>A UInt32 to output.</source>
          <target state="translated">UInt32 do danych wyjściowych.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.UInt32)">
          <source>Writes the text representation of a UInt32, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje Reprezentacja tekstowa typu UInt32, następuje terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object)">
          <source>The formatting string.</source>
          <target state="translated">Ciąg formatowania.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object)">
          <source>The object to write into the formatted string.</source>
          <target state="translated">Obiekt do zapisania w sformatowanego ciągu.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object)">
          <source>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</source>
          <target state="translated">Dokonuje ciąg formatowania, a następnie terminator wiersza, przy użyciu tej samej semantyki określonego zapisu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object[])">
          <source>The formatting string to use.</source>
          <target state="translated">Ciąg formatowania do użycia.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object[])">
          <source>The argument array to output.</source>
          <target state="translated">Argument tablicy do danych wyjściowych.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</source>
          <target state="translated">Dokonuje ciąg formatowania, a następnie terminator wiersza, przy użyciu tej samej semantyki określonego zapisu.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">Tablica znaków do zapisywania danych z.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Starting index in the buffer.</source>
          <target state="translated">Indeks początkowy w buforze.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">Liczba znaków, jaka ma zostać zapisana.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters, followed by a line terminator, to the text stream.</source>
          <target state="translated">Zapisuje subarray znaki, po których terminator wiersza, w strumieniu tekstu.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The formatting string to use.</source>
          <target state="translated">Ciąg formatowania do użycia.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The first object to write into the formatted string.</source>
          <target state="translated">Pierwszy obiekt do zapisania w sformatowanego ciągu.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The second object to write into the formatted string.</source>
          <target state="translated">Drugi obiekt do zapisania w sformatowanego ciągu.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</source>
          <target state="translated">Dokonuje ciąg formatowania, a następnie terminator wiersza, przy użyciu tej samej semantyki określonego zapisu.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
          <source>The string to write.</source>
          <target state="translated">Ciąg do zapisu.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
          <source>Writes the specified string to a line without tabs.</source>
          <target state="translated">Zapisuje określony ciąg nie karty.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
          <source>The following code example demonstrates writing a line without tab string indentations.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, linia bez kartę ciąg wcięcia.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>