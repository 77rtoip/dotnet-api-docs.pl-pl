<Type Name="CodeGeneratorOptions" FullName="System.CodeDom.Compiler.CodeGeneratorOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2cc0625d1fc35a2abda5618de3a8ba9bbc32501" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63912457" /></Metadata><TypeSignature Language="C#" Value="public class CodeGeneratorOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeGeneratorOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeGeneratorOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeGeneratorOptions" />
  <TypeSignature Language="F#" Value="type CodeGeneratorOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje zestaw opcji używanych przez generatora kodu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.Compiler.CodeGeneratorOptions> jest przekazywany do metody generowania kodu <xref:System.CodeDom.Compiler.ICodeGenerator> implementacji, aby określić opcje używane podczas generowania kodu.  
  
 <xref:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString%2A> Właściwość określa ciąg do użycia dla każdego wcięcia odstępy. <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle%2A> Właściwość określa styl umieszczania nawiasów klamrowych, wskazując granice bloków kodu. <xref:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing%2A> Właściwość określa, czy dołączyć `else`, `catch`, lub `finally` bloku, razem z nawiasami, w wierszu zamknięcia każdego `if` lub `try` bloku. <xref:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers%2A> Właściwość określa, czy należy wstawić puste wiersze między elementami członkowskimi.  
  
 <xref:System.CodeDom.Compiler.ICodeGenerator> Implementacji może zapewnić niestandardowy kod Opcje generowania, które można ustawić lub przekazać dane za pomocą <xref:System.CodeDom.Compiler.CodeGeneratorOptions.Item%2A> indeksatora słownik, który generatora kodu można przeszukiwać zlokalizować opcje generowania dodatkowego kodu.  
  
> [!NOTE]
>  Ta klasa zawiera żądanie łącza i dziedziczenia na poziomie klasy stosowane do wszystkich składowych. Element <xref:System.Security.SecurityException> jest generowany, gdy bezpośredniego obiektu wywołującego lub Klasa pochodna nie mają uprawnień pełnego zaufania. Aby uzyskać szczegółowe informacje na temat wymaganych zabezpieczeń, zobacz [zapotrzebowania na łącza](~/docs/framework/misc/link-demands.md) i [Inheritancedemand](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
   
  
## Examples  
 [!code-cpp[CodeGeneratorOptionsExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeGeneratorOptionsExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeGeneratorOptionsExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeGeneratorOptionsExample/CS/class1.cs#1)]
 [!code-vb[CodeGeneratorOptionsExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeGeneratorOptionsExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Nie można użyć tej klasy w kodzie częściowo zaufanym.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">aby uzyskać pełne zaufanie dla obiektów dziedziczących. Klasa ta nie może być dziedziczona przez kod częściowo zaufany.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeGeneratorOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGeneratorOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeGeneratorOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Nie można użyć tej klasy w kodzie częściowo zaufanym.</permission>
      </Docs>
    </Member>
    <Member MemberName="BlankLinesBetweenMembers">
      <MemberSignature Language="C#" Value="public bool BlankLinesBetweenMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BlankLinesBetweenMembers" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property BlankLinesBetweenMembers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BlankLinesBetweenMembers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BlankLinesBetweenMembers : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wstawiać puste wiersze między elementami członkowskimi.</summary>
        <value><see langword="true" /> Jeśli powinien zostać wstawiony pustych wierszy; w przeciwnym razie <see langword="false" />. Domyślnie wartość tej właściwości jest <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BracingStyle">
      <MemberSignature Language="C#" Value="public string BracingStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BracingStyle" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BracingStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BracingStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BracingStyle : string with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl do użytku tężników.</summary>
        <value>Ciąg zawierający bracing styl do użycia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna tej właściwości to `Block`, co oznacza, że kod musi zostać wygenerowany tak, aby uruchomić nawiasów klamrowych, w tym samym wierszu jako instrukcja lub deklaracji, które są skojarzone. Wartość właściwości `C` wskazuje, że nawiasy klamrowe, uruchom w wierszu po deklaracji lub instrukcji, które są skojarzone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElseOnClosing">
      <MemberSignature Language="C#" Value="public bool ElseOnClosing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ElseOnClosing" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing" />
      <MemberSignature Language="VB.NET" Value="Public Property ElseOnClosing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ElseOnClosing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ElseOnClosing : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dołączyć <see langword="else" />, <see langword="catch" />, lub <see langword="finally" /> bloku, razem z nawiasami, w wierszu zamknięcia wszystkich poprzednich <see langword="if" /> lub <see langword="try" /> bloku.</summary>
        <value><see langword="true" /> Jeśli powinna zostać dołączona else; w przeciwnym razie <see langword="false" />. Wartość domyślna tej właściwości to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentString">
      <MemberSignature Language="C#" Value="public string IndentString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentString" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentString : string with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.IndentString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg do użycia dla wcięcia.</summary>
        <value>Ciąg zawierający znaki na potrzeby wcięcia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna tej właściwości to "/---/" (czterech spacji).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ index); void set(System::String ^ index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Nazwa skojarzona z obiektu do pobrania.</param>
        <summary>Pobiera lub ustawia obiekt o określonym indeksie.</summary>
        <value>Obiekt skojarzony z określoną nazwą. Jeśli nie istnieje żaden obiekt skojarzony z określoną nazwą w kolekcji, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tego słownika udostępnia mechanizm rozszerzalności dla deweloperów dostarczać dane dla funkcji niestandardowych generatora kodu. Generator kodu należy zaimplementowania takich funkcji i obsługuje sprawdzanie słownik to być przydatne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerbatimOrder">
      <MemberSignature Language="C#" Value="public bool VerbatimOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerbatimOrder" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property VerbatimOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VerbatimOrder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VerbatimOrder : bool with get, set" Usage="System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy mają zostać wygenerowane elementy członkowskie w kolejności, w jakiej występują one w kolekcjach elementu członkowskiego.</summary>
        <value><see langword="true" /> Aby wygenerować elementów członkowskich w kolejności, w jakiej występują one w kolekcji elementów członkowskich; w przeciwnym razie <see langword="false" />. Wartość domyślna tej właściwości to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie generuje elementów członkowskich według ich typu, na przykład; pola, składowej, Konstruktor lub właściwości.  Generator kodu można użyć <xref:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder%2A> właściwość, aby wstawić bloki #region do kodu, w związku z tym zmiana kolejności.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>