<Type Name="WindowsIdentity" FullName="System.Security.Principal.WindowsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aab581c020b81fd4afb18c99ef2ba1e1339585ed" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37623564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsIdentity extends System.Security.Claims.ClaimsIdentity implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsIdentity&#xA;Inherits ClaimsIdentity&#xA;Implements IDeserializationCallback, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsIdentity : System::Security::Claims::ClaimsIdentity, IDisposable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WindowsIdentity = class&#xA;    inherit ClaimsIdentity&#xA;    interface IIdentity&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsIdentity</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje użytkownika Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> metodę w celu utworzenia <xref:System.Security.Principal.WindowsIdentity> obiekt reprezentujący bieżącego użytkownika.  
  
> [!IMPORTANT]
>  Ten typ implementuje <xref:System.IDisposable> interfejsu. Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niej. Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> method in Class metoda `try` / `catch` bloku. Aby usunąć ją pośrednio, użyj konstrukcją języka pierwszej klasy takiej jak `using` (w języku C#) lub `Using` (w języku Visual Basic). Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje użycie członkowie <xref:System.Security.Principal.WindowsIdentity> klasy.  Aby uzyskać przykład pokazujący sposób uzyskiwania Windows konto tokenu poprzez wywołanie Win32 niezarządzanych `LogonUser` funkcji i użyj tokenu personifikować innego użytkownika, zobacz <xref:System.Security.Principal.WindowsImpersonationContext> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#1)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity userToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken">Token konta dla użytkownika w imieniu którego wykonywany jest kod.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy dla użytkownika, reprezentowane przez określony token konta Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Security.Principal.WindowsIdentity>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
> [!NOTE]
>  Można pobrać tokenu, reprezentowane przez `userToken` przez wywołanie metody niezarządzanego kodu, takich jak Win32 API `LogonUser` funkcji. Zawsze wersji `userToken` poprzez wywołanie Win32 API `CloseHandle` funkcji. Aby uzyskać więcej informacji na temat wywoływania niezarządzanego kodu, zobacz [wykorzystywanie niezarządzanych funkcji DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userToken" /> ma wartość 0.  - lub - <paramref name="userToken" /> jest zduplikowane i nieprawidłowe dla personifikacji.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.  - lub - wystąpił błąd systemu Win32.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (identity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WindowsIdentity(System::Security::Principal::WindowsIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : System.Security.Principal.WindowsIdentity -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Obiekt, z którego można utworzyć nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy przy użyciu określonego <see cref="T:System.Security.Principal.WindowsIdentity" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity sUserPrincipalName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName">Nazwa UPN użytkownika, w którego imieniu kod jest uruchomiony.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy dla użytkownika, reprezentowane przez określony główną nazwę użytkownika (UPN).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy UPN ma format *username*@*nazwa_domeny*.com, innymi słowy, adres e-mail. Nazwa UPN zidentyfikowanego w `sUserPrincipalName` służy do pobierania tokenu dla tego użytkownika za pośrednictwem interfejsu API Win32 `LsaLogonUser` funkcji. Z kolei ten token służy do identyfikowania użytkownika. Wyjątek może zostać zwrócona z powodu braku możliwości, aby zalogować się przy użyciu podanej nazwy UPN.  
  
> [!NOTE]
>  Ten konstruktor jest przeznaczony do użytku tylko na komputerach dołączonych do systemu Windows Server 2003 lub nowszym domeny. W przypadku starszych typów domeny jest zgłaszany wyjątek. To ograniczenie jest fakt, że ten konstruktor korzysta z [struktury KERB_S4U_LOGON](http://go.microsoft.com/fwlink/?LinkId=143533), który został po raz pierwszy wprowadzona w systemie Windows Server 2003.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Windows zwrócił kod stanu systemu Windows NT STATUS_ACCESS_DENIED.</exception>
        <exception cref="T:System.OutOfMemoryException">Dostępnych jest za mało pamięci.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.  - lub - komputer nie jest dołączony do Windows 2003 lub nowszym domeny.  - lub - komputer nie jest uruchomiona Windows 2003 lub nowszym.  - lub - użytkownik nie jest członkiem domeny, której komputer jest dołączony.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken">Token konta dla użytkownika w imieniu którego wykonywany jest kod.</param>
        <param name="type">(Informacyjny tylko do użytku.) Typ uwierzytelniania używany do identyfikowania użytkownika.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy dla użytkownika, reprezentowany przez określony token konta Windows i określonego typu uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Security.Principal.WindowsIdentity>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 Wartość `type` parametr służy do ustawiania <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parametru. Jeśli `type` jest `null`, zestawy systemu zabezpieczeń <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> do `Negotiate` w Windows Vista i nowszych systemów operacyjnych Windows, a także do `Kerberos` we wcześniejszych wersjach systemu operacyjnego Windows. Ta wartość; nie są używane w systemie zabezpieczeń jest tylko w celach informacyjnych.  
  
> [!NOTE]
>  Można pobrać tokenu, reprezentowane przez `userToken` przez wywołanie metody niezarządzanego kodu, takich jak Win32 API `LogonUser` funkcji. Zawsze wersji `userToken` poprzez wywołanie Win32 API `CloseHandle` funkcji. Aby uzyskać więcej informacji na temat wywoływania niezarządzanego kodu, zobacz [wykorzystywanie niezarządzanych funkcji DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
   
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.Security.Principal.WindowsIdentity> klasy dla użytkownika, reprezentowany przez określony token konta Windows i określonego typu uwierzytelniania. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#4)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#4)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userToken" /> ma wartość 0.  - lub - <paramref name="userToken" /> jest zduplikowane i nieprawidłowe dla personifikacji.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.  - lub - wystąpił błąd systemu Win32.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający informacje o koncie dla użytkownika.</param>
        <param name="context">Obiekt, który wskazuje charakterystyki strumienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy dla użytkownika, reprezentowane przez informacje zawarte w <see cref="T:System.Runtime.Serialization.SerializationInfo" /> strumienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Wywołanie tej metody z niezaufanych danych stanowi zagrożenie bezpieczeństwa. Wywołanie tej metody tylko z zaufanych danych. Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych](https://www.owasp.org/index.php/Data_Validation).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Element <see cref="T:System.Security.Principal.WindowsIdentity" /> nie może być serializowany między procesami.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.  - lub - wystąpił błąd systemu Win32.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby móc manipulować głównym przedmiotem. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : string * string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (sUserPrincipalName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName">Nazwa UPN użytkownika, w którego imieniu kod jest uruchomiony.</param>
        <param name="type">(Informacyjny tylko do użytku.) Typ uwierzytelniania używany do identyfikowania użytkownika.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy dla użytkownika reprezentowanego przez określony główną nazwę użytkownika (UPN) i określonego typu uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość `type` parametr służy do ustawiania <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parametru. Jeśli `type` jest `null`, zestawy systemu zabezpieczeń <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> do `Negotiate` w Windows Vista i nowszych systemów operacyjnych Windows, a także do `Kerberos` we wcześniejszych wersjach systemu operacyjnego Windows. Ta wartość; nie są używane w systemie zabezpieczeń jest tylko w celach informacyjnych.  
  
 Nazwa UPN zidentyfikowanego w `sUserPrincipalName` służy do pobierania tokenu dla tego użytkownika za pośrednictwem interfejsu API Win32 `LsaLogonUser` funkcji. Z kolei ten token służy do identyfikowania użytkownika. Wyjątek może zostać zwrócona z powodu braku możliwości, aby zalogować się przy użyciu podanej nazwy UPN.  
  
> [!NOTE]
>  Ten konstruktor jest przeznaczony do użytku tylko na komputerach dołączonych do systemu Windows Server 2003 lub nowszym domeny. W przypadku starszych typów domeny jest zgłaszany wyjątek. To ograniczenie jest fakt, że ten konstruktor korzysta z [struktury KERB_S4U_LOGON](http://go.microsoft.com/fwlink/?LinkId=143533), który został po raz pierwszy wprowadzona w systemie Windows Server 2003.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Windows zwrócił kod stanu systemu Windows NT STATUS_ACCESS_DENIED.</exception>
        <exception cref="T:System.OutOfMemoryException">Dostępnych jest za mało pamięci.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.  - lub - komputer nie jest dołączony do Windows 2003 lub nowszym domeny.  - lub - komputer nie jest uruchomiona Windows 2003 lub nowszym.  - lub - użytkownik nie jest członkiem domeny, której komputer jest dołączony.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string * System.Security.Principal.WindowsAccountType -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type, acctType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
      </Parameters>
      <Docs>
        <param name="userToken">Token konta dla użytkownika w imieniu którego wykonywany jest kod.</param>
        <param name="type">(Informacyjny tylko do użytku.) Typ uwierzytelniania używany do identyfikowania użytkownika.</param>
        <param name="acctType">Jedna z wartości wyliczenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy dla użytkownika, reprezentowane przez określony token konta Windows, podany typ uwierzytelniania i określonego typu konta Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Security.Principal.WindowsIdentity>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 Wartość `type` parametr służy do ustawiania <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parametru. Jeśli `type` jest `null`, zestawy systemu zabezpieczeń <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> do `Negotiate` w Windows Vista i nowszych systemów operacyjnych Windows, a także do `Kerberos` we wcześniejszych wersjach systemu operacyjnego Windows. Ta wartość; nie są używane w systemie zabezpieczeń jest tylko w celach informacyjnych.  
  
> [!NOTE]
>  Można pobrać tokenu, reprezentowane przez `userToken` przez wywołanie metody niezarządzanego kodu, takich jak Win32 API `LogonUser` funkcji. Zawsze wersji `userToken` poprzez wywołanie Win32 API `CloseHandle` funkcji. Aby uzyskać więcej informacji na temat wywoływania niezarządzanego kodu, zobacz [wykorzystywanie niezarządzanych funkcji DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
   
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.Security.Principal.WindowsIdentity> klasy dla użytkownika, reprezentowane przez określony token konta Windows, podany typ uwierzytelniania i określonego typu konta Windows. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#7)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#7)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userToken" /> ma wartość 0.  - lub - <paramref name="userToken" /> jest zduplikowane i nieprawidłowe dla personifikacji.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.  - lub - wystąpił błąd systemu Win32.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string * System.Security.Principal.WindowsAccountType * bool -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type, acctType, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userToken">Token konta dla użytkownika w imieniu którego wykonywany jest kod.</param>
        <param name="type">(Informacyjny tylko do użytku.) Typ uwierzytelniania używany do identyfikowania użytkownika.</param>
        <param name="acctType">Jedna z wartości wyliczenia.</param>
        <param name="isAuthenticated">
          <see langword="true" /> Aby wskazać, czy użytkownik jest uwierzytelniony; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Principal.WindowsIdentity" /> klasy dla użytkownika, reprezentowany przez określony token konta Windows, podanego typu uwierzytelniania, określony typ konta Windows i stanu uwierzytelniania określonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość `type` parametr służy do ustawiania <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parametru. Jeśli `type` jest `null`, zestawy systemu zabezpieczeń <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> do `Negotiate` w Windows Vista i nowszych systemów operacyjnych Windows, a także do `Kerberos` we wcześniejszych wersjach systemu operacyjnego Windows. Ta wartość; nie są używane w systemie zabezpieczeń jest tylko w celach informacyjnych.  
  
 Można pobrać tokenu, reprezentowane przez `userToken` przez wywołanie metody niezarządzanego kodu, takich jak Win32 API `LogonUser` funkcji. Zawsze wersji `userToken` poprzez wywołanie Win32 API `CloseHandle` funkcji. Aby uzyskać więcej informacji na temat wywoływania niezarządzanego kodu, zobacz [wykorzystywanie niezarządzanych funkcji DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
   
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.Security.Principal.WindowsIdentity> klasy dla użytkownika, reprezentowane przez określony token konta Windows, podanego typu uwierzytelniania, określony typ konta Windows i określony stan uwierzytelniania. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#17)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#17)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userToken" /> ma wartość 0.  - lub - <paramref name="userToken" /> jest zduplikowane i nieprawidłowe dla personifikacji.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.  - lub - wystąpił błąd systemu Win32.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessToken As SafeAccessTokenHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ AccessToken { Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" Usage="System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeAccessTokenHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> tego <see cref="T:System.Security.Principal.WindowsIdentity" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public override sealed string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ uwierzytelniania używany do identyfikowania użytkownika.</summary>
        <value>Typ uwierzytelniania używany do identyfikowania użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest informacyjny; nie jest używana przez system zabezpieczeń. W systemach Windows Vista i nowszymi wersjami systemu operacyjnego Windows, wartością domyślną dla tej właściwości jest `Negotiate`, który wybiera najlepsze dostawcy obsługi zabezpieczeń (SSP) na podstawie zasad zabezpieczeń skonfigurowane przez klienta. Wartość domyślna właściwości dla wcześniejszych wersji systemu operacyjnego Windows to `Kerberos`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Windows zwrócił kod stanu systemu Windows NT STATUS_ACCESS_DENIED.</exception>
        <exception cref="T:System.OutOfMemoryException">Dostępnych jest za mało pamięci.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.  - lub - komputer nie jest dołączony do Windows 2003 lub nowszym domeny.  - lub - komputer nie jest uruchomiona Windows 2003 lub nowszym.  - lub - użytkownik nie jest członkiem domeny, której komputer jest dołączony.</exception>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__95))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie oświadczenia dla użytkownika, reprezentowane przez tę tożsamość Windows.</summary>
        <value>Zbiór oświadczeń dla tego <see cref="T:System.Security.Principal.WindowsIdentity" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Security.Claims.ClaimsIdentity" Usage="windowsIdentity.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Kopię bieżącego wystąpienia.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberSignature Language="F#" Value="val mutable DefaultIssuer : string" Usage="System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa nazwę domyślną <see cref="T:System.Security.Claims.ClaimsIdentity" /> wystawcy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera oświadczenia, które mają <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> klucz właściwości.</summary>
        <value>Zbiór oświadczeń, które mają <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> klucz właściwości.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Security.Principal.WindowsIdentity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="windowsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Security.Principal.WindowsIdentity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> po zakończeniu przy użyciu <xref:System.Security.Principal.WindowsIdentity>. <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> Pozostawia metoda <xref:System.Security.Principal.WindowsIdentity> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, trzeba zwolnić wszystkie odwołania do <xref:System.Security.Principal.WindowsIdentity> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Security.Principal.WindowsIdentity> zajmowaną przez wystąpienie. Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> przed publikacją swoje ostatnie odwołanie do <xref:System.Security.Principal.WindowsIdentity>. W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Security.Principal.WindowsIdentity> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="windowsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Security.Principal.WindowsIdentity" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez publiczną `Dispose()` metody i <xref:System.Object.Finalize%2A> metody. `Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` parametr `true`. <xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` równa `false`.  
  
 Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.Security.Principal.WindowsIdentity> odwołania. Ta metoda wywołuje `Dispose()` metoda każdego obiektu, do którego istnieje odwołanie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> może być wywoływana wiele razy przez inne obiekty. Podczas zastępowania <see langword="Dispose(Boolean)" /> Uważaj, aby nie odwołują się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see langword="Dispose" />. Aby uzyskać więcej informacji o sposobie wdrażania <see langword="Dispose(Boolean)" />, zobacz [Implementowanie Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenia zapasowych niezarządzanych Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WindowsIdentity ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="windowsIdentity.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnonymous">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetAnonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetAnonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAnonymous () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetAnonymous();" />
      <MemberSignature Language="F#" Value="static member GetAnonymous : unit -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetAnonymous " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Security.Principal.WindowsIdentity" /> obiektu służące jako wartość wskaźnikowych w kodzie do reprezentowania użytkownik anonimowy. Wartość właściwości nie reprezentuje wbudowane tożsamości anonimowej używany przez system operacyjny Windows.</summary>
        <returns>Obiekt, który reprezentuje użytkownik anonimowy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca pusty <xref:System.Security.Principal.WindowsIdentity> obiekt, który umożliwia traktowanie operacji jako użytkownik anonimowy. Wartość właściwości jest niezgodne z Windows użytkownik anonimowy i nie można użyć do personifikacji. Ponadto należy pamiętać, że tożsamość zwracane przez tę właściwość nie statyczny; Każde wywołanie <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> zwraca inną tożsamość anonimowa.  
  
 Możesz użyć <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> właściwości, aby wykryć wartość zwrotną z elementu <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>. Jednak <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> wykrywa Tożsamość anonimowa Windows i Tożsamość anonimowa zwracanego przez tę metodę. Aby korzystać z ostatnim tożsamości, w pamięci podręcznej <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> zwracają wartość zamiast polegania na <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> właściwości.  
  
   
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> metodę, aby zwrócić <xref:System.Security.Principal.WindowsIdentity> obiekt, który reprezentuje anonimowego użytkownika Windows. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#15)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#15)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrent">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca <see cref="T:System.Security.Principal.WindowsIdentity" /> obiekt reprezentujący bieżącego użytkownika Windows.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent();" />
      <MemberSignature Language="F#" Value="static member GetCurrent : unit -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Security.Principal.WindowsIdentity" /> obiekt reprezentujący bieżącego użytkownika Windows.</summary>
        <returns>Obiekt reprezentujący bieżącego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> metodę, aby zwrócić <xref:System.Security.Principal.WindowsIdentity> obiekt reprezentujący bieżącego użytkownika Windows. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#13)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#13)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby móc manipulować głównym przedmiotem. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(bool ifImpersonating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (ifImpersonating As Boolean) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(bool ifImpersonating);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : bool -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent ifImpersonating" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifImpersonating" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ifImpersonating">
          <see langword="true" /> Aby zwrócić <see cref="T:System.Security.Principal.WindowsIdentity" /> tylko wtedy, gdy wątek jest obecnie personifikacji; <see langword="false" /> do zwrócenia <see cref="T:System.Security.Principal.WindowsIdentity" /> wątku, jeśli jego personifikuje lub <see cref="T:System.Security.Principal.WindowsIdentity" /> procesu, jeśli wątek nie personifikuje obecnie.</param>
        <summary>Zwraca <see cref="T:System.Security.Principal.WindowsIdentity" /> obiekt, który reprezentuje Windows tożsamość wątku lub proces, w zależności od wartości <paramref name="ifImpersonating" /> parametru.</summary>
        <returns>Obiekt, który reprezentuje użytkownika Windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ifImpersonating` jest `true` i Wątek nie personifikuje, zwrócony <xref:System.Security.Principal.WindowsIdentity> obiekt nie ma wartości.  Jeśli `ifImpersonating` jest `false` i Wątek nie personifikuje, <xref:System.Security.Principal.WindowsIdentity> dla wątku jest zwracana.  Jeśli `ifImpersonating` jest `false` i Wątek nie personifikuje, <xref:System.Security.Principal.WindowsIdentity> dla procesu jest zwracana.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby móc manipulować głównym przedmiotem. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(valuetype System.Security.Principal.TokenAccessLevels desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (desiredAccess As TokenAccessLevels) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(System::Security::Principal::TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : System.Security.Principal.TokenAccessLevels -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent desiredAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredAccess" Type="System.Security.Principal.TokenAccessLevels" />
      </Parameters>
      <Docs>
        <param name="desiredAccess">Bitowe połączenie wartości wyliczenia.</param>
        <summary>Zwraca <see cref="T:System.Security.Principal.WindowsIdentity" /> obiekt, który reprezentuje bieżący użytkownik Windows przy użyciu określonego żądanego poziomu tokenu dostępu.</summary>
        <returns>Obiekt reprezentujący bieżącego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `desiredAccess` Parametr określa maski dostępu, który identyfikuje żądany typ dostępu do tokena dostępu. Te typy żądanego dostępu są porównywane z listy kontroli dostępu tokenu (DACL), aby określić, jakie typy dostępu są udzielić lub odmówić.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby móc manipulować głównym przedmiotem. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IdentityReferenceCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IdentityReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IdentityReferenceCollection ^ Groups { System::Security::Principal::IdentityReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Security.Principal.IdentityReferenceCollection" Usage="System.Security.Principal.WindowsIdentity.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera grupy z bieżącej Windows, o których należy użytkownik.</summary>
        <value>Obiekt reprezentujący grup, do których należy bieżący użytkownik Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Principal.WindowsIdentity.Groups%2A> właściwość, aby wyświetlić odwołania do tożsamości dla grup, o których należy bieżący użytkownik.  Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#20)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Umożliwia kodu do podszycia się pod innego użytkownika Windows.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.WindowsImpersonationContext Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Impersonate () As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::WindowsImpersonationContext ^ Impersonate();" />
      <MemberSignature Language="F#" Value="abstract member Impersonate : unit -&gt; System.Security.Principal.WindowsImpersonationContext&#xA;override this.Impersonate : unit -&gt; System.Security.Principal.WindowsImpersonationContext" Usage="windowsIdentity.Impersonate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Personifikuje użytkownika reprezentowanego przez <see cref="T:System.Security.Principal.WindowsIdentity" /> obiektu.</summary>
        <returns>Obiekt, który reprezentuje użytkownika Windows przed personifikacji; może to służyć do przywrócenia kontekście użytkownika oryginalnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na platformach Windows NT bieżący użytkownik musi mieć wystarczające uprawnienia, aby umożliwić personifikacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można uzyskać tokenu konta Windows poprzez wywołanie Win32 niezarządzanych `LogonUser` funkcja i jak stosować ten token do podszycia się pod innego użytkownika, a następnie przywrócić do oryginalnej tożsamości.  
  
 [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]
 [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Tożsamość anonimowa podjął próbę personifikacji.</exception>
        <exception cref="T:System.Security.SecurityException">Wystąpił błąd systemu Win32.</exception>
        <block subset="none" type="overrides">
          <para>Ponieważ program Microsoft Windows 98 i Windows Millennium Edition (Windows Me) platformy nie mają tokenów użytkownika, personifikacja nie może mieć miejsce na tych platformach.</para>
        </block>
        <block subset="none" type="usage">
          <para>Po zakończeniu korzystania z <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, ważne jest, aby wywołać <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> metodę, aby zakończyć personifikacji.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsImpersonationContext Impersonate(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr) As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsImpersonationContext ^ Impersonate(IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint -&gt; System.Security.Principal.WindowsImpersonationContext" Usage="System.Security.Principal.WindowsIdentity.Impersonate userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken">Uchwyt token konta Windows. Token ten jest zwykle pobierane w drodze wywołanie do kodu niezarządzanego, takie jak wywołanie interfejsu API Win32 <see langword="LogonUser" /> funkcji.</param>
        <summary>Personifikuje użytkownika reprezentowanego przez określony token użytkownika.</summary>
        <returns>Obiekt, który reprezentuje użytkownika Windows przed personifikacji; Ten obiekt może służyć do przywrócenia kontekście użytkownika oryginalnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na platformach Windows NT bieżący użytkownik musi mieć wystarczające uprawnienia, aby umożliwić personifikacji.  
  
> [!NOTE]
>  Wywoływanie <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> metody z `userToken` wartość <xref:System.IntPtr.Zero> jest odpowiednikiem wywołanie Win32 `RevertToSelf` funkcji. Jeśli inny użytkownik jest aktualnie Personifikowany, kontrolka wraca do pierwotnego użytkownika.  
  
 Aby uzyskać więcej informacji na temat wywołań do kodu niezarządzanego, zobacz [wykorzystywanie niezarządzanych funkcji DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można uzyskać tokenu konta Windows poprzez wywołanie Win32 niezarządzanych `LogonUser` funkcja i jak stosować ten token do podszycia się pod innego użytkownika, a następnie przywrócić do oryginalnej tożsamości.  
  
 [!code-csharp[WindowsIdentity Impersonation2#1](~/samples/snippets/csharp/VS_Snippets_CLR/windowsidentity impersonation2/cs/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/windowsidentity impersonation2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Windows zwrócił kod stanu systemu Windows NT STATUS_ACCESS_DENIED.</exception>
        <exception cref="T:System.OutOfMemoryException">Dostępnych jest za mało pamięci.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednich uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość manipulować głównym przedmiotem i dostępu do kodu niezarządzanego. Powiązane wyliczenia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> i <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>Ponieważ program Microsoft Windows 98 i Windows Millennium Edition (Windows Me) platformy nie mają tokenów użytkownika, personifikacja nie może mieć miejsce na tych platformach.</para>
        </block>
        <block subset="none" type="usage">
          <para>Po zakończeniu korzystania z <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, ważne jest, aby wywołać <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> metodę, aby zakończyć personifikacji.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poziom personifikacji dla użytkownika.</summary>
        <value>Jedna z wartości wyliczenia, które określa poziom personifikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym artykule opisano poziom personifikacji ma być używany do łączenia z usługą WMI.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> właściwość, aby wyświetlić poziom personifikacji dla bieżącego użytkownika. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#21)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public virtual bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy konto użytkownika jest identyfikowane jako konto anonimowe przez system.</summary>
        <value>
          <see langword="true" /> Jeśli konto użytkownika jest kontem anonimowy; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> Właściwość wykrywa Tożsamość anonimowa Windows i Tożsamość anonimowa, która jest zwracana przez <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> metody.  
  
 Anonimowe kont są zwykle tylko podczas tylko z w ramach aplikacji opartych na programie ASP.NET jest dostęp anonimowy Internet Information Services (IIS).  
  
   
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> właściwości, aby wykryć, czy konto użytkownika jest identyfikowane jako konto anonimowe przez system. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#9)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#9)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy użytkownik został uwierzytelniony przez Windows.</summary>
        <value>
          <see langword="true" /> Jeśli użytkownik został uwierzytelniony; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGuest">
      <MemberSignature Language="C#" Value="public virtual bool IsGuest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGuest" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsGuest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGuest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGuest : bool" Usage="System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy konto użytkownika jest identyfikowane jako <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> konta przez system.</summary>
        <value>
          <see langword="true" /> Jeśli konto użytkownika jest <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> konta; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> właściwość zwraca wartość wskazującą, czy konto użytkownika jest identyfikowane jako <xref:System.Security.Principal.WindowsAccountType.Guest> konta przez system. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#12)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#12)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public virtual bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSystem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSystem : bool" Usage="System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy konto użytkownika jest identyfikowane jako <see cref="F:System.Security.Principal.WindowsAccountType.System" /> konta przez system.</summary>
        <value>
          <see langword="true" /> Jeśli konto użytkownika jest <see cref="F:System.Security.Principal.WindowsAccountType.System" /> konta; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> właściwość zwraca wartość wskazującą, czy konto użytkownika jest identyfikowane jako <xref:System.Security.Principal.WindowsAccountType.System> konta przez system. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#11)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#11)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Principal.WindowsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę logowania Windows tego użytkownika.</summary>
        <value>Nazwa logowania Windows użytkownika, w imieniu którego kod jest uruchamiany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa logowania jest domena\nazwa_użytkownika.  
  
   
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.Name%2A> właściwości, aby uzyskać nazwę logowania Windows tego użytkownika. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#8)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#8)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ Owner { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Security.Principal.SecurityIdentifier" Usage="System.Security.Principal.WindowsIdentity.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator zabezpieczeń (SID) dla właściciela tokenu.</summary>
        <value>Obiekt właściciel tokenu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator SID jednoznacznie identyfikuje użytkownika lub grupy na wszystkich implementacjach systemu Windows NT.  Zwrócony identyfikator SID identyfikuje domyślnym właścicielem identyfikator SID, które będą stosowane do nowo utworzonych obiektach.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Security.Principal.WindowsIdentity.Owner%2A> właściwość, aby wyświetlić identyfikator zabezpieczeń właściciela tokenu.  Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#19)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated">
      <MemberSignature Language="C#" Value="public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunImpersonated(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Action ^ action);" />
      <MemberSignature Language="F#" Value="static member RunImpersonated : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle * Action -&gt; unit" Usage="System.Security.Principal.WindowsIdentity.RunImpersonated (safeAccessTokenHandle, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="safeAccessTokenHandle">SafeAccessTokenHandle personifikowanej tożsamości Windows.</param>
        <param name="action">Elementu System.Action do uruchomienia.</param>
        <summary>Jest uruchamiany określoną akcję jako spersonifikowaną tożsamością Windows. Zamiast przy użyciu wywołania interfejsu personifikowanej metody i uruchamiania funkcji w <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, możesz użyć <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> i zapewniają funkcję bezpośrednio jako parametru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Security.Principal.WindowsIdentity> klasy personifikować użytkownika.  
  
> [!WARNING]
>  W tym przykładzie prosi użytkownika o wprowadzenie hasła na ekranie konsoli. Hasło będzie widoczne na ekranie, ponieważ w oknie konsoli nie obsługuje natywnie zamaskowanych danych wejściowych.  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T RunImpersonated&lt;T&gt; (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T RunImpersonated&lt;T&gt;(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Func&lt;T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member RunImpersonated : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle * Func&lt;'T&gt; -&gt; 'T" Usage="System.Security.Principal.WindowsIdentity.RunImpersonated (safeAccessTokenHandle, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ obiektu, używane przez i zwrócona przez funkcję.</typeparam>
        <param name="safeAccessTokenHandle">SafeAccessTokenHandle personifikowanej tożsamości Windows.</param>
        <param name="func">System.Func do uruchomienia.</param>
        <summary>Uruchamia określoną funkcję jako spersonifikowaną tożsamością Windows. Zamiast przy użyciu wywołania interfejsu personifikowanej metody i uruchamiania funkcji w <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, możesz użyć <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> i zapewniają funkcję bezpośrednio jako parametru.</summary>
        <returns>Zwraca wynik funkcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Security.Principal.WindowsIdentity> klasy personifikować użytkownika.  
  
> [!WARNING]
>  W tym przykładzie prosi użytkownika o wprowadzenie hasła na ekranie konsoli. Hasło będzie widoczne na ekranie, ponieważ w oknie konsoli nie obsługuje natywnie zamaskowanych danych wejściowych.  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzeń deserializacji.</param>
        <summary>Implementuje <see cref="T:System.Runtime.Serialization.ISerializable" /> interfejsu i jest wywoływane zwrotnie przez zdarzeń deserializacji, po zakończeniu deserializacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt zawierający informacje o wymaganych do zserializowania <see cref="T:System.Collections.Hashtable" />.</param>
        <param name="context">Obiekt zawierający źródłowe i docelowe serializowanym strumieniu skojarzone z <see cref="T:System.Collections.Hashtable" />.</param>
        <summary>Zestawy <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiekt z kontekstu logiczne potrzebnych do ponownie tworzy wystąpienie tego kontekstu wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ustawia <xref:System.Runtime.Serialization.SerializationInfo> z logicznym wywołać informacje o kontekście. Podczas deserializacji obiektu kontekstu wykonywania jest odtworzonych z <xref:System.Runtime.Serialization.SerializationInfo> przesyłanego w strumieniu.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.Serialization.SerializationInfo>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual IntPtr Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Token" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Token { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : nativeint" Usage="System.Security.Principal.WindowsIdentity.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera token konta Windows dla użytkownika.</summary>
        <value>Uchwyt token dostępu skojarzone z bieżącym wątkiem wykonywania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czy nie zostały jawnie wersji token konta, który jest zwracany przez <xref:System.Security.Principal.WindowsIdentity.Token%2A> właściwości. Token został wydany przez <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> metody, które można wywołać w kodzie. <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> jest wywoływana automatycznie przez moduł odśmiecania pamięci.  
  
> [!NOTE]
>  Token konta, który jest zwracany przez <xref:System.Security.Principal.WindowsIdentity.Token%2A> właściwość jest duplikatem token Windows, który jest używany do tworzenia <xref:System.Security.Principal.WindowsIdentity> obiektu i udostępnieniu automatycznie przez program .NET Framework. To różni się od tokenu konta ( `userToken` parametr konstruktora), który służy do tworzenia <xref:System.Security.Principal.WindowsIdentity> obiektu. `userToken` jest tokenem konta Windows, który jest tworzony przez wywołanie `LogonUser` i muszą zostać zamknięte w celu uniknięcia wycieku pamięci.  
  
   
  
## Examples  
 Poniższy kod przedstawia użycie <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> właściwości do pobrania tokenu konta Windows dla użytkownika. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Security.Principal.WindowsIdentity> klasy.  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#14)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#14)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier User" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ User { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.SecurityIdentifier" Usage="System.Security.Principal.WindowsIdentity.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator zabezpieczeń (SID) dla użytkownika.</summary>
        <value>Obiekt, który dla użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator SID jednoznacznie identyfikuje użytkownika lub grupy na wszystkich implementacjach systemu Windows NT.  
  
> [!NOTE]
>  <xref:System.Security.Principal.WindowsIdentity> Obiektu zwróconego przez <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> metoda nie jest taka sama jak Windows użytkownik anonimowy. Tej właściwości pobiera `null` dla użytkownika anonimowego, reprezentowane przez <xref:System.Security.Principal.WindowsIdentity> obiektu zwróconego przez <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> metody; nie otrzymać identyfikator SID reprezentujący anonimowego użytkownika Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera oświadczenia, które mają <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> klucz właściwości.</summary>
        <value>Zbiór oświadczeń, które mają <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> klucz właściwości.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>