<Type Name="AntiXssEncoder" FullName="System.Web.Security.AntiXss.AntiXssEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e105abdf42aec9b0b25871b34bd805bbeda574d" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683205" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AntiXssEncoder : System.Web.Util.HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AntiXssEncoder extends System.Web.Util.HttpEncoder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class AntiXssEncoder&#xA;Inherits HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AntiXssEncoder : System::Web::Util::HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Util.HttpEncoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Koduje ciąg do użycia w ciągach HTML, XML, CSS i adres URL.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.Security.AntiXss.AntiXssEncoder> klasę, aby zastąpić <xref:System.Web.Util.HttpEncoder> klasy, który jest używany domyślnie do kodowania i dekodowania ciągów w metod klas takich jak <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, i <xref:System.Net.HttpResponseHeader>.  
  
 W <xref:System.Web.Security.AntiXss.AntiXssEncoder> klasy, wszystkie znaki, które nie znajdują się na liście bezpiecznych są zakodowane za <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A> i <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A> metody.  
  
 Aby zastąpić <xref:System.Web.Util.HttpEncoder> klasy z <xref:System.Web.Security.AntiXss.AntiXssEncoder> klasy, zarejestruj je przy użyciu `encoderType` atrybut elementu httpRuntime w pliku Web.config, jak pokazano w poniższym przykładzie:  
  
```  
<httpRuntime encoderType="System.Web.Security.AntiXss.AntiXssEncoder" />  
```  
  
 Lista znaków bezpieczne domyślnych dla różnych metod kodowania znajdują się w uwagi dla <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A>, i <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A> metody. Listy bezpiecznych domyślne można zmodyfikować za pomocą <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> metody.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AntiXssEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AntiXssEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.AntiXss.AntiXssEncoder" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssEncode">
      <MemberSignature Language="C#" Value="public static string CssEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CssEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CssEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CssEncode(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <summary>Koduje określony ciąg do użycia w kaskadowych arkuszy stylów (CSS).</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych.  
  
> [!NOTE]
>  Umieszczanie cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do kaskadowy arkusz stylów.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert\000028\000027XSS\000020Attack\000021\000027\000029\00003B`|  
|`user@contoso.com`|`user\000040contoso\00002Ecom`|  
|`Anti-Cross Site Scripting Namespace`|`Anti\00002DCross\000020Site\000020Scripting\000020Namespace`|  
  
 Sekwencja ucieczki znaku CSS składa się z ukośnikiem odwrotnym (\\) następuje sześciu cyfr szesnastkowych, które reprezentują kod znaku zgodne ze standardem ISO 10646. (Standardowe 10646 ISO jest równoważne Unicode). Dowolny znak inny niż cyfrą szesnastkową kończy sekwencji ucieczki. Jeśli znak znajdujący się w sekwencji unikowej również jest prawidłową cyfrą szesnastkową, musi zawierać sześć cyfr w sekwencji ucieczki lub użyj znak odstępu, aby przerwać sekwencji ucieczki. Na przykład `\000020` oznacza spacją.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> zawiera znak, który ma nieprawidłową wartość Unicode.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> zawiera punkt kodu zastępczym wysokiego poziomu, który nie nastąpiła niski zastępczego punktu kodu.  
  
 —lub—  
  
 <paramref name="input" /> zawiera dwuskładnikowego punkt kodu, który nie był poprzedzony przez punkt kodu zastępczym wysokiego poziomu.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Ciąg do kodowania.</param>
        <param name="output">Składnik zapisywania tekstu służące do ciągu wyjściowego.</param>
        <summary>Koduje i generuje określony ciąg do użycia w atrybutu HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `&#DECIMAL;` notacji.  
  
> [!NOTE]
>  Wprowadzone znaki podwójnego cudzysłowu ("") lub pojedynczego cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do strony.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Wykrzyknik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Znak liczby wyznaczania wartości skrótu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|$|znak dolara ($)|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Znak procentu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Nawiasów|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|*|gwiazdka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Znak plus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Przecinek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Ukośnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dwukropkiem|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Średnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Znak równości|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|?|znak zapytania|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Znaku handlowego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|nawiasy kwadratowe|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|\|ukośnik odwrotny|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|^|daszek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Akcent|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Nawiasy klamrowe, nawiasów klamrowych|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linii pionowej|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|od 0x00A1 - 0x00AC|Znaki specjalne między od 0x00A1 (161 decimal) i 0x00AC (172 decimal).|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Znaki specjalne między 0x00AE (174 decimal) i 0x00FF (dziesiętne 255).|  
|[Latin rozszerzony A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Łaciński rozszerzony znaków między 0x0100 (256 decimal) i 0x017F (383 decimal).|  
|[Latin rozszerzony B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Łaciński rozszerzony znaków między 0x0180 (384 decimal) i 0x024F (591 decimal).|  
|[Rozszerzenia IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Znaki rozszerzenia IPA między 0x0250 (592 decimal) i 0x02AF (687 decimal).|  
|[Odstępy modyfikator litery](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Znaków litera modyfikatora odstępy między 0x02B0 (688 decimal) i 0x02FF (767 decimal).|  
(Łączenie znaków diakrytycznych]http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Łączenie znaków diakrytycznych znak między 0x0300 (768 decimal) i 0x036F (879 decimal).|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Aby dostosować listy bezpiecznych, należy wywołać <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> zawiera znak, który ma nieprawidłową wartość Unicode.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> zawiera punkt kodu zastępczym wysokiego poziomu, który nie nastąpiła niski zastępczego punktu kodu.  
  
 —lub—  
  
 <paramref name="input" /> zawiera dwuskładnikowego punkt kodu, który nie był poprzedzony przez punkt kodu zastępczym wysokiego poziomu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Koduje określony ciąg do użycia jako tekst w kod znaczników HTML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string input, bool useNamedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string input, bool useNamedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (input As String, useNamedEntities As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ input, bool useNamedEntities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="useNamedEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <param name="useNamedEntities">
          <see langword="true" /> Aby użyć język HTML 4.0 o nazwie jednostek dla niektórych kodowanie znaków; <see langword="false" /> do kodowania tylko przy użyciu <c> &amp;#DECIMAL;</c> notacji.</param>
        <summary>Koduje określony ciąg do użycia jako tekst w kod znaczników HTML i opcjonalnie określa, czy ma być używany język HTML 4.0 o nazwie jednostek.</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `&#DECIMAL;` notacji.  
  
> [!NOTE]
>  Wprowadzone znaki podwójnego cudzysłowu ("") lub pojedynczego cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do strony.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|(Miejsca)|Miejsce|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Wykrzyknik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Znak liczby wyznaczania wartości skrótu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|$|znak dolara ($)|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Znak procentu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Nawiasów|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|*|gwiazdka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Znak plus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Przecinek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Ukośnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dwukropkiem|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Średnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Znak równości|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|?|znak zapytania|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Komercyjnych w|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|nawiasy kwadratowe|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|\|ukośnik odwrotny|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|^|daszek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Akcent|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Nawiasy klamrowe, nawiasów klamrowych|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linii pionowej|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|od 0x00A1 - 0x00AC|Znaki specjalne między od 0x00A1 (161 decimal) i 0x00AC (172 decimal). Kodowanie znaków w tym zakresie podczas `useNamedEntities` jest `true`.|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Znaki specjalne między 0x00AE (174 decimal) i 0x00FF (dziesiętne 255). Kodowanie znaków w tym zakresie podczas `useNamedEntities` jest `true`.|  
|[Łaciński rozszerzony A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Łaciński rozszerzony znaków między 0x0100 (256 decimal) i 0x017F (383 decimal).|  
|[Łaciński rozszerzony B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Łaciński rozszerzony znaków między 0x0180 (384 decimal) i 0x024F (591 decimal).|  
|[Rozszerzenia IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Znaki rozszerzenia IPA między 0x0250 (592 decimal) i 0x02AF (687 decimal).|  
|[Odstępy modyfikator litery](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Znaków litera modyfikatora odstępy między 0x02B0 (688 decimal) i 0x02FF (767 decimal).|  
(Łączenie znaków diakrytycznych]http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Łączenie znaków diakrytycznych znak między 0x0300 (768 decimal) i 0x036F (879 decimal).|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Aby dostosować listy bezpiecznych, należy wywołać <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> zawiera znak, który ma nieprawidłową wartość Unicode.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> zawiera punkt kodu zastępczym wysokiego poziomu, który nie nastąpiła niski zastępczego punktu kodu.  
  
 —lub—  
  
 <paramref name="input" /> zawiera dwuskładnikowego punkt kodu, który nie był poprzedzony przez punkt kodu zastępczym wysokiego poziomu.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Ciąg do kodowania.</param>
        <param name="output">Składnik zapisywania tekstu służące do ciągu wyjściowego.</param>
        <summary>Koduje określony ciąg do użycia jako tekst w kod znaczników HTML i generuje ciąg przy użyciu składnika zapisywania określony tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `&#DECIMAL;` notacji.  
  
> [!NOTE]
>  Wprowadzone znaki podwójnego cudzysłowu ("") lub pojedynczego cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do strony.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|(Miejsca)|Miejsce|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Wykrzyknik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Znak liczby wyznaczania wartości skrótu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|$|znak dolara ($)|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Znak procentu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Nawiasów|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|*|gwiazdka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Znak plus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Przecinek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Ukośnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dwukropkiem|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Średnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Znak równości|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|?|znak zapytania|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Komercyjnych w|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|nawiasy kwadratowe|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|\|ukośnik odwrotny|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|^|daszek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Akcent|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Nawiasy klamrowe, nawiasów klamrowych|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linii pionowej|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|od 0x00A1 - 0x00AC|Znaki specjalne między od 0x00A1 (161 decimal) i 0x00AC (172 decimal). Kodowanie znaków w tym zakresie podczas `useNamedEntities` jest `true`.|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Znaki specjalne między 0x00AE (174 decimal) i 0x00FF (dziesiętne 255). Kodowanie znaków w tym zakresie podczas `useNamedEntities` jest `true`.|  
|[Łaciński rozszerzony A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Łaciński rozszerzony znaków między 0x0100 (256 decimal) i 0x017F (383 decimal).|  
|[Łaciński rozszerzony B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Łaciński rozszerzony znaków między 0x0180 (384 decimal) i 0x024F (591 decimal).|  
|[Rozszerzenia IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Znaki rozszerzenia IPA między 0x0250 (592 decimal) i 0x02AF (687 decimal).|  
|[Odstępy modyfikator litery](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Znaków litera modyfikatora odstępy między 0x02B0 (688 decimal) i 0x02FF (767 decimal).|  
(Łączenie znaków diakrytycznych]http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Łączenie znaków diakrytycznych znak między 0x0300 (768 decimal) i 0x036F (879 decimal).|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Aby dostosować listy bezpiecznych, należy wywołać <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> zawiera znak, który ma nieprawidłową wartość Unicode.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> zawiera punkt kodu zastępczym wysokiego poziomu, który nie nastąpiła niski zastępczego punktu kodu.  
  
 —lub—  
  
 <paramref name="input" /> zawiera dwuskładnikowego punkt kodu, który nie był poprzedzony przez punkt kodu zastępczym wysokiego poziomu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlFormUrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Koduje określony ciąg do użycia w przesyłanie formularza, którego typ MIME jest "application/x--www-form-urlencoded".</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <summary>Koduje określony ciąg do użycia w przesyłanie formularza, którego typ MIME jest "application/x--www-form-urlencoded".</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `%SINGLE_BYTE_HEX` notacji.  
  
> [!NOTE]
>  Wprowadzone znaki podwójnego cudzysłowu ("") lub pojedynczego cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do strony.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user@contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, int codePage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <param name="codePage">Strona kodowa używanego do kodowania <c>wejściowych</c> ciągu.</param>
        <summary>Koduje określony ciąg do użycia w przesyłanie formularza, którego typ MIME jest "application/x--www-form-urlencoded" przy użyciu określonej strony kodowej.</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `%SINGLE_BYTE_HEX` notacji.  
  
> [!NOTE]
>  Wprowadzone znaki podwójnego cudzysłowu ("") lub pojedynczego cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do strony.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <param name="inputEncoding">Typ kodowania danych wejściowych.</param>
        <summary>Koduje określony ciąg dla przesyłania formularza, którego typ MIME jest "application/x--www-form-urlencoded" za pomocą znaku określonego typu kodowania.</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `%SINGLE_BYTE_HEX` notacji.  
  
> [!NOTE]
>  Wprowadzone znaki podwójnego cudzysłowu ("") lub pojedynczego cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do strony.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsSafe">
      <MemberSignature Language="C#" Value="public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkAsSafe(valuetype System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, valuetype System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, valuetype System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, valuetype System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, valuetype System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkAsSafe(System::Web::Security::AntiXss::LowerCodeCharts lowerCodeCharts, System::Web::Security::AntiXss::LowerMidCodeCharts lowerMidCodeCharts, System::Web::Security::AntiXss::MidCodeCharts midCodeCharts, System::Web::Security::AntiXss::UpperMidCodeCharts upperMidCodeCharts, System::Web::Security::AntiXss::UpperCodeCharts upperCodeCharts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerCodeCharts" Type="System.Web.Security.AntiXss.LowerCodeCharts" />
        <Parameter Name="lowerMidCodeCharts" Type="System.Web.Security.AntiXss.LowerMidCodeCharts" />
        <Parameter Name="midCodeCharts" Type="System.Web.Security.AntiXss.MidCodeCharts" />
        <Parameter Name="upperMidCodeCharts" Type="System.Web.Security.AntiXss.UpperMidCodeCharts" />
        <Parameter Name="upperCodeCharts" Type="System.Web.Security.AntiXss.UpperCodeCharts" />
      </Parameters>
      <Docs>
        <param name="lowerCodeCharts">Kombinacja niższe wykresy kod, aby oznaczyć jako bezpieczne.</param>
        <param name="lowerMidCodeCharts">Kombinacja kodu środkowym dolnym wykresy, aby oznaczyć jako bezpieczne.</param>
        <param name="midCodeCharts">Kombinacja wykresy środkowej kod, aby oznaczyć jako bezpieczne.</param>
        <param name="upperMidCodeCharts">Kombinacja kodu w środku górnej wykresy, aby oznaczyć jako bezpieczne.</param>
        <param name="upperCodeCharts">Kombinacja kodu górny wykresy, aby oznaczyć jako bezpieczne.</param>
        <summary>Oznacza znaków z określonym wykresy kodu Unicode jako bezpieczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Listy bezpiecznych ma wpływ na wszystkie metody kodowania HTML XML, CSS i adresu URL.  
  
 Z pewnymi wyjątkami wykresy kodu Unicode nie bezpośrednio odpowiadają językach. Aby dodać obsługę języka lub zestawu wersji językowych często wymaga oznaczenie wielu wykresów kodu jako bezpieczny.  
  
 Aby dodać obsługę języka japońskiego, pozostawiając Zezwalaj na język angielski, należy użyć następującej składni:  
  
```  
  
MarkAsSafe(  
            LowerCodeCharts.Default,  
            LowerMidCodeCharts.HangulJamo,  
            MidCodeCharts.None,  
            UpperMidCodeCharts.CjkRadicalsSupplement |   
            UpperMidCodeCharts.CjkSymbolsAndPunctuation |   
            UpperMidCodeCharts.Hiragana |   
            UpperMidCodeCharts.Katakana |   
            UpperMidCodeCharts.KatakanaPhoneticExtensions |   
            UpperMidCodeCharts.LatinExtendedD |  
            UpperMidCodeCharts.CjkUnifiedIdeographs,  
            UpperCodeCharts.None);  
```  
  
> [!NOTE]
>  <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> Metoda musi zostać wywołana `Application_Start` metody w pliku Global.asax.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" /> Metoda została wywołana poza <see langword="Application_Start" /> metody w pliku Global.asax.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Koduje ciągi i tablice typu byte do użycia w adresie URL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <summary>Koduje określony ciąg do użycia w adresie URL.</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `%SINGLE_BYTE_HEX` notacji.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, int codePage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <param name="codePage">Strona kodowa używanego do kodowania <c>wejściowych</c> ciągu.</param>
        <summary>Koduje określony ciąg do użycia w adresie URL przy użyciu określonej strony kodowej.</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `%SINGLE_BYTE_HEX` notacji.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <param name="inputEncoding">Typ kodowania danych wejściowych.</param>
        <summary>Koduje określony ciąg do użycia w adresie URL za pomocą znaku określonego typu kodowania.</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `%SINGLE_BYTE_HEX` notacji.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal override byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">Tablica bajtów do kodowania.</param>
        <param name="offset">Indeks pierwszego bajtu do kodowania.</param>
        <param name="count">Liczba bajtów do kodowania.</param>
        <summary>Koduje określonej tablicy bajtów do użycia w adresie URL, rozpoczynając od określonego przesunięcia w tablicy bajtów i kodowanie określoną liczbę bajtów.</summary>
        <returns>Tablica bajtów zakodowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `%SINGLE_BYTE_HEX` notacji.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal override string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Ciąg do kodowania.</param>
        <summary>Koduje ciągi ścieżkę do użycia w adresie URL.</summary>
        <returns>Adres URL zawiera ścieżkę zakodowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `%SINGLE_BYTE_HEX` notacji.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Znak liczby wyznaczania wartości skrótu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Znak procentu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Nawiasów|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Ukośnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|\|ukośnik odwrotny|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Nawiasy klamrowe, nawiasów klamrowych|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linii pionowej|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  
|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  
|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 Ta metoda koduje tylko ścieżka adresu URL. Ta metoda nie będzie kodowania systemu (na przykład `http:`, `ftp:`, lub `file:`), urząd (na przykład `www.northwind.com` lub `www.contoso.com:8080`), albo zapytania lub fragmentu (na przykład `?v=s978dfs9#x=103`). Jeśli Brak schematu i urzędu w ciągu, ciąg zakłada, że ścieżka względna i ścieżka jest zaszyfrowana. Następujący adres URL jedynie podciągu `/default.htm` jest zakodowany:  
  
 `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string XmlAttributeEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlAttributeEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlAttributeEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlAttributeEncode(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <summary>Koduje określony ciąg do użycia w atrybutach XML.</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `&#DECIMAL;` notacji.  
  
> [!NOTE]
>  Wprowadzone znaki podwójnego cudzysłowu ("") lub pojedynczego cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do strony.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Wykrzyknik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Znak liczby wyznaczania wartości skrótu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|$|znak dolara ($)|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Znak procentu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Nawiasów|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|*|gwiazdka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Znak plus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Przecinek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres, kropki, kropka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Ukośnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dwukropkiem|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Średnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Znak równości|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|?|znak zapytania|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Znaku handlowego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|nawiasy kwadratowe|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|\|ukośnik odwrotny|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|^|daszek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Akcent|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Nawiasy klamrowe, nawiasów klamrowych|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linii pionowej|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|od 0x00A1 - 0x00AC|Znaki specjalne między od 0x00A1 (161 decimal) i 0x00AC (172 decimal).|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Znaki specjalne między 0x00AE (174 decimal) i 0x00FF (dziesiętne 255).|  
|[Łaciński rozszerzony A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Łaciński rozszerzony znaków między 0x0100 (256 decimal) i 0x017F (383 decimal).|  
|[Łaciński rozszerzony B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Łaciński rozszerzony znaków między 0x0180 (384 decimal) i 0x024F (591 decimal).|  
|[Rozszerzenia IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Znaki rozszerzenia IPA między 0x0250 (592 decimal) i 0x02AF (687 decimal).|  
|[Odstępy modyfikator litery](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Znaków litera modyfikatora odstępy między 0x02B0 (688 decimal) i 0x02FF (767 decimal).|  
(Łączenie znaków diakrytycznych]http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Łączenie znaków diakrytycznych znak między 0x0300 (768 decimal) i 0x036F (879 decimal).|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&apos;XSS&#32;Attack!&apos;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS&#32;Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Aby dostosować listy bezpiecznych, należy wywołać <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> zawiera znak, który ma nieprawidłową wartość Unicode.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> zawiera punkt kodu zastępczym wysokiego poziomu, który nie nastąpiła niski zastępczego punktu kodu.  
  
 —lub—  
  
 <paramref name="input" /> zawiera dwuskładnikowego punkt kodu, który nie był poprzedzony przez punkt kodu zastępczym wysokiego poziomu.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlEncode">
      <MemberSignature Language="C#" Value="public static string XmlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlEncode(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Ciąg do kodowania.</param>
        <summary>Koduje określony ciąg do użycia w atrybutach XML.</summary>
        <returns>Zakodowany ciąg.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda koduje wszystkie znaki oprócz tych, które znajdują się na liście bezpiecznych. Przy użyciu kodowania znaków `&#DECIMAL;` notacji.  
  
> [!NOTE]
>  Wprowadzone znaki podwójnego cudzysłowu ("") lub pojedynczego cudzysłowu ("") wokół wynikowy ciąg przed dodaniem go do strony.  
  
 W poniższej tabeli wymieniono znaków bezpieczne domyślnych.  
  
|Wykres kodu Unicode|Znaki|Opis|  
|------------------------|--------------------|-----------------|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Wielkie litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Małe litery alfabetu łacińskiego|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numery|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|(Miejsca)|Miejsce|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Wykrzyknik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Znak liczby wyznaczania wartości skrótu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|$|znak dolara ($)|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Znak procentu|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Nawiasów|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|*|gwiazdka|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Znak plus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Przecinek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Łącznik, minus|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Okres|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Ukośnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dwukropkiem|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Średnik|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Znak równości|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|?|znak zapytania|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Komercyjnych w|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|nawiasy kwadratowe|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|\|ukośnik odwrotny|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|^|daszek|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Podkreślenie|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|`|Akcent|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Nawiasy klamrowe, nawiasów klamrowych|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linii pionowej|  
|[C0 Formanty i Latin podstawowa](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Tylda|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|od 0x00A1 - 0x00AC|Znaki specjalne między od 0x00A1 (161 decimal) i 0x00AC (172 decimal). Kodowanie znaków w tym zakresie podczas `useNamedEntities` jest `true`.|  
|[C1 Formanty i uzupełniają Latin-1](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Znaki specjalne między 0x00AE (174 decimal) i 0x00FF (dziesiętne 255). Kodowanie znaków w tym zakresie podczas `useNamedEntities` jest `true`.|  
|[Łaciński rozszerzony A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Łaciński rozszerzony znaków między 0x0100 (256 decimal) i 0x017F (383 decimal).|  
|[Łaciński rozszerzony B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Łaciński rozszerzony znaków między 0x0180 (384 decimal) i 0x024F (591 decimal).|  
|[Rozszerzenia IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Znaki rozszerzenia IPA między 0x0250 (592 decimal) i 0x02AF (687 decimal).|  
|[Odstępy modyfikator litery](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Znaków litera modyfikatora odstępy między 0x02B0 (688 decimal) i 0x02FF (767 decimal).|  
(Łączenie znaków diakrytycznych]http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Łączenie znaków diakrytycznych znak między 0x0300 (768 decimal) i 0x036F (879 decimal).|  
  
 W poniższej tabeli wymieniono przykładowe dane wejściowe i odpowiednie dane wyjściowe zakodowany.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Aby dostosować listy bezpiecznych, należy wywołać <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> zawiera znak, który ma nieprawidłową wartość Unicode.</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> zawiera punkt kodu zastępczym wysokiego poziomu, który nie nastąpiła niski zastępczego punktu kodu.  
  
 —lub—  
  
 <paramref name="input" /> zawiera dwuskładnikowego punkt kodu, który nie był poprzedzony przez punkt kodu zastępczym wysokiego poziomu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>