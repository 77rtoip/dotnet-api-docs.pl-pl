<Type Name="PrintProperty" FullName="System.Printing.IndexedProperties.PrintProperty">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36806893ef0071c3f547fce81802a2fa726bf85b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69089929" /></Metadata><TypeSignature Language="C#" Value="public abstract class PrintProperty : IDisposable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit PrintProperty extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Printing.IndexedProperties.PrintProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PrintProperty&#xA;Implements IDeserializationCallback, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintProperty abstract : IDisposable, System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type PrintProperty = class&#xA;    interface IDisposable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cf29b-101">Reprezentuje właściwość (i wartość właściwości) sprzętowego systemu drukowania lub składnika oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="cf29b-101">Represents a property (and the value of the property) of a printing system hardware or software component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf29b-102">Poniższy przykład pokazuje, jak używać tej klasy do odnajdowania w czasie wykonywania właściwości i typów tych właściwości, obiektu systemowego drukowania bez odbicia.</span><span class="sxs-lookup"><span data-stu-id="cf29b-102">The following example shows how to use this class to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrintProperty (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PrintProperty(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="new System.Printing.IndexedProperties.PrintProperty : string -&gt; System.Printing.IndexedProperties.PrintProperty" Usage="new System.Printing.IndexedProperties.PrintProperty attributeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="cf29b-103">Nazwa właściwości reprezentowanej przez ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf29b-103">The name of the property that this object represents.</span></span></param>
        <summary><span data-ttu-id="cf29b-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cf29b-104">Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf29b-105">`attributeName` Powinien być wpisany dokładnie tak samo jak nazwa konkretnej właściwości obiektu systemowego drukowania, włącznie z wielkością liter.</span><span class="sxs-lookup"><span data-stu-id="cf29b-105">The `attributeName` should be spelled exactly the same as the name of some particular property of a print system object, including casing.</span></span> <span data-ttu-id="cf29b-106">Na przykład <xref:System.Printing.PrintQueue.QueuePort%2A> Właściwość <xref:System.Printing.PrintQueue> obiektu musi mieć wartość "QueuePort", a nie "PrintPort", "Port" lub "QueuePort".</span><span class="sxs-lookup"><span data-stu-id="cf29b-106">For example, the <xref:System.Printing.PrintQueue.QueuePort%2A> property of a <xref:System.Printing.PrintQueue> object must be spelled "QueuePort", not "PrintPort", "Port", or "Queueport".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf29b-107">Zwalnia zasoby, które są używane przez <see cref="T:System.Printing.IndexedProperties.PrintProperty" />program.</span><span class="sxs-lookup"><span data-stu-id="cf29b-107">Releases the resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="printProperty.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf29b-108">Zwalnia wszystkie zasoby, które są używane przez <see cref="T:System.Printing.IndexedProperties.PrintProperty" />program.</span><span class="sxs-lookup"><span data-stu-id="cf29b-108">Releases all resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool ) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose ( As Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Dispose(System.Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Dispose(System.Boolean)" FrameworkAlternate="netframework-3.0" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="printProperty.Dispose " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="printProperty.Dispose " FrameworkAlternate="netframework-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="cf29b-109"><see langword="true" />Aby zwolnić zasoby zarządzane i zasoby niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="cf29b-109"><see langword="true" /> to release both managed resources and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <param name="A_0"><span data-ttu-id="cf29b-110"><see langword="true" />Aby zwolnić zasoby zarządzane i zasoby niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="cf29b-110"><see langword="true" /> to release both managed resources and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="cf29b-111">Zwalnia niezarządzane zasoby, które są używane przez <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> program i opcjonalnie zwalnia zasób zarządzany.</span><span class="sxs-lookup"><span data-stu-id="cf29b-111">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> and optionally releases the managed resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf29b-112">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` <xref:System.Object.Finalize%2A> i metodę.</span><span class="sxs-lookup"><span data-stu-id="cf29b-112">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="cf29b-113">`Dispose()`wywołuje metodę chronioną `Dispose(Boolean)` z nienazwanym parametrem logicznym ustawionym na `true`.</span><span class="sxs-lookup"><span data-stu-id="cf29b-113">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="cf29b-114"><xref:System.Object.Finalize%2A>wywołuje `Dispose` z parametrem ustawionym `false`na.</span><span class="sxs-lookup"><span data-stu-id="cf29b-114"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="cf29b-115">Gdy parametr logiczny to `true`, ta metoda zwalnia wszystkie zasoby przechowywane przez wszystkie obiekty zarządzane, do których odwołują się te <xref:System.Printing.IndexedProperties.PrintProperty> odwołania.</span><span class="sxs-lookup"><span data-stu-id="cf29b-115">When the Boolean parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Printing.IndexedProperties.PrintProperty> references.</span></span> <span data-ttu-id="cf29b-116">Ta metoda wywołuje `Dispose()` metodę każdego przywoływanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf29b-116">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cf29b-117">
            <see langword="Dispose" />może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="cf29b-117">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="cf29b-118">Podczas zastępowania <see langword="Dispose(Boolean)" />należy zachować ostrożność, aby nie odwoływać się do obiektów, które zostały wcześniej usunięte <see langword="Dispose" />w ramach wcześniejszego wywołania do.</span><span class="sxs-lookup"><span data-stu-id="cf29b-118">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="cf29b-119">Aby uzyskać więcej informacji na temat sposobu <see langword="Dispose(Boolean)" />implementacji, zobacz [implementowanie metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="cf29b-119">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="cf29b-120">Aby uzyskać więcej informacji <see langword="Dispose" /> na <see cref="M:System.Object.Finalize" />temat i, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [Zastępowanie metody Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="cf29b-120">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PrintProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PrintProperty ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="printProperty.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf29b-121">Umożliwia podejmowanie prób zwolnienia zasobów i wykonywanie innych operacji czyszczenia <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> przed odzyskiwaniem danych przez wyrzucanie elementów bezużytecznych. <see cref="T:System.Printing.IndexedProperties.PrintProperty" /></span><span class="sxs-lookup"><span data-stu-id="cf29b-121">Enables a <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> to attempt to free resources and to perform other cleanup operations before the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected virtual void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member InternalDispose : bool -&gt; unit&#xA;override this.InternalDispose : bool -&gt; unit" Usage="printProperty.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="cf29b-122"><see langword="true" />Aby zwolnić zarządzane zasoby i niezarządzane zasoby; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="cf29b-122"><see langword="true" /> to release both the managed resources and the unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="cf29b-123">Zwalnia niezarządzane zasoby, które są używane przez <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> program i opcjonalnie zwalnia zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="cf29b-123">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool with get, set" Usage="System.Printing.IndexedProperties.PrintProperty.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf29b-124">Pobiera lub ustawia wartość wskazującą, czy obiekt został usunięty.</span><span class="sxs-lookup"><span data-stu-id="cf29b-124">Gets or sets a value that indicates whether the object has been disposed.</span></span></summary>
        <value><span data-ttu-id="cf29b-125"><see langword="true" />Jeśli obiekt został usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="cf29b-125"><see langword="true" /> if the object has been disposed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cf29b-126">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf29b-126">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="protected bool IsInitialized { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsInitialized {  void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Printing.IndexedProperties.PrintProperty.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf29b-127">Pobiera lub ustawia wartość wskazującą, czy obiekt został zainicjowany.</span><span class="sxs-lookup"><span data-stu-id="cf29b-127">Gets or sets a value that indicates whether the object has been initialized.</span></span></summary>
        <value><span data-ttu-id="cf29b-128"><see langword="true" />Jeśli obiekt został zainicjowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="cf29b-128"><see langword="true" /> if the object has been initialized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cf29b-129">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf29b-129">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Printing.IndexedProperties.PrintProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf29b-130">Gdy jest zastępowany w klasie pochodnej, pobiera nazwę właściwości reprezentowanej przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf29b-130">When overridden in a derived class, gets the name of the property that the object represents.</span></span></summary>
        <value><span data-ttu-id="cf29b-131"><see cref="T:System.String" /> Reprezentujący nazwę właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf29b-131">A <see cref="T:System.String" /> that represents the name of the property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf29b-132">Poniższy przykład pokazuje, jak używać tej właściwości do odnajdowania w czasie wykonywania właściwości i typów tych właściwości, obiektu systemowego drukowania bez odbicia.</span><span class="sxs-lookup"><span data-stu-id="cf29b-132">The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.IndexedProperties.PrintProperty.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="printProperty.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="cf29b-133">Źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="cf29b-133">The source of the event.</span></span></param>
        <summary><span data-ttu-id="cf29b-134">Gdy jest zastępowany w klasie pochodnej, implementuje <see cref="T:System.Runtime.Serialization.ISerializable" /> interfejs i wywołuje zdarzenie deserializacji po zakończeniu deserializacji.</span><span class="sxs-lookup"><span data-stu-id="cf29b-134">When overridden in a derived class, implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Printing.IndexedProperties.PrintProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Printing.IndexedProperties.PrintProperty.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf29b-135">Gdy jest zastępowany w klasie pochodnej, Pobiera lub ustawia wartość właściwości reprezentowanej przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf29b-135">When overridden in a derived class, gets or sets the value of the property that the object represents.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf29b-136">Poniższy przykład pokazuje, jak używać tej właściwości do odnajdowania w czasie wykonywania właściwości i typów tych właściwości, obiektu systemowego drukowania bez odbicia.</span><span class="sxs-lookup"><span data-stu-id="cf29b-136">The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
