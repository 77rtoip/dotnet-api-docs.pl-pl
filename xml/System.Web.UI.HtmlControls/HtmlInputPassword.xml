<Type Name="HtmlInputPassword" FullName="System.Web.UI.HtmlControls.HtmlInputPassword">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26950e8ea85236ea5c1a179b8f65de8d3ce5ff4b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39760224" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputPassword : System.Web.UI.HtmlControls.HtmlInputText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputPassword extends System.Web.UI.HtmlControls.HtmlInputText implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputPassword&#xA;Inherits HtmlInputText" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputPassword : System::Web::UI::HtmlControls::HtmlInputText" />
  <TypeSignature Language="F#" Value="type HtmlInputPassword = class&#xA;    inherit HtmlInputText&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputText</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zezwala na dostęp programistyczny do HTML <see langword="&lt;input type= password&gt;" /> elementu na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Klasa pochodzi od <xref:System.Web.UI.HtmlControls.HtmlInputText> klasy i jest używany do tworzenia pole tekstu jednowierszowego, umożliwiająca użytkownikowi wprowadzenie hasła. Korzystając z <xref:System.Web.UI.HtmlControls.HtmlInputPassword> kontroli <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> właściwość zostanie opublikowana na serwer w każdym przesłaniu formularza. <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Właściwość <xref:System.Web.UI.HtmlControls.HtmlInputPassword> formantu nie są utrwalane w widoku stanu.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> Właściwość określa maksymalną liczbę znaków, które mogą być wprowadzane w polu tekstowym. <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> Właściwość umożliwia określenie szerokości pola tekstowego. Użyj <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> właściwości w celu określenia wartości wprowadzonej w polu tekstowym przez użytkownika. <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Control oferuje <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> zdarzenia, które jest wywołane, gdy <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> właściwość ulegnie zmianie wartości z zakresu od wpisów z serwerem. Pozwala na tworzenie obsługi zdarzeń, który wykonuje niestandardowy zestaw instrukcji w każdym razem, gdy zdarzenie jest wywoływane.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Formant nie zawiera wbudowane sposób publikować na serwerze. Należy podać innej kontrolki na stronie sieci Web obsługującą publikowanie do serwera, takie jak <xref:System.Web.UI.HtmlControls.HtmlButton> lub <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> kontroli.  
  
 Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, zobacz <xref:System.Web.UI.HtmlControls.HtmlInputPassword.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania `<input type=text>`, `<input type=password>`, i `<input type=submit>` kontrolek HTML w sposób deklaratywny na strony formularzy sieci Web.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/CS/htmlinputcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/VB/htmlinputvb.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, jak programowo dodać te same kontrolki HTML podczas wywoływania `Page_Load` metody.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputText" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputPassword();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> klasy przy użyciu wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzenie i inicjuje nowe wystąpienie klasy za pomocą tego konstruktora <xref:System.Web.UI.HtmlControls.HtmlInputPassword> kontrolować przy użyciu wartości domyślnych. Tworzy `password` typu formantu pola tekstowego.  
  
 W poniższej tabeli przedstawiono wartości początkowej właściwości wystąpienia <xref:System.Web.UI.HtmlControls.HtmlInputPassword>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Ciąg literału "password".|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak programowo dodać <xref:System.Web.UI.HtmlControls.HtmlInputText>, <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, i <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> kontrolek do strony formularzy sieci Web, aby utworzyć ekran prostego logowania przy użyciu konstruktory domyślne.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputPassword.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Renderuje atrybuty <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> formant do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes%2A> Usuwa metoda `Value` atrybut z zbierania stanu widoku, aby uniemożliwić są renderowane, a następnie wywołuje klasę bazową <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>