<Type Name="HtmlContainerControl" FullName="System.Web.UI.HtmlControls.HtmlContainerControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aef8e7b56f84e7d133664a6795ec00403d3276ea" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36389446" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HtmlContainerControl : System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HtmlContainerControl extends System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HtmlContainerControl&#xA;Inherits HtmlControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlContainerControl abstract : System::Web::UI::HtmlControls::HtmlControl" />
  <TypeSignature Language="F#" Value="type HtmlContainerControl = class&#xA;    inherit HtmlControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy jako abstrakcyjna klasa podstawowa dla kontrolki serwera HTML mapowane na elementy HTML, które są wymagane do otwierania i tagu zamykającego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Najbardziej typowych formantów tag zamykający są `<form>`, `<table>`, `<tr>`, `<td>`, `<a>`, i `<span>` elementy.  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> i <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwości umożliwiają manipulować zawartością pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.HtmlControls.HtmlContainerControl>-pochodnych kontrolki.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlContainerControl>, zobacz <xref:System.Web.UI.HtmlControls.HtmlContainerControl.%23ctor%2A> konstruktora.  
  
 Nowe wystąpienie tej klasy nie zostanie utworzony bezpośrednio.  
  
> [!CAUTION]
>  Jeśli używasz <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwości w celu określenia tekst pomiędzy otwierającym, a zamykającym tagiem serwera kontrolka HTML tekstu nie ma kodowania HTML. Umożliwia osadzanie skryptów w tagów HTML w tekście. Korzystając z <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwość, należy zweryfikować wartości, aby zmniejszyć luk w zabezpieczeniach. W przeciwnym razie należy rozważyć użycie <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> właściwości zamiast tego.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwości tej klasy można dynamicznie wygenerować komunikatu na stronie sieci Web.  
  
 [!code-aspx-csharp[Classic HtmlContainerControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HtmlContainerControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HtmlContainerControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> przy użyciu wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia tworzenie i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlContainerControl> przy użyciu wartości domyślnych.  
  
> [!NOTE]
>  Wystąpienie tej klasy nie jest bezpośrednio tworzone. Ten konstruktor jest wywoływana z konstruktora klasy formantów innych HTML można zainicjować właściwości zdefiniowane w tej klasie.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlContainerControl>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Span" literału.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlContainerControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlContainerControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlContainerControl : string -&gt; System.Web.UI.HtmlControls.HtmlContainerControl" Usage="new System.Web.UI.HtmlControls.HtmlContainerControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">Ciąg, który określa nazwę tagu kontrolki.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> przy użyciu określonej nazwie tagu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia tworzenie i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlContainerControl> przy użyciu określonego tagu.  
  
> [!NOTE]
>  Wystąpienie tej klasy nie jest bezpośrednio tworzone. Ten konstruktor jest wywoływana z konstruktora klasy formantów innych HTML można zainicjować właściwości zdefiniowane w tej klasie.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlContainerControl>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Wartość określoną przez `tag` parametru.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlContainerControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Web.UI.ControlCollection" /> obiektu do przechowywania formantów podrzędnych (literał i serwer) kontrolki serwera.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> zawierający <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> kontrolki serwera podrzędnego.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public virtual string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość znaleziono pomiędzy otwierającym, a zamykającym tagiem określonego formantu serwera, HTML.</summary>
        <value>Zawartość HTML między otwierające i zamykające znaczniki HTML kontrolki serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwości programowo modyfikowania zawartości między otwierające i zamykające znaczniki HTML kontrolki serwera.  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> Właściwości nie do automatycznie przeprowadza kodowania znaków specjalnych do i z jednostek kodu HTML. Jednostek HTML umożliwiają wyświetlanie znaków specjalnych, takich jak `<` znak, czy przeglądarki zwykle zostałby zinterpretowany jako mające specjalne znaczenie. `<` Znak zostanie zinterpretowany jako początek tagu i nie jest wyświetlany na stronie. Aby wyświetlić `<` znak, należy użyć tej jednostki `&lt;`.  
  
 Na przykład jeśli <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwość jest ustawiona na `"<b> Hello </b>"`, `<` i `>` znaki nie są konwertowane na `&lt;` i `&gt;`odpowiednio. Nadal będzie renderowany dane wyjściowe: \<b > Hello \</b >. Wykrywa przeglądarki `<b>` tagów i wyświetlić tekst, Witaj, pogrubioną czcionką.  
  
> [!CAUTION]
>  Ponieważ tekst nie ma kodowania HTML, możliwe jest osadzanie skryptów w języku HTML tagi w tekście. Jeśli ta właściwość jest ustawiona, dynamicznie przy użyciu danych wprowadzonych przez użytkownika, pamiętaj zweryfikować wartości, aby zmniejszyć luk w zabezpieczeniach. Aby uzyskać więcej informacji, zobacz [zabezpieczeń i dane wejściowe użytkownika](~/docs/standard/security/security-and-user-input.md).  
  
 Aby zapewnić automatyczne HTML kodowania i dekodowania, użyj <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> właściwości.  
  
> [!NOTE]
>  Jeśli nie formanty podrzędne <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwość zawiera wartość <xref:System.String.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> dynamiczne określanie wiadomości tekstowej dla właściwości.  
  
 [!code-aspx-csharp[Classic HtmlContainerControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Istnieje więcej niż jeden formant serwera HTML.  \- lub - HTML kontrolki serwera nie jest <see cref="T:System.Web.UI.LiteralControl" /> lub <see cref="T:System.Web.UI.DataBoundLiteralControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
        <altmember cref="M:System.Web.UI.Control.IsLiteralContent" />
        <altmember cref="M:System.Web.UI.Control.HasControls" />
        <altmember cref="T:System.Web.UI.DataBoundLiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst pomiędzy otwierającym, a zamykającym tagiem określonego formantu serwera, HTML.</summary>
        <value>Tekst pomiędzy otwierającym, a zamykającym tagiem kontrolkę HTML serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> właściwości programowo zmodyfikowanie tekstu pomiędzy otwierającym, a zamykającym tagiem kontrolkę HTML serwera.  
  
 W odróżnieniu od <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwość <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> właściwości automatycznie koduje znaki specjalne do i z jednostek kodu HTML. Jednostek HTML umożliwiają wyświetlanie znaków specjalnych, takich jak `<` znak, czy przeglądarki zwykle zostałby zinterpretowany jako mające specjalne znaczenie. `<` Znak zostanie zinterpretowany jako początek tagu i nie jest wyświetlany na stronie. Aby wyświetlić `<` znak, należy użyć tej jednostki `&lt;`.  
  
 Na przykład jeśli <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> właściwość jest ustawiona na `"<b> Hello </b>"`, `<` i `>` symbole są konwertowane na `&lt;` i `&gt;`odpowiednio. Będzie renderowany dane wyjściowe: &lt; b &gt; Hello &lt; /b &gt;. `&lt;` i `&gt;` wskazuje jednostek w przeglądarce, że te znaki, które mają być wyświetlane na stronie. Przeglądarka nie wykrywa `<b>` tagów i wyświetlić tekst pogrubioną czcionką. Tekst wyświetlany na stronie: \<b > Hello \</b >.  
  
 Aby uniknąć automatycznego HTML kodowania i dekodowania, użyj <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwości.  
  
> [!NOTE]
>  Jeśli nie formanty podrzędne <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwość zawiera wartość <xref:System.String.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje dostępne za pośrednictwem usługi kodowania HTML <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> właściwości.  
  
 [!code-aspx-csharp[Classic HtmlContainerControl.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl.InnerText Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl.InnerText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Istnieje więcej niż jeden formant serwera HTML.  \- lub - HTML kontrolki serwera nie jest <see cref="T:System.Web.UI.LiteralControl" /> lub <see cref="T:System.Web.UI.DataBoundLiteralControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="htmlContainerControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący stan formantu ma zostać przywrócony.</param>
        <summary>Przywraca <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> formantu widoku żądania stanu z poprzedniej strony, która została zapisana przez <see cref="M:System.Web.UI.Control.SaveViewState" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę programu .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jednak kontroli deweloperzy mogą przesłaniać tę metodę, aby określić, jak formantu niestandardowego serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A> Wywołania metod klasy podstawowej <xref:System.Web.UI.Control.LoadViewState%2A> metody. Ponadto <xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A> zestawy metody <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> zawartości.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A> Zamienników metod <xref:System.Web.UI.HtmlControls.HtmlControl.Render%2A?displayProperty=nameWithType> metody do renderowania tagu otwierającego formantów podrzędnych i tagu zamykającego <xref:System.Web.UI.HtmlControls.HtmlContainerControl> formantu.  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlContainerControl> formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlControl.Render(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> poprawnie renderowania formantu.</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Wystąpienia, który odbiera zawartość renderowany.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> atrybuty formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Renderuje tag zamykający dla <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A> Metoda jest wywoływana przez <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A> metody do renderowania tagu zamykającego <xref:System.Web.UI.HtmlControls.HtmlContainerControl> formantu.  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlContainerControl> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>