<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd1c7a21e8d552f971b992a4273e6034ed920c40" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69043232" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia programistyczny dostęp do elementu <see langword="&lt;form&gt;" /> HTML na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm> Formant jest kontenerem dla formantów serwerowych na stronie formularzy sieci Web. Wszystkie kontrolki serwera, które ogłaszają z powrotem na serwerze, muszą być umieszczone między tagiem <xref:System.Web.UI.HtmlControls.HtmlForm> otwierającym i zamykającym kontrolki.  
  
> [!NOTE]
>  ASP.NET umożliwia aktywne na stronie <xref:System.Web.UI.HtmlControls.HtmlForm> formularzy sieci Web tylko jedną kontrolkę. Jeśli na stronie formularzy sieci Web znajduje <xref:System.Web.UI.HtmlControls.HtmlForm> się więcej niż jeden aktywny formant, środowisko uruchomieniowe języka wspólnego zgłosi <xref:System.Web.HttpException?displayProperty=nameWithType> wyjątek podczas żądania strony. Można jednak użyć <xref:System.Web.UI.WebControls.MultiView> kontrolki, w której każdy <xref:System.Web.UI.WebControls.View> obiekt zawiera jeden <xref:System.Web.UI.HtmlControls.HtmlForm> formant, ponieważ tylko jeden z <xref:System.Web.UI.WebControls.View> nich jest aktywny w danym momencie.  
  
 Zachowanie <xref:System.Web.UI.HtmlControls.HtmlForm> kontrolki można kontrolować przez ustawienie jej właściwości. Aby określić typ kodowania dla danych formularza, ustaw <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> właściwość. Metoda (`GET` lub `POST`) wykorzystywana przez przeglądarkę do publikowania danych formularza na serwerze do przetwarzania <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> jest określona przez ustawienie właściwości.  
  
> [!CAUTION]
>  Domyślnie <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> właściwość jest ustawiona na `POST`. Wartość tej właściwości można zmodyfikować na `GET`, ale może to spowodować uszkodzenie wbudowanego stanu i usług ogłaszania zwrotnego dostarczonych przez strukturę strony ASP.NET.  
  
 Można skonfigurować kontrolki implementujące <xref:System.Web.UI.WebControls.IButtonControl> interfejs do publikowania na innej stronie docelowej. Jest to określane jako Księgowanie między stronami. Aby uzyskać więcej informacji, zobacz [Publikowanie między stronami w formularzach sieci Web ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlForm>, <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> Zobacz Konstruktor.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.HtmlControls.HtmlForm> jak używać klasy do tworzenia prostego formularza.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Ogłaszanie między stronami na stronie internetowej ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.HtmlControls.HtmlForm> klasy.  
  
 W poniższej tabeli przedstawiono początkową wartość właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlForm>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Ciąg literału "form".|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie <xref:System.Web.UI.HtmlControls.HtmlForm> kontrolki i umieścić je na stronie sieci Web.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia atrybut Action formularza HTML.</summary>
        <value>Atrybut Action formularza HTML. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> Właściwość jest używana podczas ponownego zapisywania adresu URL oryginalnego żądania, ale chcesz zachować oryginalny adres URL dla atrybutu Action formularza HTML. <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> Ustaw właściwość na wartość adresu URL, który ma zostać zachowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator formantu, który jest generowany przez [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontrolkę</summary>
        <value>Identyfikator formantu wygenerowany przez [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> dla kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapobiec konfliktom nazw w przypadku renderowania wielu wystąpień kontrolki, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] program automatycznie generuje unikatową <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> wartość dla każdej kontrolki na stronie. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType> właściwość.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET — identyfikacja formantu</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Web.UI.ControlCollection" /> kolekcję <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> dla kontrolki.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> , który <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> zawiera kontrolki serwera podrzędnego kontrolki.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontrolkę <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> podrzędną kontrolki, która powoduje odświeżenie po naciśnięciu klawisza ENTER.</summary>
        <value>Kontrolka przycisku, która ma być wyświetlana jako przycisk domyślny <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> podczas ładowania. <see cref="P:System.Web.UI.Control.ID" /> Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Właściwość pozwala określić, że użytkownicy mogą spowodować ogłaszanie zwrotne, naciskając klawisz ENTER w kontrolce wprowadzania w formularzu (na przykład pole tekstowe). Można określić jako przycisk domyślny wszystkie kontrolki, które pochodzą z <xref:System.Web.UI.WebControls.IButtonControl> interfejsu <xref:System.Web.UI.WebControls.LinkButton> poza formantem. Jeśli formant, do którego odwołuje <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> się właściwość, nie pochodzi od <xref:System.Web.UI.WebControls.IButtonControl>, <xref:System.InvalidOperationException> zgłaszany jest wyjątek.  
  
 Jeśli używasz stron wzorcowych i ustawisz <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwość na stronie zawartości, <xref:System.Web.UI.Control.UniqueID%2A> Użyj właściwości <xref:System.Web.UI.WebControls.IButtonControl> przycisku. Aby uzyskać więcej informacji na temat stron wzorcowych, zobacz [strony wzorcowe ASP.NET](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Właściwość może nie powodować ogłaszania zwrotnego w następujących scenariuszach:  
  
-   Naciśnij klawisz ENTER, gdy fokus jest poza kontrolkami wejściowymi w formularzu. Nie ma gwarancji domyślnego działania ogłaszania zwrotnego.  
  
-   Naciśnij klawisz ENTER, gdy fokus jest w wielowierszowym polu tekstowym. W wielowierszowym polu tekstowym oczekiwane zachowanie polega na tym, że naciśnięcie klawisza ENTER powoduje utworzenie nowego wiersza w polu tekstowym. W niektórych przeglądarkach naciśnięcie klawisza ENTER wewnątrz wielowierszowego pola tekstowego wyzwala ogłaszanie zwrotne. W takim przypadku, jeśli chcesz wprowadzić polecenie, aby zamiast tego utworzyć nowy wiersz, możesz dołączyć funkcję JavaScript do kontrolki wejściowej. Skrypt powinien przechwycić klucz ENTER i zatrzymać ogłaszanie zwrotne. Na przykład możesz użyć <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> kolekcji właściwości, aby dodać skrypt klienta `onKeyPress` dla zdarzenia.  
  
-   <xref:System.Web.UI.WebControls.LinkButton> Określanie kontrolki jako przycisku domyślnego. Obsługiwane są tylko <xref:System.Web.UI.WebControls.Button> formanty.<xref:System.Web.UI.WebControls.ImageButton>  
  
-   <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Zmiana właściwości programowo podczas asynchronicznego ogłaszania zwrotnego. Asynchroniczne ogłaszanie zwrotne można włączyć na stronie, dodając co najmniej <xref:System.Web.UI.UpdatePanel> jedną kontrolkę do strony. Aby uzyskać więcej informacji, zobacz temat [formant UpdatePanel — Omówienie](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [Przegląd renderowania części strony](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwość, aby ustawić domyślną kontrolkę powodującą ogłaszanie zwrotne.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka, do której odwołuje się przycisk domyślny, nie <see cref="T:System.Web.UI.WebControls.IButtonControl" />jest typu.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET strony wzorcowe — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontrolkę w formularzu, która ma być wyświetlana jako kontrolka z fokusem <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> wprowadzania podczas ładowania kontrolki.</summary>
        <value>Kontrolka w formularzu, która ma być wyświetlana jako kontrolka z fokusem wejścia <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> podczas ładowania. <see cref="P:System.Web.UI.Control.ClientID" /> Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby uzyskać dostęp do formantu w formularzu, aby wyświetlić jako kontrolkę z fokusem wprowadzania <xref:System.Web.UI.HtmlControls.HtmlForm> podczas ładowania kontrolki. <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> Kontrolki, które można wybrać, są wyświetlane z wizualną wizualizacją wskazującą, że mają fokus. Na przykład <xref:System.Web.UI.WebControls.TextBox> kontrolka z fokusem jest wyświetlana z punktem wstawiania umieszczonym w tym miejscu.  
  
 Kontrolkę z fokusem można również ustawić przy użyciu <xref:System.Web.UI.Control.Focus%2A> metod <xref:System.Web.UI.Page.SetFocus%2A> lub. Te metody mają pierwszeństwo przed <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwością. Jeśli jedna z tych metod jest wywoływana w celu ustawienia kontrolki z fokusem, wartość <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwości jest ignorowana.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak ustawić <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwość, aby wyświetlić określoną kontrolkę w formularzu jako kontrolkę z fokusem wprowadzania podczas ładowania formularza. Gdy `Form1` renderuje, Zauważ, że punkt wstawiania jest umieszczony `TextBox1`w, wskazując `TextBox1` , że jest formantem z fokusem.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ kodowania, przy użyciu którego przeglądarka będzie ogłaszać dane formularza na serwerze.</summary>
        <value>Ciąg, który zawiera typ kodowania. Wartość domyślna to ciąg pusty ("") wskazujący, że używany jest domyślny typ zawartości w przeglądarce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> Użyj właściwości, aby określić typ kodowania używany przez przeglądarkę do publikowania danych z powrotem na serwerze.  
  
 W poniższej tabeli przedstawiono typowe typy kodowania.  
  
|Typ kodowania|Opis|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Dane formularza są kodowane jako pary nazwa/wartość. Jest to standardowy format kodowania.|  
|wieloczęściowe/formularz-dane|Dane formularza są kodowane jako komunikat z osobną częścią dla każdej kontrolki na stronie.|  
|tekst/zwykły|Dane formularza są zakodowane w postaci zwykłego tekstu, bez żadnego znaku kontrolnego ani formatowania.|  
  
 Aby uzyskać więcej informacji na temat typów kodowania, zobacz [organizacja World Wide Web Consortium (W3C Web site](https://go.microsoft.com/fwlink/?linkid=37125).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> właściwości, aby określić typ kodowania używany przez przeglądarkę do przesyłania danych z powrotem do serwera.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, w jaki sposób przeglądarka zapisuje dane formularza na serwerze w celu przetworzenia.</summary>
        <value>Ciąg, który wskazuje, w jaki sposób przeglądarka zapisuje dane formularza na serwerze. Wartość domyślna to <see langword="POST" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby określić, w jaki sposób przeglądarka wysyła dane formularza do serwera w celu przetworzenia. Dwie popularne metody obsługiwane przez wszystkie przeglądarki to `GET` i. `POST`  
  
> [!CAUTION]
>  Można zastąpić domyślną wartość tej właściwości i użyć `GET` metody `POST`zamiast. Jednak ponieważ `GET` żądania są ograniczone do ilości danych, które mogą obejmować, `GET` użycie metody może w niektórych przypadkach spowodować niepowodzenie funkcji ogłaszania zwrotnego i zarządzania stanem przez strukturę strony ASP.NET.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> właściwości, aby określić, że dane formularza są wysyłane z powrotem na serwer.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę identyfikatora dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontrolki.</summary>
        <value>Ciąg, który zawiera nazwę identyfikatora dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić unikatową nazwę identyfikatora <xref:System.Web.UI.HtmlControls.HtmlForm> dla kontrolki. <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> W tej implementacji Pobieranie tej właściwości zwraca wartość <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości. Jednak ustawienie właściwości nie powoduje przypisywania wartości do właściwości. Ustawienie właściwości nie powoduje przypisania wartości do tej właściwości, ponieważ <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwość musi mieć taką samą wartość <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> jak właściwość.  
  
> [!NOTE]
>  Atrybut nie jest atrybutem zgodnym z XHTML i nie jest renderowany przez ASP.NET niezależnie `xhtmlConformance` od tego ustawienia. `name`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Zgodność ASP.NET i XHTML</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> Podnosi zdarzenie <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> dla kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku powiadomienia przez <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> metodę formanty serwera sieci Web muszą wykonać wszelkie kroki inicjowania wymagane do utworzenia i skonfigurowania wystąpienia. Na tym etapie cyklu życia kontrolki serwera nie ma jeszcze wypełnienia stanu widoku kontrolki. Ponadto nie można uzyskać dostępu do innych formantów serwera, gdy ta metoda jest wywoływana, niezależnie od tego, czy jest ona podrzędna, czy nadrzędna dla tego formantu. Inne kontrolki serwerowe nie mogą być tworzone i gotowe do uzyskania dostępu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> formantu. <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metody w klasie pochodnej należy wywołać <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały zdarzenie. Ponadto wywołanie <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metody klasy bazowej gwarantuje, <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> że formant jest prawidłowo ustawiony jako formularz strony sieci Web, a stan widoku strony jest utrwalany.</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> Podnosi zdarzenie <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> dla kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana tuż przed <xref:System.Web.UI.HtmlControls.HtmlForm> renderowaniem formantu. <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> Jeśli właściwość jest ustawiona na `true`, <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> Metoda rejestruje odwołanie pliku skryptu inteligentnego nawigacji, aby było renderowane. <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType>  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> Właściwość została uznana za przestarzałą w ASP.NET w wersji 2,0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">, <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera wyrenderowaną zawartość.</param>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formant do określonego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda renderuje element HTML `<iframe>` , <xref:System.Web.UI.Page.SmartNavigation%2A> Jeśli właściwość jest ustawiona na `true`. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Metoda wywołuje metodę bazową <xref:System.Web.UI.Control.Render%2A>. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>  
  
 Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> formantu. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontrolka nie jest renderowana bez odwołania <see cref="T:System.Web.UI.Page" /> do wystąpienia. <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /></exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej należy wywołać <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> metodę <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> klasy bazowej, aby kontrolki potomne kontrolki były prawidłowo renderowane.</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">, <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera wyrenderowaną zawartość.</param>
        <summary>Renderuje atrybuty <see cref="T:System.Web.UI.HtmlTextWriter" /> <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontrolki do określonego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda używa metody do sprawdzania <xref:System.Web.UI.HtmlControls.HtmlForm> atrybutów kontrolki, aby upewnić się, że mogą `<form>` być renderowane w tagu otwierającym elementu HTML. <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>  
  
 `action` `onsubmit` Ponadto metoda renderuje atrybuty<xref:System.Web.UI.HtmlControls.HtmlForm> ,, i `method`kontrolki. <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> Jeśli identyfikator formantu ustawiony we <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwości nie <xref:System.Web.UI.WebControls.IButtonControl> implementuje interfejsu, <xref:System.InvalidOperationException> zgłaszany jest wyjątek.  
  
 Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> formantu. <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Identyfikator kontrolki ustawiony we <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> właściwości nie jest typu. <see cref="T:System.Web.UI.WebControls.IButtonControl" /></exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej należy wywołać <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> metodę <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> klasy bazowej, aby atrybuty kontrolki były prawidłowo renderowane.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">, <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera wyrenderowaną zawartość.</param>
        <summary>Renderuje kontrolki <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> podrzędne formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda renderuje skrypt klienta, aby upewnić się, że fokus przeglądarki jest ustawiony na kontrolkę <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> określoną we właściwości. <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A>  
  
> [!NOTE]
>  Kontrolka określona przez <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> właściwość ma pierwszeństwo przed kontrolką określoną <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> przez właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Strona sieci Web zawiera więcej niż jeden tag po stronie <see langword="&lt;form&gt;" /> serwera.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej należy wywołać <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> metodę <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> klasy bazowej, aby kontrolki potomne kontrolki były prawidłowo renderowane.</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">, <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera zawartość kontrolki formularza.</param>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formant do określonego obiektu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej należy wywołać <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> metodę <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> klasy bazowej, aby formant był prawidłowo renderowany.</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczną wskazującą, czy należy wymusić, aby formanty zostały wyłączone na kliencie w celu przesłania ich wartości, co umożliwia im zachowanie ich wartości po przesłaniu danych z powrotem na serwer.</summary>
        <value><see langword="true" />Jeśli formanty wyłączone na kliencie są wymuszane do przesłania ich wartości; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> , aby określić, czy na kliencie mają być wyłączane kontrolki do przesyłania wartości, gdy strona zostanie odesłana. Dzięki temu wyłączone kontrolki zachowują swoje wartości po odesłaniu strony na serwer. Gdy właściwość jest ustawiona na `false`, kontrolki w formularzu, który został wyłączony przy użyciu skryptu klienta, nie zostaną przesłane do serwera przy następnym zaksięgowaniu strony. <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> W efekcie wszystkie wartości przechowywane przez wyłączone kontrolki zostaną utracone. Aby zezwolić wyłączonym kontrolkom na zachowanie ich wartości po przesłaniu danych z powrotem do serwera, ustaw <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwość na `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> jak ustawić właściwość w formularzu, aby `true` spowodować, że formanty wyłączone przez skrypt klienta mają zachować swoje wartości po odesłaniu strony na serwer. W tym przykładzie, jeśli ustawisz <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwość na `false` , a następnie klikniesz przycisk **Opublikuj ponownie** , tekst w polu tekstowym HTML zostanie utracony, a pole wyboru HTML nie jest już zaznaczone.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ramkę lub okno, w którym będą renderowane wyniki informacji ogłoszonych na serwerze.</summary>
        <value>Okno przeglądarki lub ramka wyświetlająca wyniki informacji ogłoszonych na serwerze. Wartość domyślna to ciąg pusty (""), który odświeża okno lub ramkę z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Użyj właściwości, aby określić okno docelowe lub ramkę, która wyświetla wyniki informacji ogłoszonych na serwerze. Przekierowanie wyników informacji ogłoszonych na serwerze jest zadaniem zaawansowanym. Używanie tej właściwości po prostu do ogłaszania zwrotnego nie jest zalecane.  
  
> [!NOTE]
>  Właściwość renderuje jako `target`atrybut. <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> `target` Atrybutelementówniejest`form` dozwolony w XHTML 1,1. W związku z tym, jeśli renderowane znaczniki muszą być zgodne ze standardami XHTML lub muszą być zgodne ze standardami <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> dostępności, nie należy ustawiać właściwości. Aby uzyskać więcej informacji, zobacz [standardy XHTML w programie Visual Studio i ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) i [ułatwienia dostępu w programie visual Studio i ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Wartość musi rozpoczynać się od litery z zakresu od a do z (bez uwzględniania wielkości liter), z wyjątkiem następujących wartości specjalnych, które zaczynają się od znaku podkreślenia.  
  
|Wartość docelowa|Opis|  
|------------------|-----------------|  
|`_blank`|Renderuje zawartość w nowym oknie bez ramek.|  
|`_parent`|Renderuje zawartość w elemencie nadrzędnym bezpośredniego zestawu ramek.|  
|`_search`|Renderuje zawartość w okienku wyszukiwania.|  
|`_self`|Renderuje zawartość w ramce z fokusem.|  
|`_top`|Renderuje zawartość w pełnym oknie bez ramek.|  
  
> [!NOTE]
>  Sprawdź dokumentację przeglądarki, aby określić, `_search` czy wartość jest obsługiwana.  Na przykład program Microsoft Internet Explorer 5,0 i jego `_search` nowsze wersje obsługują wartość docelową.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> jak użyć właściwości, aby określić nowe, nieramkowe okno do wyświetlania wyników informacji ogłoszonych z powrotem na serwerze.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Zgodność ASP.NET i XHTML</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Ułatwienia dostępu w programie Visual Studio 2010 i ASP.NET 4</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator programistyczny przypisany do <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontrolki.</summary>
        <value>Unikatowy identyfikator programistyczny przypisany do <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby uzyskać unikatowy identyfikator programistyczny przypisany <xref:System.Web.UI.HtmlControls.HtmlForm> do formantu. <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Ta właściwość zastępuje implementację podstawową, aby zwracała wartość stałą, gdy kontrolka jest zawarta w <xref:System.Web.UI.INamingContainer>zaimplementowanym obiekcie innym niż strona, na przykład w niestandardowej kontrolce serwerowej. Jeśli kontener nazewnictwa jest stroną, zwracana jest wartość <xref:System.Web.UI.HtmlControls.HtmlForm> <xref:System.Web.UI.Control.ID%2A> właściwości kontrolki.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Właściwość<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> i właściwość zawsze zwracają tę samą wartość. Jest <xref:System.Web.UI.HtmlControls.HtmlForm> to przydatne, gdy kontrolka jest renderowana w przeglądarce, która <xref:System.Web.UI.HtmlControls.HtmlForm> wymaga, aby kontrolka <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> i <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwości były takie same. Aby zachować te właściwości, <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> Właściwość zawsze zwraca wartość <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości.  
  
> [!NOTE]
>  Ten `name` atrybut nie jest atrybutem zgodnym z XHTML i domyślnie nie jest renderowany przez ASP.NET.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości, aby pobrać unikatowy identyfikator <xref:System.Web.UI.HtmlControls.HtmlForm> dla kontrolki.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Zgodność ASP.NET i XHTML</related>
      </Docs>
    </Member>
  </Members>
</Type>
