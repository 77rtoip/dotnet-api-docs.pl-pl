<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9269c871537e84afc2061b0e882b63e40aa2716" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688823" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dostęp programistyczny do kodu HTML <see langword="&lt;form&gt;" /> elementu na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm> Formant jest kontenerem dla serwera formantów strony formularzy sieci Web. Wszystkie formanty serwera, które post na serwerze muszą znajdować się pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.HtmlControls.HtmlForm> formantu.  
  
> [!NOTE]
>  ASP.NET umożliwia tylko jeden <xref:System.Web.UI.HtmlControls.HtmlForm> formant będzie aktywny na strony formularzy sieci Web. Jeśli istnieje więcej niż jednej aktywnej <xref:System.Web.UI.HtmlControls.HtmlForm> zgłosi formantu strony formularzy sieci Web, środowisko uruchomieniowe języka wspólnego <xref:System.Web.HttpException?displayProperty=nameWithType> wyjątek podczas żądania strony. Można jednak użyć <xref:System.Web.UI.WebControls.MultiView> kontrolują lokalizację każdego <xref:System.Web.UI.WebControls.View> obiektu zawiera jeden <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli, ponieważ tylko jeden <xref:System.Web.UI.WebControls.View> jest aktywny w danym momencie.  
  
 Można kontrolować zachowanie <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli przez ustawienie jej właściwości. Aby określić typu kodowania danych formularza, ustaw <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> właściwości. Metody (`GET` lub `POST`) używany przez przeglądarki do post formularza danych do serwera dla przetwarzania jest określany przez ustawienie <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> właściwości.  
  
> [!CAUTION]
>  Domyślnie <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> właściwość jest ustawiona na `POST`. Wartość tej właściwości można modyfikować `GET`, ale może to przerwać wbudowanych stanu i ogłaszanie usług świadczonych przez architekturę stron ASP.NET.  
  
 Można skonfigurować formantów, które implementują <xref:System.Web.UI.WebControls.IButtonControl> interfejs do wysłania do innej docelowej strony. Jest to określane jako publikowanie między stronami. Aby uzyskać więcej informacji, zobacz [między stronami księgowe w formularzach sieci Web ASP.NET](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlForm>, zobacz <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlForm> klasę, aby utworzyć prosty formularz.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia tworzenie i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlForm> klasy.  
  
 W poniższej tabeli przedstawiono wartości początkowej właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlForm>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Ciąg literału "form".|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli i umieść ją na stronie sieci Web.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia atrybut akcji formularza HTML.</summary>
        <value>Atrybut akcji formularza HTML. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> właściwości, gdy ponowne zapisywanie adresów URL oryginalne żądanie, ale ma zostać zachowany oryginalny adres URL dla atrybutu akcji formularza HTML. Ustaw <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> na wartość adresu URL, który ma zostać zachowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator formantu, który jest generowany przez [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu</summary>
        <value>Identyfikator formantu, generowane przez [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć konfliktów nazw, gdy są renderowane wiele wystąpień formantu, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] automatycznie generuje unikatowego <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> wartość dla każdej kontrolki na stronie. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Web.UI.ControlCollection" /> kolekcji dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> zawierający <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontrolki serwera podrzędnych formantu.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia formant podrzędny <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formant, który powoduje odświeżenie strony, gdy zostanie naciśnięty klawisz ENTER.</summary>
        <value>
          <see cref="P:System.Web.UI.Control.ID" /> Kontrolki przycisku, który będzie wyświetlany jako domyślny przycisk kiedy <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> jest załadowany. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Właściwość umożliwia określenie, czy użytkownicy mogą spowodować odświeżania strony, naciskając klawisz ENTER w kontrolki wprowadzania w formie (takich jak pole tekstowe). Można określić jako przycisk domyślny żadnego formantu, który jest pochodną <xref:System.Web.UI.WebControls.IButtonControl> interfejsu z wyjątkiem <xref:System.Web.UI.WebControls.LinkButton> formantu. Jeśli formant, który odwołuje się do niego <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwości nie pochodzi od <xref:System.Web.UI.WebControls.IButtonControl>, <xref:System.InvalidOperationException> wyjątku.  
  
 Jeśli używasz stron wzorcowych i ustawisz <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwość ze strony zawartości, użyj <xref:System.Web.UI.Control.UniqueID%2A> właściwość <xref:System.Web.UI.WebControls.IButtonControl> przycisku. Aby uzyskać więcej informacji na temat strony wzorcowe, zobacz [stron wzorcowych ASP.NET](http://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Właściwości nie może powodować odświeżenie strony w następujących scenariuszach:  
  
-   Gdy fokus jest poza wejściowych kontrolek w formularzu, naciskając klawisz ENTER. Domyślne działanie odświeżania strony nie jest gwarantowana wyzwolenie.  
  
-   Gdy fokus znajduje się wewnątrz wielowierszowego pola tekstowego, naciskając klawisz ENTER. W wielowierszowym polu oczekiwane zachowanie jest, że naciśnięcie klawisza ENTER tworzy nowy wiersz w polu tekstowym. W niektórych przeglądarkach naciskając klawisz ENTER wyzwalaczy pole tekstu wielowierszowego odświeżania strony. W takim przypadku należy ENTER, aby zamiast tego utwórz nowy wiersz do kontrolki wprowadzania można dołączyć funkcji JavaScript. Skrypt należy przechwycić klawisz ENTER i zatrzymać ogłaszania zwrotnego. Na przykład można użyć <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> kolekcji właściwości, aby dodać skrypt po stronie klienta dla `onKeyPress` zdarzeń.  
  
-   Określanie <xref:System.Web.UI.WebControls.LinkButton> formant jako przycisk domyślny. Tylko <xref:System.Web.UI.WebControls.Button> i <xref:System.Web.UI.WebControls.ImageButton> formanty są obsługiwane.  
  
-   Zmiana <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwości programowo podczas asynchronicznego ogłaszania zwrotnego. Asynchroniczne ogłaszanie zwrotne można włączyć na stronie, dodając co najmniej jeden <xref:System.Web.UI.UpdatePanel> formantów strony. Aby uzyskać więcej informacji, zobacz [informacje o formancie UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [omówienie renderowania stron częściowych](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób ustawiania <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwości można ustawić kontroli domyślny, który powoduje odświeżenie strony.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Formant określany jako przycisk domyślny nie jest typu <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontrolki na formularzu, który będzie wyświetlany jako formantu przy użyciu danych wejściowych skupić się podczas <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formant został załadowany.</summary>
        <value>
          <see cref="P:System.Web.UI.Control.ClientID" /> Formantu w formularzu, który będzie wyświetlany jako formantu przy użyciu danych wejściowych skupić się podczas <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> jest załadowany. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwości do kontrolki na formularzu, który będzie wyświetlany jako formantu przy użyciu danych wejściowych skupić się podczas <xref:System.Web.UI.HtmlControls.HtmlForm> formant został załadowany. Formanty, które można wybrać są wyświetlane wizualnie wskazującą, czy mają one fokus. Na przykład <xref:System.Web.UI.WebControls.TextBox> formantu z fokusem jest wyświetlany punkt wstawiania znajduje się wewnątrz niej.  
  
 Formantu z fokusem można również ustawić za pomocą <xref:System.Web.UI.Control.Focus%2A> lub <xref:System.Web.UI.Page.SetFocus%2A> metody. Te metody mają pierwszeństwo przed <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwości. Jeśli każda z tych metod są nazywane można ustawić kontroli z skoncentrowane, wartość <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwość jest ignorowana.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwość do wyświetlenia określonej kontrolkę w formularzu jako kontrolka z fokus wprowadzania, podczas ładowania formularza. Gdy `Form1` renderuje, zwróć uwagę, że punkt wstawiania znajduje się w `TextBox1`, wskazujące który `TextBox1` jest formantu z fokusem.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ kodowania, używanych przez przeglądarkę podczas wysyłania danych formularza na serwerze.</summary>
        <value>Ciąg zawierający typ kodowania. Wartość domyślna to ciąg pusty (""), wskazujący, że jest używany domyślny typ zawartości w przeglądarce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> używa właściwości w celu określenia kodowania wpisz przeglądarką dane do serwera.  
  
 W poniższej tabeli przedstawiono popularne typy kodowania.  
  
|Typ kodowania|Opis|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Dane formularza są kodowane jako pary nazwa/wartość. Jest to standardowy format kodowania.|  
|dane multipart/formularza|Dane formularza są kodowane jako wiadomość z oddzielnych części dla każdej kontrolki na stronie.|  
|zwykły tekst|Dane formularza jest zakodowany w formacie zwykłego tekstu, bez kontroli i formatowanie znaków.|  
  
 Aby uzyskać więcej informacji o typach kodowania, zobacz [konsorcjum World Wide Web (W3C witryny](http://go.microsoft.com/fwlink/?linkid=37125).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> używa właściwości w celu określenia kodowania typ przeglądarki do wysyłania danych do serwera.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą sposób przeglądarką zapisuje dane formularza z serwerem przetwarzania.</summary>
        <value>Ciąg, który wskazuje, jak przeglądarki zapisuje dane formularza do serwera. Wartość domyślna to <see langword="POST" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie, jak przeglądarka wysyła dane formularza z serwerem przetwarzania. Są dwie metody wspólne obsługiwane przez wszystkie przeglądarki `GET` i `POST`.  
  
> [!CAUTION]
>  Można zastąpić wartość domyślna tej właściwości, a użycie `GET` zamiast metody `POST`. Jednak ponieważ `GET` żądania są ograniczone w ilości danych może zawierać, przy użyciu `GET` w niektórych przypadkach metoda powodują możliwości oferowane przez architekturę stron ASP.NET zarządzania odświeżania strony i stanu niepowodzenie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> właściwości w celu określenia, czy dane formularza jest przesyłane na serwer.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę identyfikatora <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu.</summary>
        <value>Ciąg zawierający nazwę identyfikatora <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwości można określić nazwy Unikatowy identyfikator dla <xref:System.Web.UI.HtmlControls.HtmlForm> formantu. W tej implementacji pobierania ta właściwość zwraca wartość <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości. Jednak ustawienia właściwości nie przypisać wartości do właściwości. Ustawienie właściwości nie przypisuje wartość do tej właściwości ponieważ <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwość musi mieć taką samą wartość jak <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości.  
  
> [!NOTE]
>  `name` Atrybut nie jest atrybutem z XHTML i nie są odtwarzane przez platformę ASP.NET, bez względu na to `xhtmlConformance` ustawienie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Init" /> zdarzenia dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy na bieżąco dzięki <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> metody kontrolki serwera sieci Web należy wykonać wszystkie kroki inicjowania, które są wymagane do tworzenia i konfigurowania wystąpienia. Na tym etapie cyklu życia formantu serwera stan widoku formantu musi jeszcze zostać wypełnione. Ponadto nie masz dostępu do innych kontrolek serwera po wywołaniu tej metody, niezależnie od tego, czy jest podrzędnej lub nadrzędnej do tego formantu. Inne formanty serwera nie ma gwarancji utworzony i gotowa do dostępu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia. Ponadto wywołaniem klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metoda gwarantuje, że <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli poprawnie jest ustawiony jako formularza strony sieci Web i jest trwały stan widoku danej strony.</para>
        </block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzenia dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> Metoda jest wywoływana tuż przed renderowaniem <xref:System.Web.UI.HtmlControls.HtmlForm> formantu. Jeśli <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> metoda rejestruje odwołanie do pliku skryptu inteligentne nawigacji, aby pobiera on renderowany.  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> Właściwość jest przestarzała w programie ASP.NET w wersji 2.0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Metoda powoduje renderowanie kodu HTML `<iframe>` elementu Jeśli <xref:System.Web.UI.Page.SmartNavigation%2A> właściwość jest ustawiona na `true`. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Metoda wywołuje podstawowym <xref:System.Web.UI.Control.Render%2A> metody.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Formantu nie są odtwarzane bez odwołania do <see cref="T:System.Web.UI.Page" /> wystąpienia.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> poprawnie renderowania formantów podrzędnych formantu.</para>
        </block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> atrybuty formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> Używa metody <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> metodę sprawdzania <xref:System.Web.UI.HtmlControls.HtmlForm> atrybuty formantu, aby upewnić się, czy ma być renderowany w tagu otwierającym `<form>` elementu HTML.  
  
 Ponadto <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> metoda renderuje `method`, `action`, i `onsubmit` atrybuty <xref:System.Web.UI.HtmlControls.HtmlForm> formantu. Jeśli wartość Identyfikatora formantu <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> nie implementuje właściwości <xref:System.Web.UI.WebControls.IButtonControl> interfejsu <xref:System.InvalidOperationException> wyjątku.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Identyfikator formantu ustawiony <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> właściwość nie jest typu <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> atrybuty formantu poprawnie są renderowane.</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Renderuje formantów podrzędnych <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> Metoda renderuje skrypt po stronie klienta do Sprawdź, czy przeglądarki fokus jest ustawiony do formantu określony w <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwości.  
  
> [!NOTE]
>  Określony przez formant <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> formantu określony przez właściwość ma pierwszeństwo przed <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Strona sieci Web ma więcej niż jeden po stronie serwera <see langword="&lt;form&gt;" /> tagu.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> poprawnie renderowania formantów podrzędnych formantu.</para>
        </block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera zawartość sterującą formularza.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> poprawnie renderowania formantu.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczną wskazującą, czy wymusić formanty wyłączone na kliencie, aby przesłać ich wartości, dzięki czemu w celu zachowania ich wartości, po stronie ogłoszenia na serwerze.</summary>
        <value>
          <see langword="true" /> formanty wyłączone na kliencie wymuszenie przesłać ich wartości. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwości w celu określenia, czy należy wymusić formanty wyłączone na kliencie, aby przesłać ich wartości, gdy strona ogłasza Wstecz. Dzięki temu wyłączone formanty w celu zachowania ich wartości, po stronie ogłoszenia na serwerze. Gdy <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwość jest ustawiona na `false`, kontrolek w formularzu, które zostały wyłączone za pomocą skryptu klienta zostanie nie można przesłać do serwera przy następnym strony ogłoszeń Wstecz. W związku z tym wartości przechowywane przez formanty wyłączone zostaną utracone. Aby zezwolić na wyłączone formanty w celu zachowania ich wartości, po stronie ogłoszenia na serwerze, <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwości `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób ustawiania <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwości formularza w celu `true` spowodować formanty wyłączone przez skryptu klienta w celu zachowania ich wartości, po stronie ogłoszenia na serwerze. W tym przykładzie, jeśli ustawisz <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwości `false` , a następnie kliknij przycisk **Post Wstecz** przycisk, tekst w polu tekstowym HTML jest utraty i już nie jest zaznaczone pole wyboru HTML.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia okna, w którym do renderowania wyniki informacji publikowanego do serwera lub ramki.</summary>
        <value>Okno przeglądarki lub ramki, w której są wyświetlane wyniki dane przesłane do serwera. Wartość domyślna to ciąg pusty (""), który odświeża okna lub ramki z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> właściwości, aby określić docelowego okna lub ramki, który służy do wyświetlania wyników informacje, które jest przesyłana do serwera. Przekierowanie wyników dane przesłane do serwera jest zaawansowanym zadaniem. Po prostu do post-back za pomocą tej właściwości nie jest zalecane.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Właściwości renderuje jako `target` atrybutu. `target` Atrybutu `form` elementów nie jest dozwolona w XHTML 1.1. W związku z tym jeśli renderowanego kodu znaczników muszą być zgodne ze standardami XHTML lub muszą być zgodne ze standardami ułatwień dostępu, nie należy ustawiać <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> właściwości. Aby uzyskać więcej informacji, zobacz [standardów XHTML w Visual Studio i ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) i [ułatwień dostępu w Visual Studio i ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Wartości musi zaczynać się literą, w zakresie A do Z (bez uwzględniania wielkości liter), z wyjątkiem następujących wartości specjalne, które zaczynają się od podkreślenia.  
  
|Wartość docelowa|Opis|  
|------------------|-----------------|  
|`_blank`|Renderuje zawartość w nowym oknie bez ramek.|  
|`_parent`|Renderuje zawartość w obiekcie nadrzędnym natychmiastowego ramek.|  
|`_search`|Renderuje zawartość w okienku wyszukiwania.|  
|`_self`|Renderuje zawartość w ramce z fokusem.|  
|`_top`|Renderuje zawartość w oknie pełny bez ramek.|  
  
> [!NOTE]
>  Sprawdź w dokumentacji przeglądarki, aby ustalić, czy `_search` wartość jest obsługiwana.  Na przykład program Microsoft Internet Explorer w wersji 5.0 i nowszej obsługują `_search` wartość docelowa.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> właściwości w celu określenia nowej, wstecznymi okna w celu wyświetlenia wyników informacji przesłane do serwera.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator programowy przypisane do <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu.</summary>
        <value>Unikatowy identyfikator programowy przypisane do <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości do pobrania Unikatowy identyfikator programowy przypisane do <xref:System.Web.UI.HtmlControls.HtmlForm> formantu. Ta właściwość zastępuje Podstawowa implementacja zwracanych wartości stałej w przypadku formantu znajduje się w <xref:System.Web.UI.INamingContainer>-zaimplementowana innych obiektów niż strony, takich jak kontrola niestandardowego serwera. Jeśli kontenera nazewnictwa jest stroną, wartość <xref:System.Web.UI.HtmlControls.HtmlForm> formantu <xref:System.Web.UI.Control.ID%2A> zwracana jest właściwość.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Właściwości i <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwość zawsze zwraca tę samą wartość. Jest to przydatne podczas <xref:System.Web.UI.HtmlControls.HtmlForm> renderowania formantu w przeglądarce, która wymaga <xref:System.Web.UI.HtmlControls.HtmlForm> formantu <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> i <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwości, które mają być takie same. Aby zachować te właściwości synchronizowane, <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwość zawsze zwraca wartość <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości.  
  
> [!NOTE]
>  `name` Atrybut nie jest atrybutem z XHTML i domyślnie nie są odtwarzane przez platformę ASP.NET.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości do pobrania Unikatowy identyfikator <xref:System.Web.UI.HtmlControls.HtmlForm> formantu.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      </Docs>
    </Member>
  </Members>
</Type>