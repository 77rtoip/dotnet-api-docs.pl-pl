<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="195d23ce0a1bbbc979457bbc959e8f21590858fc" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53457631" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dostęp programistyczny do kodu HTML <see langword="&lt;form&gt;" /> elementu na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm> Kontroli jest kontenerem dla formantów serwera na strony formularzy sieci Web. Wszystkie formanty serwera, opublikuj ponownie do serwera, które muszą być umieszczone między otwierającym i zamykającym tagiem elementu <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli.  
  
> [!NOTE]
>  ASP.NET zezwala na tylko jeden <xref:System.Web.UI.HtmlControls.HtmlForm> formant będzie aktywny na stronie formularzy sieci Web. Jeśli istnieje więcej niż jeden aktywny <xref:System.Web.UI.HtmlControls.HtmlForm> kontrolki na stronie formularzy sieci Web, środowisko uruchomieniowe języka wspólnego zgłosi <xref:System.Web.HttpException?displayProperty=nameWithType> wyjątek podczas żądania strony. Można jednak użyć <xref:System.Web.UI.WebControls.MultiView> kontrolować, gdzie każdy <xref:System.Web.UI.WebControls.View> obiektu zawiera jeden <xref:System.Web.UI.HtmlControls.HtmlForm> kontrolować, ponieważ tylko jeden <xref:System.Web.UI.WebControls.View> jest aktywna w danym momencie.  
  
 Można kontrolować zachowanie <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli przez ustawienie jego właściwości. Aby określić typ kodowania dla danych formularza, ustaw <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> właściwości. Metody (`GET` lub `POST`) używany przez przeglądarkę do wpisem dane formularza do serwera, na przetwarzanie jest określany przez ustawienie <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> właściwości.  
  
> [!CAUTION]
>  Domyślnie <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> właściwość jest ustawiona na `POST`. Wartość tej właściwości można modyfikować `GET`, ale to może przerwać wbudowanych stanu i ogłaszanie zwrotne usługi świadczone przez architektura strony ASP.NET.  
  
 Możesz skonfigurować kontrolki, które implementują <xref:System.Web.UI.WebControls.IButtonControl> interfejsu do wysłania do innej docelowej strony. Jest to określane jako Księgowanie między stronami. Aby uzyskać więcej informacji, zobacz [Księgowanie między stronami ASP.NET Web Forms](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Aby uzyskać listę początkowe wartości właściwości wystąpienia <xref:System.Web.UI.HtmlControls.HtmlForm>, zobacz <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlControls.HtmlForm> klasy, aby utworzyć prosty formularz.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Między stronami w na stronie sieci Web platformy ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzenie i inicjuje nowe wystąpienie klasy za pomocą tego konstruktora <xref:System.Web.UI.HtmlControls.HtmlForm> klasy.  
  
 W poniższej tabeli przedstawiono wartości początkowej właściwości wystąpienia <xref:System.Web.UI.HtmlControls.HtmlForm>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Ciąg literału "form".|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli i umieścić go na stronie sieci Web.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia atrybut akcji formularza HTML.</summary>
        <value>Atrybut akcji formularza HTML. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> właściwość podczas ponownego zapisywania adresów URL oryginalne żądanie, ale chcesz zachować oryginalny adres URL dla atrybutu działanie formularza HTML. Ustaw <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> właściwości na wartość adres URL, który chcesz zachować.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator formantu, który jest generowany przez [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli</summary>
        <value>Identyfikator formantu generowane przez [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] dla <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uniknąć konfliktów nazw renderowanych wiele wystąpień kontrolki [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] automatycznie generuje unikatowy <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> wartość dla każdego formantu na stronie. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">Identyfikacja kontrolki ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Web.UI.ControlCollection" /> kolekcji <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> zawierający <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantów serwera podrzędnego kontrolki.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontrolę rodzicielską z <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formant, który powoduje odświeżenie strony, po naciśnięciu klawisza ENTER.</summary>
        <value><see cref="P:System.Web.UI.Control.ID" /> Formantu przycisku, aby wyświetlić jako domyślny przycisk, kiedy <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> jest ładowany. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Właściwość umożliwia określenie, że użytkownicy może spowodować odświeżenie strony, naciskając klawisz ENTER w formancie danych wejściowych w postaci (na przykład pola tekstowego). Można określić jako przycisk domyślny dowolną kontrolkę, która pochodzi od klasy <xref:System.Web.UI.WebControls.IButtonControl> interfejsu, z wyjątkiem <xref:System.Web.UI.WebControls.LinkButton> kontroli. Jeśli formant, który odwołuje się do niej <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwość nie jest pochodny od <xref:System.Web.UI.WebControls.IButtonControl>, <xref:System.InvalidOperationException> wyjątku.  
  
 Jeśli używasz stron wzorcowych i ustawisz <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwości ze strony zawartości, użyj <xref:System.Web.UI.Control.UniqueID%2A> właściwość <xref:System.Web.UI.WebControls.IButtonControl> przycisku. Aby uzyskać więcej informacji na temat stron wzorcowych zobacz [stron wzorcowych platformy ASP.NET](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Właściwość nie może spowodować odświeżenie strony w następujących scenariuszach:  
  
-   Gdy fokus znajduje się poza kontrolek wejściowych w formularzu, naciskając klawisz ENTER. Domyślna akcja zwrotu nie musi być wyzwalane.  
  
-   Gdy fokus znajduje się wewnątrz wielowierszowego pola tekstowego, naciskając klawisz ENTER. W polu tekstu wielowierszowego oczekiwane zachowanie jest, naciskając klawisz ENTER tworzy nowy wiersz w polu tekstowym. W niektórych przeglądarkach naciskając klawisz ENTER wewnątrz wyzwalaczy pole tekstu wielowierszowego ogłaszania zwrotnego. W takim przypadku chcesz ENTER, aby zamiast tego utworzyć nową linię, można dołączyć funkcji języka JavaScript do kontrolki wprowadzania. Skrypt powinien przechwytywania klawisz ENTER, a następnie Zatrzymaj zwrotu. Na przykład, można użyć <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> kolekcji właściwości, aby dodać skrypt po stronie klienta dla `onKeyPress` zdarzeń.  
  
-   Określanie <xref:System.Web.UI.WebControls.LinkButton> formant jako przycisk domyślny. Tylko <xref:System.Web.UI.WebControls.Button> i <xref:System.Web.UI.WebControls.ImageButton> formanty są obsługiwane.  
  
-   Zmiana <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwość programowo podczas odświeżania asynchronicznego. Asynchroniczne odświeżenia strony można włączyć na stronie przez dodanie jednego lub więcej <xref:System.Web.UI.UpdatePanel> kontrolek do strony. Aby uzyskać więcej informacji, zobacz [UpdatePanel informacje o formancie](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [Przegląd renderowanie części strony](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> właściwość można ustawić domyślny formant, który powoduje odświeżenie strony.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka przywoływany jako przycisk domyślny nie jest typu <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">Omówienie stron wzorcową platformy ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia formant w formularzu są wyświetlane jako kontrolki z danymi wejściowymi skupić się kiedy <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formant został załadowany.</summary>
        <value><see cref="P:System.Web.UI.Control.ClientID" /> Formantu w formularzu są wyświetlane jako kontrolki z danymi wejściowymi skupić się kiedy <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> jest ładowany. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwość, aby uzyskać dostęp do formantu w formularzu są wyświetlane jako kontrolki z danymi wejściowymi skupić się kiedy <xref:System.Web.UI.HtmlControls.HtmlForm> formant został załadowany. Formanty, które można wybrać są wyświetlane wizualnie, wskazujący, że mają one fokus. Na przykład <xref:System.Web.UI.WebControls.TextBox> kontrolki z fokusem jest wyświetlany punkt wstawiania znajduje się wewnątrz niej.  
  
 Kontrolki z fokusem można również ustawić za pomocą <xref:System.Web.UI.Control.Focus%2A> lub <xref:System.Web.UI.Page.SetFocus%2A> metody. Te metody mają pierwszeństwo przed <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwości. Jeśli każda z tych metod są wywoływane w celu ustawić kontrolkę z skoncentrować się, wartość <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwość jest ignorowana.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwość do wyświetlenia określoną kontrolkę w formularzu jako kontrolki z fokusem wprowadzania podczas ładowania formularza. Gdy `Form1` renderów, zwróć uwagę, że punkt wstawiania jest umieszczany w `TextBox1`oznaczający, `TextBox1` to kontrolki z fokusem.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ kodowania, używanymi w przeglądarce do wysyłania danych formularza z serwerem.</summary>
        <value>Ciąg, który zawiera typ kodowania. Wartość domyślna to ciąg pusty (""), wskazujący, że przeglądarki domyślny typ zawartości jest używany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> korzysta z właściwości w celu określenia kodowania typ przeglądarki można opublikować dane z powrotem do serwera.  
  
 W poniższej tabeli przedstawiono popularne typy kodowania.  
  
|Typ kodowania|Opis|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Dane formularza jest zakodowane jako pary nazwa/wartość. Jest to standardowy format kodowania.|  
|multipart/formularza data|Dane formularza jest zakodowane jako wiadomość z oddzielnych części dla każdej kontrolki na stronie.|  
|zwykły tekst|Dane formularza jest zakodowany w formacie zwykłego tekstu, bez kontroli lub znaki formatowania.|  
  
 Aby uzyskać więcej informacji na temat kodowania typów, zobacz [World Wide Web Consortium (W3C witryny](https://go.microsoft.com/fwlink/?linkid=37125).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> właściwości w celu określenia, kodowanie, wpisz w przeglądarce używa do wysyłania danych do serwera.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która wskazuje, jak przeglądarki publikuje dane formularza do serwera w celu przetworzenia.</summary>
        <value>Ciąg, który wskazuje, jak przeglądarki publikuje dane formularza do serwera. Wartość domyślna to <see langword="POST" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie, jak przeglądarka wysyła dane formularza do serwera w celu przetworzenia. Dwie metody wspólne obsługiwane przez wszystkie przeglądarki są `GET` i `POST`.  
  
> [!CAUTION]
>  Możesz zastąpić wartość domyślna tej właściwości i użyj `GET` zamiast metody `POST`. Jednak ponieważ `GET` żądania są ograniczone w ilości danych mogą zawierać, za pomocą `GET` metoda może w niektórych przypadkach spowodować ogłaszania wstecznego i stanu możliwości zarządzania dostarczanych przez szablon strony ASP.NET nie powiedzie się.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> właściwości w celu określenia, czy formularz dane są przesyłane do serwera.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę identyfikatora <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli.</summary>
        <value>Ciąg zawierający nazwę identyfikatora <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwości w celu określenia nazwy Unikatowy identyfikator dla <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli. W tej implementacji wprowadzenie ta właściwość zwraca wartość <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości. Jednak ustawienie dla właściwości nie przypisuje wartość do właściwości. Ustawianie właściwości nie przypisuje wartość tej właściwości ponieważ <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwość musi mieć taką samą wartość jak <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości.  
  
> [!NOTE]
>  `name` Atrybut nie jest atrybutem z XHTML i nie jest renderowany przez platformę ASP.NET, bez względu na to `xhtmlConformance` ustawienie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Program ASP.NET i zgodności XHTML</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Element <see cref="T:System.EventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.Control.Init" /> zdarzenie <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wyświetleniu powiadomienia przez <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> metody, formanty serwera sieci Web należy wykonać wszystkie kroki inicjowania, które są wymagane do tworzenia i poświęcona jest konfigurowaniu wystąpienia. Na tym etapie cyklu życia kontrolki serwera stan wyświetlania kontrolki ma jeszcze wypełniona. Ponadto nie masz dostępu do innych formantów serwera gdy ta metoda jest wywoływana, niezależnie od tego, czy jest podrzędnej lub nadrzędnej do tego formantu. Innych formantów serwera nie musi być utworzona i gotowa do dostępu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> Metoda jest używana przede wszystkim deweloperom kontroli, rozszerzając funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie. Ponadto wywołanie klasy bazowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> metoda zapewnia, że <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli jest poprawnie ustawiony jako formularz strony sieci Web i jest trwały stan widoku danej strony.</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.Control.PreRender" /> zdarzenie <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> Metoda jest wywoływana tuż przed renderowaniem <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli. Jeśli <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> metoda rejestruje odwołanie do pliku skryptu inteligentne nawigacji, aby pobiera ona renderowana.  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> Właściwość jest przestarzała w programie ASP.NET w wersji 2.0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output"><see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formant do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Metoda powoduje renderowanie kodu HTML `<iframe>` elementu Jeśli <xref:System.Web.UI.Page.SmartNavigation%2A> właściwość jest ustawiona na `true`. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Metoda wywołuje base <xref:System.Web.UI.Control.Render%2A> metody.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Metoda jest używana przede wszystkim deweloperom kontroli, rozszerzając funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> Formantu nie są odtwarzane bez odwołania do <see cref="T:System.Web.UI.Page" /> wystąpienia.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantów podrzędnych kontrolki są poprawnie renderowane.</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> atrybuty formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> Metoda używa <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> metodę sprawdzania <xref:System.Web.UI.HtmlControls.HtmlForm> atrybuty formantu, aby upewnić się, że mogą być renderowane w znaczniku otwierającym elementu `<form>` elementu HTML.  
  
 Ponadto <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> metoda renderuje `method`, `action`, i `onsubmit` atrybuty <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli. Jeśli identyfikator kontrolki w <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> nie implementuje właściwości <xref:System.Web.UI.WebControls.IButtonControl> interfejsu <xref:System.InvalidOperationException> wyjątku.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> Metoda jest używana przede wszystkim deweloperom kontroli, rozszerzając funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Identyfikator kontrolki jest ustawiona <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> właściwość nie jest typu <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> atrybuty formantu są poprawnie renderowane.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Powoduje wyświetlenie elementu podrzędnego kontrolki <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> Metoda renderuje skrypt po stronie klienta do upewnij się, że zespół przeglądarki jest do kontroli określone w <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwości.  
  
> [!NOTE]
>  Formant, który został określony przez <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> właściwości mają pierwszeństwo przed kontrolki, określonej przez <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Strona sieci Web ma więcej niż jeden po stronie serwera <see langword="&lt;form&gt;" /> tagu.</exception>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formantów podrzędnych kontrolki są poprawnie renderowane.</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera zawartość sterującą formularza.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> formant do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> metody w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> poprawnie renderowania formantu.</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczną wskazującą, czy wymusić formanty wyłączone na komputerze klienckim, aby przesłać ich wartości, umożliwiając im zachowania ich wartości, po stronie wysyła do serwera.</summary>
        <value><see langword="true" /> formanty wyłączone na komputerze klienckim wymuszenie przesyłanie ich wartości. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwości w celu określenia, czy chcesz wymusić formanty wyłączone na kliencie, aby przesyłać ich wartości, gdy Strona publikuje Wstecz. Dzięki temu wyłączone formanty zachować ich wartości, po stronie wysyła do serwera. Gdy <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwość jest ustawiona na `false`, formantów na formularzu, które zostały wyłączone przy użyciu skryptu klientów będą nie można przesłać do serwera przy następnym strony publikuje Wstecz. W rezultacie wszystkie wartości przechowywane przez formanty wyłączone zostaną utracone. Aby zezwolić na wyłączone formanty zachować ich wartości, po stronie wysyła do serwera, należy ustawić <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwość `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwości formularza w celu `true` spowodować formanty wyłączone przez skrypt po stronie klienta do zachowania ich wartości, po stronie wysyła do serwera. W tym przykładzie, jeśli ustawisz <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> właściwości `false` a następnie kliknij przycisk **wpis Wstecz** przycisku, tekst w polu tekstowym HTML zostanie utracony i nie jest zaznaczone pole wyboru HTML.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ramki lub okna, w którym do renderowania wyniki informacje, które jest opublikowane na serwerze.</summary>
        <value>Okno przeglądarki lub ramkę, która służy do wyświetlania wyników informacji opublikowane na serwerze. Wartość domyślna to ciąg pusty (""), który odświeża okna lub ramki, z fokusem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> właściwości, aby określić docelowego okna lub ramki, który służy do wyświetlania wyników informacji, które zostanie opublikowany na serwerze. Przekierowanie wyników i informacji opublikowany na serwerze jest zaawansowanym zadaniem. Nie zaleca się używanie tej właściwości, wystarczy, aby ponownie opublikuj.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Właściwość renderowany jako `target` atrybutu. `target` Atrybutu na `form` elementów nie jest dozwolona w XHTML 1.1. W związku z tym, jeśli renderowanego kodu znaczników musi być zgodna ze standardami XHTML, lub musi być zgodna ze standardami ułatwień dostępu, nie należy ustawiać <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> właściwości. Aby uzyskać więcej informacji, zobacz [XHTML standardów w programie Visual Studio i platformy ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) i [ułatwień dostępu w programie Visual Studio i platformy ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Wartość musi się zaczynać od litery z zakresu A do Z (bez uwzględniania wielkości liter), z wyjątkiem następujących specjalnych wartości, które zaczynają się od znaku podkreślenia.  
  
|Wartość docelowa|Opis|  
|------------------|-----------------|  
|`_blank`|Renderuje zawartość w nowym oknie bez ramek.|  
|`_parent`|Renderuje zawartość w obiekcie nadrzędnym natychmiastowe ramek.|  
|`_search`|Renderuje zawartość w okienku wyszukiwania.|  
|`_self`|Renderuje zawartość w ramce z fokusem.|  
|`_top`|Renderuje zawartość w oknie pełnej bez ramek.|  
  
> [!NOTE]
>  Zajrzyj do dokumentacji przeglądarki, aby określić, czy `_search` wartość jest obsługiwana.  Na przykład Microsoft Internet Explorer 5.0 i nowszej obsługują `_search` wartość docelowa.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> właściwości w celu określenia nowej, wstecznymi okno, aby wyświetlić wyniki informacje opublikowane na serwerze.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Program ASP.NET i zgodności XHTML</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Ułatwienia dostępu w programie Visual Studio 2010 i platformy ASP.NET 4</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator programowy, przypisany do <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli.</summary>
        <value>Unikatowy identyfikator programowy, przypisany do <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości, aby uzyskać unikatowy identyfikator programowy, przypisany do <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli. Ta właściwość zastępuje implementację podstawową do zwrócenia wartości stałej, jeśli formant znajduje się w <xref:System.Web.UI.INamingContainer>-zaimplementowane innych obiektów niż stronę, na przykład niestandardowy formant serwera. Jeśli kontener nazewnictwa jest stroną wartość <xref:System.Web.UI.HtmlControls.HtmlForm> kontrolki <xref:System.Web.UI.Control.ID%2A> zwracana jest właściwość.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Właściwości i <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwość zawsze zwracają taką samą wartość. To jest przydatne, gdy <xref:System.Web.UI.HtmlControls.HtmlForm> renderowania formantu w przeglądarce, która wymaga <xref:System.Web.UI.HtmlControls.HtmlForm> kontrolki <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> i <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwości, aby być takie same. Aby zachować te właściwości synchronizowane, <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> właściwość zawsze zwraca wartość <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwości.  
  
> [!NOTE]
>  `name` Atrybut nie jest atrybutem z XHTML i domyślnie nie jest renderowany przez platformę ASP.NET.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> właściwość, aby pobrać Unikatowy identyfikator <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Program ASP.NET i zgodności XHTML</related>
      </Docs>
    </Member>
  </Members>
</Type>