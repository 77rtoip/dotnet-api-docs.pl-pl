<Type Name="HtmlTableCellCollection" FullName="System.Web.UI.HtmlControls.HtmlTableCellCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fdc7ef3ae16e58ad9269f47ffad339a871312c1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688712" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlTableCellCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlTableCellCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlTableCellCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCellCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Kolekcja <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiektów, które reprezentują komórek w jednym wierszu <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> formantu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> klasy do programowego zarządzania kolekcją <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiekty reprezentujące komórek w pojedynczym wierszu <xref:System.Web.UI.HtmlControls.HtmlTable> formantu. Ta klasa jest najczęściej używany do dodać, usunąć lub zmodyfikować zawartość komórki w wierszu <xref:System.Web.UI.HtmlControls.HtmlTable> formantu.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlTable> Formant zawiera <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> właściwość, która zawiera kolekcję <xref:System.Web.UI.HtmlControls.HtmlTableRow> obiektów. Każdy <xref:System.Web.UI.HtmlControls.HtmlTableRow> obiekt reprezentuje pojedynczego wiersza w tabeli. <xref:System.Web.UI.HtmlControls.HtmlTableRow> Zawiera obiekt <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> właściwość, która reprezentuje kolekcję <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektów. Te obiekty z kolei reprezentują pojedynczych komórek wiersza. Aby pobrać pojedynczych komórek, należy najpierw pobrać <xref:System.Web.UI.HtmlControls.HtmlTableRow> obiekt, który reprezentuje wiersz zawierający komórka w tabeli (z <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> Kolekcja <xref:System.Web.UI.HtmlControls.HtmlTable> kontroli). Następnie można uzyskać <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiekt, który reprezentuje komórkę w wierszu (z <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> Kolekcja <xref:System.Web.UI.HtmlControls.HtmlTableRow> obiektu).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można dynamicznie wygenerować zawartość <xref:System.Web.UI.HtmlControls.HtmlTable> kontroli przez dodanie komórek <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. Zwróć uwagę, że <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> właściwości wiersza reprezentowany przez <xref:System.Web.UI.HtmlControls.HtmlTableRow> obiektu, jest <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> Do dodania do kolekcji.</param>
        <summary>Dołącza określony <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiekt na koniec <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do dodawania określonego <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiekt na koniec <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. Jeśli chcesz wstawić <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektu w określonej lokalizacji w kolekcji, użyj <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> metodę, aby dołączyć komórki tabeli reprezentowany przez <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiekt na koniec <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. Zwróć uwagę, że <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> właściwości wiersza reprezentowany przez <xref:System.Web.UI.HtmlControls.HtmlTableRow> obiekt jest <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiektów z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do usuwania wszystkich <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektów z <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji i resetowanie <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> właściwości `0`.  
  
> [!NOTE]
>  Ta metoda usuwa wiersz komórek, ale nie powoduje usunięcia wiersza z tabeli. Do usunięcia wiersza z tabeli, należy również usunąć <xref:System.Web.UI.HtmlControls.HtmlTableRow> obiekt, który reprezentuje wiersz z <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> Kolekcja <xref:System.Web.UI.HtmlControls.HtmlTable> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear%2A> metodę, aby usunąć wszystkie elementy z <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. Nowe wpisy są dodawane do kolekcji i wyświetlane w <xref:System.Web.UI.HtmlControls.HtmlTable> formantu.  
  
 [!code-aspx-csharp[HtmlTableCellCollectioncClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/CS/htmltablecellcollectionclearcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectioncClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/VB/htmltablecellcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Liczony od zera <see cref="T:System.Array" /> odbierająca skopiowane elementy z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <param name="index">Indeks pierwszego w określonym <see cref="T:System.Array" /> do odbierania elementów.</param>
        <summary>Kopiuje elementy z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji do określonego <see cref="T:System.Array" />, począwszy od określonego indeksu w <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia skopiowanie zawartości <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji w określonym <xref:System.Array?displayProperty=nameWithType>, rozpoczynając od określonego indeksu tablicy.  
  
> [!NOTE]
>  `array` Parametr musi być liczony od zera <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo%2A> metodę w celu utworzenia tablicy, która zawiera tę samą zawartość jako <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. Tablica jest następnie powtórzyć za pośrednictwem do wyświetlenia zawartości <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/CS/htmltablecellcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/VB/htmltablecellcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiekty w <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <value>Liczba <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiekty w <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />. Wartość domyślna to <see langword="0" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> właściwości, aby określić liczbę komórek wchodzących w <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> Właściwość jest często stosowany podczas iteracji w kolekcji, aby określić górny powiązany.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> właściwości, aby określić liczbę komórek w wierszu <xref:System.Web.UI.HtmlControls.HtmlTable> formantu. Ta wartość jest następnie używana jako górna granica pętli do iteracji komórek wiersza w tabeli.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCount/CS/htmltablecellcollectioncountcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCount/VB/htmltablecellcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Collections.IEnumerator" />-zaimplementowany obiekt, który zawiera wszystkie <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiekty w <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <returns>A <see cref="T:System.Collections.IEnumerator" />-zaimplementowany obiekt, który zawiera wszystkie <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiekty w <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-zaimplementowany obiekt, który należy powtórzyć za pośrednictwem, aby pobrać zawartość poszczególnych elementów w <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji.  
  
 Użyj <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> właściwości do pobrania elementu obecnie wskazywana w kolekcji.  
  
 Użyj <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> metody, aby przejść do następnego elementu w kolekcji.  
  
 Użyj <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metody, aby przenieść moduł wyliczający położenie początkowe.  
  
> [!NOTE]
>  <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> Metoda musi zostać wywołana po utworzeniu <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-zaimplementowany obiekt, lub po użyciu <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> metodę, aby przenieść modułu wyliczającego do pierwszego elementu w kolekcji. W przeciwnym razie element reprezentowany przez <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> właściwość jest niezdefiniowana.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator%2A> metodę w celu utworzenia <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-zaimplementowana obiektu. Obiekt jest następnie powtórzyć za pośrednictwem do wyświetlenia zawartości <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionienumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/CS/htmltablecellcollectionienumeratorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionienumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/VB/htmltablecellcollectionienumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja w <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> w której ma zostać dodany <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</param>
        <param name="cell">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> Do dodania do <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Dodaje określony <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiekt w określonej lokalizacji indeksu z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> metody w celu dodania określonego <xref:System.Web.UI.HtmlControls.HtmlTableCell> do obiektu <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji pod określonym indeksem. Jeśli chcesz po prostu Dołącz <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektu do końca kolekcji, użyj <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> metody dynamicznie Wstaw komórkę tabeli, reprezentowany przez <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektów w <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/CS/htmltablecellcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/VB/htmltablecellcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcja jest tylko do odczytu.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zawsze zwraca `false` z informacją, że <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji można zapisać we wszystkich przypadkach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy uzyskują dostęp do <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji jest zsynchronizowany (wielowątkowość).</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach, co oznacza, że dostęp do <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> (nie wielowątkowość) nie jest zsynchronizowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest określana na podstawie <xref:System.Collections.ICollection?displayProperty=nameWithType> i jest zastąpiona w celu zawsze zwracają `false` aby wskazać, że dostęp do <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji nie jest zsynchronizowany (nie wielowątkowość).  
  
 Aby uzyskać więcej informacji na temat <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized%2A> właściwości, zobacz <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> właściwość <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlTableCell this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlTableCell Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HtmlTableCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlTableCell ^ default[int] { System::Web::UI::HtmlControls::HtmlTableCell ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlTableCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Określa wartość indeksu porządkowej <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> do zwrócenia.</param>
        <summary>Pobiera <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiektu o określonym indeksie z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> Reprezentujący zawarte w komórce <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego indeksatora, aby pobrać <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiekt z <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. Dostęp można uzyskać <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektu od określonego indeksu przy użyciu prostego tablicy notacji.  
  
> [!NOTE]
>  Kolekcja jest liczony od zera; w związku z tym pierwszy element w kolekcji zawiera wartość indeksu `0`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak Użyj indeksatora, aby pobrać komórkę tabeli, reprezentowany przez <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektu, z <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. Komórka jest następnie aktualizowany z nową zawartość. Zwróć uwagę, że <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> właściwości wiersza reprezentowany przez <xref:System.Web.UI.HtmlControls.HtmlTableRow> obiekt jest <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji.  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> Do usunięcia z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Usuwa określoną <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiekt z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usunięcie określonej <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiekt z <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji.  
  
> [!NOTE]
>  Jeśli określisz <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiekt, który nie istnieje w <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji, żaden element zostanie usunięty z kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove%2A> metodę, aby usunąć określona komórka w tabeli, reprezentowany przez <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektu, z <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. W tym przykładzie usuwa pierwszą kolumnę komórki <xref:System.Web.UI.HtmlControls.HtmlTable> formantu.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/CS/htmltablecellcollectionremovecs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/VB/htmltablecellcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> do usunięcia z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />.</param>
        <summary>Usuwa <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> obiektu o określonym indeksie z <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia usunięcie <xref:System.Web.UI.HtmlControls.HtmlTableCell> obiektu o określonym indeksie z <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. Numer indeksu jest liczony od zera; w związku z tym pierwszego elementu w kolekcji ma wartość indeksu `0`.  
  
> [!NOTE]
>  Jeśli określisz indeks jest poza zakresem wartości indeksu jest wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt%2A> metody, aby usunąć element pod określonym indeksem z <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> kolekcji. W tym przykładzie usuwa pierwszą kolumnę komórki <xref:System.Web.UI.HtmlControls.HtmlTable> formantu.  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/CS/htmltablecellcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/VB/htmltablecellcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony indeks jest poza zakresem wartości indeksu w kolekcji.</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> kolekcji.</summary>
        <value>Obiekt, który może służyć do synchronizujący dostęp do kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony w tej implementacji jest bieżące wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> klasy.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot%2A> właściwości, zobacz <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> właściwość <xref:System.Collections.ICollection?displayProperty=nameWithType> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
  </Members>
</Type>