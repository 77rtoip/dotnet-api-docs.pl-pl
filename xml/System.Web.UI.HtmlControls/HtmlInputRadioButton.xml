<Type Name="HtmlInputRadioButton" FullName="System.Web.UI.HtmlControls.HtmlInputRadioButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6960c53bb89db801adfb6e1582f8e1871f80387c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputRadioButton : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputRadioButton extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputRadioButton&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputRadioButton : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zezwala na dostęp programistyczny umożliwiający HTML <see langword="&lt;input type= radio&gt;" /> elementu na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu, aby utworzyć przycisk radiowy na stronie sieci Web. <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> Formant nie ma wbudowanej funkcji, aby wyświetlić podpis dla przycisku radiowego. Aby utworzyć podpis, należy użyć literału tekstu na stronie sieci Web w wybranej lokalizacji. Dzięki temu można określić, gdzie jest wyświetlany napis względem przycisk radiowy. Na przykład, jeśli chcesz wyświetlić podpis po prawej stronie przycisku radiowego, Zadeklaruj <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formant, a następnie tekst podpisu, jak pokazano w poniższym kodzie.  
  
```  
<input type="radio"   
 id="Radio1"   
 name="Mode"   
 runat="server"/>  
Caption Text<br>  
```  
  
 Opcjonalnie można skojarzyć ilość o <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> kontroli przez ustawienie <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value%2A> właściwości. Jest to przydatne, gdy ma wiele przycisków radiowych i konieczne jest wykonanie obliczeń, w oparciu o wybór.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> Formanty można grupować, określając wartość wspólnej <xref:System.Web.UI.HtmlControls.HtmlInputControl.Name%2A> właściwości każdego przycisku radiowego, którą chcesz uwzględnić w grupie.  
  
> [!NOTE]
>  Jeśli grupa <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> można wybrać razem kontrolki przycisku radiowego tylko jednej grupy naraz.  
  
 Aby określić, czy <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> jest wybrana kontrolka, przetestuj <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> właściwości. Jeśli masz grupę <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantów, należy Iterowanie za pomocą formantów i przetestować <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> właściwości każdego kontrolować osobno.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> Kontrola zapewnia <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> zdarzenie, które jest wywoływane, gdy <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> właściwości zmiany wartości między ogłoszenia na serwerze. Dzięki temu można utworzyć program obsługi zdarzeń niestandardowych, który wykonuje określony zbiór instrukcji, gdy zdarzenie jest zgłaszane, takich jak sprawdzanie poprawności danych.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton>, zobacz <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> sterowania, aby utworzyć grupę przycisków radiowych.  
  
 [!code-aspx-csharp[Classic HtmlInputRadioButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputRadioButton Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputRadioButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputRadioButton Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputControl.Name" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputCheckBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputRadioButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputRadioButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia tworzenie i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> klasy.  
  
 W poniższej tabeli przedstawiono wartości początkowej właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Ciąg literału "radio".|  
  
   
  
## Examples  
 [!code-aspx-csharp[HtmlInputRadioButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputRadioButtonCtor/CS/htmlinputradiobuttonctorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputRadioButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputRadioButtonCtor/VB/htmlinputradiobuttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> formant jest zaznaczony.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> kontrolka jest wybrana; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> umożliwia określenie, czy <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formant jest zaznaczony. Jeśli masz grupę <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantów, należy Iterowanie za pomocą formantów i przetestować <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> właściwości każdego kontrolować osobno. Ta właściwość umożliwia również programowo Określ, czy formant jest zaznaczony.  
  
 Można grupować <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> razem przez podanie wartości typowych formantów <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Name%2A> właściwości każdego kontrolkę przycisku radiowego, którą chcesz uwzględnić w grupie.  
  
> [!NOTE]
>  Jeśli grupa <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantów, tylko jeden przycisk w grupie można wybrać w czasie. <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> Właściwości zaznaczonego formantu ustawiono `true`, podczas gdy ustawiono tę samą właściwość `false` dla innych przycisków radiowych w grupie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> właściwości w celu określenia, które w grupie zaznaczona jest opcja.  
  
 [!code-aspx-csharp[Classic HtmlInputRadioButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputRadioButton Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputRadioButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputRadioButton Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Name" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja wszystkich przychodzących wartości nazwy.</param>
        <summary>Przetwarza dane odświeżania strony <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> formantu.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> stan formantu został zmieniony w wyniku ogłaszania zwrotnego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.LoadPostData%2A> Metoda sprawdza, czy wartość odświeżania strony <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> kontroli różni się od poprzedniej wartości, a jeśli tak, zwraca `true`.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.LoadPostData%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę grupy, które wystąpienie <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> klasy jest skojarzony.</summary>
        <value>Grupy pole wyboru określa, że wystąpienie <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> klasa jest elementem członkowskim.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupowanie wielu <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantów, określając wartość wspólnej <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Name%2A> właściwości każdego przycisku radiowego, którą chcesz uwzględnić w grupie. Jeśli grupa <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantów, tylko jeden przycisk w grupie można wybrać w czasie. <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> Właściwości zaznaczonego formantu ustawiono `true`, podczas gdy ustawiono tę samą właściwość `false` dla innych przycisków radiowych w grupie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Name%2A> właściwości do grupowania wielu <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> kontrolki.  
  
 [!code-aspx-csharp[Classic HtmlInputRadioButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputRadioButton Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputRadioButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputRadioButton Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń i rejestruje <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> formantu, który wymaga obsługi odświeżania strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnPreRender%2A> Metoda jest wywoływana tuż przed renderowaniem <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnPreRender%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnPreRender%2A> metodę, tak że dodaje `Title` atrybutu niestandardowego <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> kontrolki serwera.  
  
 [!code-aspx-csharp[CustomHtmlInputRadioButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputRadioButtonOnPreRender/CS/custom_htmlinputradiobutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputRadioButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputRadioButtonOnPreRender/VB/custom_htmlinputradiobutton_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputRadioButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputRadioButtonOnPreRender/CS/custom_htmlinputradiobutton_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputRadioButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputRadioButtonOnPreRender/VB/custom_htmlinputradiobutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerChange(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange" /> zdarzeń. Dzięki temu można utworzyć niestandardowy program obsługi zdarzeń, gdy zdarzenie jest wywoływane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> właściwość <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> kontroli zmiany wartości między ogłoszenia na serwerze. Dzięki temu można utworzyć program obsługi zdarzeń niestandardowych, który wykonuje określony zbiór instrukcji (takich jak sprawdzanie poprawności danych) podczas zdarzenia.  
  
> [!NOTE]
>  Kontrolka musi mieć włączone dla stanu widoku <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> zdarzenie, aby działać poprawnie. Aby włączyć stan widoku dla wszystkich kontrolek strony formularzy sieci Web, należy ustawić <xref:System.Web.UI.Page.EnableViewState%2A?displayProperty=nameWithType> właściwości `true`. Można również włączyć stan widoku formantu poszczególnych przez ustawienie <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> właściwości `true`.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> zdarzeń. Program obsługi zdarzeń niestandardowych aktualizuje etykiety na stronie sieci Web, aby wyświetlić wartość wybranego przycisku radiowego.  
  
 [!code-aspx-csharp[HtmlInputRadioButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputRadioButton/CS/htmlinputradiobuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputRadioButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputRadioButton/VB/htmlinputradiobuttonvb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputRadioButtonServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputRadioButtonServerChange/CS/htmlinputradiobuttonserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputRadioButtonServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputRadioButtonServerChange/VB/htmlinputradiobuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywołania <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange(System.EventArgs)" /> metody w celu zasygnalizowania <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> formant, który zmienił się stan formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent" /> metody, aby <see cref="E:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange" /> poprawnie zdarzenia.</para>
        </block>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca przetworzonych wyników.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> kontrolować atrybuty do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.RenderAttributes%2A> Zapisy metody <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value%2A> właściwość jako atrybut <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> kontroli, a następnie wywołuje klasy podstawowej <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> — metoda  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.RenderAttributes%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.RenderAttributes%2A> metoda niestandardowego serwera kontroli tak, aby tekst konkretny tytuł jest zawsze wyświetlany dla <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton>.  
  
 [!code-aspx-csharp[CustomHtmlInputRadioButtonRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputRadioButtonRenderAttributes/CS/custom_htmlinputradiobutton_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputRadioButtonRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputRadioButtonRenderAttributes/VB/custom_htmlinputradiobutton_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputRadioButtonRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputRadioButtonRenderAttributes/CS/custom_htmlinputradiobutton_renderattributes.cs#2)]
 [!code-vb[CustomHtmlInputRadioButtonRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputRadioButtonRenderAttributes/VB/custom_htmlinputradiobutton_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked" /> właściwość <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> kontroli zmian między ogłoszenia na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> Zdarzenie jest zgłaszane, gdy <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked%2A> właściwość <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu zmieni wartość z zakresu od ogłoszenia na serwerze. Dzięki temu można utworzyć program obsługi zdarzeń niestandardowych, który wykonuje określony zbiór instrukcji (takich jak sprawdzanie poprawności danych) podczas zdarzenia.  
  
> [!NOTE]
>  Kontrolka musi mieć włączone dla stanu widoku <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> zdarzenie, aby działać poprawnie. Aby włączyć stan widoku dla wszystkich kontrolek strony formularzy sieci Web, należy ustawić <xref:System.Web.UI.Page.EnableViewState%2A?displayProperty=nameWithType> właściwości `true`. Można również włączyć stan widoku formantu poszczególnych przez ustawienie <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> właściwości `true`.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i kodem obsługi dla <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.ServerChange> zdarzeń. Program obsługi zdarzeń niestandardowych aktualizuje etykiety na stronie sieci Web, aby wyświetlić wartość wybranego przycisku radiowego.  
  
 [!code-aspx-csharp[HtmlInputRadioButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputRadioButton/CS/htmlinputradiobuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputRadioButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputRadioButton/VB/htmlinputradiobuttonvb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputRadioButtonServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputRadioButtonServerChange/CS/htmlinputradiobuttonserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputRadioButtonServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputRadioButtonServerChange/VB/htmlinputradiobuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.OnServerChange(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Checked" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja wszystkich wartości nazwy przychodzące</param>
        <summary>Implementuje <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> metody przez wywołanie metody <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> metody.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> stan formantu został zmieniony w wyniku ogłaszania zwrotnego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackDataHandler> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implementuje <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> metody przez wywołanie metody <see cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackDataHandler> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputRadioButton.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość skojarzoną z <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> formantu.</summary>
        <value>Wartość skojarzoną z <see cref="T:System.Web.UI.HtmlControls.HtmlInputRadioButton" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value%2A> właściwości do określania wartość skojarzoną z <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu. Wartość może być prawidłowym ciągiem, który ma być skojarzony z formantem. Jest to przydatne, po wielokrotnych przycisków radiowych i konieczne jest wykonanie obliczeń na podstawie zaznaczenia. Na przykład można mieć przycisków radiowych, które reprezentują różne metody wysyłki. Można przechowywać koszt wysyłki w <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value%2A> właściwości. Po wybraniu metody wysyłki odpowiedniej ilości wysyłki można ustalić na podstawie tej właściwości i dodane do całkowitej sprzedaży.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton.Value%2A> właściwość do skojarzenia z opis <xref:System.Web.UI.HtmlControls.HtmlInputRadioButton> formantu.  
  
 [!code-aspx-csharp[HtmlInputRadioButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputRadioButton/CS/htmlinputradiobuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputRadioButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputRadioButton/VB/htmlinputradiobuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>