<Type Name="HtmlInputFile" FullName="System.Web.UI.HtmlControls.HtmlInputFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cc6a5794a0a1dfaae0abb38194dd6ca4ad85b50" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688652" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputFile : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputFile extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputFile" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputFile&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputFile : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zezwala na dostęp programistyczny umożliwiający HTML <see langword="&lt;input type= file&gt;" /> elementu na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlInputFile> kontrolki serwera do obsługi przesyłania plików tekst lub binarny z klient przeglądarki do serwera. Przekazywanie pliku współpracuje z programu Microsoft Internet Explorer 3.02 lub nowszej.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputFile> Kontroli jest przeznaczony do użycia tylko w scenariuszach odświeżania strony, a nie w scenariuszach odświeżania strony asynchroniczne podczas renderowania stron częściowych. Jeśli używasz <xref:System.Web.UI.HtmlControls.HtmlInputFile> kontrolować wewnątrz <xref:System.Web.UI.UpdatePanel> sterowania, można przekazać pliku, za pomocą formantu, który jest <xref:System.Web.UI.PostBackTrigger> obiektu panelu. <xref:System.Web.UI.UpdatePanel> Formanty są używane do aktualizacji wybranych regionach strony zamiast aktualizowania całej strony odświeżania strony. Aby uzyskać więcej informacji, zobacz [informacje o formancie UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) i [omówienie renderowania stron częściowych](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Aby określić plik do przekazania, wprowadź pełną ścieżkę do pliku (na przykład "C:\MyFiles\Test.txt") w polu tekstowym formantu. Plik można także wybrać, klikając **Przeglądaj** przycisk, a następnie go w lokalizacji **wybierz plik** okno dialogowe.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> Właściwość <xref:System.Web.UI.HtmlControls.HtmlForm> formantu musi być ustawiona na "multipart/form-data" dla tego formantu działała poprawnie.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile> Formant nie ma wbudowanej sposób publikowania na serwer. Aby przekazać plik do serwera, należy użyć <xref:System.Web.HttpPostedFile.SaveAs%2A> metody <xref:System.Web.HttpPostedFile?displayProperty=nameWithType> obiektów zawartych w <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> właściwości. Ta operacja odbywa się zwykle w metodzie obsługi zdarzeń, takie jak przycisk kliknij.  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Web.HttpPostedFile.SaveAs%2A> metody <xref:System.Web.HttpPostedFile> klasy, upewnij się określić ścieżki do katalogu głównego (na przykład "C:\MyFiles\Test.txt"). Zachowanie <xref:System.Web.HttpPostedFile.SaveAs%2A> metoda może być określona w [httpRuntime — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) sekcji konfiguracji z `requireRootedSaveAsPath` atrybutu. Wartość domyślna tego atrybutu to `true`. Jeśli ustawisz ten atrybut `false`, następnie za pomocą <xref:System.Web.HttpPostedFile.SaveAs%2A> metody z nie określono ścieżki będzie podejmować próby umieścić plik w `systemroot` \system32\inetsrv katalogu. Domyślnie ten katalog jest zabezpieczony przed zapisem; w związku z tym pliku nie można zapisać istnieje. Upewnij się zapewnić uprawnienie do zapisu dla konta używanego przez program ASP.NET dla katalogu, którym chcesz przechowywać plik.  
  
 Podczas przekazywania dużych plików, użyj `maxRequestLength` atrybutu [httpRuntime — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element, aby zwiększyć maksymalny dozwolony rozmiar pliku. Błąd DNS jest generowany w przeglądarce przekroczenia określonego rozmiaru pliku. Może również pojawi się następujący komunikat o błędzie podczas przekazywania dużych plików:  
  
 Aspnet_wp.exe (identyfikator procesu: 1520) został ponownie przetworzony, ponieważ zużycie pamięci przekroczyło 460 MB (60 procent dostępnej pamięci RAM).  
  
 Jeśli wystąpi ten komunikat o błędzie, należy zwiększyć wartość `memoryLimit` atrybutu w [processModel — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) elementu w pliku Machine.config.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlInputFile>, zobacz <xref:System.Web.UI.HtmlControls.HtmlInputFile.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputFile> formantu, aby utworzyć plik Prosty scenariusz przekazywania. W tym przykładzie działała prawidłowo, należy utworzyć katalog o nazwie `Temp` na tym komputerze dysku C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpPostedFile" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputFile();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia tworzenie i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlInputFile> klasy.  
  
 W poniższej tabeli przedstawiono wartości początkowej właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlInputFile>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Ciąg literału "plik".|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlInputFile> klasy. W tym przykładzie działała prawidłowo, należy utworzyć katalog o nazwie `Temp` na tym komputerze dysku C.  
  
 [!code-aspx-csharp[HtmlInputFileCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileCtor/CS/htmlinputfilectorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputFileCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileCtor/VB/htmlinputfilectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Property Accept As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Accept { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia listę rozdzielanych przecinkami kodowań MIME używany do ograniczenia typy plików, które użytkownik może wybrać.</summary>
        <value>Rozdzielana przecinkami lista kodowań MIME.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie typu pliku, które mogą być przekazywane do serwera. Na przykład, aby ograniczyć zaznaczenie do obrazów, ustaw tą właściwość na "image / *".  
  
> [!NOTE]
>  Pomoc techniczna dla tej właściwości jest zależne od przeglądarki. Sprawdź przeglądarkę, aby sprawdzić, czy obsługuje ona tej właściwości. Zalecane jest użycie kodu po stronie serwera w celu upewnij się, że plik jest wystąpieniem oczekiwanego typu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> właściwość, aby uniemożliwić użytkownikowi wybranie dowolnego pliku innym niż plik obrazu. W tym przykładzie działała prawidłowo, należy utworzyć katalog o nazwie `Temp` na tym komputerze dysku C. Ponieważ obsługę <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> właściwości jest zależne od przeglądarki, aby upewnić się, że tylko obrazy są przekazywane wykonywane jest wyboru po stronie serwera. Jest zwracany wyjątek, jeśli rozmiar przesłanego pliku nie może zostać odczytany jako <xref:System.Drawing.Image> typu.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.Accept Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.Accept Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja wszystkich przychodzących wartości nazwy.</param>
        <summary>Przetwarza dane odświeżania strony <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> formantu.</summary>
        <returns>Ta metoda zawsze zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile> Kontrolować implementuje <xref:System.Web.UI.IPostBackDataHandler> interfejs, który ma dwie metody: <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> i <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType>. <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A> Metoda jest wywoływana przez <xref:System.Web.UI.HtmlControls.HtmlInputFile.System%23Web%23UI%23IPostBackDataHandler%23RaisePostDataChangedEvent%2A> — metoda i zawsze zwraca `false`, wskazujące który <xref:System.Web.UI.HtmlControls.HtmlInputFile> stan formantu nie jest zarządzany przez architekturę stron ASP.NET.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputFile> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną długość ścieżki pliku dla pliku do przekazania z komputera klienckiego.</summary>
        <value>Maksymalna długość ścieżki pliku. Wartość domyślna wynosi -1, co oznacza, że właściwość nie została ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie limit liczby znaków, jaką można wpisać w poszukiwaniu ścieżki do pliku do przekazania.  
  
> [!NOTE]
>  Pomoc techniczna dla tej właściwości jest zależne od przeglądarki. Sprawdź przeglądarkę, aby sprawdzić, czy obsługuje ona tej właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzenia dla <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli kodowanie nie jest określony dla strony sieci Web <xref:System.Web.UI.HtmlControls.HtmlForm> kontroli, <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> właściwość jest ustawiona na "multipart/form-data".  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender%2A> metody, aby `Title` atrybut zawsze jest dodawana do każdej niestandardowej <xref:System.Web.UI.HtmlControls.HtmlInputFile> formantu. W tym przykładzie działała prawidłowo, należy utworzyć katalog o nazwie `Temp` na tym komputerze dysku C.  
  
 [!code-aspx-csharp[CustomHtmlInputFileOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputFileOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputFileOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputFileOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dostęp do przekazanego pliku określonego przez klienta.</summary>
        <value>A <see cref="T:System.Web.HttpPostedFile" /> który uzyskuje dostęp do plików do przekazania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ograniczenia zabezpieczeń przeglądarki uniemożliwić utrzymywanie dla wielu żądań przesyłanych tej wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> właściwości umożliwia zainicjowanie narzędzia, który przenosi plik do serwera. Należy pamiętać, że jeśli rozmiar przekazywanego pliku w bajtach przekracza wartość <xref:System.Web.HttpPostedFile.ContentLength%2A> właściwości, plik nie zostało załadowane. W tym przykładzie działała prawidłowo, należy utworzyć katalog o nazwie `Temp` na tym komputerze dysku C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.PostedFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.PostedFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> formant, który zmienił się stan formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile> Kontrolować implementuje <xref:System.Web.UI.IPostBackDataHandler> interfejs, który ma dwie metody: <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> i <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType>. <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType> — Metoda nie uczestniczy w przetwarzania <xref:System.Web.UI.HtmlControls.HtmlInputFile> kontroli i jest dołączony do ukończenia implementacji interfejsu.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent%2A> Głównie przez deweloperów kontroli metodę, aby rozszerzyć funkcjonalność programu <xref:System.Web.UI.HtmlControls.HtmlInputFile> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość pola tekstowego podać ścieżkę pliku.</summary>
        <value>Szerokość pola tekstowego Ścieżka pliku. Wartość domyślna wynosi -1, co oznacza, że właściwość nie została ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie szerokość pola tekstowego, w którym można wpisać ścieżkę pliku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputFile.Size%2A> właściwości, aby określić szerokość pola tekstowego, w którym użytkownik wprowadza ścieżkę pliku. W tym przykładzie działała prawidłowo, należy utworzyć katalog o nazwie `Temp` na tym komputerze dysku C.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.Size Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.Size Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja wszystkich przychodzących wartości nazwy.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> stan formantu został zmieniony w wyniku ogłaszania zwrotnego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.HtmlControls.HtmlInputFile> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackDataHandler> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.HtmlControls.HtmlInputFile> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackDataHandler> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pełną ścieżkę pliku na komputerze klienckim.</summary>
        <value>Pełna ścieżka pliku klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> Właściwość pobiera pełną ścieżkę pliku na komputerze klienta (na przykład "C:\MyFiles\Test.txt"). Jest to przydatne, gdy musisz wiedzieć, gdzie plik jest przechowywany na komputerze, przesyłanie pliku. Ta właściwość jest również powszechnie używana do określenia nazwy oryginalnego pliku. Aby uzyskać oryginalna nazwa pliku, należy przeanalizować wartość tej właściwości.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> Właściwość jest tylko do odczytu. Jeśli użytkownik spróbuje przypisać wartości do tej właściwości <xref:System.NotSupportedException?displayProperty=nameWithType> jest generowany.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> właściwość, aby wyświetlić pełną ścieżkę pliku na komputerze klienckim. W tym przykładzie działała prawidłowo, należy utworzyć katalog o nazwie `Temp` na tym komputerze dysku C.  
  
 [!code-aspx-csharp[HtmlInputFileValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileValue/CS/htmlinputfilevaluecs.aspx#1)]
 [!code-aspx-vb[HtmlInputFileValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileValue/VB/htmlinputfilevaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Nastąpiła próba można przypisać wartości do tej właściwości.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputControl.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
        <altmember cref="T:System.NotSupportedException" />
      </Docs>
    </Member>
  </Members>
</Type>