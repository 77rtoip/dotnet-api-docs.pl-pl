<Type Name="HtmlInputImage" FullName="System.Web.UI.HtmlControls.HtmlInputImage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="297e251d46ea2bde074ec2ff3f9d2cc2746ca2e0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69043123" /></Metadata><TypeSignature Language="C#" Value="public class HtmlInputImage : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputImage extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputImage" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputImage&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputImage : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type HtmlInputImage = class&#xA;    inherit HtmlInputControl&#xA;    interface IPostBackDataHandler&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia programistyczny dostęp do elementu <see langword="&lt;input type= image&gt;" /> HTML na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage> Użyj kontrolki, aby utworzyć przycisk, który wyświetla obraz. Można programowo sterować akcją skojarzoną z <xref:System.Web.UI.HtmlControls.HtmlInputImage> kontrolką, dostarczając procedurę obsługi zdarzeń <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> dla zdarzenia.  
  
 Współrzędne, w <xref:System.Web.UI.HtmlControls.HtmlInputImage> których użytkownik klika kontrolkę, można określić za <xref:System.Web.UI.ImageClickEventArgs.X?displayProperty=nameWithType> pomocą właściwości <xref:System.Web.UI.ImageClickEventArgs?displayProperty=nameWithType> i <xref:System.Web.UI.ImageClickEventArgs.Y?displayProperty=nameWithType> obiektu, który jest przesyłany jako parametr do procedury obsługi zdarzeń zdefiniowanej przez użytkownika.  
  
 Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.HtmlControls.HtmlInputImage.%23ctor%2A> Zobacz Konstruktor.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Web.UI.HtmlControls.HtmlInputImage> formantu utworzyć przycisk, który wyświetla obraz.  
  
> [!NOTE]
>  Aby ten przykład działał prawidłowo, należy podać własne pliki obrazów.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Src Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Src Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
    <altmember cref="T:System.Web.UI.ImageClickEventArgs" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.HtmlControls.HtmlInputImage> kontrolki.  
  
 W poniższej tabeli przedstawiono początkową wartość właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlInputImage>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Ciąg literału "Image".|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie <xref:System.Web.UI.HtmlControls.HtmlInputImage> kontrolki i umieścić je na stronie sieci Web.  
  
 [!code-aspx-csharp[HtmlInputImageCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageCtor/CS/htmlinputimagectorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageCtor/VB/htmlinputimagectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Align" />
      <MemberSignature Language="VB.NET" Value="Public Property Align As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Align { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Align : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputImage.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> formantu w odniesieniu do innych elementów na stronie sieci Web.</summary>
        <value>Wyrównanie <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> formantu w odniesieniu do innych elementów na stronie sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić wyrównanie <xref:System.Web.UI.HtmlControls.HtmlInputImage> formantu w odniesieniu do innych elementów na stronie sieci Web. <xref:System.Web.UI.HtmlControls.HtmlInputImage.Align%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlInputImage.Align%2A> właściwości, aby określić wyrównanie <xref:System.Web.UI.HtmlControls.HtmlInputImage> formantu w odniesieniu do innych elementów na stronie sieci Web.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Align Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Align Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public string Alt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alt" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Property Alt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Alt { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Alt : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputImage.Alt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst alternatywny wyświetlany przez przeglądarkę, jeśli obraz jest niedostępny lub nie został pobrany.</summary>
        <value>Alternatywny tekst określonego obrazu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> , aby określić tekst, który ma być wyświetlany, gdy określony obraz nie jest dostępny lub nie został pobrany. Można także użyć tej właściwości, aby programowo określić określony alternatywny tekst.  
  
 W przeglądarkach, które obsługują funkcję etykietki narzędzi, ten tekst jest również wyświetlany jako <xref:System.Web.UI.HtmlControls.HtmlInputImage> etykietka narzędzia dla kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> właściwości, aby określić alternatywny tekst, który ma być wyświetlany, gdy obraz nie jest dostępny.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Src Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Src Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" />
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public int Border { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Border" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Border" />
      <MemberSignature Language="VB.NET" Value="Public Property Border As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Border { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Border : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputImage.Border" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> obramowania formantu.</summary>
        <value>Szerokość obramowania <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> formantu (w pikselach).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby określić szerokość <xref:System.Web.UI.HtmlControls.HtmlInputImage> obramowania formantu. <xref:System.Web.UI.HtmlControls.HtmlInputImage.Border%2A>  
  
> [!NOTE]
>  Ta właściwość nie jest obsługiwana we wszystkich przeglądarkach. Sprawdź przeglądarkę, aby określić zgodność.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.HtmlControls.HtmlInputImage.Border%2A> właściwości, aby określić szerokość <xref:System.Web.UI.HtmlControls.HtmlInputImage> obramowania formantu.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Align Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Align Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Walidacja jest wykonywana po <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> kliknięciu kontrolki.</summary>
        <value><see langword="true" />Jeśli walidacja jest wykonywana po <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> kliknięciu kontrolki; w przeciwnym <see langword="false" />razie,. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie Walidacja strony jest wykonywana po <xref:System.Web.UI.HtmlControls.HtmlInputImage> kliknięciu kontrolki. Walidacja strony określa, czy kontrolki wejściowe skojarzone z kontrolką walidacji na stronie wszystkie przekazują reguły walidacji określone przez kontrolkę walidacji.  
  
 Możesz określić lub określić, czy Walidacja jest wykonywana zarówno na kliencie, jak i na serwerze <xref:System.Web.UI.HtmlControls.HtmlInputImage> po kliknięciu kontrolki przy <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> użyciu właściwości. Aby zapobiec wykonywaniu walidacji, należy ustawić <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> właściwość na `false`.  
  
 Ta właściwość jest często używana w programie obsługi zdarzeń dla <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> zdarzenia, aby zapobiec występowaniu walidacji strony po kliknięciu przycisku anulowania lub resetowania.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> aby zapobiec występowaniu walidacji strony. Zwróć uwagę, <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> jak Metoda aktywuje poszczególne kontrolki walidacji niezależnie od siebie.  
  
 [!code-aspx-csharp[HtmlInputImageCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageCausesValidation/CS/htmlinputimagecausesvalidationcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageCausesValidation/VB/htmlinputimagecausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="htmlInputImage.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla kontrolki.</param>
        <param name="postCollection">Kolekcja wszystkich wartości nazw przychodzących.</param>
        <summary>Przetwarza dane ogłaszania zwrotnego <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> dla kontrolki.</summary>
        <returns><see langword="true" />Jeśli stan <see langword="false" />kontrolki został zmieniony w wyniku ogłaszania zwrotnego; w przeciwnym razie. <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda sprawdza, czy współrzędne reprezentujące lokalizację, w której obraz został kliknięty przez użytkownika, są częścią danych ogłaszania zwrotnego <xref:System.Web.UI.HtmlControls.HtmlInputImage> dla kontrolki. <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A> Jeśli współrzędne są częścią danych ogłaszania zwrotnego, <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A> Metoda <xref:System.Web.UI.HtmlControls.HtmlInputImage> rejestruje formant ze stroną sieci Web jako kontrolkę wymagającą zgłoszenia zdarzenia podczas przetwarzania.  
  
> [!NOTE]
>  Współrzędne pochodzenia (0, 0) znajdują się w lewym górnym rogu obrazu.  
  
 Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputImage> formantu. <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlInputImage.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana tuż przed <xref:System.Web.UI.HtmlControls.HtmlInputImage> renderowaniem formantu. <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A> Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputImage> formantu. <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A> metodę, tak aby zawsze wyświetlała niestandardowy <xref:System.Web.UI.HtmlControls.HtmlInputImage> formant serwera bez obramowania.  
  
 [!code-aspx-csharp[CustomHtmlInputImageOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/CS/custom_htmlinputimage_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputImageOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/VB/custom_htmlinputimage_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputImageOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/CS/custom_htmlinputimage_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputImageOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/VB/custom_htmlinputimage_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" /> metody w klasie pochodnej należy wywołać <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" /> metodę klasy bazowej, tak aby zarejestrowane Delegaty otrzymywały <see cref="E:System.Web.UI.Control.PreRender" /> zdarzenie.</para></block>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (System.Web.UI.ImageClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.Web.UI.ImageClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerClick (e As ImageClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerClick(System::Web::UI::ImageClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerClick : System.Web.UI.ImageClickEventArgs -&gt; unit&#xA;override this.OnServerClick : System.Web.UI.ImageClickEventArgs -&gt; unit" Usage="htmlInputImage.OnServerClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ImageClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Web.UI.ImageClickEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy użytkownik <xref:System.Web.UI.HtmlControls.HtmlInputImage> kliknie formant. <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick>  
  
 Współrzędne, w <xref:System.Web.UI.HtmlControls.HtmlInputImage> których użytkownik klika kontrolkę, można określić za <xref:System.Web.UI.ImageClickEventArgs.X?displayProperty=nameWithType> pomocą właściwości <xref:System.Web.UI.ImageClickEventArgs?displayProperty=nameWithType> i <xref:System.Web.UI.ImageClickEventArgs.Y?displayProperty=nameWithType> obiektu. <xref:System.Web.UI.ImageClickEventArgs?displayProperty=nameWithType> Obiekt jest przekazaniem jako parametr do procedury obsługi zdarzeń zdefiniowanej przez użytkownika.  
  
> [!NOTE]
>  Punkt początkowy (0, 0) znajduje się w lewym górnym rogu obrazu.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> zdarzenia, aby określić współrzędne, w których użytkownik <xref:System.Web.UI.HtmlControls.HtmlInputImage> klika formant.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.ServerClick Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.ServerClick Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputImageServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageServerClick/CS/htmlinputimageserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageServerClick/VB/htmlinputimageserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
        <altmember cref="T:System.Web.UI.ImageClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="htmlInputImage.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Wywołuje zdarzenia dla kontrolki, <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> gdy zapisuje je na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana <xref:System.Web.UI.HtmlControls.HtmlInputImage> przez formant, gdy zostanie <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> kliknięty, aby zgłosić zdarzenie. <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostBackEvent%2A>  
  
 Jeśli właściwość jest `true` <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> ; <xref:System.Web.UI.Page.Validate%2A> Metoda jest wywoływana przy użyciu grupy formantów określonych we właściwości. <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A>  
  
 Ta metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputImage> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="htmlInputImage.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> Powiadamia formant o zmianie stanu formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda nie uczestniczy w przetwarzaniu <xref:System.Web.UI.HtmlControls.HtmlInputImage> kontrolki i <xref:System.Web.UI.IPostBackDataHandler> jest dołączona do ukończenia implementacji interfejsu. <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent%2A>  
  
 Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputImage> formantu. <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputImage.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawiera strumień wyjściowy do renderowania na kliencie.</param>
        <summary>Renderuje atrybuty <see cref="T:System.Web.UI.HtmlTextWriter" /> <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> kontrolki do określonego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage> `onclick` <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> Metoda rozwiązuje adres URL ustawiony we właściwości, zapisuje atrybut renderowanej kontrolki, jeśli właściwość jest `true`i na koniec wywołuje podstawę <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A> Method. Jeśli wartość <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> właściwości jest nieprawidłowo sformułowanym adresem URL <xref:System.Web.HttpException> , zgłaszany jest wyjątek.  
  
 Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlInputImage> formantu. <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A> metodę w niestandardowym formancie serwera, tak aby określony alternatywny tekst, dostępny jako etykietka narzędzia, był zawsze wyświetlany <xref:System.Web.UI.HtmlControls.HtmlInputImage>z.  
  
 [!code-aspx-csharp[CustomHtmlInputImageRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/CS/custom_htmlinputimage_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputImageRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/VB/custom_htmlinputimage_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputImageRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/CS/custom_htmlinputimage_renderattributes.cs#2)]
 [!code-vb[CustomHtmlInputImageRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/VB/custom_htmlinputimage_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" /> Właściwość zawiera nieprawidłowo sformułowany adres URL.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
        <altmember cref="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.ImageClickEventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.ImageClickEventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerClick As ImageClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::ImageClickEventHandler ^ ServerClick;" />
      <MemberSignature Language="F#" Value="member this.ServerClick : System.Web.UI.ImageClickEventHandler " Usage="member this.ServerClick : System.Web.UI.ImageClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ImageClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje na serwerze, gdy użytkownik kliknie <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> formant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, gdy użytkownik <xref:System.Web.UI.HtmlControls.HtmlInputImage> kliknie formant. <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick>  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak określić i zakodować procedurę obsługi dla <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> zdarzenia, aby określić współrzędne, w których użytkownik <xref:System.Web.UI.HtmlControls.HtmlInputImage> klika formant.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.ServerClick Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.ServerClick Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputImageServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageServerClick/CS/htmlinputimageserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageServerClick/VB/htmlinputimageserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" />
        <altmember cref="T:System.Web.UI.ImageClickEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Src">
      <MemberSignature Language="C#" Value="public string Src { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Src" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" />
      <MemberSignature Language="VB.NET" Value="Public Property Src As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Src { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Src : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputImage.Src" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia lokalizację pliku obrazu.</summary>
        <value>Lokalizacja pliku obrazu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> , aby określić lokalizację obrazu, który ma być wyświetlany <xref:System.Web.UI.HtmlControls.HtmlInputImage> w kontrolce. Jeśli obraz nie jest dostępny, zostanie wyświetlony tekst określony we <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> właściwości.  
  
 Możesz użyć względnego lub bezwzględnego adresu URL. Względny adres URL wiąże lokalizację obrazu z lokalizacją strony sieci Web bez określania pełnej ścieżki na serwerze. Ścieżka jest określana względem lokalizacji strony sieci Web. Dzięki temu można łatwiej przenieść całą lokację do innego katalogu na serwerze bez aktualizowania ścieżki do obrazu w kodzie. Ścieżki względnej " `~/` " można użyć do odwoływania się do bieżącego katalogu wirtualnego, w którym znajduje się Strona. Na przykład wartość <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> dla elementu `<input type="image" runat="server" src="~/abc/d.gif">` na stronie w katalogu wirtualnym "XspTest" to `<input type="image" src="/XspText/abc/d.gif">`. Bezwzględny adres URL zapewnia pełną ścieżkę. W związku z tym przeniesienie lokacji do innego katalogu wymaga aktualizacji kodu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> właściwości, aby określić ścieżkę do obrazu wyświetlanego <xref:System.Web.UI.HtmlControls.HtmlInputImage> w kontrolce.  
  
 [!code-aspx-csharp[Classic HtmlInputImage.Src Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputImage.Src Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Alt" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla kontrolki.</param>
        <param name="postCollection">Kolekcja wszystkich wartości nazw przychodzących.</param>
        <summary>Implementuje metodę <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> interfejsu przez wywołanie metody. <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /></summary>
        <returns><see langword="true" />Jeśli stan <see langword="false" />kontrolki został zmieniony w wyniku ogłaszania zwrotnego; w przeciwnym razie. <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implementuje metodę <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent" /> interfejsu przez wywołanie metody. <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> Umożliwia kontrolce zgłaszanie zdarzeń na stronie ogłaszania zwrotnego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupę kontrolek, dla których <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> formant powoduje uruchomienie walidacji, gdy odsyła na serwer.</summary>
        <value>Grupa kontrolek, dla których <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> formant powoduje sprawdzenie poprawności po odesłaniu na serwer. Wartość domyślna to ciąg pusty ("") wskazujący, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy sprawdzania poprawności umożliwiają przypisanie kontrolek walidacji na stronie do określonej kategorii. Każdą grupę sprawdzania poprawności można sprawdzić niezależnie od innych grup sprawdzania poprawności na stronie. Użyj właściwości <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> , aby określić nazwę grupy walidacji, dla <xref:System.Web.UI.HtmlControls.HtmlInputImage> której formant powoduje sprawdzenie poprawności po zaksięgowaniu z powrotem na serwerze.  
  
 Ta właściwość ma efekt tylko wtedy, gdy wartość <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> właściwości jest ustawiona na. `true` Po określeniu wartości dla <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> właściwości, tylko kontrolki walidacji, które są częścią określonej grupy są weryfikowane <xref:System.Web.UI.HtmlControls.HtmlInputImage> po ponownym zaksięgowaniu na serwerze. Jeśli nie określisz wartości dla tej właściwości, a <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> właściwość jest ustawiona na `true`, wszystkie kontrolki walidacji na stronie, które nie są przypisane do grupy walidacji, zostaną zweryfikowane, gdy sterowanie zostanie odesłane na serwer.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> właściwości, aby określić kontrolki do zweryfikowania, <xref:System.Web.UI.HtmlControls.HtmlInputImage> gdy kontrolka przechodzi z powrotem na serwer. Strona zawiera dwa pola tekstowe służące do przechwytywania danych od użytkownika i dwóch <xref:System.Web.UI.WebControls.RequiredFieldValidator> kontrolek, aby upewnić się, że użytkownik nie pozostawia pustego pola tekstowego. Kontrolka pierwszego pola tekstowego znajduje się `CityInfoGroup` w grupie walidacji, a <xref:System.Web.UI.WebControls.RequiredFieldValidator> `StateInfoGroup` kontrolka dla drugiego pola znajduje się w grupie walidacji. <xref:System.Web.UI.WebControls.RequiredFieldValidator> `CityInfoGroup` Po kliknięciu `CityQueryButton` zostanie sprawdzony tylko formant w grupie walidacji. `StateInfoGroup` Po kliknięciu `StateQueryButton` zostanie sprawdzony tylko formant w grupie walidacji.  
  
 [!code-aspx-csharp[HtmlInputImageValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageValidationGroup/cs/htmlinputimagevalidationgroupcs.aspx#1)]
 [!code-aspx-vb[HtmlInputImageValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageValidationGroup/vb/htmlinputimagevalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85)">Wprowadzenie do kontrolek weryfikacji</related>
      </Docs>
    </Member>
  </Members>
</Type>
