<Type Name="HtmlTextArea" FullName="System.Web.UI.HtmlControls.HtmlTextArea">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2468bf7ed73e717249c635d3ff89ce62690244af" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688727" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTextArea : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTextArea extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTextArea" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextArea&#xA;Inherits HtmlContainerControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextArea : System::Web::UI::HtmlControls::HtmlContainerControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zezwala na dostęp programistyczny umożliwiający <see langword="&lt;textarea&gt;" /> elementu HTML na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea> Kontroli odpowiada `<textarea>` element HTML, który służy do tworzenia wielowierszowego pola tekstowego na stronie sieci Web. Ten formant służy do manipulowania programowo `<textarea>` elementu HTML.  
  
 Ta klasa pozwala na kontrolowanie wysokość i szerokość wielowierszowego pola tekstowego, ustawiając <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> i <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> właściwości, odpowiednio. Również można przypisać nazwy do formantu przez ustawienie <xref:System.Web.UI.HtmlControls.HtmlTextArea.Name%2A> właściwości. Aby określić, lub określ tekst w polu tekstowym, użyj <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> właściwości.  
  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea> Klasa udostępnia <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> zdarzenie, które umożliwia wykonywanie niestandardowy zestaw instrukcji każdej zmianie wartości pola tekstowego między ogłoszenia na serwerze. To zdarzenie jest często używana do sprawdzania poprawności danych.  
  
> [!NOTE]
>  Jeśli chcesz utworzyć pole tekstowe w jeden wiersz, użyj <xref:System.Web.UI.HtmlControls.HtmlInputText> formantu.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlTextArea>, zobacz <xref:System.Web.UI.HtmlControls.HtmlTextArea.%23ctor%2A> konstruktora.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Formanty serwera weryfikacji podawane są również do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [sprawdzania poprawności serwera kontroli składni](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu, aby utworzyć wielowierszowego pola tekstowego.  
  
 [!code-aspx-csharp[HtmlTextArea2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextArea2/CS/htmltextareacs.aspx#1)]
 [!code-aspx-vb[HtmlTextArea2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextArea2/VB/htmltextareavb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Cols" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Value" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Name" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputText" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextArea ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextArea();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia tworzenie i zainicjować nowe wystąpienie klasy <xref:System.Web.UI.HtmlControls.HtmlTextArea> klasy.  
  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlTextArea>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Ciąg literału "textarea".|  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia wystąpienia <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontroli i miejsce na stronie sieci Web.  
  
 [!code-aspx-csharp[HtmlTextAreaCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaCtor/CS/htmltextareactorcs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaCtor/VB/htmltextareactorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Reprezentujący element przeanalizowany.</param>
        <summary>Powiadamia <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formant, który zostanie przeanalizowany i dodaje obiekt do obiektu <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu <see cref="T:System.Web.UI.ControlCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject%2A> Metoda dodaje obiekt, aby <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu <xref:System.Web.UI.ControlCollection> Jeśli obiekt jest typu <xref:System.Web.UI.LiteralControl> lub <xref:System.Web.UI.DataBoundLiteralControl>; w przeciwnym razie <xref:System.Web.HttpException> jest generowany.  
  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject%2A> Metody jest głównie używana przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject%2A> w niestandardowej metody <xref:System.Web.UI.HtmlControls.HtmlTextArea> serwera kontroli tak, aby zawsze określa, czy przeanalizowany obiekt jest typu <xref:System.Web.UI.LiteralControl> lub <xref:System.Web.UI.DataBoundLiteralControl>.  
  
 [!code-aspx-csharp[CustomHtmlTextAreaAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaAddParsedSubObject/CS/custom_htmltextarea_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomHtmlTextAreaAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaAddParsedSubObject/VB/custom_htmltextarea_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlTextAreaAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaAddParsedSubObject/CS/custom_htmltextarea_addparsedsubobject.cs#2)]
 [!code-vb[CustomHtmlTextAreaAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaAddParsedSubObject/VB/custom_htmltextarea_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Obiekt określony przez <paramref name="obj" /> parametr może być tylko typu <see cref="T:System.Web.UI.LiteralControl" /> lub <see cref="T:System.Web.UI.DataBoundLiteralControl" />.</exception>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
        <altmember cref="T:System.Web.UI.DataBoundLiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="Cols">
      <MemberSignature Language="C#" Value="public int Cols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Cols" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTextArea.Cols" />
      <MemberSignature Language="VB.NET" Value="Public Property Cols As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Cols { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość (w znakach) <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu.</summary>
        <value>Szerokość (w znakach) <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu. Wartość domyślna to <see langword="-1" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> właściwości do określania szerokość (w znakach) <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu. Jeśli zostanie wprowadzony tekst jest dłuższy niż szerokość pola tekstowego, tekst będzie automatycznie kontynuować działanie w następnym wierszu formantu.  
  
 Aby kontrolować jego wysokość formantu, należy ustawić <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> właściwości do kontrolowania szerokość <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
 [!code-aspx-csharp[HtmlTextAreaCols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaCols/CS/htmltextareacolscs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaCols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaCols/VB/htmltextareacolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja wszystkich przychodzących wartości nazwy.</param>
        <summary>Przetwarza dane odświeżania strony <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> stan formantu został zmieniony w wyniku ogłaszania zwrotnego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.LoadPostData%2A> Metoda sprawdza czy odświeżania strony wartość <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontroli różni się od poprzedniej wartości, a jeśli tak, zwraca `true`.  
  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.LoadPostData%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTextArea.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTextArea.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę Unikatowy identyfikator dla <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu.</summary>
        <value>Ciąg reprezentujący wartość <see cref="P:System.Web.UI.Control.UniqueID" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlTextArea.Name%2A> właściwości można określić nazwy Unikatowy identyfikator dla <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu. W tej implementacji właściwości `get` akcesor zwraca wartość <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> właściwości. Jednak `set` akcesor nie przypisuje wartość do tej właściwości.  
  
> [!NOTE]
>  `set` Akcesor nie przypisuje wartość do tej właściwości ponieważ <xref:System.Web.UI.HtmlControls.HtmlInputControl.Name%2A> właściwość musi mieć taką samą wartość jak <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> właściwość <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu, aby działała poprawnie.  
  
 Klasy, które dziedziczą z <xref:System.Web.UI.HtmlControls.HtmlTextArea> klasy mogą zastępować tej implementacji, w razie potrzeby.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTextArea.Name%2A> właściwości, aby wybrać <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontrolować na stronie i ustawić jej <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> właściwości.  
  
 [!code-aspx-csharp[HtmlTextAreaName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaName/CS/htmltextareanamecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaName/VB/htmltextareanamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender%2A> Powiadamia metody <xref:System.Web.UI.HtmlControls.HtmlTextArea> wykonaj wszystkie niezbędne kroki przed zapisaniem stanu widoku i renderowania zawartości formantu.  
  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender%2A> metody, aby zawsze wyświetlać 5 wierszy i kolumn 75 niestandardowego <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontrolki serwera.  
  
 [!code-aspx-csharp[CustomHtmlTextAreaOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaOnPreRender/CS/custom_htmltextarea_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlTextAreaOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaOnPreRender/VB/custom_htmltextarea_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlTextAreaOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaOnPreRender/CS/custom_htmltextarea_onprerender.cs#2)]
 [!code-vb[CustomHtmlTextAreaOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaOnPreRender/VB/custom_htmltextarea_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender(System.EventArgs)" /> metody w klasie pochodnej, pamiętaj wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender(System.EventArgs)" /> metody, aby <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formant został zarejestrowany poprawnie ze stroną.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerChange(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" /> zdarzenie <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu. Dzięki temu można posługiwać się niestandardowego programu obsługi dla zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> Zdarzenie jest zgłaszane, gdy zawartość <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontroli zmian między ogłoszenia na serwerze.  
  
> [!NOTE]
>  To zdarzenie jest wywoływane tylko wtedy, gdy użytkownik inicjuje post do serwera, takich jak klikając `submit` przycisku. To zdarzenie nie powoduje post na serwerze występuje.  
  
> [!NOTE]
>  Kontrolka musi mieć stan widoku jest włączony dla <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> zdarzenie, aby działać poprawnie.  
  
 To zdarzenie jest najczęściej używany do sprawdzania poprawności danych na <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontroli, gdy użytkownik aktualizuje tekst w formancie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i utworzyć niestandardowy program obsługi zdarzeń dla <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> zdarzeń. Zostanie wyświetlony komunikat, gdy wartość wprowadzona w <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontroli dłuższa niż 20 znaków.  
  
 [!code-aspx-csharp[HtmlTextAreaServerChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaServerChanged/CS/htmltextareaserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaServerChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaServerChanged/VB/htmltextareaserverchangevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlTextAreaServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaServerChange/CS/htmltextareaserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaServerChange/VB/htmltextareaserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywołania <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" /> metody w celu zasygnalizowania <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formant, który zmienił się stan formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.RaisePostDataChangedEvent%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Odbierająca renderowanej zawartości.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> atrybuty formantu do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes%2A> Metoda renderuje `name` atrybutu <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontroli bezpośrednio do upewnij się, że ma taką samą wartość jak <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> właściwości. Po wyrenderowaniu atrybut <xref:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes%2A> wywołania metod klasy podstawowej <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes%2A> metody.  
  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes%2A> Metoda jest używana głównie przez deweloperów kontroli rozszerza funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes%2A> metoda niestandardowego serwera kontroli tak, aby tekst konkretny tytuł jest zawsze wyświetlany dla <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
 [!code-aspx-csharp[CustomHtmlTextAreaRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaRenderAttributes/cs/custom_htmltextarea_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlTextAreaRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaRenderAttributes/vb/custom_htmltextarea_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlTextAreaRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaRenderAttributes/cs/custom_htmltextarea_renderattributes.cs#2)]
 [!code-vb[CustomHtmlTextAreaRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaRenderAttributes/vb/custom_htmltextarea_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Name" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="T:System.Web.UI.AttributeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public int Rows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Property Rows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rows { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wysokość (w znakach) <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu.</summary>
        <value>Wysokość (w znakach) <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu. Wartość domyślna to <see langword="-1" />, co oznacza, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> właściwości do określania wysokość (w znakach) <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu. Jeśli zostanie wprowadzony tekst, który zajmuje więcej wierszy niż wysokość określone, paski przewijania są włączone.  
  
 Aby określić szerokość formantu, należy ustawić <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> właściwość, aby kontrolować jego wysokość <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
 [!code-aspx-csharp[HtmlTextAreaRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaRows/CS/htmltextarearowscs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaRows/VB/htmltextarearowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zawartość <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> kontroli zmian między ogłoszenia na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> Zdarzenie jest zgłaszane, gdy zawartość <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontroli zmian między ogłoszenia na serwerze. To zdarzenie jest najczęściej używany do sprawdzania poprawności danych w polu tekstowym.  
  
> [!NOTE]
>  To zdarzenie jest wywoływane tylko wtedy, gdy użytkownik inicjuje post do serwera, takie jak kliknięcie `submit` przycisku. To zdarzenie nie powoduje post na serwerze występuje.  
  
> [!NOTE]
>  Kontrolka musi mieć stan widoku jest włączony dla <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> zdarzenie, aby działać poprawnie.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić i utworzyć niestandardowy program obsługi zdarzeń dla <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> zdarzeń. Zostanie wyświetlony komunikat, gdy wartość wprowadzona w <xref:System.Web.UI.HtmlControls.HtmlTextArea> kontroli przekracza 10 znaków.  
  
 [!code-aspx-csharp[HtmlTextAreaServerChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaServerChanged/CS/htmltextareaserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaServerChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaServerChanged/VB/htmltextareaserverchangevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlTextAreaServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaServerChange/CS/htmltextareaserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaServerChange/VB/htmltextareaserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla formantu.</param>
        <param name="postCollection">Kolekcja wszystkich przychodzących wartości nazwy.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> stan formantu został zmieniony w wyniku ogłaszania zwrotnego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.HtmlControls.HtmlTextArea> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackDataHandler> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.HtmlControls.HtmlTextArea> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackDataHandler> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTextArea.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wprowadzony w <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu.</summary>
        <value>Tekst wprowadzony w <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> formantu. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> właściwości na potrzeby programistycznego sterowania tekst wprowadzony w <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu. Ta właściwość jest najczęściej używany do pobierania tekstu wprowadzonego w polu tekstowym, ale również umożliwia określenie tekstu do wyświetlenia w formancie. Jest to przydatne, jeśli chcesz podać wartość domyślną, lub wyświetli komunikat w <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu.  
  
> [!CAUTION]
>  Ten formant może służyć do wyświetlania danych wejściowych użytkownika, która może obejmować skryptu złośliwego klienta. Sprawdź wszystkie informacje, które są wysyłane z klienta do pliku wykonywalnego skrypt, instrukcji SQL lub inny kod przed wyświetleniem go w aplikacji. Program ASP.NET udostępnia funkcję sprawdzania poprawności żądanie wejściowe do bloku skryptu, jak i HTML w danych wejściowych użytkownika. Formanty serwera weryfikacji podawane są również do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [sprawdzania poprawności serwera kontroli składni](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> właściwości w celu określenia zawartość <xref:System.Web.UI.HtmlControls.HtmlTextArea> formantu. Zawartość są następnie wyświetlane na stronie sieci Web.  
  
 [!code-aspx-csharp[HtmlTextArea2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextArea2/CS/htmltextareacs.aspx#1)]
 [!code-aspx-vb[HtmlTextArea2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextArea2/VB/htmltextareavb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Value" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>