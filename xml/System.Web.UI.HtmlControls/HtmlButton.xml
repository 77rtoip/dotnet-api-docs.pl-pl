<Type Name="HtmlButton" FullName="System.Web.UI.HtmlControls.HtmlButton">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef0502255b621135673d50017126473d753ca6e7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69131540" /></Metadata><TypeSignature Language="C#" Value="public class HtmlButton : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlButton extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlButton" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlButton&#xA;Inherits HtmlContainerControl&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlButton : System::Web::UI::HtmlControls::HtmlContainerControl, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type HtmlButton = class&#xA;    inherit HtmlContainerControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia programistyczny dostęp do znacznika <see langword="&lt;button&gt;" /> HTML na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<button>` Element umożliwia deweloperom sieci Web Tworzenie przycisków formularza interfejsu użytkownika, które mogą składać się z osadzonych elementów HTML, w tym innych kontrolek serwera.  
  
> [!NOTE]
>  `<button>` Element jest zdefiniowany w specyfikacji HTML 4,0 i jest obsługiwany tylko w programie Microsoft Internet Explorer w wersji 4,0 lub nowszej. Aby utworzyć przyciski formularzy interfejsu użytkownika do użycia w innych przeglądarkach, należy <xref:System.Web.UI.HtmlControls.HtmlInputImage> rozważyć użycie klasy.  
  
 Aby wykonać zestaw niestandardowych instrukcji po <xref:System.Web.UI.HtmlControls.HtmlButton> kliknięciu kontrolki, podaj niestandardowy program obsługi zdarzeń <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> dla zdarzenia.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlButton> Kontrolka renderuje ECMAScript do przeglądarki klienta. Aby ta kontrolka działała prawidłowo, przeglądarka klienta musi mieć włączoną obsługę języka ECMAScript. Aby uzyskać więcej informacji na temat skryptu klienta, zobacz [skrypt klienta na stronach sieci Web ASP.NET](https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
 Aby uzyskać listę początkowych wartości właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlButton.%23ctor%2A> Zobacz Konstruktor.  
  
> [!CAUTION]
>  Ta kontrolka może służyć do wyświetlania danych wejściowych użytkownika, co może obejmować złośliwy skrypt klienta. Sprawdź wszystkie informacje wysyłane z klienta pod kątem skryptu wykonywalnego, instrukcji SQL lub innego kodu przed wyświetleniem go w aplikacji. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Kontrolki serwera weryfikacji są również udostępniane do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [składnia kontroli serwera walidacji](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> zdarzenia w celu wyświetlenia nazwy wprowadzonej w polu tekstowym.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
    <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Skrypt klienta na stronach sieci Web ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Web.UI.HtmlControls.HtmlButton> kontrolki.  
  
 W poniższej tabeli przedstawiono początkową wartość właściwości dla wystąpienia <xref:System.Web.UI.HtmlControls.HtmlButton>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Ciąg literału "Button".|  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dynamicznego dodawania <xref:System.Web.UI.HtmlControls.HtmlButton> kontrolki do strony formularzy sieci Web.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy Walidacja jest wykonywana po <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> kliknięciu kontrolki.</summary>
        <value><see langword="true" />Jeśli walidacja jest wykonywana po <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> kliknięciu kontrolki; w przeciwnym <see langword="false" />razie,. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie Walidacja strony jest wykonywana po <xref:System.Web.UI.HtmlControls.HtmlButton> kliknięciu kontrolki. Walidacja strony określa, czy kontrolki wejściowe skojarzone z kontrolką walidacji na stronie wszystkie przekazują reguły walidacji określone przez kontrolkę walidacji.  
  
 Możesz określić lub określić, czy Walidacja jest wykonywana zarówno na kliencie, jak i na serwerze <xref:System.Web.UI.HtmlControls.HtmlButton> po kliknięciu kontrolki przy <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> użyciu właściwości. Aby zapobiec wykonywaniu walidacji, należy ustawić <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> właściwość na `false`.  
  
 Ta właściwość jest często używana w programie obsługi zdarzeń dla <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> zdarzenia, aby zapobiec występowaniu walidacji strony po kliknięciu przycisku anulowania lub resetowania.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć właściwości, <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> aby zapobiec występowaniu walidacji strony. Należy pamiętać, <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> że metoda aktywuje poszczególne kontrolki weryfikacji niezależnie.  
  
 [!code-aspx-csharp[HtmlButtonCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonCausesValidation/CS/htmlbuttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonCausesValidation/VB/htmlbuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlButton.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> Podnosi zdarzenie i rejestruje skrypt klienta na potrzeby generowania ogłaszania zwrotnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlButton> formantu. <xref:System.Web.UI.HtmlControls.HtmlButton.OnPreRender%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zastąpić <xref:System.Web.UI.HtmlControls.HtmlButton.OnPreRender%2A> metodę w niestandardowej kontrolce serwera, tak aby zawsze <xref:System.Web.UI.HtmlControls.HtmlButton> wyświetlała pogrubiony tekst.  
  
 [!code-aspx-csharp[CustomHtmlButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/CS/custom_htmlbutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/VB/custom_htmlbutton_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/CS/custom_htmlbutton_onprerender.cs#2)]
 [!code-vb[CustomHtmlButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/VB/custom_htmlbutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerClick : EventArgs -&gt; unit&#xA;override this.OnServerClick : EventArgs -&gt; unit" Usage="htmlButton.OnServerClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.EventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" /> Podnosi zdarzenie. Pozwala to zapewnić niestandardową obsługę zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, <xref:System.Web.UI.HtmlControls.HtmlButton> gdy zostanie kliknięty formant. <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> To zdarzenie powoduje, że po stronie klienta z serwerem i z powrotem zostanie przeprowadzona runda. Jest to celowe różnienie od zdarzenia po stronie `OnClick` klienta. Jeśli istnieje konflikt między uruchomieniem <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> kodu a zdarzeniem i kodem wykonywanym przez zdarzenie po `OnClick` stronie klienta, instrukcje zdarzeń po stronie serwera zastępują kod po stronie klienta.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.HtmlControls.HtmlButton.OnServerClick%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak deklaratywnie określić i kodowyć procedurę obsługi zdarzeń dla <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> zdarzenia. <xref:System.Web.UI.HtmlControls.HtmlButton> Gdy formant zostanie kliknięty, zostanie wyświetlona wartość wprowadzona w polu tekstowym.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób programistycznego określania i kodowania programu obsługi zdarzeń dla <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> zdarzenia.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="htmlButton.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argument zdarzenia.</param>
        <summary>Wywołuje zdarzenia dla kontrolki, <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> gdy zapisuje je na serwerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana <xref:System.Web.UI.HtmlControls.HtmlButton> przez formant, gdy zostanie <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> kliknięty, aby zgłosić zdarzenie. <xref:System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent%2A>  
  
 Jeśli właściwość jest `true` <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> , <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> Metoda jest wywoływana przy użyciu grupy formantów określonych we właściwości. <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A>  
  
 Ta metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlButton> formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlButton.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawiera strumień wyjściowy do renderowania na kliencie.</param>
        <summary>Renderuje atrybuty <see cref="T:System.Web.UI.HtmlTextWriter" /> <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> kontrolki do określonego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zapisuje atrybut renderowanej <xref:System.Web.UI.HtmlControls.HtmlButton> kontrolki, a następnie wywołuje metodę bazową <xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A?displayProperty=nameWithType>. <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A> `onclick`  
  
 Metoda jest używana głównie przez deweloperów, którzy rozszerzają funkcjonalność <xref:System.Web.UI.HtmlControls.HtmlButton> formantu. <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A> jak zastąpić metodę w niestandardowym formancie serwera, aby tytuł był zawsze wyświetlany <xref:System.Web.UI.HtmlControls.HtmlButton> dla kontrolki.  
  
 [!code-aspx-csharp[CustomHtmlButtonRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/CS/custom_htmlbutton_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlButtonRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/VB/custom_htmlbutton_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlButtonRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/CS/custom_htmlbutton_renderattributes.cs#2)]
 [!code-vb[CustomHtmlButtonRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/VB/custom_htmlbutton_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event EventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerClick;" />
      <MemberSignature Language="F#" Value="member this.ServerClick : EventHandler " Usage="member this.ServerClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> formant na stronie sieci Web klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane, <xref:System.Web.UI.HtmlControls.HtmlButton> gdy zostanie kliknięty formant. <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> To zdarzenie serwera powoduje, że w wyniku komunikacji z klientem z serwerem i z powrotem występuje runda. Jest to celowe różnienie od zdarzenia po stronie `OnClick` klienta. Jeśli istnieje konflikt między uruchomieniem <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> kodu a zdarzeniem i kodem wykonywanym przez zdarzenie po `OnClick` stronie klienta, instrukcje zdarzeń po stronie serwera zastępują kod po stronie klienta.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak deklaratywnie określić i kodowyć procedurę obsługi zdarzeń dla <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> zdarzenia. <xref:System.Web.UI.HtmlControls.HtmlButton> Gdy formant zostanie kliknięty, zostanie wyświetlona wartość wprowadzona w polu tekstowym.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób programistycznego określania i kodowania programu obsługi zdarzeń dla <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> zdarzenia.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argumenty zdarzeń.</param>
        <summary>Wywołuje zdarzenia dla kontrolki, <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> gdy zapisuje je na serwerze.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlButton.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia grupę kontrolek, dla których przyczyną <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> jest Walidacja, gdy jest ona przesyłana z powrotem na serwer.</summary>
        <value>Grupa kontrolek, dla których <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> formant powoduje sprawdzenie poprawności po odesłaniu na serwer. Wartość domyślna to ciąg pusty ("") wskazujący, że ta właściwość nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy sprawdzania poprawności umożliwiają przypisanie kontrolek walidacji na stronie do określonej kategorii. Każdą grupę sprawdzania poprawności można sprawdzić niezależnie od innych grup sprawdzania poprawności na stronie. Użyj właściwości <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> , aby określić nazwę grupy walidacji, dla <xref:System.Web.UI.HtmlControls.HtmlButton> której formant powoduje sprawdzenie poprawności po zaksięgowaniu z powrotem na serwerze.  
  
 Ta właściwość ma efekt tylko wtedy, gdy wartość <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> właściwości jest ustawiona na. `true` Po określeniu wartości dla <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> właściwości, tylko kontrolki walidacji, które są częścią określonej grupy są weryfikowane <xref:System.Web.UI.HtmlControls.HtmlButton> po ponownym zaksięgowaniu na serwerze. Jeśli nie określisz wartości dla tej właściwości, a <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> właściwość jest ustawiona na `true`, wszystkie kontrolki walidacji na stronie, które nie są przypisane do grupy walidacji, zostaną zweryfikowane, gdy sterowanie zostanie odesłane na serwer.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> właściwości, aby określić kontrolki do zweryfikowania, <xref:System.Web.UI.HtmlControls.HtmlButton> gdy kontrolka przechodzi z powrotem na serwer. Strona zawiera dwa pola tekstowe służące do przechwytywania danych od użytkownika i dwóch <xref:System.Web.UI.WebControls.RequiredFieldValidator> kontrolek, aby upewnić się, że użytkownik nie pozostawia pustego pola tekstowego. Kontrolka pierwszego pola tekstowego znajduje się `CityInfoGroup` w grupie walidacji, a <xref:System.Web.UI.WebControls.RequiredFieldValidator> `StateInfoGroup` kontrolka dla drugiego pola znajduje się w grupie walidacji. <xref:System.Web.UI.WebControls.RequiredFieldValidator> `CityInfoGroup` Po kliknięciu `CityQueryButton` zostanie sprawdzony tylko formant w grupie walidacji. `StateInfoGroup` Po kliknięciu `StateQueryButton` zostanie sprawdzony tylko formant w grupie walidacji.  
  
 [!code-aspx-csharp[HtmlButtonValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonValidationGroup/CS/htmlbuttonvalidationgroupcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonValidationGroup/VB/htmlbuttonvalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85)">Wprowadzenie do kontrolek weryfikacji</related>
      </Docs>
    </Member>
  </Members>
</Type>
