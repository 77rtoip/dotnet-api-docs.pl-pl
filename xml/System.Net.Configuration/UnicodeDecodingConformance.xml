<Type Name="UnicodeDecodingConformance" FullName="System.Net.Configuration.UnicodeDecodingConformance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d361d728d1aceceb42f10d9bee2260eb7967e45f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69115096" /></Metadata><TypeSignature Language="C#" Value="public enum UnicodeDecodingConformance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnicodeDecodingConformance extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.UnicodeDecodingConformance" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnicodeDecodingConformance" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnicodeDecodingConformance" />
  <TypeSignature Language="F#" Value="type UnicodeDecodingConformance = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Kontroluje sposób interpretowania znaków Unicode przez <see cref="Overload:System.Net.WebUtility.HtmlDecode" /> metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat sposobu kodowania znaków Unicode w kodzie HTML, zobacz [Używanie znaków ucieczki w znacznikach i CSS](https://go.microsoft.com/fwlink/?LinkId=256607).  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Net.WebUtility.HtmlDecode" />
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Użyj zachowania automatycznego. Zachowanie dekodowania jest określane przez platformę docelową bieżącej aplikacji. W [!INCLUDE[net_v45](~/includes/net-v45-md.md)] przypadku i nowszych dekodowanie kodowania Unicode jest rygorystyczne.</summary>
      </Docs>
    </Member>
    <Member MemberName="Compat">
      <MemberSignature Language="C#" Value="Compat" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Compat = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberSignature Language="VB.NET" Value="Compat" />
      <MemberSignature Language="C++ CLI" Value="Compat" />
      <MemberSignature Language="F#" Value="Compat = 2" Usage="System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Używaj zgodnego zachowania. Określa, że dane przychodzące nie są sprawdzane pod kątem poprawności przed dekodowaniem. Na przykład ciąg wejściowy "&amp;amp; #xD84C;" mógłby zdekodować jako element U + D84C, który jest niesparowanym surogatem. Ponadto dekoder nie rozpoznaje punktów kodu w SMP, chyba że są one reprezentowane jako surogaty kodowane w formacie HTML, więc InputString "&amp;#144308;" spowoduje powstanie ciągu wyjściowego "&amp;#144308;".</summary>
      </Docs>
    </Member>
    <Member MemberName="Loose">
      <MemberSignature Language="C#" Value="Loose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Loose = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberSignature Language="VB.NET" Value="Loose" />
      <MemberSignature Language="C++ CLI" Value="Loose" />
      <MemberSignature Language="F#" Value="Loose = 3" Usage="System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Używaj swobodnego zachowania. Podobnie jak <see cref="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" /> w przypadku braku sprawdzania poprawności, ale dekoder również rozumie punkty kodów. Ciąg wejściowy "&amp;#144308;" może być zdekodowany do znaku U + 233B4 prawidłowo. Ten przełącznik jest przeznaczony do zapewnienia maksymalnego współdziałania, gdy dekoder nie wie, który format używany przez dostawcę do generowania zakodowanego ciągu.</summary>
      </Docs>
    </Member>
    <Member MemberName="Strict">
      <MemberSignature Language="C#" Value="Strict" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Strict = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberSignature Language="VB.NET" Value="Strict" />
      <MemberSignature Language="C++ CLI" Value="Strict" />
      <MemberSignature Language="F#" Value="Strict = 1" Usage="System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Używaj rygorystycznych zachowań. Określa, że przychodzące dane zakodowane są sprawdzane pod kątem poprawności przed dekodowaniem. Na przykład ciąg wejściowy "&amp;#144308;" będzie zdekodować jako U + 233B4, ale wejściowy ciąg "&amp;#xD84C;&amp; nie można prawidłowo zdekodować #xDFB4; ". Dane, które zostały już zdekodowane w ciągu, nie są sprawdzane pod kątem poprawności. Na przykład ciąg wejściowy "\ud800" spowoduje, że wynikowy ciąg znaków "\ud800" jest pomijany, ponieważ znak zastępczy, który jest już zdekodowany w trakcie dekodowania, nawet wtedy, gdy jest on niesparowany.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
