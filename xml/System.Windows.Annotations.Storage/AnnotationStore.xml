<Type Name="AnnotationStore" FullName="System.Windows.Annotations.Storage.AnnotationStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60e43834c78a7d1d89f24fbf8a901393a5c253c0" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46635456" /></Metadata><TypeSignature Language="C#" Value="public abstract class AnnotationStore : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnnotationStore extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AnnotationStore&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnnotationStore abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type AnnotationStore = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>W przypadku przesłonięcia w klasie pochodnej, reprezentuje magazyn danych na potrzeby zapisywania i odczytywania adnotacje użytkownika.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnnotationStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AnnotationStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public abstract void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAnnotation(class System.Windows.Annotations.Annotation newAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddAnnotation (newAnnotation As Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddAnnotation(System::Windows::Annotations::Annotation ^ newAnnotation);" />
      <MemberSignature Language="F#" Value="abstract member AddAnnotation : System.Windows.Annotations.Annotation -&gt; unit" Usage="annotationStore.AddAnnotation newAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAnnotation" Type="System.Windows.Annotations.Annotation" />
      </Parameters>
      <Docs>
        <param name="newAnnotation">Adnotacja do dodania do magazynu.</param>
        <summary>Dodaje nowy <see cref="T:System.Windows.Annotations.Annotation" /> do magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy nowy <xref:System.Windows.Annotations.Annotation> jest dodawane do magazynu swój unikatowy identyfikator globalny (GUID) <xref:System.Windows.Annotations.Annotation.Id%2A> właściwość jest ustawiona na nową wartość.  Gdy <xref:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation%2A> jest wywoływana, jego <xref:System.Windows.Annotations.Annotation.Id%2A> właściwość jest zaznaczona, aby sprawdzić, czy <xref:System.Windows.Annotations.Annotation> został już dodany do magazynu.  Jeśli <xref:System.Windows.Annotations.Annotation> już została dodana i istnieje w magazynie (zgodnie z ustaleniami jego <xref:System.Windows.Annotations.Annotation.Id%2A> właściwość) <xref:System.ArgumentException> , zostanie zgłoszony błąd.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newAnnotation" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Windows.Annotations.Annotation" /> o takiej samej <see cref="P:System.Windows.Annotations.Annotation.Id" /> wartość właściwości już istnieje w magazynie.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> Wywołano w sklepie.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="AnchorChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Annotations.AnnotationResourceChangedEventHandler AnchorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Annotations.AnnotationResourceChangedEventHandler AnchorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AnchorChanged As AnnotationResourceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Annotations::AnnotationResourceChangedEventHandler ^ AnchorChanged;" />
      <MemberSignature Language="F#" Value="member this.AnchorChanged : System.Windows.Annotations.AnnotationResourceChangedEventHandler " Usage="member this.AnchorChanged : System.Windows.Annotations.AnnotationResourceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.AnnotationResourceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy kotwicy na dowolnym <see cref="T:System.Windows.Annotations.Annotation" /> zmiany magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged> Zdarzeń może służyć do monitorowania zmian adnotacja <xref:System.Windows.Annotations.Annotation.Anchors%2A> zawarty w magazynie, bez konieczności rejestrowania się na każdym <xref:System.Windows.Annotations.Annotation> indywidualnie.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AuthorChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Annotations.AnnotationAuthorChangedEventHandler AuthorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Annotations.AnnotationAuthorChangedEventHandler AuthorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorChanged As AnnotationAuthorChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Annotations::AnnotationAuthorChangedEventHandler ^ AuthorChanged;" />
      <MemberSignature Language="F#" Value="member this.AuthorChanged : System.Windows.Annotations.AnnotationAuthorChangedEventHandler " Usage="member this.AuthorChanged : System.Windows.Annotations.AnnotationAuthorChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.AnnotationAuthorChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy autor na dowolnym <see cref="T:System.Windows.Annotations.Annotation" /> zmiany magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged> Zdarzeń może służyć do monitorowania zmian adnotacja <xref:System.Windows.Annotations.Annotation.Authors%2A> zawarty w magazynie, bez konieczności rejestrowania się na każdym <xref:System.Windows.Annotations.Annotation> indywidualnie.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public abstract bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Windows.Annotations.Storage.AnnotationStore.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dane w adnotacji buforów ma być natychmiast zapisywane do magazynu danych fizycznych.</summary>
        <value><see langword="true" /> Jeżeli dane w adnotacji buforów mają być zapisywane bezpośrednio w magazynie danych fizycznych dla każdej operacji; w przeciwnym razie <see langword="false" /> Jeśli dane w buforów adnotacji są zapisywane, gdy aplikacja jawnie wywołuje <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje, które używają modelu Zapisz jawne można ustawić <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> do `false` i wywołać <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> bezpośrednio po zidentyfikowaniu odpowiednich.  
  
 Można ustawić aplikacje, które używają modelu niejawne Zapisz <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> do `true` spowodować <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> zostaje wywołana automatycznie po każdej operacji magazynu (Dodawanie, usuwanie lub modyfikowanie).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />
      </Docs>
    </Member>
    <Member MemberName="CargoChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Annotations.AnnotationResourceChangedEventHandler CargoChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Annotations.AnnotationResourceChangedEventHandler CargoChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CargoChanged As AnnotationResourceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Annotations::AnnotationResourceChangedEventHandler ^ CargoChanged;" />
      <MemberSignature Language="F#" Value="member this.CargoChanged : System.Windows.Annotations.AnnotationResourceChangedEventHandler " Usage="member this.CargoChanged : System.Windows.Annotations.AnnotationResourceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.AnnotationResourceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ładunku na dowolnym <see cref="T:System.Windows.Annotations.Annotation" /> zmiany magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged> Zdarzeń może służyć do monitorowania zmian adnotacja <xref:System.Windows.Annotations.Annotation.Cargos%2A> zawarty w magazynie, bez konieczności rejestrowania się na każdym <xref:System.Windows.Annotations.Annotation> indywidualnie.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotation">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Annotations.Annotation DeleteAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Annotations::Annotation ^ DeleteAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="abstract member DeleteAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="annotationStore.DeleteAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">Identyfikator GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> właściwość adnotacji do usunięcia.</param>
        <summary>Usuwa adnotacji z określonym <see cref="P:System.Windows.Annotations.Annotation.Id" /> ze sklepu.</summary>
        <returns>Adnotacja, który został usunięty; w przeciwnym razie <see langword="null" /> Jeśli adnotacji z określonym <paramref name="annotationId" /> nie został znaleziony w magazynie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation%2A> i <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> metody.  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> Wywołano w sklepie.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez sklep.</summary>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.Finalize" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="annotationStore.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby zarządzane i niezarządzane używane przez sklep.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje powinny wywoływać <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> po zakończeniu pracy nad <xref:System.Windows.Annotations.Storage.AnnotationStore>.  Po wywołaniu <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> aplikacji można zwolnić wszystkie odwołania do <xref:System.Windows.Annotations.Storage.AnnotationStore> umożliwia moduł odśmiecania pamięci w celu odzyskania pamięci która <xref:System.Windows.Annotations.Storage.AnnotationStore> zajmowaną przez wystąpienie.  Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Publicznie <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> metoda wywołuje chronionej <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> `(Boolean)` metody z `disposing` parametru `true` aby zwolnić zarządzane i niezarządzane zasoby.  
  
> [!NOTE]
>  Wywołaj <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> przed ostatnie odwołanie do <xref:System.Windows.Annotations.Storage.AnnotationStore> wydaniu.  Jeśli <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> nie jest wywoływana, <xref:System.Windows.Annotations.Storage.AnnotationStore> zasobów nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje sklepu <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="annotationStore.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez sklep i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To jest chronione <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> metoda jest wywoływana przez publiczną <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> i <xref:System.Object.Finalize%2A> metody.  Publicznie <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> wywołuje chronioną metodę <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> `(Boolean)` metody z `disposing` parametr `true`.  <xref:System.Object.Finalize%2A> wywołuje <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> z `disposing` równa `false`.  
  
 Gdy `disposing` parametr jest `true`, <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> wersji, wszystkie zasoby utrzymywane przez dowolny zarządzane obiekty, które <xref:System.Windows.Annotations.Storage.AnnotationStore> odwołania.  <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> wywołuje również `Dispose()` metoda każdego obiektu, do którego istnieje odwołanie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" /> może być wywoływana wiele razy przez inne obiekty.  Podczas zastępowania <see langword="Dispose(Boolean)" /> Uważaj, aby nie odwołują się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />. Aby uzyskać więcej informacji o sposobie wdrażania <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />, zobacz [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Aby uzyskać więcej informacji na temat <see cref="M:System.IDisposable.Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnnotationStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnnotationStore ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="annotationStore.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gwarantuje, że <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" /> ostatecznie zostanie wywołana dla tego magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje base <xref:System.Object.Finalize%2A> metody.  Program aplikacji nie powinien wywoływać <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> bezpośrednio.  <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że wyłączona przez wywołanie <xref:System.GC.SuppressFinalize%2A> metody.  
  
 Aby uzyskać więcej informacji, zobacz [Finalize metody i destruktory](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="annotationStore.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wymusza żadnych danych adnotacji, przechowywane w bufory wewnętrzne są zapisywane w odpowiednie urządzenia magazynujące.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje, które używają modelu Zapisz jawne można ustawić <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> do `false` i wywołać <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> bezpośrednio po zidentyfikowaniu odpowiednich.  
  
 Można ustawić aplikacje, które używają modelu niejawne Zapisz <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> do `true` spowodować <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> zostaje wywołana automatycznie po każdej operacji magazynu (Dodawanie, usuwanie lub modyfikowanie).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> metoda po zamknięciu aplikacji <xref:System.Windows.Annotations.AnnotationService>.  
  
 [!code-csharp[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#stopannotations)]
 [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#stopannotations)]  
  
 W poniższym przykładzie pokazano użycie <xref:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation%2A> i <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> metody.  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> Wywołano w sklepie.</exception>
        <altmember cref="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Annotations.Annotation GetAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Annotations::Annotation ^ GetAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="annotationStore.GetAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">Identyfikator GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> właściwość adnotacji, które mają zostać zwrócone.</param>
        <summary>Zwraca wartość adnotacji z określonym <see cref="P:System.Windows.Annotations.Annotation.Id" /> ze sklepu.</summary>
        <returns>Adnotacja o danym <paramref name="annotationId" />; lub <see langword="null" />, jeśli adnotacji z określonym <paramref name="annotationId" /> nie został znaleziony w magazynie.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> Wywołano w sklepie.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAnnotations">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca listę adnotacje zawarty w magazynie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations%2A> metodę pozwala ustalić, czy wszystkie adnotacje zawarty w magazynie.  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAnnotations () As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations();" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotations : unit -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="annotationStore.GetAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca listę wszystkich adnotacji w magazynie.</summary>
        <returns>Lista wszystkich adnotacji aktualnie znajdujących się w magazynie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations%2A> metodę pozwala ustalić, czy wszystkie adnotacje zawarty w magazynie.  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> Wywołano w sklepie.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations(class System.Windows.Annotations.ContentLocator anchorLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAnnotations (anchorLocator As ContentLocator) As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations(System::Windows::Annotations::ContentLocator ^ anchorLocator);" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotations : System.Windows.Annotations.ContentLocator -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="annotationStore.GetAnnotations anchorLocator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchorLocator" Type="System.Windows.Annotations.ContentLocator" />
      </Parameters>
      <Docs>
        <param name="anchorLocator">Początkowy <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sekwencji do zwrócenia dopasowywania adnotacji dla.</param>
        <summary>Zwraca listę adnotacji, które mają <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> z lokalizatory, które zaczynają się od odpowiadającego <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sekwencji.</summary>
        <returns>Lista adnotacji, które mają <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> z lokalizatory, które uruchamiają i dopasować danego <paramref name="anchorLocator" />; w przeciwnym razie <see langword="null" /> Jeśli brak pasującego adnotacji nie znaleziono.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To <xref:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations%2A> używa wewnętrznie metody <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> metody <xref:System.Windows.Annotations.ContentLocator> klasy można wyszukiwać i dopasowania dla adnotacji do zwrócenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.AnnotationStore.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Annotations.Storage.AnnotationStore.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> została wywołana.</summary>
        <value><see langword="true" /> Jeśli <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> została wywołana; w przeciwnym razie <see langword="false" />.  Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnchorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAnchorChanged (System.Windows.Annotations.AnnotationResourceChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAnchorChanged(class System.Windows.Annotations.AnnotationResourceChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAnchorChanged (args As AnnotationResourceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAnchorChanged(System::Windows::Annotations::AnnotationResourceChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAnchorChanged : System.Windows.Annotations.AnnotationResourceChangedEventArgs -&gt; unit&#xA;override this.OnAnchorChanged : System.Windows.Annotations.AnnotationResourceChangedEventArgs -&gt; unit" Usage="annotationStore.OnAnchorChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Annotations.AnnotationResourceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane dotyczące zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAuthorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorChanged (System.Windows.Annotations.AnnotationAuthorChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorChanged(class System.Windows.Annotations.AnnotationAuthorChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorChanged (args As AnnotationAuthorChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorChanged(System::Windows::Annotations::AnnotationAuthorChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorChanged : System.Windows.Annotations.AnnotationAuthorChangedEventArgs -&gt; unit&#xA;override this.OnAuthorChanged : System.Windows.Annotations.AnnotationAuthorChangedEventArgs -&gt; unit" Usage="annotationStore.OnAuthorChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Annotations.AnnotationAuthorChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane dotyczące zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCargoChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCargoChanged (System.Windows.Annotations.AnnotationResourceChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCargoChanged(class System.Windows.Annotations.AnnotationResourceChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCargoChanged (args As AnnotationResourceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCargoChanged(System::Windows::Annotations::AnnotationResourceChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnCargoChanged : System.Windows.Annotations.AnnotationResourceChangedEventArgs -&gt; unit&#xA;override this.OnCargoChanged : System.Windows.Annotations.AnnotationResourceChangedEventArgs -&gt; unit" Usage="annotationStore.OnCargoChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Annotations.AnnotationResourceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane dotyczące zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStoreContentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStoreContentChanged(class System.Windows.Annotations.Storage.StoreContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStoreContentChanged (e As StoreContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStoreContentChanged(System::Windows::Annotations::Storage::StoreContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventArgs -&gt; unit&#xA;override this.OnStoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventArgs -&gt; unit" Usage="annotationStore.OnStoreContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Annotations.Storage.StoreContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="StoreContentChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Annotations.Storage.StoreContentChangedEventHandler StoreContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Annotations.Storage.StoreContentChangedEventHandler StoreContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StoreContentChanged As StoreContentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Annotations::Storage::StoreContentChangedEventHandler ^ StoreContentChanged;" />
      <MemberSignature Language="F#" Value="member this.StoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventHandler " Usage="member this.StoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Storage.StoreContentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Windows.Annotations.Annotation" /> jest dodane lub usunięte z magazynu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak dodać delegata zdarzenia <xref:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged> zdarzeń.  
  
 [!code-csharp[DocumentSerialize#DocSerEnableAnn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserenableann)]  
  
 W poniższym przykładzie pokazano operację <xref:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged> delegata zdarzenia.  
  
 [!code-csharp[DocumentSerialize#DocSerContentChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docsercontentchanged)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="protected object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.AnnotationStore.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Annotations.Storage.AnnotationStore.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt do użycia jako blokady synchronizacji do <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> sekcje krytyczne.</summary>
        <value>Obiekt do użycia jako blokady synchronizacji do <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> sekcje krytyczne.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/csharp/language-reference/keywords/lock-statement.md">Lock — słowo kluczowe</related>
      </Docs>
    </Member>
  </Members>
</Type>