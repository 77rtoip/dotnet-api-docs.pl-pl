<Type Name="XmlStreamStore" FullName="System.Windows.Annotations.Storage.XmlStreamStore">
  <TypeSignature Language="C#" Value="public sealed class XmlStreamStore : System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlStreamStore extends System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.Storage.XmlStreamStore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlStreamStore&#xA;Inherits AnnotationStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlStreamStore sealed : System::Windows::Annotations::Storage::AnnotationStore" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Annotations.Storage.AnnotationStore</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="72de8-101">Reprezentuje magazyn danych XML do zapisywania i odczytywania adnotacje użytkownika.</span><span class="sxs-lookup"><span data-stu-id="72de8-101">Represents an XML data store for writing and reading user annotations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72de8-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="72de8-102">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="72de8-103">Strumień we/wy odczytu i zapisu adnotacje użytkownika.</span><span class="sxs-lookup"><span data-stu-id="72de8-103">The I/O stream for reading and writing user annotations.</span></span></param>
        <summary><span data-ttu-id="72de8-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> klasy z określonym we/wy <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="72de8-104">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72de8-105">`stream` musi być w formacie XML nieprawidłowy format i wykonania [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] schematu.</span><span class="sxs-lookup"><span data-stu-id="72de8-105">`stream` must be in valid XML format and comply with the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] schema.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream, System.Collections.Generic.IDictionary&lt;Uri,System.Collections.Generic.IList&lt;Uri&gt;&gt; knownNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Collections.Generic.IDictionary`2&lt;class System.Uri, class System.Collections.Generic.IList`1&lt;class System.Uri&gt;&gt; knownNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream, System::Collections::Generic::IDictionary&lt;Uri ^, System::Collections::Generic::IList&lt;Uri ^&gt; ^&gt; ^ knownNamespaces);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="knownNamespaces" Type="System.Collections.Generic.IDictionary&lt;System.Uri,System.Collections.Generic.IList&lt;System.Uri&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="72de8-106">Strumień we/wy odczytu i zapisu adnotacje użytkownika.</span><span class="sxs-lookup"><span data-stu-id="72de8-106">The I/O stream for reading and writing user annotations.</span></span></param>
        <param name="knownNamespaces"><span data-ttu-id="72de8-107">Słownik zawierający listę znanych obszarów nazw zgodne.</span><span class="sxs-lookup"><span data-stu-id="72de8-107">A dictionary with a list of known compatible namespaces.</span></span></param>
        <summary><span data-ttu-id="72de8-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> klasy z określonym we/wy <see cref="T:System.IO.Stream" /> i słownika znanych obszarów nazw zgodne.</span><span class="sxs-lookup"><span data-stu-id="72de8-108">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" /> and dictionary of known compatible namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72de8-109">To <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> Konstruktor umożliwia rejestrowanie znanych obszarów nazw określonych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="72de8-109">This <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor enables the registration of application-specific known namespaces.</span></span>  
  
 <span data-ttu-id="72de8-110">`knownNamespace` Słownika definiuje przestrzenie nazw aplikacji, które są używane podczas niestandardowego zawartość jest przechowywana jako część adnotacji.</span><span class="sxs-lookup"><span data-stu-id="72de8-110">The `knownNamespace` dictionary defines application namespaces that are used when you store custom content as part of an annotation.</span></span>  <span data-ttu-id="72de8-111">Klucz słownika jest głównej przestrzeni nazw, wiadomo, program aplikacji.</span><span class="sxs-lookup"><span data-stu-id="72de8-111">The dictionary key is the primary namespace known to the application program.</span></span>  <span data-ttu-id="72de8-112">Klucz przestrzeni nazw jest skojarzony z listy wartości starsze przestrzenie nazw, które są zgodne z przestrzenią nazw "klucz".</span><span class="sxs-lookup"><span data-stu-id="72de8-112">The namespace key is associated with a value list of older namespaces that are compatible with the "key" namespace.</span></span>  <span data-ttu-id="72de8-113">Po załadowaniu wszystkie przestrzenie nazw adnotacje z tej listy zostaną zastąpione przestrzeni nazw "klucz".</span><span class="sxs-lookup"><span data-stu-id="72de8-113">When annotations are loaded all namespaces from this list will be replaced by the "key" namespace.</span></span>  
  
 <span data-ttu-id="72de8-114">`stream` musi być w formacie XML nieprawidłowy format i wykonania [schematu adnotacje](~/docs/framework/wpf/advanced/annotations-schema.md).</span><span class="sxs-lookup"><span data-stu-id="72de8-114">`stream` must be in valid XML format and comply with the [Annotations Schema](~/docs/framework/wpf/advanced/annotations-schema.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72de8-115"><paramref name="stream" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="72de8-115"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="72de8-116"><paramref name="stream" /> zawiera nieprawidłowy kod XML.</span><span class="sxs-lookup"><span data-stu-id="72de8-116"><paramref name="stream" /> contains invalid XML.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="72de8-117"><paramref name="knownNamespaces" /> Słownik zawiera zduplikowane przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="72de8-117">The <paramref name="knownNamespaces" /> dictionary contains a duplicate namespace.</span></span>  
  
 <span data-ttu-id="72de8-118">—lub—</span><span class="sxs-lookup"><span data-stu-id="72de8-118">-or-</span></span>  
  
 <span data-ttu-id="72de8-119"><paramref name="knownNamespaces" /> Słownik zawiera element, który ma <see langword="null" /> klucza.</span><span class="sxs-lookup"><span data-stu-id="72de8-119">The <paramref name="knownNamespaces" /> dictionary contains an element that has a <see langword="null" /> key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public override void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddAnnotation(class System.Windows.Annotations.Annotation newAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddAnnotation (newAnnotation As Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddAnnotation(System::Windows::Annotations::Annotation ^ newAnnotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAnnotation" Type="System.Windows.Annotations.Annotation" />
      </Parameters>
      <Docs>
        <param name="newAnnotation"><span data-ttu-id="72de8-120">Adnotacji, aby dodać do magazynu.</span><span class="sxs-lookup"><span data-stu-id="72de8-120">The annotation to add to the store.</span></span></param>
        <summary><span data-ttu-id="72de8-121">Dodaje nowy <see cref="T:System.Windows.Annotations.Annotation" /> w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-121">Adds a new <see cref="T:System.Windows.Annotations.Annotation" /> to the store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72de8-122">Gdy <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> jest nazywany <xref:System.Windows.Annotations.Annotation.Id%2A> z <xref:System.Windows.Annotations.Annotation> jest sprawdzenie, czy <xref:System.Windows.Annotations.Annotation> został już dodany do magazynu.</span><span class="sxs-lookup"><span data-stu-id="72de8-122">When <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> is called, the <xref:System.Windows.Annotations.Annotation.Id%2A> of the <xref:System.Windows.Annotations.Annotation> is checked to see whether the <xref:System.Windows.Annotations.Annotation> already has been added to the store.</span></span>  <span data-ttu-id="72de8-123">Jeśli <xref:System.Windows.Annotations.Annotation> już został dodany i znajduje się w magazynie <xref:System.ArgumentException> , jest zgłaszany błąd.</span><span class="sxs-lookup"><span data-stu-id="72de8-123">If the <xref:System.Windows.Annotations.Annotation> already has been added and is in the store an <xref:System.ArgumentException> error is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72de8-124"><paramref name="newAnnotation" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="72de8-124"><paramref name="newAnnotation" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="72de8-125"><see cref="T:System.Windows.Annotations.Annotation" /> o takim samym <see cref="P:System.Windows.Annotations.Annotation.Id" /> znajduje się już w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-125">An <see cref="T:System.Windows.Annotations.Annotation" /> with the same <see cref="P:System.Windows.Annotations.Annotation.Id" /> already is in the store.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72de8-126">We/Wy <see cref="T:System.IO.Stream" /> nie została ustawiona dla magazynu.</span><span class="sxs-lookup"><span data-stu-id="72de8-126">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="72de8-127"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> została wywołana w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-127"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public override bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72de8-128">Pobiera lub ustawia wartość wskazującą, czy dane w buforów adnotacji jest do zapisania bezpośrednio do magazynu danych fizycznych.</span><span class="sxs-lookup"><span data-stu-id="72de8-128">Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.</span></span></summary>
        <value>
          <span data-ttu-id="72de8-129"><see langword="true" /> Jeśli dane w buforów adnotacji jest do zapisania bezpośrednio do magazynu danych fizycznych dla każdej operacji; w przeciwnym razie <see langword="false" /> w przypadku danych w buforów adnotacji do zapisania, gdy aplikacja jawnie wywołuje <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />.</span><span class="sxs-lookup"><span data-stu-id="72de8-129"><see langword="true" /> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <see langword="false" /> if data in the annotation buffers is to be written when the application explicitly calls <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation DeleteAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ DeleteAnnotation(Guid annotationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId"><span data-ttu-id="72de8-130">Unikatowy identyfikator globalny (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> właściwości adnotacji do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="72de8-130">The globally unique identifier (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be deleted.</span></span></param>
        <summary><span data-ttu-id="72de8-131">Usuwa adnotacji z określonym <see cref="P:System.Windows.Annotations.Annotation.Id" /> ze sklepu.</span><span class="sxs-lookup"><span data-stu-id="72de8-131">Deletes the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</span></span></summary>
        <returns><span data-ttu-id="72de8-132">Adnotacja, która została usunięta; w przeciwnym razie <see langword="null" /> Jeśli adnotacji z określonym <paramref name="annotationId" /> nie został znaleziony w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-132">The annotation that was deleted; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72de8-133">W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> i <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="72de8-133">The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="72de8-134"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> została wywołana w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-134"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72de8-135">We/Wy <see cref="T:System.IO.Stream" /> nie została ustawiona dla magazynu.</span><span class="sxs-lookup"><span data-stu-id="72de8-135">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span></span></exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72de8-136">Wymusza adnotacji danych przechowywane w wewnętrznej buforów do zapisania do odpowiedniego urządzenia magazynującego.</span><span class="sxs-lookup"><span data-stu-id="72de8-136">Forces any annotation data retained in internal buffers to be written to the underlying storage device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72de8-137">Poniższy przykład przedstawia użycie <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> metody po zamknięciu aplikacji <xref:System.Windows.Annotations.AnnotationService>.</span><span class="sxs-lookup"><span data-stu-id="72de8-137">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> method when the application closes the <xref:System.Windows.Annotations.AnnotationService>.</span></span>  
  
 [!code-csharp[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#stopannotations)]
 [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#stopannotations)]  
  
 <span data-ttu-id="72de8-138">W poniższym przykładzie przedstawiono użycie <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> i <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="72de8-138">The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="72de8-139"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> została wywołana w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-139"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72de8-140">We/Wy <see cref="T:System.IO.Stream" /> nie została ustawiona dla magazynu.</span><span class="sxs-lookup"><span data-stu-id="72de8-140">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="72de8-141">We/Wy magazynu <see cref="T:System.IO.Stream" /> jest tylko do odczytu i nie można uzyskać dostępu do danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="72de8-141">The store I/O <see cref="T:System.IO.Stream" /> is read-only and cannot be accessed for output.</span></span></exception>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation GetAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ GetAnnotation(Guid annotationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId"><span data-ttu-id="72de8-142">Identyfikator GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> właściwości adnotacji do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="72de8-142">The GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be returned.</span></span></param>
        <summary><span data-ttu-id="72de8-143">Zwraca adnotacji z określonym <see cref="P:System.Windows.Annotations.Annotation.Id" /> ze sklepu.</span><span class="sxs-lookup"><span data-stu-id="72de8-143">Returns the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</span></span></summary>
        <returns><span data-ttu-id="72de8-144">Adnotacja o danej <paramref name="annotationId" />; w przeciwnym razie <see langword="null" /> Jeśli adnotacji z określonym <paramref name="annotationId" /> nie został znaleziony w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-144">The annotation with the given <paramref name="annotationId" />; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="72de8-145"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> została wywołana w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-145"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAnnotations">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72de8-146">Zwraca listę wszystkich adnotacji w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-146">Returns a list of all the annotations in the store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72de8-147">Poniższy przykład przedstawia użycie <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> metodę, aby ustalić, czy są zawarte w magazynie adnotacji.</span><span class="sxs-lookup"><span data-stu-id="72de8-147">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations contained in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations () As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72de8-148">Zwraca listę wszystkich adnotacji w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-148">Returns a list of all the annotations in the store.</span></span></summary>
        <returns><span data-ttu-id="72de8-149">Lista wszystkich adnotacji, które aktualnie znajdują się w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-149">The list of all annotations that are currently in the store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72de8-150"><xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> Nigdy nie zwróci metoda `null`; jednak listy może być pusta, jeśli magazyn zawiera bez adnotacji.</span><span class="sxs-lookup"><span data-stu-id="72de8-150">The <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method will never return `null`; however the list may be empty if the store contains no annotations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72de8-151">Poniższy przykład przedstawia użycie <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> metodę, aby ustalić, czy wszystkie adnotacje w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-151">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="72de8-152"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> została wywołana w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-152"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span></span></exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations(class System.Windows.Annotations.ContentLocator anchorLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations (anchorLocator As ContentLocator) As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations(System::Windows::Annotations::ContentLocator ^ anchorLocator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchorLocator" Type="System.Windows.Annotations.ContentLocator" />
      </Parameters>
      <Docs>
        <param name="anchorLocator"><span data-ttu-id="72de8-153">Początkowe <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sekwencji do zwrócenia adnotacje pasującego do.</span><span class="sxs-lookup"><span data-stu-id="72de8-153">The starting <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence to return matching annotations for.</span></span></param>
        <summary><span data-ttu-id="72de8-154">Zwraca listę adnotacje, które mają <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> z lokalizatory, które zaczynają się od odpowiadającego mu <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sekwencji.</span><span class="sxs-lookup"><span data-stu-id="72de8-154">Returns a list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that begin with a matching <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence.</span></span></summary>
        <returns><span data-ttu-id="72de8-155">Lista adnotacje, które mają <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> z lokalizatorów uruchamianych i odpowiada danej <paramref name="anchorLocator" />; w przeciwnym razie <see langword="null" /> Jeżeli nie znaleziono żadnych zgodnych adnotacje.</span><span class="sxs-lookup"><span data-stu-id="72de8-155">The list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that start and match the given <paramref name="anchorLocator" />; otherwise, <see langword="null" /> if no matching annotations were found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72de8-156">To <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> wewnętrznie używa metody <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> metody <xref:System.Windows.Annotations.ContentLocator> klasy można wyszukiwać i odpowiada adnotacje do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="72de8-156">This <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72de8-157">Poniższy przykład przedstawia użycie <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> metodę, aby ustalić, czy wszystkie adnotacje w magazynie.</span><span class="sxs-lookup"><span data-stu-id="72de8-157">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetWellKnownCompatibleNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; GetWellKnownCompatibleNamespaces (Uri name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Uri&gt; GetWellKnownCompatibleNamespaces(class System.Uri name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWellKnownCompatibleNamespaces (name As Uri) As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Uri ^&gt; ^ GetWellKnownCompatibleNamespaces(Uri ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="72de8-158">Początkowy identyfikator URI sekwencji do zwrócenia na liście przestrzeni nazw dla.</span><span class="sxs-lookup"><span data-stu-id="72de8-158">The starting URI sequence to return the list of namespaces for.</span></span></param>
        <summary><span data-ttu-id="72de8-159">Zwraca listę przestrzenie nazw, które są zgodne jako wejściowych przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="72de8-159">Returns a list of namespaces that are compatible as an input namespace.</span></span></summary>
        <returns><span data-ttu-id="72de8-160">Lista zgodne przestrzenie nazw, które odpowiada <paramref name="name" />; w przeciwnym razie <see langword="null" /> Jeśli nie istnieją nie znaleziono zgodny przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="72de8-160">A list of compatible namespaces that match <paramref name="name" />; otherwise, <see langword="null" /> if there are no compatible namespaces found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72de8-161">`name` Parametr działa tylko dla wstępnie zdefiniowane [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="72de8-161">The `name` parameter works only for predefined [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] namespaces.</span></span>  <span data-ttu-id="72de8-162">Dla innych nazw określoną w `name` parametru <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> zwróci `null`, nawet te obszary nazw rejestrowane za pomocą `knownNamespaces` parametr <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="72de8-162">For any other namespace given in the `name` parameter <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> will return `null`, even those namespaces registered through the `knownNamespaces` parameter of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="72de8-163">Przestrzenie nazw wstępnie zdefiniowane przez [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] są następujące:</span><span class="sxs-lookup"><span data-stu-id="72de8-163">The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] include the following:</span></span>  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/core  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/base  
  
-   http://schemas.microsoft.com/winfx/2006/xaml/presentation  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      </Docs>
    </Member>
    <Member MemberName="IgnoredNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Uri&gt; IgnoredNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Uri&gt; IgnoredNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoredNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Uri ^&gt; ^ IgnoredNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72de8-164">Pobiera listę przestrzeni nazw, które zostały zignorowane, kiedy strumień XML został załadowany.</span><span class="sxs-lookup"><span data-stu-id="72de8-164">Gets a list of the namespaces that were ignored when the XML stream was loaded.</span></span></summary>
        <value><span data-ttu-id="72de8-165">Lista przestrzeni nazw, które zostały zignorowane, kiedy strumień XML został załadowany.</span><span class="sxs-lookup"><span data-stu-id="72de8-165">The list of the namespaces that were ignored when the XML stream was loaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72de8-166"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> Nigdy nie zwróci właściwości `null`, jednak zwracana lista może być pusta, jeśli nie przestrzeni nazw są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="72de8-166">The <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> property will never return `null`, however the returned list can be empty if no namespaces are ignored.</span></span>  
  
 <span data-ttu-id="72de8-167"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> pomaga w zgodności znaczników XML, gdy program odczytuje adnotacji zawartości utworzone przez różne wersje [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="72de8-167"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> helps in XML markup compatibility when the program reads annotation content created by different versions of the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span></span>  <span data-ttu-id="72de8-168">Gdy starszych aplikacji znajduje się zawartość adnotacji utworzona przy użyciu nowszej wersji [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)], <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> zwraca listę obszarów nazw XML dla elementów i atrybutów nieznany framework starszej.</span><span class="sxs-lookup"><span data-stu-id="72de8-168">When an older application is given annotation content created using a newer version of the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)], <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> returns a list of the XML namespaces for elements and attributes not known to the older framework.</span></span>  <span data-ttu-id="72de8-169">Nieznany elementów XML oraz atrybuty skojarzone z nowszej przestrzenie nazw są ignorowane, gdy zawartość adnotacji jest do odczytu i deserializacji przez starszych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="72de8-169">Unknown XML elements and attributes associated with newer namespaces are ignored when the annotation content is read and deserialized by the older application.</span></span>  <span data-ttu-id="72de8-170">Aby uzyskać więcej informacji, zobacz *specyfikacji zgodności znaczników XML* dostępne pod adresem [ http://go.microsoft.com/fwlink/?LinkId=73824 ](http://go.microsoft.com/fwlink/?LinkId=73824).</span><span class="sxs-lookup"><span data-stu-id="72de8-170">For more information see the *XML Markup Compatibility Specification* available at [http://go.microsoft.com/fwlink/?LinkId=73824](http://go.microsoft.com/fwlink/?LinkId=73824).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="OnStoreContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStoreContentChanged(class System.Windows.Annotations.Storage.StoreContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStoreContentChanged (e As StoreContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStoreContentChanged(System::Windows::Annotations::Storage::StoreContentChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Annotations.Storage.StoreContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WellKnownNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; WellKnownNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;class System.Uri&gt; WellKnownNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WellKnownNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IList&lt;Uri ^&gt; ^ WellKnownNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72de8-171">Pobiera listę wszystkich obszarów nazw, które są wstępnie zdefiniowane przez [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="72de8-171">Gets a list of all namespaces that are predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)].</span></span></summary>
        <value><span data-ttu-id="72de8-172">Lista obszarów nazw, które są wstępnie zdefiniowane przez [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="72de8-172">The list of namespaces that are predefined by the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72de8-173">Przestrzenie nazw wstępnie zdefiniowane przez [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] są następujące:</span><span class="sxs-lookup"><span data-stu-id="72de8-173">The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] include the following:</span></span>  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/core  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/base  
  
-   http://schemas.microsoft.com/winfx/2006/xaml/presentation  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>