<Type Name="DynamicQueryStringParameter" FullName="System.Web.DynamicData.DynamicQueryStringParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57e44106d7058a88b0956dcda29846cda55499e4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39989254" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicQueryStringParameter : System.Web.UI.WebControls.Parameter, System.Web.DynamicData.IWhereParametersProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicQueryStringParameter extends System.Web.UI.WebControls.Parameter implements class System.Web.DynamicData.IWhereParametersProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicQueryStringParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicQueryStringParameter&#xA;Inherits Parameter&#xA;Implements IWhereParametersProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicQueryStringParameter : System::Web::UI::WebControls::Parameter, System::Web::DynamicData::IWhereParametersProvider" />
  <TypeSignature Language="F#" Value="type DynamicQueryStringParameter = class&#xA;    inherit Parameter&#xA;    interface IWhereParametersProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IWhereParametersProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Automatycznie generuje kolekcję parametrów, który jest używany do tworzenia <see langword="Where" /> klauzuli do kontroli źródła danych, poprzez pobranie wartości ciągu zapytania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicQueryStringParameter> Klasa jest używana przez strony, które korzystają z funkcji ASP.NET Dynamic Data. <xref:System.Web.DynamicData.DynamicQueryStringParameter> Klasy wygeneruje zbiór <xref:System.Web.UI.WebControls.Parameter> obiektów kluczy podstawowych, kluczy obcych i logiczna kolumn w tabeli poprzez pobranie wartości ciągu zapytania.  
  
 Kluczy podstawowych, możesz po prostu dodać <xref:System.Web.DynamicData.DynamicQueryStringParameter> obiektu bez podawania innych parametrów. Dane dynamiczne, spowoduje wygenerowanie parametrów dla klucza podstawowego lub klucze. Klucze obce lub logiczną kolumn, należy ustawić <xref:System.Web.UI.WebControls.Parameter.Name%2A> właściwość na nazwę kolumny, których chcesz filtrować.  
  
 Aby można było używać <xref:System.Web.DynamicData.DynamicQueryStringParameter> klasy, należy dodać <xref:System.Web.DynamicData.DynamicDataManager> kontrolki na stronie i należy zarejestrować kontrolki powiązane z danymi z <xref:System.Web.DynamicData.DynamicDataManager> kontroli przy użyciu <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=nameWithType> metody.  
  
 Zobacz przykład kodu w czasie wykonywania w tej funkcji: [Uruchom](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicQueryStringParameter).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Web.DynamicData.DynamicQueryStringParameter> obiektu jako filtr, podczas wyświetlania danych w <xref:System.Web.UI.WebControls.GridView> kontroli. <xref:System.Web.UI.WebControls.GridView> Kontrolka zawiera <xref:System.Web.UI.WebControls.TemplateField> obiektu, który tworzy łącze, które ustawia wartość ciągu zapytania przy użyciu wartości klucza obcego.  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicQueryStringParameter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicQueryStringParameter/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicQueryStringParameter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicQueryStringParameter/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicDataManager" />
    <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
    <altmember cref="T:System.Web.UI.WebControls.EntityDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicQueryStringParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicQueryStringParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicQueryStringParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.DynamicQueryStringParameter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicQueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="dynamicQueryStringParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">Informacje o żądaniu HTTP.</param>
        <param name="control">Kontrolka parametru jest powiązana z.</param>
        <summary>Zgłasza <see cref="T:System.InvalidOperationException" /> wyjątku we wszystkich przypadkach.</summary>
        <returns>Zgłasza <see cref="T:System.InvalidOperationException" /> wyjątku we wszystkich przypadkach.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.DynamicData.DynamicQueryStringParameter.Evaluate%2A> metoda jest wywoływana przez platformę ASP.NET, zgłasza wyjątek T:System.InvalidOperationException, we wszystkich przypadkach. Dzieje się tak, ponieważ jest spełniony jeden z następujących warunków:  
  
-   Strony nie zawiera <xref:System.Web.DynamicData.DynamicDataManager> kontroli.  
  
-   Kontrolki powiązania danych nie jest zarejestrowana do użycia przez <xref:System.Web.DynamicData.DynamicDataManager> kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.DynamicDataManager" />
      </Docs>
    </Member>
    <Member MemberName="GetWhereParameters">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.WebControls.Parameter&gt; GetWhereParameters (System.Web.DynamicData.IDynamicDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.WebControls.Parameter&gt; GetWhereParameters(class System.Web.DynamicData.IDynamicDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicQueryStringParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWhereParameters (dataSource As IDynamicDataSource) As IEnumerable(Of Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::WebControls::Parameter ^&gt; ^ GetWhereParameters(System::Web::DynamicData::IDynamicDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="abstract member GetWhereParameters : System.Web.DynamicData.IDynamicDataSource -&gt; seq&lt;System.Web.UI.WebControls.Parameter&gt;&#xA;override this.GetWhereParameters : System.Web.DynamicData.IDynamicDataSource -&gt; seq&lt;System.Web.UI.WebControls.Parameter&gt;" Usage="dynamicQueryStringParameter.GetWhereParameters dataSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IWhereParametersProvider.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.WebControls.Parameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.DynamicData.IDynamicDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">Obiekt źródła danych.</param>
        <summary>Zwraca kolekcję <see cref="T:System.Web.UI.WebControls.Parameter" /> obiektów, które są generowane automatycznie dla kolumn w tabeli pobierając zapytania wartości ciągu.</summary>
        <returns>Zbiór parametrów, które są generowane automatycznie dla kolumn w tabeli poprzez pobranie wartości ciągu zapytania</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicQueryStringParameter> Klasy wygeneruje zbiór <xref:System.Web.UI.WebControls.Parameter> obiektów kluczy podstawowych i kluczy obcych logiczna kolumn w tabeli poprzez pobranie wartości ciągu zapytania.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
        <altmember cref="T:System.Web.UI.WebControls.EntityDataSource" />
        <altmember cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
      </Docs>
    </Member>
  </Members>
</Type>