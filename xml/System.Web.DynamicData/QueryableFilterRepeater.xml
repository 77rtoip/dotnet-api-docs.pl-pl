<Type Name="QueryableFilterRepeater" FullName="System.Web.DynamicData.QueryableFilterRepeater">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0580ac9f0f5fc6d44d7369029a6369cc8fc9161f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30582346" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class QueryableFilterRepeater : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryableFilterRepeater extends System.Web.UI.Control implements class System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.QueryableFilterRepeater" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryableFilterRepeater&#xA;Inherits Control&#xA;Implements IFilterExpressionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryableFilterRepeater : System::Web::UI::Control, System::Web::DynamicData::IFilterExpressionProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFilterExpressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia kontrolę opartego na szablonie, który automatycznie generuje interfejsu użytkownika, aby odfiltrować wiersze tabeli dla typów kolumn obsługiwanych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Kontekst klasy](#ClassContext)  
  
-   [Składni deklaratywnej](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.DynamicData.QueryableFilterRepeater> Formant jest używany w znaczniku strony do automatycznego generowania interfejsu użytkownika do wierszy tabeli filtrów. Domyślnie dane dynamiczne tworzy interfejsu użytkownika dla każdego typu obsługiwanych kolumny za pomocą filtru domyślnych szablonów, które znajdują się w katalogu ~\DynamicData\Filters.  
  
 Szablony domyślne obsługuje typy kolumn klucza obcego, Boolean i wyliczenia.  
  
 Poniższa tabela przedstawia zadania, które są skojarzone z <xref:System.Web.DynamicData.QueryableFilterRepeater> typu.  
  
|Zadanie|Opis|  
|----------|-----------------|  
|Tworzenie interfejsu użytkownika w celu filtrowania wierszy tabeli.|Dodaj <xref:System.Web.DynamicData.DynamicFilter> kontrolki do utworzenia przy użyciu interfejsu użytkownika <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> właściwości.|  
|Sprawdź, czy <xref:System.Web.DynamicData.QueryableFilterRepeater> formant zawiera filtry pola danych.|Sprawdzić w <xref:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender%2A> metody.|  
  
<a name="ClassContext"></a>   
## <a name="class-context"></a>Kontekst klasy  
 <xref:System.Web.DynamicData.QueryableFilterRepeater> Kontroli jest przeznaczona do pracy z <xref:System.Web.UI.WebControls.QueryExtender> formantu. Musi odwoływać się <xref:System.Web.DynamicData.DynamicFilterExpression> wystąpienie wewnątrz <xref:System.Web.UI.WebControls.QueryExtender> obiektu w znaczniku strony.  
  
 Na poniższej ilustracji przedstawiono kroki, które następuje danymi dynamicznymi w celu wdrożenia filtrowanie wierszy tabeli automatycznej.  
  
 ![Filtrowanie elementów wiersza tabeli danych dynamicznych](~/add/media/dynamic-autofilter.png "filtrowania elementów wiersza tabeli danych dynamicznych")  
  
1.  <xref:System.Web.DynamicData.DynamicFilter> Formantów (które są zawarte w <xref:System.Web.DynamicData.QueryableFilterRepeater> kontroli), Przekaż wartość kolumny do <xref:System.Web.UI.WebControls.QueryExtender> formantu.  
  
2.  <xref:System.Web.UI.WebControls.QueryExtender> Kontroli używa tej wartości, aby utworzyć kwerendę filtrowania informacje, które są następnie przekazywane do kontroli źródła danych.  
  
3.  Formant źródła danych przekazuje zapytanie filtrowania informacji do dostawcy źródła danych.  
  
4.  Dostawca źródła danych przekazuje zapytanie do bazy danych.  
  
5.  Bazy danych zwraca wiersze tabeli filtrowane.  
  
6.  Dostawca źródła danych wysyła te dane z powrotem do kontroli źródła danych.  
  
7.  Ten formant przekazuje wiersze tabeli filtrowane do kontrolki powiązania danych do wyświetlenia.  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:QueryableFilterRepeater   
    ID="string"  
    DynamicFilterContainerId="string"   
    EnableViewState="True|False"   
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"   
    Visible="true"  
    runat="server" />  
```  
  
   
  
## Examples  
 Projektu programu Visual Studio z kodem źródłowym jest dostępne w tej lokalizacji: [danych dynamicznych szkieletów](http://go.microsoft.com/fwlink/?LinkId=168914).  
  
 Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.QueryableFilterRepeater> formantu do generowania interfejsu użytkownika w celu filtrowania wiersza tabeli. Szablon elementu powtarzanego zawiera <xref:System.Web.DynamicData.DynamicFilter> kontrolkę tworzącą interfejsu użytkownika dla każdego obsługiwany typ kolumny.  
  
 Przykład wymaga następujących elementów:  
  
-   Dynamiczne danych witryny lub aplikacji sieci Web danych dynamicznych. Aby uzyskać więcej informacji, zobacz `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.  
  
 [!code-aspx-csharp[System.Web.DynamicData.QueryableFilterRepeater#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.QueryableFilterRepeater#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx.vb#3)]  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/awltl2spartials.cs#4)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/awltpartiall2sclasses.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryableFilterRepeater ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryableFilterRepeater();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie należy używać tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.DynamicData.QueryableFilterRepeater> klasy. Zamiast tego określ <xref:System.Web.DynamicData.QueryableFilterRepeater> kontroli w znaczniku strony i kontrolki zainicjowano automatycznie po uruchomieniu na stronie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicFilterContainerId">
      <MemberSignature Language="C#" Value="public string DynamicFilterContainerId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicFilterContainerId" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicFilterContainerId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicFilterContainerId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("DynamicFilter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.DynamicData.QueryableFilterUserControl))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator <see cref="T:System.Web.DynamicData.DynamicFilter" /> formantu w szablonie, który jest skonfigurowany jako filtr dla kolumny.</summary>
        <value>Identyfikator <see cref="T:System.Web.DynamicData.DynamicFilter" /> formantu w szablonie, który jest skonfigurowany jako filtr dla kolumny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli identyfikator nie jest ustawiona, wartością domyślną dla Identyfikatora jest "DynamicFilter".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.INamingContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontrolek wypełnić <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> klasy.</summary>
        <value>Obiekt definiujący sposób elementy w <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> sterowania są wyświetlane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> Właściwość definiuje zachowanie, który jest używany do wypełniania <xref:System.Web.DynamicData.QueryableFilterRepeater> kontrolki z formantów podrzędnych. Formanty podrzędne reprezentują szablony wbudowany, które są zdefiniowane na stronie.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób ustawiania <xref:System.Web.DynamicData.QueryableFilterRepeater> formantu <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> właściwość, którą zawiera <xref:System.Web.DynamicData.DynamicFilter> służy do tworzenia interfejsu użytkownika dla każdego obsługiwany typ kolumny.  
  
 [!code-aspx-csharp[System.Web.DynamicData.QueryableFilterRepeater#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx#2)]
 [!code-aspx-vb[System.Web.DynamicData.QueryableFilterRepeater#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Sprawdza, czy formant zawiera filtry pola danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma filtrów pola danych, ta metoda ustawia <xref:System.Web.UI.Control.Visible%2A> właściwość <xref:System.Web.DynamicData.QueryableFilterRepeater> do obiektu `false`. Ta metoda jest wywoływana po wykonaniu <xref:System.Web.DynamicData.QueryableFilterRepeater> kontroli jest załadowane, ale przed wyświetleniem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.GetQueryable">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Function GetQueryable (source As IQueryable) As IQueryable Implements IFilterExpressionProvider.GetQueryable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Linq::IQueryable ^ System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System::Linq::IQueryable ^ source) = System::Web::DynamicData::IFilterExpressionProvider::GetQueryable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System.Linq.IQueryable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Kwerenda źródła danych.</param>
        <summary>Pobiera zmodyfikowane zapytanie przy użyciu bieżącej wartości filtru.</summary>
        <returns>Filtr.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.DynamicData.QueryableFilterRepeater> wystąpienia jest rzutowane na <xref:System.Web.DynamicData.IFilterExpressionProvider> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.Initialize">
      <MemberSignature Language="C#" Value="void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.DynamicData.IFilterExpressionProvider.Initialize(class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (dataSource As IQueryableDataSource) Implements IFilterExpressionProvider.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.DynamicData.IFilterExpressionProvider.Initialize(System::Web::UI::WebControls::IQueryableDataSource ^ dataSource) = System::Web::DynamicData::IFilterExpressionProvider::Initialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.Initialize(System.Web.UI.WebControls.IQueryableDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.DynamicData.QueryableFilterRepeater> wystąpienia jest rzutowane na <xref:System.Web.DynamicData.IFilterExpressionProvider> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>