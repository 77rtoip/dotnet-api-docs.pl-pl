<Type Name="IFieldTemplateFactory" FullName="System.Web.DynamicData.IFieldTemplateFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5019c7300c4c97bf113a317f53c4d60e79adcfe8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36401838" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type IFieldTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejsu zaimplementowanego przez obiekty, które utworzyć szablony pól.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa musi być implementowana przez <xref:System.Web.DynamicData.FieldTemplateFactory> klasy, aby było możliwe utworzenie szablonu pola. Ten interfejs udostępnia metody, które zainicjować <xref:System.Web.DynamicData.FieldTemplateFactory> i tworzy Szablony pól.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="iFieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Określa kolumnę danych zostanie użyty do wyświetlenia szablonu pola.</param>
        <param name="mode">Określa tryb wyświetlania pola szablonu.</param>
        <param name="uiHint">Określa szablon pola do użycia.</param>
        <summary>Tworzy wystąpienie szablonu pola, używając <see cref="T:System.Web.DynamicData.MetaColumn" /> klasy <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> klasy i <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> właściwości.</summary>
        <returns>Wystąpienie <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> obiektu po zaimplementowaniu w klasie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data pola szablony są kontrolki użytkownika ASP.NET, które mapują formantów danych do typów danych w modelu danych. Szablony pól zazwyczaj pochodzi od <xref:System.Web.DynamicData.FieldTemplateUserControl>, klasy, która umożliwia dostęp do pola danych, kolumny danych i metadanych w modelach danych. Projekty danych dynamicznych udostępniania domyślnych szablonów pól, ale można je zmodyfikować lub utworzyć szablony niestandardowe pole. Gdy imlemented, ta metoda tworzy szablon pole na podstawie kolumny danych, tryb kolumny danych i <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> właściwości. Należy określić `uiHint` parametru, jeśli ma być renderowany przy użyciu szablonu niestandardowego pola danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="iFieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">Określa model danych, który używa pola szablonu.</param>
        <summary>Inicjuje <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> przy użyciu określonych danych modelu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data używa Szablony pól, aby wyświetlić poszczególne pola danych. Szablony pól są zwykle implementowany jako kontrolki użytkownika, które mapują typów danych w modelu danych do poszczególnych pól w formancie danych. Ta metoda inicjuje <xref:System.Web.DynamicData.FieldTemplateFactory> klasy, która jest używana do tworzenia szablonów pola przy użyciu modelu danych szablonu pola będzie używana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>