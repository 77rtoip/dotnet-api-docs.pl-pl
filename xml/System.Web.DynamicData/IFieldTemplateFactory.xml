<Type Name="IFieldTemplateFactory" FullName="System.Web.DynamicData.IFieldTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6629feb94827f83ee1ad8afcadbb5136d479cf9e" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59744652" /></Metadata><TypeSignature Language="C#" Value="public interface IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type IFieldTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejs implementowany przez obiekty, które Tworzenie szablonów pól.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa musi być implementowana przez <xref:System.Web.DynamicData.FieldTemplateFactory> klasy, aby można było utworzyć szablon pola. Ten interfejs zapewnia metody, które zainicjować <xref:System.Web.DynamicData.FieldTemplateFactory> i tworzy szablonów pól.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="iFieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Określa kolumnę danych, można użyć, aby wyświetlić szablon pola.</param>
        <param name="mode">Określa sposób wyświetlania pola szablonu.</param>
        <param name="uiHint">Określa szablon pola do użycia.</param>
        <summary>Tworzy wystąpienie klasy szablonu pola przy użyciu atrybutu <see cref="T:System.Web.DynamicData.MetaColumn" /> klasy <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> klasy i <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> właściwości.</summary>
        <returns>Wystąpienie <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> obiektu po zaimplementowaniu w klasie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Szablony programu ASP.NET Dynamic Data pól są kontrolki użytkownika platformy ASP.NET, które mapują formantów danych do typów danych w modelu danych. Szablony pól, ale zazwyczaj dziedziczyć <xref:System.Web.DynamicData.FieldTemplateUserControl>, klasa, która umożliwia dostęp do pól z danymi, kolumny danych i metadanych w modelach danych. Projekty danych dynamicznych, udostępniania domyślnych szablonów pól, ale można je zmodyfikować lub utworzyć pole niestandardowe szablony. Po wdrożeniu, ta metoda tworzy szablon pola na podstawie kolumny danych, tryb kolumny danych i <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> właściwości. Należy określić `uiHint` parametru, jeśli ma być renderowany przy użyciu szablonu niestandardowego pola danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="iFieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">Określa model danych, który używa szablonu pola.</param>
        <summary>Inicjuje <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> przy użyciu modelu określone dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane dynamiczne ASP.NET używa szablonów pól, aby wyświetlić poszczególne pola danych. Szablony pól są zwykle implementowane jako kontrolki użytkownika, które mapowania typów danych w modelu danych poszczególnych pól w formancie danych. Ta metoda inicjuje <xref:System.Web.DynamicData.FieldTemplateFactory> klasy, która służy do tworzenia szablonów pola przy użyciu modelu danych szablonu pola będą używane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>