<Type Name="MetaModel" FullName="System.Web.DynamicData.MetaModel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="110cebc8f1b5db7eca8744d5127c40ad15cfb0d8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f0903-101">Reprezentuje jednego lub wielu baz danych, które są używane przez danych dynamicznych platformy ASP.NET.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f0903-101">Represents one or multiple databases that are used by ASP.NET Dynamic Data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-102"><xref:System.Web.DynamicData.MetaModel> Typu umożliwia rejestrowanie jednego lub wielu kontekstów danych dla aplikacji sieci Web danych dynamicznych.</span><span class="sxs-lookup"><span data-stu-id="f0903-102">The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.</span></span>  
  
 <span data-ttu-id="f0903-103">Kontekst danych jest obiekt, który reprezentuje połączenie z bazą danych.</span><span class="sxs-lookup"><span data-stu-id="f0903-103">A data context is an object that represents a database connection.</span></span> <span data-ttu-id="f0903-104">Kontekst danych ma dostęp do jednego danych modelu, który reprezentuje bazę danych, która jest dostępna za pośrednictwem tego połączenia.</span><span class="sxs-lookup"><span data-stu-id="f0903-104">A data context has access to one data model which represents a database that is available through that connection.</span></span> <span data-ttu-id="f0903-105">Model danych jest obiekt, który reprezentuje jednostek danych bazy danych jako typów CLR.</span><span class="sxs-lookup"><span data-stu-id="f0903-105">A data model is an object that represents a database's data entities as CLR types.</span></span> <span data-ttu-id="f0903-106">Dane dynamiczne obsługuje modeli danych oparte na LINQ do SQL i programu ADO.NET Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="f0903-106">Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.</span></span>  
  
 <span data-ttu-id="f0903-107">W [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], można wygenerować typy modelu danych przy użyciu **klasy LINQ do SQL** szablon lub **modelu danych jednostki ADO.NET** szablonu.</span><span class="sxs-lookup"><span data-stu-id="f0903-107">In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template.</span></span> <span data-ttu-id="f0903-108">Te szablony na użytek Projektant obiektów relacyjnych (Projektanta obiektów relacyjnych) LINQ w modelu SQL lub ADO.NET Projektant modelu danych jednostki (Entity Designer) dla modelu programu Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="f0903-108">These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0903-109">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel> typ do wykonywania następujących zadań, aby można było używać automatycznego szkieletów w witrynie sieci Web programu ASP.NET:</span><span class="sxs-lookup"><span data-stu-id="f0903-109">The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:</span></span>  
  
-   <span data-ttu-id="f0903-110">Pobierz domyślny kontekst danych modelu danych.</span><span class="sxs-lookup"><span data-stu-id="f0903-110">Get the data model for the default data context.</span></span>  
  
-   <span data-ttu-id="f0903-111">Pobierz model danych dla kontekstu określone dane.</span><span class="sxs-lookup"><span data-stu-id="f0903-111">Get the data model for a specified data context.</span></span>  
  
-   <span data-ttu-id="f0903-112">Obliczyć ścieżki routingu (ustalić adresu URL) określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-112">Evaluate the routing path (determine the URL) for a specified table.</span></span>  
  
 <span data-ttu-id="f0903-113">Przykład składa się z strony i jego pliku CodeBehind.</span><span class="sxs-lookup"><span data-stu-id="f0903-113">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]
 [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  
  
 <span data-ttu-id="f0903-114">Aby skompilować w przykładzie, potrzebne są następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="f0903-114">To compile the example, you need the following:</span></span>  
  
-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]<span data-ttu-id="f0903-115"> lub [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="f0903-115"> or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span></span>  
  
-   <span data-ttu-id="f0903-116">Witryna sieci Web danych dynamicznych.</span><span class="sxs-lookup"><span data-stu-id="f0903-116">A Dynamic Data Web site.</span></span> <span data-ttu-id="f0903-117">Aby uzyskać więcej informacji, zobacz [wskazówki: Tworzenie nowego dynamicznych danych witryny sieci Web przy użyciu rusztowania](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span><span class="sxs-lookup"><span data-stu-id="f0903-117">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
 <span data-ttu-id="f0903-118">Zobacz przykładowego kodu w czasie wykonywania tej funkcji: [Uruchom](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span><span class="sxs-lookup"><span data-stu-id="f0903-118">See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span></span>  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">
      <span data-ttu-id="f0903-119">Może zostać wygenerowany przez dowolnej metody, jeśli wystąpił błąd rejestracji kontekstu danych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f0903-119">Can be thrown by any method if there has been a data context registration error.</span>
      </span>
    </exception>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-120">Tworzy nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.MetaModel" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-120">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0903-121">Tworzy nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.MetaModel" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-121">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-122">Zwykle wywołują <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> konstruktora w `Application_Start` metody pliku Global.asax.</span><span class="sxs-lookup"><span data-stu-id="f0903-122">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0903-123">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> Konstruktor umożliwia wykonywanie następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="f0903-123">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="f0903-124">Utwórz wystąpienie <xref:System.Web.DynamicData.MetaModel> klasy.</span><span class="sxs-lookup"><span data-stu-id="f0903-124">Instantiate the <xref:System.Web.DynamicData.MetaModel> class.</span></span>  
  
-   <span data-ttu-id="f0903-125">Inicjowanie i Zarejestruj <xref:System.Web.DynamicData.MetaModel> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="f0903-125">Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel (bool registerGlobally);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool registerGlobally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registerGlobally As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel(bool registerGlobally);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registerGlobally" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="registerGlobally">
          <span data-ttu-id="f0903-126">
            <see langword="true" /> Aby wskazać, czy model jest zarejestrowana globalnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-126">
              <see langword="true" /> to indicate that the model is registered globally; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f0903-127">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-127">The default is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-128">Tworzy nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.MetaModel" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-128">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-129">Ten konstruktor Określa, czy model danych jest globalnie zarejestrowana, dzięki czemu mogą być pobierane przy użyciu <xref:System.Web.DynamicData.MetaModel.GetModel%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f0903-129">This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method.</span></span> <span data-ttu-id="f0903-130">Dzięki temu można utworzyć wiele modeli i użyć tych samych typów jednostek unikając wystąpił konflikt typu.</span><span class="sxs-lookup"><span data-stu-id="f0903-130">It enables you to create multiple models and use the same entity types while avoiding type conflicts.</span></span>  
  
 <span data-ttu-id="f0903-131">Zwykle wywołują <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> konstruktora w `Application_Start` metody pliku Global.asax.</span><span class="sxs-lookup"><span data-stu-id="f0903-131">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaTable CreateTable(class System.Web.DynamicData.ModelProviders.TableProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable (provider As TableProvider) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaTable ^ CreateTable(System::Web::DynamicData::ModelProviders::TableProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="f0903-132">Dostawca dla tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-132">The provider for the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-133">Tworzy wystąpienie <see cref="T:System.Web.DynamicData.MetaTable" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-133">Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0903-134">Nowe wystąpienie klasy tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-134">A new instance of the table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-135"><xref:System.Web.DynamicData.MetaModel.CreateTable%2A> — Metoda może zostać zastąpiona w celu utworzenia wystąpienia typu pochodnego.</span><span class="sxs-lookup"><span data-stu-id="f0903-135">The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.DynamicData.MetaModel Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::DynamicData::MetaModel ^ Default { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-136">Pobiera pierwszego wystąpienia modelu danych, który jest tworzony przez aplikację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-136">Gets the first instance of a data model that is created by the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0903-137">Wystąpienie modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-137">The data-model instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-138">Ta właściwość zapewnia prosty sposób odwołania domyślnego wystąpienia modelu danych.</span><span class="sxs-lookup"><span data-stu-id="f0903-138">This property provides a simple way to reference the default data-model instance.</span></span> <span data-ttu-id="f0903-139">Jeśli aplikacja używa wielu modeli, musisz podać własne sposób przechowywania odwołania do modeli dodatkowe dane.</span><span class="sxs-lookup"><span data-stu-id="f0903-139">If the application uses multiple models, you must provide your own way to store references to the additional data models.</span></span> <span data-ttu-id="f0903-140">Aby znaleźć modelu danych, należy wywołać <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="f0903-140">To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0903-141">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.Default%2A> właściwości w <xref:System.Web.DynamicData.MetaModel.GetModel%2A> metodę, aby pobrać domyślnego modelu danych.</span><span class="sxs-lookup"><span data-stu-id="f0903-141">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.</span></span>  
  
 <span data-ttu-id="f0903-142">Pełny przykład, zobacz <xref:System.Web.DynamicData.MetaModel> Przegląd klasy.</span><span class="sxs-lookup"><span data-stu-id="f0903-142">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDataFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string DynamicDataFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDataFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicDataFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDataFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.DynamicDataFolderVirtualPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-143">Pobiera lub ustawia ścieżkę wirtualną DynamicData folderu witryny sieci Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-143">Gets or sets the virtual path of the DynamicData folder in the Web site.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0903-144">Wirtualna ścieżka folderu DynamicData.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-144">The virtual path of the DynamicData folder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-145">Ta właściwość umożliwia zmianę ścieżki wirtualnej folderu DynamicData.</span><span class="sxs-lookup"><span data-stu-id="f0903-145">This property enables you to change the virtual path of the DynamicData folder.</span></span> <span data-ttu-id="f0903-146">Wartość domyślna to "~/DynamicData".</span><span class="sxs-lookup"><span data-stu-id="f0903-146">The default value is "~/DynamicData".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTemplateFactory As EntityTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::EntityTemplateFactory ^ EntityTemplateFactory { System::Web::DynamicData::EntityTemplateFactory ^ get(); void set(System::Web::DynamicData::EntityTemplateFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-147">Pobiera lub ustawia <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> obiekt, który jest skojarzony z modelu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-147">Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0903-148">Wystąpienie <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> obiekt, który jest skojarzony z modelu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-148">An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldTemplateFactory As IFieldTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::IFieldTemplateFactory ^ FieldTemplateFactory { System::Web::DynamicData::IFieldTemplateFactory ^ get(); void set(System::Web::DynamicData::IFieldTemplateFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.FieldTemplateFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-149">Pobiera lub ustawia niestandardowego <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-149">Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0903-150">
            <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> Interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-150">The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-151"><xref:System.Web.DynamicData.IFieldTemplateFactory> Interfejs umożliwia określenie, które szablony pola są tworzone dla kolumn tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-151">The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.FilterFactory FilterFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterFactory As FilterFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::FilterFactory ^ FilterFactory { System::Web::DynamicData::FilterFactory ^ get(); void set(System::Web::DynamicData::FilterFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.FilterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-152">Pobiera lub ustawia <see cref="T:System.Web.DynamicData.FilterFactory" /> obiekt, który jest skojarzony z modelu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-152">Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0903-153">Wystąpienie <see cref="T:System.Web.DynamicData.FilterFactory" /> obiekt, który jest skojarzony z modelu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-153">An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string tableName, string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string tableName, string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (tableName As String, action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.GetActionPath(System.String,System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="f0903-154">Nazwa tabeli, która dotyczy akcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-154">The name of the table that the action applies to.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="f0903-155">Akcja do zastosowania do tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-155">The action to apply to the table.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="f0903-156">Obiekt, który reprezentuje pojedynczy wiersz danych w tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-156">An object that represents a single row of data in a table.</span>
          </span>
          <span data-ttu-id="f0903-157">
            <c>wiersz</c> służy do Podaj wartości parametrów ciągu zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-157">
              <c>row</c> is used to provide values for query-string parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-158">Zwraca ścieżkę akcji, która jest skojarzona z określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-158">Returns the action path that is associated with a specific table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0903-159">Adres URL, który jest skojarzony z trasą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-159">The URL that is associated with the route.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-160">Trasy jest określany przez kombinację akcji i nazwy tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-160">The route is determined by the combination of the table name and action.</span></span>  
  
 <span data-ttu-id="f0903-161">[Uruchom](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) przykładem online tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="f0903-161">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0903-162">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> metodę, aby obliczyć ścieżki routingu (ustalić adresu URL) określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-162">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table.</span></span> <span data-ttu-id="f0903-163">Pełny przykład, zobacz <xref:System.Web.DynamicData.MetaModel>.</span><span class="sxs-lookup"><span data-stu-id="f0903-163">For a complete example, see <xref:System.Web.DynamicData.MetaModel>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]
 [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel GetModel (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaModel GetModel(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModel (contextType As Type) As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaModel ^ GetModel(Type ^ contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="f0903-164">Typ kontekstu danych, zgodnie z definicją w modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-164">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-165">Zwraca wystąpienie modelu danych dla określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-165">Returns the data-model instance for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0903-166">Model danych, który jest skojarzony z typem określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-166">The data model that is associated with the specified context type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0903-167">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> sposób wykonywania następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="f0903-167">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="f0903-168">Uzyskiwanie domyślnego modelu danych.</span><span class="sxs-lookup"><span data-stu-id="f0903-168">Getting the default data model.</span></span>  
  
-   <span data-ttu-id="f0903-169">Pobieranie określony przez typ przekazany kontekstu modelu danych.</span><span class="sxs-lookup"><span data-stu-id="f0903-169">Getting the data model specified by the passed context type.</span></span>  
  
 <span data-ttu-id="f0903-170">Pełny przykład, zobacz <xref:System.Web.DynamicData.MetaModel> Przegląd klasy.</span><span class="sxs-lookup"><span data-stu-id="f0903-170">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0903-171">Nie można odnaleźć tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-171">The table was not found.</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="f0903-172">Zwraca metadane opisujące tabeli modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-172">Returns the metadata that describes a data model table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-173"><xref:System.Web.DynamicData.MetaTable> Obiekt, który jest zwracany przez przeciążonej metody zawiera informacje o metadanych, który jest skojarzony z określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-173">The <xref:System.Web.DynamicData.MetaTable> object that is returned by the overloaded methods contains the metadata information that is associated with the specified table.</span></span>  
  
 <span data-ttu-id="f0903-174">[Uruchom](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) przykładem online tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="f0903-174">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0903-175">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.GetTable%2A> przeciążonej metody służące do wykonywania następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="f0903-175">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> overloaded methods to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="f0903-176">Pobierz <xref:System.Web.DynamicData.MetaTable> obiektu z określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-176">Get the <xref:System.Web.DynamicData.MetaTable> object for the specified table.</span></span>  
  
-   <span data-ttu-id="f0903-177">Dostęp do informacji o metadanych, który jest zawarty w <xref:System.Web.DynamicData.MetaTable> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f0903-177">Access the metadata information that is contained by the <xref:System.Web.DynamicData.MetaTable> object.</span></span>  
  
 <span data-ttu-id="f0903-178">Przykład składa się z strony i jego pliku CodeBehind.</span><span class="sxs-lookup"><span data-stu-id="f0903-178">The example consists of a page and its code-behind file.</span></span>  
  
 <span data-ttu-id="f0903-179">[!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --></span><span class="sxs-lookup"><span data-stu-id="f0903-179">[!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
[!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --></span></span> 
  
 [!code-csharp[System.Web.DynamicData.MetaModel#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#4)]
 [!code-vb[System.Web.DynamicData.MetaModel#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string uniqueTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (uniqueTableName As String) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ uniqueTableName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName">
          <span data-ttu-id="f0903-180">Nazwa, która identyfikuje tabeli w modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-180">The name that identifies the table in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-181">Zwraca metadane, który jest skojarzony z określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-181">Returns the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0903-182">Metadane opisujące określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-182">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-183">Nazwa unikatowo identyfikuje tabeli w modelu danych i jest używany do generowania powiązanego adresu URL dla routingu.</span><span class="sxs-lookup"><span data-stu-id="f0903-183">The name uniquely identifies a table in the data model and is used to generate the related URL for routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0903-184">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> metodę, aby uzyskać metadanych dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-184">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="f0903-185">Pełny przykład, zobacz <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="f0903-185">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]
 [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f0903-186">Nie znaleziono nazwy w modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-186">The name was not found in the data model.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="f0903-187">Typ, który identyfikuje tabeli w modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-187">The type that identifies the table in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-188">Zwraca metadane opisujące określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-188">Returns the metadata that describes the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0903-189">Metadane opisujące określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-189">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0903-190">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> metodę, aby uzyskać metadanych dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-190">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="f0903-191">Pełny przykład, zobacz <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="f0903-191">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]
 [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0903-192">Nie znaleziono typu w modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-192">The type was not found in the data model.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string tableName, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (tableName As String, contextType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ tableName, Type ^ contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="f0903-193">Nazwa tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-193">The name of the table.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="f0903-194">Kontekst danych do wyszukiwania w tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-194">The data context to search for the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-195">Zwraca metadane opisujące określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-195">Returns the metadata that describes the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0903-196">Metadane opisujące określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-196">The metadata that describes the specified table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0903-197">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> metodę, aby uzyskać metadanych dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-197">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="f0903-198">Pełny przykład, zobacz <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="f0903-198">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]
 [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0903-199">
            <paramref name="tablename" /> lub <paramref name="contextType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-199">
              <paramref name="tablename" /> or <paramref name="contextType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f0903-200">Kontekst nie jest zarejestrowany lub tabela nie istnieje w kontekście danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-200">The context is not registered or the table does not exist in the data context.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-201">Rejestruje kontekstu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-201">Registers the data context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-202">Można zdefiniować informacje inicjowanie kontekstu danych za pomocą właściwości <xref:System.Web.DynamicData.ContextConfiguration> klasy.</span><span class="sxs-lookup"><span data-stu-id="f0903-202">You can define data-context initialization information by using the properties of the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contextFactory">
          <span data-ttu-id="f0903-203">Fabryka do tworzenia wystąpienia kontekstu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-203">The factory for instantiating the data context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-204">Rejestruje kontekstu danych, określonej przez fabrykę kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-204">Registers the data context that is specified by a context factory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-205">Ta metoda używa domyślne informacje kontekstu jest definiowana za pomocą <xref:System.Web.DynamicData.ContextConfiguration> klasy.</span><span class="sxs-lookup"><span data-stu-id="f0903-205">This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span> <span data-ttu-id="f0903-206">Umożliwia ona wystąpienia kontekstu danych za pomocą własnych konstruktora.</span><span class="sxs-lookup"><span data-stu-id="f0903-206">It enables you to instantiate the data context by using your own constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="f0903-207">Typ kontekstu danych, zgodnie z definicją w modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-207">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-208">Rejestruje wystąpienie kontekstu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-208">Registers a data-context instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-209">Ta metoda używa domyślnych informacji o kontekście zgodnie z definicją <xref:System.Web.DynamicData.ContextConfiguration> klasy.</span><span class="sxs-lookup"><span data-stu-id="f0903-209">This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider">
          <span data-ttu-id="f0903-210">Dostawca dla modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-210">A provider for the data model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-211">Rejestruje wystąpienie kontekstu danych przy użyciu dostawcy modelu danych</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-211">Registers a data context instance by using a data-model provider</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object), configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextFactory">
          <span data-ttu-id="f0903-212">Delegat, który jest używany do utworzenia wystąpienia kontekstu modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-212">A delegate that is used to instantiate the data model context.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="f0903-213">Informacje o kontekście zgodnie z definicją <see cref="T:System.Web.DynamicData.ContextConfiguration" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-213">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-214">Rejestruje wystąpienie kontekstu danych przy użyciu określonego kontekstu konfiguracji i włączając niestandardowe konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-214">Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-215">Fabryki kontekstu w ramach tej metody umożliwia wystąpienia kontekstu modelu danych przy użyciu niestandardowych konstruktora.</span><span class="sxs-lookup"><span data-stu-id="f0903-215">The context factory in this method enables you to instantiate a data model context by using a custom constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0903-216">
            <paramref name="contextFactory" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-216">
              <paramref name="contextFactory" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f0903-217">
            <paramref name="contextType" /> Który jest uruchomiony przez <paramref name="contextFactory" /> jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-217">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type, configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="f0903-218">Typ kontekstu danych, zgodnie z definicją w modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-218">The type of the data context as defined in the data model.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="f0903-219">Informacje o kontekście, zgodnie z definicją w konfiguracji <see cref="T:System.Web.DynamicData.ContextConfiguration" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-219">The configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-220">Rejestruje wystąpienie kontekstu danych przy użyciu określonego kontekstu konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-220">Registers a data-context instance by using the specified context configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0903-221">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> metoda rejestrowania kontekstu danych z szkieletów włączone, zgodnie z określonym `configuration` parametru.</span><span class="sxs-lookup"><span data-stu-id="f0903-221">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0903-222">
            <paramref name="contextType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-222">
              <paramref name="contextType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider">
          <span data-ttu-id="f0903-223">Dostawca dla modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-223">A provider for the data model.</span>
          </span>
        </param>
        <param name="configuration">
          <span data-ttu-id="f0903-224">Informacje o kontekście zgodnie z definicją <see cref="T:System.Web.DynamicData.ContextConfiguration" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-224">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-225">Rejestruje wystąpienie kontekstu danych przy użyciu określonego kontekstu konfiguracji i włączając dostawcy modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-225">Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0903-226">
            <paramref name="dataModelProvider" /> lub <paramref name="configuration" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-226">
              <paramref name="dataModelProvider" /> or <paramref name="configuration" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f0903-227">
            <paramref name="contextType" /> jest już zarejestrowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-227">
              <paramref name="contextType" /> is already registered.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetRegistrationException">
      <MemberSignature Language="C#" Value="public static void ResetRegistrationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetRegistrationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.ResetRegistrationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetRegistrationException ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetRegistrationException();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0903-228">Resetuje wszystkie poprzednie kontekstu rejestracji może mieć wystąpił błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-228">Resets any previous context registration error that might have occurred.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-229">Po wystąpieniu błędu podczas rejestracji kontekstu danych, wyjątek jest buforowany i zgłoszony na wszystkie kolejne operacje.</span><span class="sxs-lookup"><span data-stu-id="f0903-229">When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.</span></span> <span data-ttu-id="f0903-230">Na przykład jeśli wystąpi błąd podczas uruchamiania aplikacji, jest zgłaszany na każde żądanie.</span><span class="sxs-lookup"><span data-stu-id="f0903-230">For example, if an error occurs at application start, it is thrown on every request.</span></span> <span data-ttu-id="f0903-231">Wywołanie tej metody, aby wyczyścić błąd i umożliwić nowej rejestracji kontekstu do wykonania.</span><span class="sxs-lookup"><span data-stu-id="f0903-231">Call this method to clear the error and to enable a new context registration to be performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As ReadOnlyCollection(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ Tables { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-232">Pobiera kolekcję wszystkich tabel, które są częścią modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-232">Gets a collection of all the tables that are part of the data model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0903-233">Kolekcja, która zawiera tabele, które należą do modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-233">A collection that contains the tables that belong to the data model.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-234">Kolekcja zawiera wszystkie tabele w modelu danych, który zawiera tabele, które nie są widoczne (nie są częścią szkieletów danych dynamicznych).</span><span class="sxs-lookup"><span data-stu-id="f0903-234">The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).</span></span>  
  
 <span data-ttu-id="f0903-235">[Uruchom](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) przykładem online tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="f0903-235">[Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0903-236">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.Tables%2A> i <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> właściwości do wykonywania następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="f0903-236">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="f0903-237">Pobierz kolekcję wszystkie tabele w modelu danych i wyświetlić je w `GridView` formantu.</span><span class="sxs-lookup"><span data-stu-id="f0903-237">Get a collection of all the tables in a data model and show them in a `GridView` control.</span></span>  
  
-   <span data-ttu-id="f0903-238">Pobierz kolekcję widocznych tabelach w modelu danych i wyświetlić je w `GridView` formantu.</span><span class="sxs-lookup"><span data-stu-id="f0903-238">Get a collection of the visible tables in a data model and show them in a `GridView` control.</span></span>  
  
 <span data-ttu-id="f0903-239">Przykład składa się z strony i jego pliku CodeBehind.</span><span class="sxs-lookup"><span data-stu-id="f0903-239">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]
 [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-240">Próbuje pobrać metadanych, który jest skojarzony z określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-240">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(string uniqueTableName, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (uniqueTableName As String, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(System::String ^ uniqueTableName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName">
          <span data-ttu-id="f0903-241">Nazwa, która unikatowo identyfikuje tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-241">The name that uniquely identifies the table.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="f0903-242">Gdy metoda zwróci wartość, a znaleziono żądanej tabeli, zawiera metadanych dla tej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-242">When this method returns, and if it has found the requested table, contains the metadata for that table.</span>
          </span>
          <span data-ttu-id="f0903-243">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-243">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-244">Próbuje pobrać metadanych, który jest skojarzony z określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-244">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0903-245">
            <see langword="true" /> Jeśli zostanie znaleziony metadanych tabeli; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-245">
              <see langword="true" /> if the table metadata is found; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-246">Ta metoda pobiera metadane, który jest skojarzony z określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-246">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="f0903-247">Jeśli tabela nie zostanie znaleziony, ta metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="f0903-247">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="f0903-248">To różni się od <xref:System.Web.DynamicData.MetaModel.GetTable%2A> metodę, która zgłasza wyjątek, jeśli nie znaleziono tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-248">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0903-249">
            <paramref name="uniqueTableName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-249">
              <paramref name="uniqueTableName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType">
          <span data-ttu-id="f0903-250">Typ tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-250">The table type.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="f0903-251">Gdy metoda zwróci wartość, a znaleziono żądanej tabeli, zawiera metadane dla określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-251">When this method returns, and if the requested table has been found, contains the metadata for the specified table.</span>
          </span>
          <span data-ttu-id="f0903-252">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-252">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0903-253">Próbuje pobrać metadanych, który jest skojarzony z określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-253">Attempts to get the metadata that is associated with the specified table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0903-254">
            <see langword="true" /> Jeśli zostanie znaleziony metadanych tabeli; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-254">
              <see langword="true" /> if the table metadata is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0903-255">Ta metoda pobiera metadane, który jest skojarzony z określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-255">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="f0903-256">Jeśli tabela nie zostanie znaleziony, ta metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="f0903-256">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="f0903-257">To różni się od <xref:System.Web.DynamicData.MetaModel.GetTable%2A> metodę, która zgłasza wyjątek, jeśli nie znaleziono tabeli.</span><span class="sxs-lookup"><span data-stu-id="f0903-257">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0903-258">
            <paramref name="entityType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-258">
              <paramref name="entityType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VisibleTables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt; VisibleTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Web.DynamicData.MetaTable&gt; VisibleTables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleTables As List(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ VisibleTables { System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0903-259">Pobiera kolekcję widoczne tabele w modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-259">Gets a collection of the visible tables in the data model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0903-260">Widoczne tabeli odwołuje się do tabeli, która została włączona funkcja szkieletów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-260">A visible table refers to a table that has scaffolding enabled.</span>
          </span>
          <span data-ttu-id="f0903-261">Oznacza to, że jest tabeli, dla której istnieje strona List.aspx.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0903-261">This means that it is a table for which a List.aspx page exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0903-262">Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> właściwości do pobrania kolekcja widocznych tabel w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="f0903-262">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model.</span></span> <span data-ttu-id="f0903-263">Pełny przykład, zobacz <xref:System.Web.DynamicData.MetaModel> Przegląd klasy.</span><span class="sxs-lookup"><span data-stu-id="f0903-263">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]
 [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>