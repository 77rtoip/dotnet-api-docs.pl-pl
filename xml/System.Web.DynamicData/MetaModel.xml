<Type Name="MetaModel" FullName="System.Web.DynamicData.MetaModel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="feb8d8a6db298e8c4cf168c963f94f88f882dd60" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69139564" /></Metadata><TypeSignature Language="C#" Value="public class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel" />
  <TypeSignature Language="F#" Value="type MetaModel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="61c5d-101">Reprezentuje jedną lub wiele baz danych, które są używane przez dane dynamiczne ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="61c5d-101">Represents one or multiple databases that are used by ASP.NET Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-102"><xref:System.Web.DynamicData.MetaModel> Typ umożliwia zarejestrowanie jednego lub wielu kontekstów danych dla dynamicznej aplikacji sieci Web.</span><span class="sxs-lookup"><span data-stu-id="61c5d-102">The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.</span></span>  
  
 <span data-ttu-id="61c5d-103">Kontekst danych to obiekt, który reprezentuje połączenie z bazą danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-103">A data context is an object that represents a database connection.</span></span> <span data-ttu-id="61c5d-104">Kontekst danych ma dostęp do jednego modelu danych, który reprezentuje bazę danych, która jest dostępna za pomocą tego połączenia.</span><span class="sxs-lookup"><span data-stu-id="61c5d-104">A data context has access to one data model which represents a database that is available through that connection.</span></span> <span data-ttu-id="61c5d-105">Model danych to obiekt, który reprezentuje jednostki danych bazy danych jako typy CLR.</span><span class="sxs-lookup"><span data-stu-id="61c5d-105">A data model is an object that represents a database's data entities as CLR types.</span></span> <span data-ttu-id="61c5d-106">Dane dynamiczne obsługują modele danych w oparciu o LINQ to SQL i Entity Framework ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="61c5d-106">Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.</span></span>  
  
 <span data-ttu-id="61c5d-107">W programie Visual Studio można generować typy modeli danych za pomocą szablonu **klas LINQ to SQL** lub szablonu **Entity Data Model ADO.NET** .</span><span class="sxs-lookup"><span data-stu-id="61c5d-107">In Visual Studio, you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template.</span></span> <span data-ttu-id="61c5d-108">Te szablony używają Object Relational Designer (Projektant O/R) dla modelu LINQ to SQL lub ADO.NET Entity Data Model Designer (Entity Designer) dla modelu Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="61c5d-108">These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c5d-109">Poniższy przykład pokazuje, jak używać <xref:System.Web.DynamicData.MetaModel> typu, aby wykonać następujące zadania w celu użycia automatycznego tworzenia szkieletów w witrynie sieci Web ASP.NET:</span><span class="sxs-lookup"><span data-stu-id="61c5d-109">The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:</span></span>  
  
-   <span data-ttu-id="61c5d-110">Pobierz model danych dla domyślnego kontekstu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-110">Get the data model for the default data context.</span></span>  
  
-   <span data-ttu-id="61c5d-111">Pobierz model danych dla określonego kontekstu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-111">Get the data model for a specified data context.</span></span>  
  
-   <span data-ttu-id="61c5d-112">Oceń ścieżkę routingu (Określ adres URL) dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-112">Evaluate the routing path (determine the URL) for a specified table.</span></span>  
  
 <span data-ttu-id="61c5d-113">Przykład zawiera stronę i jej plik związany z kodem.</span><span class="sxs-lookup"><span data-stu-id="61c5d-113">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]
 [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  
  
 <span data-ttu-id="61c5d-114">Do skompilowania przykładu potrzebne są następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="61c5d-114">To compile the example, you need the following:</span></span>  
  
-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]<span data-ttu-id="61c5d-115">lub [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="61c5d-115">or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span></span>  
  
-   <span data-ttu-id="61c5d-116">Dynamiczna witryna sieci Web.</span><span class="sxs-lookup"><span data-stu-id="61c5d-116">A Dynamic Data Web site.</span></span> <span data-ttu-id="61c5d-117">Aby uzyskać więcej informacji, [zobacz Przewodnik: Tworzenie nowej witryny sieci Web z danymi dynamicznymi przy](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a)użyciu szkieletu.</span><span class="sxs-lookup"><span data-stu-id="61c5d-117">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
 <span data-ttu-id="61c5d-118">Zobacz przykład kodu w czasie wykonywania tej funkcji: [Uruchom](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span><span class="sxs-lookup"><span data-stu-id="61c5d-118">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span></span>  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><span data-ttu-id="61c5d-119">Mogą być zgłaszane przez dowolną metodę, jeśli wystąpił błąd rejestracji kontekstu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-119">Can be thrown by any method if there has been a data context registration error.</span></span></exception>
    <related type="Article" href="https://msdn.microsoft.com/library/ee5dd2fb-5bb8-4bd7-a13d-d0a2659c3870"><span data-ttu-id="61c5d-120">ASP.NET dynamiczne dostosowywanie modelu danych</span><span class="sxs-lookup"><span data-stu-id="61c5d-120">ASP.NET Dynamic Data Model Customization</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/45e477c0-5c6b-41f9-b2d0-2808fb4f6537"><span data-ttu-id="61c5d-121">Object Relational Designer (Projektant O/R)</span><span class="sxs-lookup"><span data-stu-id="61c5d-121">Object Relational Designer (O/R Designer)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="61c5d-122">LINQ do SQL</span><span class="sxs-lookup"><span data-stu-id="61c5d-122">LINQ to SQL</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="61c5d-123">Instrukcje: Definiowanie trasy</span><span class="sxs-lookup"><span data-stu-id="61c5d-123">How to: Define a Route</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61c5d-124">Tworzy wystąpienie nowego wystąpienia <see cref="T:System.Web.DynamicData.MetaModel" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="61c5d-124">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c5d-125">Tworzy wystąpienie nowego wystąpienia <see cref="T:System.Web.DynamicData.MetaModel" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="61c5d-125">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-126">Zazwyczaj wywoływany jest <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> Konstruktor `Application_Start` w metodzie pliku Global. asax.</span><span class="sxs-lookup"><span data-stu-id="61c5d-126">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c5d-127">Poniższy przykład pokazuje, jak używać <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> konstruktora do wykonywania następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="61c5d-127">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="61c5d-128">Tworzenie wystąpienia <xref:System.Web.DynamicData.MetaModel> klasy.</span><span class="sxs-lookup"><span data-stu-id="61c5d-128">Instantiate the <xref:System.Web.DynamicData.MetaModel> class.</span></span>  
  
-   <span data-ttu-id="61c5d-129">Zainicjuj i zarejestruj <xref:System.Web.DynamicData.MetaModel> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="61c5d-129">Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel (bool registerGlobally);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool registerGlobally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registerGlobally As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel(bool registerGlobally);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaModel : bool -&gt; System.Web.DynamicData.MetaModel" Usage="new System.Web.DynamicData.MetaModel registerGlobally" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registerGlobally" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="registerGlobally"><span data-ttu-id="61c5d-130"><see langword="true" />Aby wskazać, że model jest zarejestrowany globalnie; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="61c5d-130"><see langword="true" /> to indicate that the model is registered globally; otherwise <see langword="false" />.</span></span> <span data-ttu-id="61c5d-131">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="61c5d-131">The default is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="61c5d-132">Tworzy wystąpienie nowego wystąpienia <see cref="T:System.Web.DynamicData.MetaModel" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="61c5d-132">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-133">Ten konstruktor określa, czy model danych jest zarejestrowany globalnie, aby można go było pobrać przy użyciu <xref:System.Web.DynamicData.MetaModel.GetModel%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="61c5d-133">This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method.</span></span> <span data-ttu-id="61c5d-134">Umożliwia utworzenie wielu modeli i użycie tych samych typów jednostek jednocześnie, unikając konfliktów typów.</span><span class="sxs-lookup"><span data-stu-id="61c5d-134">It enables you to create multiple models and use the same entity types while avoiding type conflicts.</span></span>  
  
 <span data-ttu-id="61c5d-135">Zazwyczaj wywoływany jest <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> Konstruktor `Application_Start` w metodzie pliku Global. asax.</span><span class="sxs-lookup"><span data-stu-id="61c5d-135">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaTable CreateTable(class System.Web.DynamicData.ModelProviders.TableProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable (provider As TableProvider) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaTable ^ CreateTable(System::Web::DynamicData::ModelProviders::TableProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable&#xA;override this.CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.CreateTable provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.DynamicData.ModelProviders.TableProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="61c5d-136">Dostawca tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-136">The provider for the table.</span></span></param>
        <summary><span data-ttu-id="61c5d-137">Tworzy wystąpienie obiektu <see cref="T:System.Web.DynamicData.MetaTable" /> .</span><span class="sxs-lookup"><span data-stu-id="61c5d-137">Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
        <returns><span data-ttu-id="61c5d-138">Nowe wystąpienie tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-138">A new instance of the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-139">Metodę <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> można zastąpić, aby utworzyć wystąpienie typu pochodnego.</span><span class="sxs-lookup"><span data-stu-id="61c5d-139">The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.DynamicData.MetaModel Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::DynamicData::MetaModel ^ Default { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c5d-140">Pobiera pierwsze wystąpienie modelu danych, który jest tworzony przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="61c5d-140">Gets the first instance of a data model that is created by the application.</span></span></summary>
        <value><span data-ttu-id="61c5d-141">Wystąpienie modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-141">The data-model instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-142">Ta właściwość zapewnia prosty sposób odwoływania się do domyślnego wystąpienia modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-142">This property provides a simple way to reference the default data-model instance.</span></span> <span data-ttu-id="61c5d-143">Jeśli aplikacja używa wielu modeli, należy zapewnić własny sposób przechowywania odwołań do dodatkowych modeli danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-143">If the application uses multiple models, you must provide your own way to store references to the additional data models.</span></span> <span data-ttu-id="61c5d-144">Aby znaleźć konkretny model danych, wywołaj <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-144">To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c5d-145">Poniższy przykład pokazuje, <xref:System.Web.DynamicData.MetaModel.Default%2A> jak użyć właściwości <xref:System.Web.DynamicData.MetaModel.GetModel%2A> w metodzie, aby uzyskać domyślny model danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-145">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.</span></span>  
  
 <span data-ttu-id="61c5d-146">Pełny przykład można znaleźć w temacie <xref:System.Web.DynamicData.MetaModel> Omówienie klasy.</span><span class="sxs-lookup"><span data-stu-id="61c5d-146">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDataFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string DynamicDataFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDataFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicDataFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDataFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicDataFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.DynamicDataFolderVirtualPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c5d-147">Pobiera lub ustawia ścieżkę wirtualną folderu DynamicData w witrynie sieci Web.</span><span class="sxs-lookup"><span data-stu-id="61c5d-147">Gets or sets the virtual path of the DynamicData folder in the Web site.</span></span></summary>
        <value><span data-ttu-id="61c5d-148">Wirtualna ścieżka folderu DynamicData.</span><span class="sxs-lookup"><span data-stu-id="61c5d-148">The virtual path of the DynamicData folder.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-149">Ta właściwość umożliwia zmianę ścieżki wirtualnej folderu DynamicData.</span><span class="sxs-lookup"><span data-stu-id="61c5d-149">This property enables you to change the virtual path of the DynamicData folder.</span></span> <span data-ttu-id="61c5d-150">Wartość domyślna to "~/DynamicData".</span><span class="sxs-lookup"><span data-stu-id="61c5d-150">The default value is "~/DynamicData".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTemplateFactory As EntityTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::EntityTemplateFactory ^ EntityTemplateFactory { System::Web::DynamicData::EntityTemplateFactory ^ get(); void set(System::Web::DynamicData::EntityTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityTemplateFactory : System.Web.DynamicData.EntityTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c5d-151">Pobiera lub ustawia <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> obiekt, który jest skojarzony z modelem.</span><span class="sxs-lookup"><span data-stu-id="61c5d-151">Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="61c5d-152">Wystąpienie <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> obiektu, które jest skojarzone z modelem.</span><span class="sxs-lookup"><span data-stu-id="61c5d-152">An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldTemplateFactory As IFieldTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::IFieldTemplateFactory ^ FieldTemplateFactory { System::Web::DynamicData::IFieldTemplateFactory ^ get(); void set(System::Web::DynamicData::IFieldTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.FieldTemplateFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c5d-153">Pobiera lub ustawia niestandardowy <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interfejs.</span><span class="sxs-lookup"><span data-stu-id="61c5d-153">Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></summary>
        <value><span data-ttu-id="61c5d-154"><see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> Interfejs.</span><span class="sxs-lookup"><span data-stu-id="61c5d-154">The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-155"><xref:System.Web.DynamicData.IFieldTemplateFactory> Interfejs pozwala określić, które szablony pól są tworzone dla kolumn tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-155">The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.FilterFactory FilterFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterFactory As FilterFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::FilterFactory ^ FilterFactory { System::Web::DynamicData::FilterFactory ^ get(); void set(System::Web::DynamicData::FilterFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterFactory : System.Web.DynamicData.FilterFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.FilterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c5d-156">Pobiera lub ustawia <see cref="T:System.Web.DynamicData.FilterFactory" /> obiekt, który jest skojarzony z modelem.</span><span class="sxs-lookup"><span data-stu-id="61c5d-156">Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="61c5d-157">Wystąpienie <see cref="T:System.Web.DynamicData.FilterFactory" /> obiektu, które jest skojarzone z modelem.</span><span class="sxs-lookup"><span data-stu-id="61c5d-157">An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string tableName, string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string tableName, string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (tableName As String, action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * string * obj -&gt; string&#xA;override this.GetActionPath : string * string * obj -&gt; string" Usage="metaModel.GetActionPath (tableName, action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.GetActionPath(System.String,System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="61c5d-158">Nazwa tabeli, do której odnosi się akcja.</span><span class="sxs-lookup"><span data-stu-id="61c5d-158">The name of the table that the action applies to.</span></span></param>
        <param name="action"><span data-ttu-id="61c5d-159">Akcja, która ma zostać zastosowana do tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-159">The action to apply to the table.</span></span></param>
        <param name="row"><span data-ttu-id="61c5d-160">Obiekt, który reprezentuje pojedynczy wiersz danych w tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-160">An object that represents a single row of data in a table.</span></span> <span data-ttu-id="61c5d-161"><paramref name="row" />służy do podania wartości parametrów ciągu zapytania.</span><span class="sxs-lookup"><span data-stu-id="61c5d-161"><paramref name="row" /> is used to provide values for query-string parameters.</span></span></param>
        <summary><span data-ttu-id="61c5d-162">Zwraca ścieżkę akcji, która jest skojarzona z określoną tabelą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-162">Returns the action path that is associated with a specific table.</span></span></summary>
        <returns><span data-ttu-id="61c5d-163">Adres URL, który jest skojarzony z trasą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-163">The URL that is associated with the route.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-164">Trasa jest określana na podstawie kombinacji nazwy tabeli i akcji.</span><span class="sxs-lookup"><span data-stu-id="61c5d-164">The route is determined by the combination of the table name and action.</span></span>  
  
 <span data-ttu-id="61c5d-165">[Uruchom](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) przykład online tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="61c5d-165">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c5d-166">Poniższy przykład przedstawia sposób użycia <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> metody do obliczenia ścieżki routingu (określenie adresu URL) dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-166">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table.</span></span> <span data-ttu-id="61c5d-167">Pełny przykład można znaleźć w temacie <xref:System.Web.DynamicData.MetaModel>.</span><span class="sxs-lookup"><span data-stu-id="61c5d-167">For a complete example, see <xref:System.Web.DynamicData.MetaModel>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]
 [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel GetModel (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaModel GetModel(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModel (contextType As Type) As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaModel ^ GetModel(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="static member GetModel : Type -&gt; System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.GetModel contextType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="61c5d-168">Typ kontekstu danych, zgodnie z definicją w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-168">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="61c5d-169">Zwraca wystąpienie modelu danych dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="61c5d-169">Returns the data-model instance for the specified context.</span></span></summary>
        <returns><span data-ttu-id="61c5d-170">Model danych, który jest skojarzony z określonym typem kontekstu.</span><span class="sxs-lookup"><span data-stu-id="61c5d-170">The data model that is associated with the specified context type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61c5d-171">Poniższy przykład pokazuje, <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> jak używać metody do wykonywania następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="61c5d-171">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="61c5d-172">Pobieranie domyślnego modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-172">Getting the default data model.</span></span>  
  
-   <span data-ttu-id="61c5d-173">Pobieranie modelu danych określonego przez przesłany typ kontekstu.</span><span class="sxs-lookup"><span data-stu-id="61c5d-173">Getting the data model specified by the passed context type.</span></span>  
  
 <span data-ttu-id="61c5d-174">Pełny przykład można znaleźć w temacie <xref:System.Web.DynamicData.MetaModel> Omówienie klasy.</span><span class="sxs-lookup"><span data-stu-id="61c5d-174">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61c5d-175">Nie znaleziono tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-175">The table was not found.</span></span></exception>
        <summary><span data-ttu-id="61c5d-176">Zwraca metadane opisujące tabelę modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-176">Returns the metadata that describes a data model table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-177"><xref:System.Web.DynamicData.MetaTable> Obiekt, który jest zwracany przez przeciążone metody, zawiera informacje o metadanych, które są skojarzone z określoną tabelą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-177">The <xref:System.Web.DynamicData.MetaTable> object that is returned by the overloaded methods contains the metadata information that is associated with the specified table.</span></span>  
  
 <span data-ttu-id="61c5d-178">[Uruchom](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) przykład online tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="61c5d-178">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c5d-179">Poniższy przykład pokazuje, <xref:System.Web.DynamicData.MetaModel.GetTable%2A> jak używać przeciążonych metod do wykonywania następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="61c5d-179">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> overloaded methods to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="61c5d-180"><xref:System.Web.DynamicData.MetaTable> Pobierz obiekt dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-180">Get the <xref:System.Web.DynamicData.MetaTable> object for the specified table.</span></span>  
  
-   <span data-ttu-id="61c5d-181">Uzyskaj dostęp do informacji metadanych zawartych <xref:System.Web.DynamicData.MetaTable> w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="61c5d-181">Access the metadata information that is contained by the <xref:System.Web.DynamicData.MetaTable> object.</span></span>  
  
 <span data-ttu-id="61c5d-182">Przykład zawiera stronę i jej plik związany z kodem.</span><span class="sxs-lookup"><span data-stu-id="61c5d-182">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --> 
  
 [!code-csharp[System.Web.DynamicData.MetaModel#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#4)]
 [!code-vb[System.Web.DynamicData.MetaModel#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string uniqueTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (uniqueTableName As String) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ uniqueTableName);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable uniqueTableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="61c5d-183">Nazwa identyfikująca tabelę w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-183">The name that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="61c5d-184">Zwraca metadane skojarzone z określoną tabelą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-184">Returns the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="61c5d-185">Metadane opisujące określoną tabelę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-185">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-186">Nazwa jednoznacznie identyfikuje tabelę w modelu danych i służy do generowania powiązanego adresu URL dla routingu.</span><span class="sxs-lookup"><span data-stu-id="61c5d-186">The name uniquely identifies a table in the data model and is used to generate the related URL for routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c5d-187">Poniższy przykład pokazuje, <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> jak używać metody do uzyskiwania metadanych dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-187">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="61c5d-188">Pełny przykład można znaleźć w temacie <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="61c5d-188">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]
 [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="61c5d-189">Nazwa nie została znaleziona w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-189">The name was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="61c5d-190">Typ, który identyfikuje tabelę w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-190">The type that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="61c5d-191">Zwraca metadane opisujące określoną tabelę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-191">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="61c5d-192">Metadane opisujące określoną tabelę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-192">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61c5d-193">Poniższy przykład pokazuje, <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> jak używać metody do uzyskiwania metadanych dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-193">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="61c5d-194">Pełny przykład można znaleźć w temacie <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="61c5d-194">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]
 [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61c5d-195">Nie znaleziono typu w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-195">The type was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string tableName, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (tableName As String, contextType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ tableName, Type ^ contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string * Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable (tableName, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="61c5d-196">Nazwa tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-196">The name of the table.</span></span></param>
        <param name="contextType"><span data-ttu-id="61c5d-197">Kontekst danych służący do wyszukiwania tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-197">The data context to search for the table.</span></span></param>
        <summary><span data-ttu-id="61c5d-198">Zwraca metadane opisujące określoną tabelę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-198">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="61c5d-199">Metadane opisujące określoną tabelę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-199">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61c5d-200">Poniższy przykład pokazuje, <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> jak używać metody do uzyskiwania metadanych dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-200">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="61c5d-201">Pełny przykład można znaleźć w temacie <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="61c5d-201">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]
 [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61c5d-202"><paramref name="tablename" />lub <paramref name="contextType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="61c5d-202"><paramref name="tablename" /> or <paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="61c5d-203">Kontekst nie jest zarejestrowany lub tabela nie istnieje w kontekście danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-203">The context is not registered or the table does not exist in the data context.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61c5d-204">Rejestruje kontekst danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-204">Registers the data context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-205">Informacje o inicjalizacji kontekstu danych można definiować przy użyciu właściwości <xref:System.Web.DynamicData.ContextConfiguration> klasy.</span><span class="sxs-lookup"><span data-stu-id="61c5d-205">You can define data-context initialization information by using the properties of the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; -&gt; unit" Usage="metaModel.RegisterContext contextFactory" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="61c5d-206">Fabryka służąca do tworzenia wystąpień kontekstu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-206">The factory for instantiating the data context.</span></span></param>
        <summary><span data-ttu-id="61c5d-207">Rejestruje kontekst danych określony przez fabrykę kontekstową.</span><span class="sxs-lookup"><span data-stu-id="61c5d-207">Registers the data context that is specified by a context factory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-208">Ta metoda używa domyślnych informacji kontekstowych, które są zdefiniowane przez <xref:System.Web.DynamicData.ContextConfiguration> klasę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-208">This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span> <span data-ttu-id="61c5d-209">Umożliwia utworzenie wystąpienia kontekstu danych przy użyciu własnego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="61c5d-209">It enables you to instantiate the data context by using your own constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type -&gt; unit&#xA;override this.RegisterContext : Type -&gt; unit" Usage="metaModel.RegisterContext contextType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="61c5d-210">Typ kontekstu danych, zgodnie z definicją w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-210">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="61c5d-211">Rejestruje wystąpienie kontekstu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-211">Registers a data-context instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-212">Ta metoda używa domyślnych informacji kontekstu określonych przez <xref:System.Web.DynamicData.ContextConfiguration> klasę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-212">This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit" Usage="metaModel.RegisterContext dataModelProvider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="61c5d-213">Dostawca modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-213">A provider for the data model.</span></span></param>
        <summary><span data-ttu-id="61c5d-214">Rejestruje wystąpienie kontekstu danych przy użyciu dostawcy modelu danych</span><span class="sxs-lookup"><span data-stu-id="61c5d-214">Registers a data context instance by using a data-model provider</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object), configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextFactory, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="61c5d-215">Delegat, który jest używany do tworzenia wystąpienia kontekstu modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-215">A delegate that is used to instantiate the data model context.</span></span></param>
        <param name="configuration"><span data-ttu-id="61c5d-216">Informacje kontekstowe zdefiniowane przez <see cref="T:System.Web.DynamicData.ContextConfiguration" /> klasę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-216">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="61c5d-217">Rejestruje wystąpienie kontekstu danych przy użyciu określonej konfiguracji kontekstu i przez włączenie konstruktora niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="61c5d-217">Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-218">Fabryka kontekstu w tej metodzie umożliwia utworzenie wystąpienia kontekstu modelu danych przy użyciu konstruktora niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="61c5d-218">The context factory in this method enables you to instantiate a data model context by using a custom constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61c5d-219"><paramref name="contextFactory" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="61c5d-219"><paramref name="contextFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="61c5d-220">Wystąpienie, które jest tworzone przez <paramref name="contextFactory" /> , jest nieprawidłowe. <paramref name="contextType" /></span><span class="sxs-lookup"><span data-stu-id="61c5d-220">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type, configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextType, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="61c5d-221">Typ kontekstu danych, zgodnie z definicją w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-221">The type of the data context as defined in the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="61c5d-222">Informacje o konfiguracji dla kontekstu zdefiniowane przez <see cref="T:System.Web.DynamicData.ContextConfiguration" /> klasę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-222">The configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="61c5d-223">Rejestruje wystąpienie kontekstu danych przy użyciu określonej konfiguracji kontekstu.</span><span class="sxs-lookup"><span data-stu-id="61c5d-223">Registers a data-context instance by using the specified context configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61c5d-224">Poniższy przykład pokazuje, <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> jak używać metody do rejestrowania kontekstu danych z włączoną obsługą szkieletu, zgodnie z `configuration` parametrem.</span><span class="sxs-lookup"><span data-stu-id="61c5d-224">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61c5d-225"><paramref name="contextType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="61c5d-225"><paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (dataModelProvider, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="61c5d-226">Dostawca modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-226">A provider for the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="61c5d-227">Informacje kontekstowe zdefiniowane przez <see cref="T:System.Web.DynamicData.ContextConfiguration" /> klasę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-227">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="61c5d-228">Rejestruje wystąpienie kontekstu danych przy użyciu określonej konfiguracji kontekstu i przez włączenie dostawcy modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-228">Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61c5d-229"><paramref name="dataModelProvider" />lub <paramref name="configuration" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="61c5d-229"><paramref name="dataModelProvider" /> or <paramref name="configuration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="61c5d-230"><paramref name="contextType" />jest już zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="61c5d-230"><paramref name="contextType" /> is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetRegistrationException">
      <MemberSignature Language="C#" Value="public static void ResetRegistrationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetRegistrationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.ResetRegistrationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetRegistrationException ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetRegistrationException();" />
      <MemberSignature Language="F#" Value="static member ResetRegistrationException : unit -&gt; unit" Usage="System.Web.DynamicData.MetaModel.ResetRegistrationException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c5d-231">Resetuje wszelkie wcześniejsze błędy rejestracji kontekstu, które mogły wystąpić.</span><span class="sxs-lookup"><span data-stu-id="61c5d-231">Resets any previous context registration error that might have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-232">Gdy wystąpi błąd podczas rejestracji kontekstu danych, wyjątek jest buforowany i zgłaszany we wszystkich kolejnych operacjach.</span><span class="sxs-lookup"><span data-stu-id="61c5d-232">When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.</span></span> <span data-ttu-id="61c5d-233">Na przykład jeśli wystąpi błąd podczas uruchamiania aplikacji, jest on zgłaszany dla każdego żądania.</span><span class="sxs-lookup"><span data-stu-id="61c5d-233">For example, if an error occurs at application start, it is thrown on every request.</span></span> <span data-ttu-id="61c5d-234">Wywołaj tę metodę, aby wyczyścić błąd i umożliwić wykonanie nowej rejestracji kontekstu.</span><span class="sxs-lookup"><span data-stu-id="61c5d-234">Call this method to clear the error and to enable a new context registration to be performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As ReadOnlyCollection(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ Tables { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c5d-235">Pobiera kolekcję wszystkich tabel, które są częścią modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-235">Gets a collection of all the tables that are part of the data model.</span></span></summary>
        <value><span data-ttu-id="61c5d-236">Kolekcja zawierająca tabele należące do modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-236">A collection that contains the tables that belong to the data model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-237">Kolekcja zawiera wszystkie tabele w modelu danych, w tym tabele, które nie są widoczne (nie są częścią dynamicznego szkieletu danych).</span><span class="sxs-lookup"><span data-stu-id="61c5d-237">The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).</span></span>  
  
 <span data-ttu-id="61c5d-238">[Uruchom](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) przykład online tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="61c5d-238">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c5d-239">Poniższy przykład pokazuje, <xref:System.Web.DynamicData.MetaModel.Tables%2A> jak używać właściwości i <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> do wykonywania następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="61c5d-239">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="61c5d-240">Pobierz kolekcję wszystkich tabel w modelu danych i Pokaż je w `GridView` kontrolce.</span><span class="sxs-lookup"><span data-stu-id="61c5d-240">Get a collection of all the tables in a data model and show them in a `GridView` control.</span></span>  
  
-   <span data-ttu-id="61c5d-241">Pobierz kolekcję widocznych tabel w modelu danych i Pokaż je w `GridView` kontrolce.</span><span class="sxs-lookup"><span data-stu-id="61c5d-241">Get a collection of the visible tables in a data model and show them in a `GridView` control.</span></span>  
  
 <span data-ttu-id="61c5d-242">Przykład zawiera stronę i jej plik związany z kodem.</span><span class="sxs-lookup"><span data-stu-id="61c5d-242">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]
 [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61c5d-243">Próbuje pobrać metadane skojarzone z określoną tabelą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-243">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(string uniqueTableName, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (uniqueTableName As String, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(System::String ^ uniqueTableName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : string *  -&gt; bool" Usage="metaModel.TryGetTable (uniqueTableName, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="61c5d-244">Nazwa, która jednoznacznie identyfikuje tabelę.</span><span class="sxs-lookup"><span data-stu-id="61c5d-244">The name that uniquely identifies the table.</span></span></param>
        <param name="table"><span data-ttu-id="61c5d-245">Gdy ta metoda zostanie zwrócona, a jeśli zostanie znaleziona żądana tabela, zawiera metadane dla tej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-245">When this method returns, and if it has found the requested table, contains the metadata for that table.</span></span> <span data-ttu-id="61c5d-246">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="61c5d-246">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="61c5d-247">Próbuje pobrać metadane skojarzone z określoną tabelą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-247">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="61c5d-248"><see langword="true" />w przypadku znalezienia metadanych tabeli; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="61c5d-248"><see langword="true" /> if the table metadata is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-249">Ta metoda pobiera metadane skojarzone z określoną tabelą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-249">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="61c5d-250">Jeśli tabela nie zostanie znaleziona, ta metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="61c5d-250">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="61c5d-251">Różni się to od <xref:System.Web.DynamicData.MetaModel.GetTable%2A> metody, która zgłasza wyjątek, jeśli tabela nie zostanie znaleziona.</span><span class="sxs-lookup"><span data-stu-id="61c5d-251">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61c5d-252"><paramref name="uniqueTableName" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="61c5d-252"><paramref name="uniqueTableName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : Type *  -&gt; bool" Usage="metaModel.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="61c5d-253">Typ tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-253">The table type.</span></span></param>
        <param name="table"><span data-ttu-id="61c5d-254">Gdy ta metoda zostanie zwrócona, a jeśli żądana tabela zostanie znaleziona, zawiera metadane dla określonej tabeli.</span><span class="sxs-lookup"><span data-stu-id="61c5d-254">When this method returns, and if the requested table has been found, contains the metadata for the specified table.</span></span> <span data-ttu-id="61c5d-255">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="61c5d-255">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="61c5d-256">Próbuje pobrać metadane skojarzone z określoną tabelą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-256">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="61c5d-257"><see langword="true" />w przypadku znalezienia metadanych tabeli; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="61c5d-257"><see langword="true" /> if the table metadata is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c5d-258">Ta metoda pobiera metadane skojarzone z określoną tabelą.</span><span class="sxs-lookup"><span data-stu-id="61c5d-258">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="61c5d-259">Jeśli tabela nie zostanie znaleziona, ta metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="61c5d-259">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="61c5d-260">Różni się to od <xref:System.Web.DynamicData.MetaModel.GetTable%2A> metody, która zgłasza wyjątek, jeśli tabela nie zostanie znaleziona.</span><span class="sxs-lookup"><span data-stu-id="61c5d-260">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61c5d-261"><paramref name="entityType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="61c5d-261"><paramref name="entityType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VisibleTables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt; VisibleTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Web.DynamicData.MetaTable&gt; VisibleTables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleTables As List(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ VisibleTables { System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleTables : System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c5d-262">Pobiera kolekcję widocznych tabel w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-262">Gets a collection of the visible tables in the data model.</span></span></summary>
        <value><span data-ttu-id="61c5d-263">Tabela widoczna odwołuje się do tabeli, w której włączono obsługę szkieletu.</span><span class="sxs-lookup"><span data-stu-id="61c5d-263">A visible table refers to a table that has scaffolding enabled.</span></span> <span data-ttu-id="61c5d-264">Oznacza to, że jest to tabela, dla której istnieje strona list. aspx.</span><span class="sxs-lookup"><span data-stu-id="61c5d-264">This means that it is a table for which a List.aspx page exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61c5d-265">Poniższy przykład pokazuje, jak używać właściwości, <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> Aby uzyskać kolekcję widocznych tabel w modelu danych.</span><span class="sxs-lookup"><span data-stu-id="61c5d-265">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model.</span></span> <span data-ttu-id="61c5d-266">Pełny przykład można znaleźć w temacie <xref:System.Web.DynamicData.MetaModel> Omówienie klasy.</span><span class="sxs-lookup"><span data-stu-id="61c5d-266">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]
 [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
