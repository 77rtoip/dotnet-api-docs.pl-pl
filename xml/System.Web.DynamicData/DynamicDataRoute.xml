<Type Name="DynamicDataRoute" FullName="System.Web.DynamicData.DynamicDataRoute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a83274408a8c9bd21db082ccc8de2c7b73fba973" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30582304" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicDataRoute : System.Web.Routing.Route" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicDataRoute extends System.Web.Routing.Route" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicDataRoute" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicDataRoute&#xA;Inherits Route" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicDataRoute : System::Web::Routing::Route" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.Route</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje trasę, która jest używana przez danych dynamicznych platformy ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trasy są używane do konfigurowania zachowania danych dynamicznych.  
  
 Statycznych <xref:System.Web.Routing.RouteTable.Routes%2A> właściwość <xref:System.Web.Routing.RouteTable> typu przetrzymuje kolekcję tras. Dla danych dynamicznych, zwykle są rejestrowane co najmniej jednej trasy (dodany do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości) w `Application_Start` zdarzenia w pliku Global.asax. Na przykład tras określają, czy szczegóły wiersza danych powinny być wyświetlane na tej samej stronie jako lista wierszy. Można również określić, czy szczegóły mają pojawiać się na tej samej stronie jako lista wierszy dla niektórych tabel, a innych nie.  
  
 Możesz ustawić <xref:System.Web.DynamicData.DynamicDataRoute.Action%2A>, <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A>, <xref:System.Web.DynamicData.DynamicDataRoute.Table%2A>, i <xref:System.Web.DynamicData.DynamicDataRoute.Model%2A> właściwości i udostępnić wzorzec na adres URL w <xref:System.Web.Routing.Route.%23ctor%2A> konstruktora.  
  
 Dynamiczne dane z użyciem wzorca adresu URL, który podasz odpowiadające wzorców adresów URL żądań i tworzyć adresy URL. Aby uzyskać więcej informacji, zobacz <xref:System.Web.DynamicData.DynamicDataRoute.%23ctor%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicDataRoute (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicDataRoute(System::String ^ url);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Wzorzec dla adresu URL.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.DynamicDataRoute" /> przy użyciu określonego wzorca adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj należy określić adresy URL, które utworzy dynamicznych danych przy użyciu parametrów podstawiania. Na przykład w przypadku przekazania ciąg "{table} / {action}", wynik może być adresem URL "~ / Products/ListDetails.aspx" podczas wyświetlania tabeli produktu za pomocą akcji ListDetails.  
  
 Używanie parametrów podstawiania nie jest wymagane. Można przekazać ciągu "Tabeli/DynamicData", który zwróci "~ / Table/DynamicData.aspx". Można przekazać "MyPageName" wygenerowało "~ / MyPageName.aspx". Dane dynamiczne nie bazuje na adres URL, aby określić informacje o tabeli i akcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę akcji dla trasy.</summary>
        <value>Nazwa akcji dla trasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Listę nazw możliwych działań, zobacz <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>. Jeśli nie ustawisz tej właściwości po utworzeniu wystąpienia <xref:System.Web.DynamicData.DynamicDataRoute>, trasy będą stosowane do wszystkich akcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionFromRouteData">
      <MemberSignature Language="C#" Value="public string GetActionFromRouteData (System.Web.Routing.RouteData routeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetActionFromRouteData(class System.Web.Routing.RouteData routeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetActionFromRouteData(System::Web::Routing::RouteData ^ routeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeData" Type="System.Web.Routing.RouteData" />
      </Parameters>
      <Docs>
        <param name="routeData">Dane trasy, które odnoszą się do bieżącego żądania. Aby uzyskać więcej informacji, zobacz <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
        <summary>Zwraca akcji z <see cref="T:System.Web.Routing.RouteData" /> dla bieżącego żądania dynamicznej danych sieci Web.</summary>
        <returns>Akcja. Aby uzyskać listę możliwych wartości, zobacz <see cref="T:System.Web.DynamicData.PageAction" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Nie można odnaleźć akcji informacje routingu żądania sieci Web.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">Zawiera informacje dotyczące żądania sieci Web.</param>
        <summary>Zwraca informacje dotyczące określonego żądania sieci Web routingu.</summary>
        <returns>Informacje routingu dla żądania sieci Web.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `httpContext` Parametru zapewnia informacji żądania sieci Web, który jest wymagany, dzięki czemu można zidentyfikować żądanego tabeli i akcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableFromRouteData">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTableFromRouteData (System.Web.Routing.RouteData routeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTableFromRouteData(class System.Web.Routing.RouteData routeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTableFromRouteData(System::Web::Routing::RouteData ^ routeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeData" Type="System.Web.Routing.RouteData" />
      </Parameters>
      <Docs>
        <param name="routeData">Dane trasy, które odnoszą się do bieżącego żądania. Aby uzyskać więcej informacji, zobacz <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
        <summary>Określa tabelę, która jest skojarzona z żądanie strony dynamicznej danych sieci Web.</summary>
        <returns>Metadane opisujące tabelę, która jest wyświetlana w danych dynamicznych.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Nie znaleziono tabeli informacje routingu żądania sieci Web.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">Zawiera informacje dotyczące żądania sieci Web.</param>
        <param name="values">Kolekcja obiektów trasy dla bieżącej aplikacji.</param>
        <summary>Zwraca ścieżkę wirtualną trasy.</summary>
        <returns>Ścieżka wirtualna.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Model" />
      <MemberSignature Language="VB.NET" Value="Public Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); void set(System::Web::DynamicData::MetaModel ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia model danych, do którego jest stosowana trasa.</summary>
        <value>Metadane modelu dla danych trasy stosowanym do.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ustawisz tej właściwości po utworzeniu wystąpienia <xref:System.Web.DynamicData.DynamicDataRoute>, domyślny model w zarejestrowany <xref:System.Data.Linq.DataContext> jest używane wystąpienie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.DynamicDataRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As DynamicDataRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataRouteHandler ^ RouteHandler { System::Web::DynamicData::DynamicDataRouteHandler ^ get(); void set(System::Web::DynamicData::DynamicDataRouteHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który przetwarza żądania dla trasy.</summary>
        <value>Program obsługi, który służy do przetwarzania żądania dla trasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicDataRoute.RouteHandler%2A> Jest taka sama jak właściwość <xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=nameWithType> właściwości. Jest podana jako silnie typizowaną wersję <xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=nameWithType> właściwości kodowania wygody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public string Table { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Table" />
      <MemberSignature Language="VB.NET" Value="Public Property Table As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Table { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę tabeli dla trasy.</summary>
        <value>Nazwa tabeli, która jest skojarzona z trasą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ustawisz tej właściwości po utworzeniu wystąpienia <xref:System.Web.DynamicData.DynamicDataRoute>, trasy będą stosowane do wszystkich tabel w modelu danych, które są oznaczone <xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewName">
      <MemberSignature Language="C#" Value="public string ViewName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.ViewName" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę strony .aspx, która jest skojarzona z trasy.</summary>
        <value>Nazwa strony .aspx, która jest skojarzona z trasą. Jeśli strona nie jest określona dla trasy, właściwość zwraca wartość <see cref="P:System.Web.DynamicData.DynamicDataRoute.Action" /> właściwości z dołączonym ".aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane dynamiczne używa kilka nazw strony .aspx standardowa do tworzenia interfejsu użytkownika, aby umożliwić użytkownikom widoku, aktualizowanie i usuwanie danych z danej tabeli. Te nazwy strony obejmują List.aspx, Details.aspx Edit.aspx, Insert.aspx i ListDetails.aspx. <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A> Właściwość określa, która z tych stron ma być używany dla danej tabeli i akcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>