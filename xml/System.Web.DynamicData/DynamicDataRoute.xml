<Type Name="DynamicDataRoute" FullName="System.Web.DynamicData.DynamicDataRoute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1f4004132bc15b26e708042e64884b8cc04c58c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69055469" /></Metadata><TypeSignature Language="C#" Value="public class DynamicDataRoute : System.Web.Routing.Route" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicDataRoute extends System.Web.Routing.Route" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicDataRoute" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicDataRoute&#xA;Inherits Route" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicDataRoute : System::Web::Routing::Route" />
  <TypeSignature Language="F#" Value="type DynamicDataRoute = class&#xA;    inherit Route" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.Route</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje trasę, która jest używana przez dane dynamiczne ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trasy służą do konfigurowania zachowania danych dynamicznych.  
  
 <xref:System.Web.Routing.RouteTable.Routes%2A> Właściwość<xref:System.Web.Routing.RouteTable> statyczna typu przechowuje kolekcję tras. W przypadku danych dynamicznych jedna lub więcej tras jest zwykle rejestrowanych (dodawanych <xref:System.Web.Routing.RouteTable.Routes%2A> do właściwości) `Application_Start` w zdarzeniu w pliku Global. asax. Na przykład trasy określają, czy Szczegóły wiersza danych powinny być wyświetlane na tej samej stronie co Lista wierszy. Mogą także określić, czy szczegóły powinny być wyświetlane na tej samej stronie, co Lista wierszy dla niektórych tabel, ale nie dla innych.  
  
 Należy ustawić <xref:System.Web.DynamicData.DynamicDataRoute.Action%2A> <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A> <xref:System.Web.Routing.Route.%23ctor%2A> właściwości,, <xref:System.Web.DynamicData.DynamicDataRoute.Table%2A>i i podać wzorzec dla adresu URL w konstruktorze. <xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>  
  
 Dane dynamiczne używają wzorca adresu URL, który jest udostępniany w celu dopasowania wzorców adresów URL dla żądań i tworzenia adresów URL. Aby uzyskać więcej informacji, zobacz <xref:System.Web.DynamicData.DynamicDataRoute.%23ctor%2A>.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Instrukcje: Definiowanie trasy</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicDataRoute (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicDataRoute(System::String ^ url);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicDataRoute : string -&gt; System.Web.DynamicData.DynamicDataRoute" Usage="new System.Web.DynamicData.DynamicDataRoute url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Wzorzec dla adresu URL.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.DynamicData.DynamicDataRoute" /> klasy przy użyciu określonego wzorca adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj należy określić adresy URL, które będą tworzone przez dane dynamiczne przy użyciu parametrów podstawienia. Na przykład, Jeśli przekażesz ciąg "{Table}/{Action}", wynikiem będzie adres URL "~/Products/ListDetails.aspx" podczas wyświetlania tabeli produktu przy użyciu akcji ListDetails.  
  
 Używanie parametrów podstawienia nie jest wymagane. Można przekazać ciąg "Table/DynamicData", który będzie generował "\~/Table/DynamicData.aspx". Do utworzenia "\~/MyPageName.aspx" można przekazać "webpagename". Dane dynamiczne nie polegają na adresie URL, aby określić informacje o tabelach i akcjach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę akcji dla trasy.</summary>
        <value>Nazwa akcji dla trasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Listę możliwych nazw akcji można znaleźć w temacie <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>. Jeśli ta właściwość nie zostanie ustawiona podczas tworzenia wystąpienia <xref:System.Web.DynamicData.DynamicDataRoute>, trasa będzie stosowana do wszystkich akcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionFromRouteData">
      <MemberSignature Language="C#" Value="public string GetActionFromRouteData (System.Web.Routing.RouteData routeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetActionFromRouteData(class System.Web.Routing.RouteData routeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetActionFromRouteData(System::Web::Routing::RouteData ^ routeData);" />
      <MemberSignature Language="F#" Value="member this.GetActionFromRouteData : System.Web.Routing.RouteData -&gt; string" Usage="dynamicDataRoute.GetActionFromRouteData routeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeData" Type="System.Web.Routing.RouteData" />
      </Parameters>
      <Docs>
        <param name="routeData">Dane trasy odnoszące się do bieżącego żądania. Aby uzyskać więcej informacji, zobacz <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
        <summary>Zwraca akcję z <see cref="T:System.Web.Routing.RouteData" /> obiektu dla bieżącego żądania sieci Web danych dynamicznych.</summary>
        <returns>Akcja. Listę możliwych wartości można znaleźć w temacie <see cref="T:System.Web.DynamicData.PageAction" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">W informacjach o routingu żądania sieci Web nie znaleziono akcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="override this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="dynamicDataRoute.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">Zawiera informacje o żądaniu sieci Web.</param>
        <summary>Zwraca informacje o routingu dla określonego żądania sieci Web.</summary>
        <returns>Informacje o routingu dla żądania sieci Web.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `httpContext` Parametr zawiera informacje o żądaniu sieci Web, które są wymagane, aby można było zidentyfikować żądaną tabelę i akcję.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableFromRouteData">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTableFromRouteData (System.Web.Routing.RouteData routeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTableFromRouteData(class System.Web.Routing.RouteData routeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTableFromRouteData(System::Web::Routing::RouteData ^ routeData);" />
      <MemberSignature Language="F#" Value="member this.GetTableFromRouteData : System.Web.Routing.RouteData -&gt; System.Web.DynamicData.MetaTable" Usage="dynamicDataRoute.GetTableFromRouteData routeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeData" Type="System.Web.Routing.RouteData" />
      </Parameters>
      <Docs>
        <param name="routeData">Dane trasy odnoszące się do bieżącego żądania. Aby uzyskać więcej informacji, zobacz <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
        <summary>Identyfikuje tabelę skojarzoną z żądaniem dynamicznej strony sieci Web.</summary>
        <returns>Metadane opisujące tabelę wyświetlaną przez dane dynamiczne.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Nie można odnaleźć tabeli w informacjach routingu żądania sieci Web.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="dynamicDataRoute.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">Zawiera informacje o żądaniu sieci Web.</param>
        <param name="values">Kolekcja obiektów tras dla bieżącej aplikacji.</param>
        <summary>Zwraca ścieżkę wirtualną trasy.</summary>
        <returns>Ścieżka wirtualna.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Model" />
      <MemberSignature Language="VB.NET" Value="Public Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); void set(System::Web::DynamicData::MetaModel ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia model danych, do którego zostanie zastosowana trasa.</summary>
        <value>Metadane modelu danych, do którego odnosi się trasa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość nie zostanie ustawiona podczas tworzenia wystąpienia <xref:System.Web.DynamicData.DynamicDataRoute>, zostanie użyty domyślny model dla zarejestrowanego <xref:System.Data.Linq.DataContext> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.DynamicDataRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As DynamicDataRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataRouteHandler ^ RouteHandler { System::Web::DynamicData::DynamicDataRouteHandler ^ get(); void set(System::Web::DynamicData::DynamicDataRouteHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RouteHandler : System.Web.DynamicData.DynamicDataRouteHandler with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.RouteHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który przetwarza żądania dla trasy.</summary>
        <value>Program obsługi, który jest używany do przetwarzania żądań dla trasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest taka sama jak <xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=nameWithType> właściwość. <xref:System.Web.DynamicData.DynamicDataRoute.RouteHandler%2A> Jest ona dostarczana jako silnie wpisana wersja <xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=nameWithType> właściwości dla wygody do kodowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public string Table { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Table" />
      <MemberSignature Language="VB.NET" Value="Public Property Table As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Table { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Table : string with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę tabeli dla trasy.</summary>
        <value>Nazwa tabeli skojarzonej z trasą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość nie zostanie ustawiona podczas tworzenia wystąpienia <xref:System.Web.DynamicData.DynamicDataRoute>, trasa będzie stosowana do wszystkich tabel w modelu danych, które są wskazywane przez. <xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewName">
      <MemberSignature Language="C#" Value="public string ViewName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.ViewName" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewName : string with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.ViewName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę strony. aspx, która jest skojarzona z trasą.</summary>
        <value>Nazwa strony. aspx, która jest skojarzona z trasą. Jeśli nie określono żadnej strony dla trasy, właściwość zwraca wartość <see cref="P:System.Web.DynamicData.DynamicDataRoute.Action" /> właściwości z dołączoną do niej wartością ". aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane dynamiczne korzystają z kilku standardowych nazw stron. aspx, aby utworzyć interfejs użytkownika, aby umożliwić użytkownikom wyświetlanie, aktualizowanie i usuwanie danych z danej tabeli. Te nazwy stron obejmują: list. aspx, details. aspx, Edit. aspx, INSERT. aspx i ListDetails. aspx. <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A> Właściwość określa, które z tych stron należy zastosować dla danej tabeli i akcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
