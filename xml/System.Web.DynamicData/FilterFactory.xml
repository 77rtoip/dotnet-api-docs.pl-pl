<Type Name="FilterFactory" FullName="System.Web.DynamicData.FilterFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd65fb73338091c246b89d0287291387b020e235" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69055192" /></Metadata><TypeSignature Language="C#" Value="public class FilterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.FilterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterFactory" />
  <TypeSignature Language="F#" Value="type FilterFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Tworzy szablon filtru.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.FilterFactory> Klasa jest używana w czasie wykonywania przez dane dynamiczne, aby uzyskać wystąpienie szablonu filtru dla określonego typu kolumny.  
  
 Można zastąpić metody, które są zdefiniowane w tej klasie, aby dostosować sposób ładowania szablonów filtrów. Na przykład implementacja niestandardowa może ładować szablony filtrów z lokalizacji innej niż domyślna folder/DynamicData/Filters.  
  
 Dane dynamiczne udostępniają szablony filtrów dla typów kolumn obcych, logicznych i wyliczenia oraz wyświetlają je przy użyciu <xref:System.Web.UI.WebControls.DropDownList> kontrolki. Można również tworzyć niestandardowe szablony filtrów.  
  
   
  
## Examples  
 Przykład filtrowania wierszy tabeli używa domyślnych szablonów filtrów, zobacz <xref:System.Web.DynamicData.QueryableFilterRepeater> Klasa.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.FieldTemplateFactory" />
    <altmember cref="T:System.Web.DynamicData.EntityTemplateFactory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.FilterFactory" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl(class System.Web.DynamicData.MetaColumn column, string filterUIHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFilterControl (column As MetaColumn, filterUIHint As String) As QueryableFilterUserControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::DynamicData::QueryableFilterUserControl ^ CreateFilterControl(System::Web::DynamicData::MetaColumn ^ column, System::String ^ filterUIHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterControl : System.Web.DynamicData.MetaColumn * string -&gt; System.Web.DynamicData.QueryableFilterUserControl&#xA;override this.CreateFilterControl : System.Web.DynamicData.MetaColumn * string -&gt; System.Web.DynamicData.QueryableFilterUserControl" Usage="filterFactory.CreateFilterControl (column, filterUIHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.QueryableFilterUserControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="filterUIHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Kolumna danych, do której ma zastosowanie szablon filtru.</param>
        <param name="filterUIHint">Nazwa szablonu filtru do użycia.</param>
        <summary>Tworzy wystąpienie szablonu filtru.</summary>
        <returns>Wystąpienie <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> klasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez dane dynamiczne w celu uzyskania wystąpienia szablonu filtru. Klasy pochodne mogą przesłaniać tę metodę w celu dostosowania sposobu tworzenia wystąpień szablonów filtrów. Na przykład implementacja niestandardowa może ładować szablony z skompilowanego zestawu zamiast z domyślnego folderu ~/DynamicData/Filters.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" />ma **wartość null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFilterVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilterVirtualPath(class System.Web.DynamicData.MetaColumn column, string filterUIHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilterVirtualPath (column As MetaColumn, filterUIHint As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFilterVirtualPath(System::Web::DynamicData::MetaColumn ^ column, System::String ^ filterUIHint);" />
      <MemberSignature Language="F#" Value="abstract member GetFilterVirtualPath : System.Web.DynamicData.MetaColumn * string -&gt; string&#xA;override this.GetFilterVirtualPath : System.Web.DynamicData.MetaColumn * string -&gt; string" Usage="filterFactory.GetFilterVirtualPath (column, filterUIHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="filterUIHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Kolumna danych, do której ma zastosowanie szablon filtru.</param>
        <param name="filterUIHint">Szablon filtru do użycia.</param>
        <summary>Pobiera ścieżkę wirtualną szablonu filtru.</summary>
        <returns>Ścieżka wirtualna szablonu filtru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie szablony filtrów znajdują się w folderze ~/DynamicData/Filers.  
  
 Ta metoda określa ścieżkę wirtualną folderu, który zawiera szablon pola. Klasy pochodne mogą przesłaniać tę metodę w celu udostępnienia szablonów filtrów na podstawie innej ścieżki wirtualnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" />ma **wartość null**.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
