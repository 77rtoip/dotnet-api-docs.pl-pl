<Type Name="ControlFilterExpression" FullName="System.Web.DynamicData.ControlFilterExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41ed37f8a8a08a53bb4b2b310a0d9857c300cc24" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30582208" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.ControlFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Modyfikuje zapytania do bazy danych przy użyciu klucza danych elementu zaznaczonego w formancie powiązane z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.ControlFilterExpression> Klasy, która jest przeznaczona do użycia, gdy strona zawiera dwa formanty powiązane z danymi <xref:System.Web.UI.WebControls.GridView> kontroli i <xref:System.Web.UI.WebControls.ListView> formantu. Jeden formant jest źródłem, wybranym klucz danych (wiersz). Inny formant jest element docelowy, na którym dane są wyświetlane, w oparciu o wybrany klucz danych. Dane docelowej są uzyskiwane przez formant źródła danych, która wykonuje zapytania, który jest zdefiniowany w <xref:System.Web.UI.WebControls.QueryExtender> klasy i czy jest tworzona przy użyciu klucza wybranych danych.  
  
 Aby użyć <xref:System.Web.DynamicData.ControlFilterExpression> klasy strony, wykonaj następujące kroki:  
  
-   Dodaj <xref:System.Web.UI.WebControls.QueryExtender> formantu do strony.  
  
-   Ustaw `TargetControlID` właściwość <xref:System.Web.UI.WebControls.QueryExtender> kontroli identyfikator formantu docelowego źródła danych.  
  
-   Dodaj <xref:System.Web.DynamicData.ControlFilterExpression> wystąpienie do <xref:System.Web.UI.WebControls.QueryExtender> formantu.  
  
-   Ustaw `ControlID` właściwość <xref:System.Web.DynamicData.ControlFilterExpression> elementu do kontroli źródła z danymi.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.ControlFilterExpression> klasę, aby odwołać powiązane z danymi kontroli źródła, gdy jest wybrany klucz danych. <xref:System.Web.UI.WebControls.QueryExtender> Kontrolować punktów do kontroli źródła danych docelowych, która uzyskuje dane, które są filtrowane według przy użyciu klucza wybranych danych. W tym przykładzie kontroli źródła z danymi odwołuje się do tabeli nadrzędnej i powiązane z danymi formancie docelowym odwołuje się do tabeli podrzędnej.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="SourceGridViewID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <altmember cref="P:System.Web.DynamicData.ControlFilterExpression.Column" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public string Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Column { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kolumny, na podstawie zapytania.</summary>
        <value>Nazwa kolumny, na podstawie zapytania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest pusta, <xref:System.Web.DynamicData.ControlFilterExpression> kontroli traktuje wybrany klucz danych jako klucz podstawowy w bieżącej tabeli. Jest to przydatne w przypadku szczegółów listy gdzie działania źródłowego i docelowego formantów powiązanych z danymi na danych z tej samej tabeli.  
  
 Jeśli wartość przypisana do właściwości, <xref:System.Web.DynamicData.ControlFilterExpression> kontroli traktuje klucz danych jako klucz obcy. Wartość przypisana do tej właściwości staje się nazwa kolumny, która jest wyświetlana w formancie docelowym powiązane z danymi. Jest to przydatne w przypadku scenariusza nadrzędny podrzędny, gdzie formantu powiązanego z danymi docelowego operuje na danych z tabeli podrzędnej i powiązane z danymi kontroli źródła działa na danych z tabeli nadrzędnej.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.ControlFilterExpression> klasy można ustawić kolumny, która dotyczy filtr.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator źródła formantu powiązanego z danymi.</summary>
        <value>Identyfikator formantu źródła powiązane z danymi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.ControlFilterExpression.ControlID%2A> Właściwość identyfikuje kontroli powiązane z danymi źródła, z którego jest wybrany klucz danych. Wybrany klucz danych jest następnie używany przez <xref:System.Web.DynamicData.ControlFilterExpression> kontroli w celu skonstruowania zapytania.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Web.DynamicData.ControlFilterExpression> klasę, aby ustawić identyfikator źródła formantu powiązanego z danymi.  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Źródła danych zapytania można zmodyfikować.</param>
        <summary>Pobiera kwerendy źródła danych, aby zmodyfikować.</summary>
        <returns>Obiekt, który reprezentuje zapytania źródła danych, które jest modyfikowany przez to <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.ControlFilterExpression.GetQueryable%28System.Linq.IQueryable%29> Metoda modyfikuje zapytania oparte na kluczu wybranych danych z kontroli źródła z danymi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Aby przywrócić stan.</param>
        <summary>Przywraca stan widoku wcześniej zapisany.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje zmiany, aby wyświetlić stan od czasu strony zostało przesłane do serwera.</summary>
        <returns>Obiekt, który zawiera zmiany, aby wyświetlić stan. Jeśli stan jest niedostępny widok skojarzony z obiektem, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">Kontrolki, w którym <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> wystąpienie znajduje się, takich jak <see cref="T:System.Web.UI.WebControls.QueryExtender" /> formantu.</param>
        <param name="context">Aplikacja do bieżącego <see cref="T:System.Web.HttpContext" /> obiektu.</param>
        <param name="dataSource">Źródło danych docelowych dla <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> wystąpienia. Jeśli <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> wystąpienie znajduje się w <see cref="T:System.Web.UI.WebControls.QueryExtender" /> źródła danych jest ten parametr sterowanie <see cref="T:System.Web.UI.WebControls.QueryExtender" /> kontroli odwołuje się do</param>
        <summary>Inicjuje wyrażenia filtru informacje o źródle danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> obiekt śledzenie zmian stanu widoku, mogą być przechowywane w obiekcie stan widoku formantu i utrwalenia żądań dla tej samej stronie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>