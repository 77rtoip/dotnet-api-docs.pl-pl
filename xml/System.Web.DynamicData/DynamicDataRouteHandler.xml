<Type Name="DynamicDataRouteHandler" FullName="System.Web.DynamicData.DynamicDataRouteHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97decb678f9c73161251d12a907a9a69ac00b6a5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69139912" /></Metadata><TypeSignature Language="C#" Value="public class DynamicDataRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicDataRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicDataRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicDataRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicDataRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type DynamicDataRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Przetwarza wzorce tras danych dynamicznych ASP.NET.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicDataRouteHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicDataRouteHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler CreateHandler (System.Web.DynamicData.DynamicDataRoute route, System.Web.DynamicData.MetaTable table, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler CreateHandler(class System.Web.DynamicData.DynamicDataRoute route, class System.Web.DynamicData.MetaTable table, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateHandler (route As DynamicDataRoute, table As MetaTable, action As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ CreateHandler(System::Web::DynamicData::DynamicDataRoute ^ route, System::Web::DynamicData::MetaTable ^ table, System::String ^ action);" />
      <MemberSignature Language="F#" Value="abstract member CreateHandler : System.Web.DynamicData.DynamicDataRoute * System.Web.DynamicData.MetaTable * string -&gt; System.Web.IHttpHandler&#xA;override this.CreateHandler : System.Web.DynamicData.DynamicDataRoute * System.Web.DynamicData.MetaTable * string -&gt; System.Web.IHttpHandler" Usage="dynamicDataRouteHandler.CreateHandler (route, table, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Web.DynamicData.DynamicDataRoute" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="route">Dopasowana trasa.</param>
        <param name="table">Tabela metadanych, która jest zawarta w marszrucie.</param>
        <param name="action">Akcja, która jest zawarta w marszrucie.</param>
        <summary>Tworzy procedurę obsługi do przetwarzania żądania.</summary>
        <returns>Program obsługi, który może przetworzyć żądanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomPageVirtualPath">
      <MemberSignature Language="C#" Value="protected virtual string GetCustomPageVirtualPath (System.Web.DynamicData.MetaTable table, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCustomPageVirtualPath(class System.Web.DynamicData.MetaTable table, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomPageVirtualPath (table As MetaTable, viewName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCustomPageVirtualPath(System::Web::DynamicData::MetaTable ^ table, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomPageVirtualPath : System.Web.DynamicData.MetaTable * string -&gt; string&#xA;override this.GetCustomPageVirtualPath : System.Web.DynamicData.MetaTable * string -&gt; string" Usage="dynamicDataRouteHandler.GetCustomPageVirtualPath (table, viewName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">Tabela metadanych modelu danych, dla której znajduje się Strona.</param>
        <param name="viewName">Nazwa akcji widoku, która jest nazwą strony bez rozszerzenia nazwy pliku ". aspx".</param>
        <summary>Tworzy ścieżkę wirtualną strony niestandardowej.</summary>
        <returns>Ścieżka wirtualna strony niestandardowej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestContext">
      <MemberSignature Language="C#" Value="public static System.Web.Routing.RequestContext GetRequestContext (System.Web.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.RequestContext GetRequestContext(class System.Web.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Routing::RequestContext ^ GetRequestContext(System::Web::HttpContext ^ httpContext);" />
      <MemberSignature Language="F#" Value="static member GetRequestContext : System.Web.HttpContext -&gt; System.Web.Routing.RequestContext" Usage="System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">Informacje kontekstowe skojarzone z żądaniem sieci Web.</param>
        <summary><see cref="T:System.Web.Routing.RequestContext" /> Zwraca wystąpienie dla bieżącego żądania sieci Web.</summary>
        <returns>Kontekst żądania dla żądania sieci Web.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowy kontekst zostanie utworzony, jeśli jest wymagany. Taka sytuacja może wystąpić, jeśli bieżące żądanie nie jest żądaniem danych dynamicznych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="httpContext" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequestMetaTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetRequestMetaTable (System.Web.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetRequestMetaTable(class System.Web.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ GetRequestMetaTable(System::Web::HttpContext ^ httpContext);" />
      <MemberSignature Language="F#" Value="static member GetRequestMetaTable : System.Web.HttpContext -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">Informacje kontekstowe skojarzone z żądaniem sieci Web.</param>
        <summary><see cref="T:System.Web.DynamicData.MetaTable" /> Zwraca obiekt<see cref="T:System.Web.HttpContext" /> z obiektu.</summary>
        <returns>Tabela metadanych modelu danych skojarzona z bieżącym żądaniem sieci Web lub <see langword="null" /> Jeśli żądanie nie jest żądaniem dynamicznego przesyłania danych</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="httpContext" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldPageVirtualPath">
      <MemberSignature Language="C#" Value="protected virtual string GetScaffoldPageVirtualPath (System.Web.DynamicData.MetaTable table, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetScaffoldPageVirtualPath(class System.Web.DynamicData.MetaTable table, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetScaffoldPageVirtualPath (table As MetaTable, viewName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetScaffoldPageVirtualPath(System::Web::DynamicData::MetaTable ^ table, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetScaffoldPageVirtualPath : System.Web.DynamicData.MetaTable * string -&gt; string&#xA;override this.GetScaffoldPageVirtualPath : System.Web.DynamicData.MetaTable * string -&gt; string" Usage="dynamicDataRouteHandler.GetScaffoldPageVirtualPath (table, viewName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">Tabela metadanych, dla której ma zostać wyszukana strona.</param>
        <param name="viewName">Nazwa akcji widoku, która jest nazwą strony bez rozszerzenia nazwy pliku ". aspx".</param>
        <summary>Zwraca ścieżkę wirtualną strony, która jest włączona dla danych dynamicznych.</summary>
        <returns>Ścieżka wirtualna strony.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRouteHandler.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.DynamicDataRouteHandler.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.DynamicData.MetaModel" /> obiekt <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> , z którym skojarzona jest Klasa.</summary>
        <value>Model danych, z którym <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> skojarzona jest Klasa.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRequestMetaTable">
      <MemberSignature Language="C#" Value="public static void SetRequestMetaTable (System.Web.HttpContext httpContext, System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRequestMetaTable(class System.Web.HttpContext httpContext, class System.Web.DynamicData.MetaTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetRequestMetaTable(System::Web::HttpContext ^ httpContext, System::Web::DynamicData::MetaTable ^ table);" />
      <MemberSignature Language="F#" Value="static member SetRequestMetaTable : System.Web.HttpContext * System.Web.DynamicData.MetaTable -&gt; unit" Usage="System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable (httpContext, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContext" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
      </Parameters>
      <Docs>
        <param name="httpContext">Informacje kontekstowe skojarzone z żądaniem sieci Web.</param>
        <param name="table">Tablica, która jest skojarzona z bieżącym żądaniem.</param>
        <summary>Ustawia obiekt, który jest skojarzony z bieżącym <see cref="T:System.Web.HttpRequest" /> obiektem. <see cref="T:System.Web.DynamicData.MetaTable" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt może być `null` niedynamicznym żądaniem danych. <xref:System.Web.HttpRequest>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Routing.IRouteHandler.GetHttpHandler">
      <MemberSignature Language="C#" Value="System.Web.IHttpHandler IRouteHandler.GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.IHttpHandler System.Web.Routing.IRouteHandler.GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::IHttpHandler ^ System.Web.Routing.IRouteHandler.GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext) = System::Web::Routing::IRouteHandler::GetHttpHandler;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Informacje kontekstowe skojarzone z żądaniem sieci Web.</param>
        <summary>Zwraca procedurę obsługi, która przetwarza wzorce tras danych dynamicznych ASP.NET.</summary>
        <returns>Program obsługi, który przetwarza wzorce tras danych dynamicznych ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda implementuje <xref:System.Web.Routing.IRouteHandler.GetHttpHandler%2A> metodę interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
