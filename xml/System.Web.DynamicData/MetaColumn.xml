<Type Name="MetaColumn" FullName="System.Web.DynamicData.MetaColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a36c8f33ecad535cc95e1b538ac9c9a66daaf5bd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30582628" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaColumn : System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaColumn extends System.Object implements class System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaColumn&#xA;Implements IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaColumn : System::Web::DynamicData::IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8d2ff-101">Reprezentuje kolumny bazy danych, który jest używany przez dynamiczne dane.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d2ff-101">Represents a database column that is used by Dynamic Data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-102">W aplikacjach danych dynamicznych platformy ASP.NET <xref:System.Web.DynamicData.MetaColumn> klasa reprezentuje pole bazy danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaColumn> class represents a database field.</span></span> <span data-ttu-id="8d2ff-103"><xref:System.Web.DynamicData.MetaColumn> Klasa umożliwia pobieranie informacji na temat pola danych, takie jak informacje dotyczące typu i metadanych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-103">The <xref:System.Web.DynamicData.MetaColumn> class lets you retrieve information about the data field such as type and metadata information.</span></span>  
  
 <span data-ttu-id="8d2ff-104">Można pobrać tabeli w polu danych, należy za pomocą <xref:System.Web.DynamicData.MetaColumn.Table%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-104">You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span> <span data-ttu-id="8d2ff-105">Można również pobrać modelu danych za pomocą <xref:System.Web.DynamicData.MetaColumn.Model%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-105">You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaChildrenColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="8d2ff-106">Tabela meta, która zawiera kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-106">The meta table that contains the column.</span>
          </span>
        </param>
        <param name="columnProvider">
          <span data-ttu-id="8d2ff-107">Dostawca kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-107">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d2ff-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.MetaColumn" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaColumn" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInitialValue">
      <MemberSignature Language="C#" Value="public bool AllowInitialValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitialValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInitialValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitialValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.AllowInitialValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-109">Pobiera lub ustawia wartość określającą, czy kolumna umożliwia wartości do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-109">Gets or sets a value that specifies whether a column enables a value to be inserted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-110">
            <see langword="true" /> Jeśli kolumna umożliwia wartości do wstawienia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-110">
              <see langword="true" /> if the column enables a value to be inserted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-111">Wartość domyślna to `false` , gdy kolumna jest tylko do odczytu i `true` Jeśli kolumna nie jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-111">The default value is `false` when the column is read-only and `true` when the column is not read-only.</span></span> <span data-ttu-id="8d2ff-112">Wartość domyślna może zostać przesłonięta przy użyciu <xref:System.ComponentModel.DataAnnotations.EditableAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-112">The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ApplyFormatInEditMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-113">Pobiera wartość wskazującą, czy ciąg formatowania określone przez <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> właściwość jest stosowana do wartości pola, gdy formant powiązany z danymi, który zawiera pola danych reprezentowanego przez <see cref="T:System.Web.DynamicData.MetaColumn" /> obiekt jest w trybie edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-113">Gets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-114">
            <see langword="true" /> Jeśli ciąg formatowania, określony przez <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> właściwość jest stosowana do wartości pola, gdy formant powiązany z danymi, który zawiera pola danych reprezentowanego przez <see cref="T:System.Web.DynamicData.MetaColumn" /> obiekt jest w trybie edycji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-114">
              <see langword="true" /> if the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-115"><xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> Właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-115">The <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8d2ff-116">Jeśli <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atrybut nie zostanie znaleziony, ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> atrybut jest stosowany do pobrania informacji o formatowania.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-116">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-117">Pobiera kolekcję atrybutów metadanych, które są stosowane do pola danych reprezentowanego przez <see cref="T:System.Web.DynamicData.MetaColumn" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-117">Gets the collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-118">Kolekcja atrybutów metadanych, które są stosowane do pola danych reprezentowanego przez <see cref="T:System.Web.DynamicData.MetaColumn" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-118">The collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-119">Pobiera kolekcję atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-119">Gets the attribute collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d2ff-120">Kolekcja atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-120">The attribute collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-121">Należy wywołać <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> metody, aby dostęp do <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-121">You must call the <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnType">
      <MemberSignature Language="C#" Value="public Type ColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ColumnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ColumnType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-122">Pobiera typ pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-122">Gets the data field type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-123">Typ pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-123">The data field type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-124"><xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> Właściwość zwraca wspólnego typu języka wspólnego (CLR) w polu danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-124">The <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property returns the common language runtime (CLR) type of the data field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ConvertEmptyStringToNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-125">Pobiera wartość wskazującą, czy puste ciągi ("") są automatycznie konwertowane na <see langword="null" /> wartości po zaktualizowaniu pole danych w źródle danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-125">Gets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> values when the data field is updated in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-126">
            <see langword="true" /> Jeśli wartości ciągu pustego zostaną automatycznie przekonwertowane na <see langword="null" /> wartości, gdy w polu danych jest zaktualizowane w źródle danych, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-126">
              <see langword="true" /> if empty string values are automatically converted to <see langword="null" /> values when the data field is updated in the data source; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-127"><xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> Właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-127">The <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8d2ff-128">Jeśli <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atrybut nie zostanie znaleziony, ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> atrybut jest stosowany do pobrania informacji o formatowania.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-128">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataFormatString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-129">Pobiera ciąg, który określa format wyświetlania wartości pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-129">Gets the string that specifies the display format for the field value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-130">Ciąg, który określa format wyświetlania wartości pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-130">The string that specifies the display format for the field value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-131"><xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> Właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-131">The <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8d2ff-132">Jeśli <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atrybut nie zostanie znaleziony, ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> atrybut jest stosowany do pobrania informacji o formatowania.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-132">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="DataTypeAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTypeAttribute As DataTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DataAnnotations::DataTypeAttribute ^ DataTypeAttribute { System::ComponentModel::DataAnnotations::DataTypeAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataTypeAttribute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.DataTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-133">Pobiera <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> atrybut, który jest stosowany do pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-133">Gets the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-134">
            <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> Atrybut, który jest stosowany do pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-134">The <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-135">Pobiera wartość domyślną dla pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-135">Gets the default value for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-136">Wartość domyślna dla pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-136">The default value for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-137"><xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> Właściwość jest zwykle używana do wstępnego wypełniania wartość pola po utworzeniu nowego wpisu.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-137">The <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> property is typically used to pre-populate the field value when a new entry is created.</span></span> <span data-ttu-id="8d2ff-138">Ta właściwość sprawdza, czy <xref:System.ComponentModel.DefaultValueAttribute> atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-138">This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
        <altmember cref="P:System.ComponentModel.DefaultValueAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-139">Pobiera opis w polu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-139">Gets the description for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-140">Opis w polu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-140">The description for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-141"><xref:System.Web.DynamicData.MetaColumn.Description%2A> Właściwość sprawdza, czy <xref:System.ComponentModel.DescriptionAttribute> atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-141">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
        <altmember cref="P:System.ComponentModel.DescriptionAttribute.Description" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-142">Pobiera nazwę wyświetlaną dla pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-142">Gets the display name for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-143">Nazwa wyświetlana dla tego pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-143">The display name for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-144"><xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> Właściwość zwraca przyjazną nazwę wyświetlaną dla pola danych, jeśli została ustawiona lub nazwę pola, jeśli został określony bez nazwy wyświetlania.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-144">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified.</span></span> <span data-ttu-id="8d2ff-145"><xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> Właściwość sprawdza, czy ustawiono przyjazną nazwę wyświetlaną przez sprawdzenie, czy <xref:System.ComponentModel.DisplayNameAttribute> atrybut jest stosowany do pola danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-145">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EntityTypeProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo EntityTypeProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PropertyInfo EntityTypeProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityTypeProperty As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyInfo ^ EntityTypeProperty { System::Reflection::PropertyInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.EntityTypeProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-146">Pobiera obiekt zawierający atrybuty właściwość, która reprezentuje pole danych w typie jednostki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-146">Gets an object that contains attributes of the property that represents the data field in the entity type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-147">Obiekt zawierający atrybuty właściwość, która reprezentuje pole danych w typie jednostki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-147">An object that contains attributes of the property that represents the data field in the entity type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.FilterUIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-148">Pobiera <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> wartość, która jest używana dla kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-148">Gets the <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-149">
            <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> Wartość, która jest używana dla kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-149">The <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.HtmlEncode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-150">Pobiera wartość wskazującą, czy wartości pól są kodowany w formacie HTML przed są wyświetlane w formancie powiązane z danymi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-150">Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-151">
            <see langword="true" /> we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-151">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-152">Inicjuje dane, które mogą być niedostępne podczas wywołania konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-152">Initializes data that might not be available when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-153">Tej metody nie można wywołać bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-153">This method cannot be called directly.</span></span> <span data-ttu-id="8d2ff-154">Aby dostosować inicjowania, może dziedziczyć po tej klasie i Przesłoń `Initialize` metody.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-154">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="8d2ff-155">Razie przesłonięcia tej metody należy wywołać kontrolki podstawowej `Initialize` metody.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-155">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinaryData">
      <MemberSignature Language="C#" Value="public bool IsBinaryData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinaryData" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinaryData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinaryData { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsBinaryData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-156">Pobiera wartość wskazującą, czy pole danych zawiera dane binarne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-156">Gets a value that indicates whether the data field contains binary data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-157">
            <see langword="true" /> Jeśli pole danych zawiera dane binarne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-157">
              <see langword="true" /> if the data field contains binary data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomProperty">
      <MemberSignature Language="C#" Value="public bool IsCustomProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomProperty { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsCustomProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-158">Pobiera wartość wskazującą, czy pole danych istnieje w bazie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-158">Gets a value that indicates whether the data field exists in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-159">
            <see langword="true" /> Jeśli w polu danych nie istnieje w bazie danych. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-159">
              <see langword="true" /> if the data field does not exist in the database; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-160">Użyj <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> właściwości w celu określenia, czy pole danych w bazie danych, lub jeśli jest to dodatkowe właściwości, która została dodana do obiektu kontekstu danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-160">Use the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFloatingPoint">
      <MemberSignature Language="C#" Value="public bool IsFloatingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFloatingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFloatingPoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFloatingPoint { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsFloatingPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-161">Pobiera wartość wskazującą, czy pole danych jest typ zmiennoprzecinkowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-161">Gets a value that indicates whether the data field is a floating-point type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-162">
            <see langword="true" /> Jeśli pole danych jest typ zmiennoprzecinkowy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-162">
              <see langword="true" /> if the data field is a floating-point type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-163">Typy `float`, `double`, i `decimal` to ruchome typy punktów.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-163">The types `float`, `double`, and `decimal` are floating point types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsForeignKeyComponent">
      <MemberSignature Language="C#" Value="public bool IsForeignKeyComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKeyComponent" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsForeignKeyComponent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForeignKeyComponent { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsForeignKeyComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-164">Pobiera wartość wskazującą, czy pole danych jest częścią klucza obcego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-164">Gets a value that indicates whether the data field is part of a foreign key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-165">
            <see langword="true" /> Jeśli pole danych jest częścią klucza obcego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-165">
              <see langword="true" /> if the data field is part of a foreign key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      </Docs>
    </Member>
    <Member MemberName="IsGenerated">
      <MemberSignature Language="C#" Value="public bool IsGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsGenerated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-166">Pobiera wartość wskazującą, czy wartość pola danych jest automatycznie generowana w bazie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-166">Gets a value that indicates whether the data field value is automatically generated in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-167">
            <see langword="true" /> Jeśli wartość w polu danych jest automatycznie generowany w bazie danych. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-167">
              <see langword="true" /> if the data field value is automatically generated in the database; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteger">
      <MemberSignature Language="C#" Value="public bool IsInteger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteger" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInteger As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInteger { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsInteger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-168">Pobiera wartość wskazującą, czy typ pola danych jest typu Liczba całkowita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-168">Gets a value that indicates whether the data field type is an integer type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-169">
            <see langword="true" /> Jeśli typ pola danych jest typu Liczba całkowita w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-169">
              <see langword="true" /> if the data field type is an integer type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-170">Typy `byte`, `short`, `int`, i `long` są typami liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-170">The types `byte`, `short`, `int`, and `long` are integer types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsLongString">
      <MemberSignature Language="C#" Value="public bool IsLongString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLongString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLongString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLongString { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsLongString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-171">Pobiera wartość wskazującą, czy typ pola danych może zawierać ciągów długich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-171">Gets a value that indicates whether the data field type can contain long strings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-172">
            <see langword="true" /> Jeśli typ pola danych może zawierać ciągów długich; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-172">
              <see langword="true" /> if the data field type can contain long strings; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-173">Typy SQL `text`, `ntext`, `varchar`, i `nvarchar` może zawierać ciągów długich.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-173">The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings.</span></span> <span data-ttu-id="8d2ff-174">Wartość <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> właściwość jest używana do określają, czy szablon pole tekstowe lub TextArea jest wyświetlane, aby użytkownicy mogli zmodyfikować wartość pola.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-174">The value of the <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-175">Pobiera wartość wskazującą, czy pole danych jest częścią klucza podstawowego tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-175">Gets a value that indicates whether the data field is part of the table's primary key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-176">
            <see langword="true" /> Jeśli pole danych jest częścią klucza podstawowego tabeli; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-176">
              <see langword="true" /> if the data field is part of the table's primary key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-177">Pobiera wartość wskazującą, czy pole danych jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-177">Gets a value that indicates whether the data field is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-178">
            <see langword="true" /> Jeśli pole danych jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-178">
              <see langword="true" /> if the data field is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-179">Pobiera wartość wskazującą, czy pole danych wymaga wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-179">Gets a value that indicates whether the data field requires a value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-180">
            <see langword="true" /> Jeśli w polu danych wymaga wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-180">
              <see langword="true" /> if the data field requires a value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-181"><xref:System.Web.DynamicData.MetaColumn.Description%2A> Właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> atrybut jest stosowany do pola danych lub jeśli schemat bazy danych zawiera informacje o danych pole jest wymagane w bazie danych do określenia, czy pole danych wymaga wartości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-181">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="IsString">
      <MemberSignature Language="C#" Value="public bool IsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsString { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-182">Pobiera wartość wskazującą, czy typ pola danych jest typem ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-182">Gets a value that indicates whether the data field type is a string type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-183">
            <see langword="true" /> Jeśli typ pola danych jest typ ciąg; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-183">
              <see langword="true" /> if the data field type is a string type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsLongString" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.MaxLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-184">Pobiera wartość wskazującą maksymalną długość danych, które mogą być przechowywane w polu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-184">Gets a value that indicates the maximum length of data that can be stored in the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-185">Maksymalna długość danych, które mogą być przechowywane w polu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-185">The maximum length of data that can be stored in the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-186"><xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> Właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-186">The <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property.</span></span> <span data-ttu-id="8d2ff-187">Jeśli <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> atrybut nie ma zastosowania do pól danych <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> właściwość używa typu bazy danych można pobrać maksymalną dozwoloną długość.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-187">If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property uses the database type to retrieve the maximum length allowed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength" />
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-188">Pobiera <see cref="T:System.Web.DynamicData.MetaModel" /> obiekt, który reprezentuje model danych, który należy do tego pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-188">Gets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that represents the data model that this data field belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-189">Obiekt reprezentujący model danych, który należy do tego pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-189">An object that represents the data model that this data field belongs to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaModel" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-190">Pobiera nazwę pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-190">Gets the name of the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-191">Nazwa pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-191">The name of the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.NullDisplayText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-192">Pobiera pola tekstem, który jest wyświetlany, gdy wartość pola jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-192">Gets the caption that is displayed for a field when the field's value is <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-193">Podpis wyświetlany dla pola, gdy wartość pola jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-193">The caption that is displayed for a field when the field's value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-194"><xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> Właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-194">The <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8d2ff-195">Jeśli <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atrybut nie zostanie znaleziony, ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> atrybut jest stosowany do pobrania informacji o formatowania.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-195">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public virtual string Prompt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prompt" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Prompt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prompt { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Prompt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-196">Pobiera wartość, która może być używany jako znak wodny w interfejsie użytkownika, który jest powiązany z danymi w kolumnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-196">Gets a value that can be used as a watermark in the UI that is bound to data in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-197">Wartość, która może być używany jako znak wodny w interfejsie użytkownika, który jest powiązany z danymi w kolumnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-197">A value that can be used as a watermark in the UI that is bound to data in the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-198">A `null` lub może być zwrócony pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-198">A `null` or empty string can be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d2ff-199">Ta właściwość jest ustawiana przez <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> atrybutu w definicji kolumny w meta klasy dla obiektu danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-199">This property is set by the <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribute in the column's definition in the meta class for the data entity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.ColumnProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.ColumnProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As ColumnProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::ColumnProvider ^ Provider { System::Web::DynamicData::ModelProviders::ColumnProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.ColumnProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-200">Pobiera obiekt dostawcy abstrakcji, który służy do generowania <see cref="T:System.Web.DynamicData.MetaColumn" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-200">Gets the abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-201">Obiekt dostawcy abstrakcji, który służy do generowania <see cref="T:System.Web.DynamicData.MetaColumn" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-201">The abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequiredErrorMessage">
      <MemberSignature Language="C#" Value="public string RequiredErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequiredErrorMessage { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.RequiredErrorMessage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-202">Pobiera komunikat o błędzie, który jest wyświetlany, gdy w polu danych wymaga wartości, ale jej wartość jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-202">Gets the error message that is displayed when the data field requires a value but its value is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-203">Komunikat o błędzie wyświetlany, gdy w polu danych wymaga wartości, ale jej wartość jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-203">The error message that is displayed when the data field requires a value but its value is empty.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetMetadata();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaColumn.ResetMetadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-204">Czyści buforowanych metadanych kolumn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-204">Clears cached column metadata.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-205">Metadane kolumn nie są informacje, która jest określana na podstawie atrybutów i które są buforowane na wydajność.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-205">The column metadata is information that is derived from attributes and that is cached for performance.</span></span> <span data-ttu-id="8d2ff-206">Wywołanie tej metody spowoduje wyczyszczenie pamięci podręcznej metadanych dla tej kolumny.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-206">Calling this method clears the metadata cache for this column.</span></span> <span data-ttu-id="8d2ff-207">Pamięć podręczna metadanych zostanie skompilowany ponownie przy następnym żądanej wszystkie informacje, które jest określana na podstawie metadanych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-207">The metadata cache is rebuilt the next time any information that is derived from metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-208">Pobiera wartość wskazującą, czy ma być wyświetlany w polu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-208">Gets a value that indicates whether the data field should be displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-209">
            <see langword="true" /> Jeśli powinien być wyświetlany w polu danych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-209">
              <see langword="true" /> if the data field should be displayed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-210"><xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> Właściwość wskazuje, czy pole danych powinien być wyświetlany, gdy jest ona generowana automatycznie przez danych dynamicznych platformy ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-210">The <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data.</span></span> <span data-ttu-id="8d2ff-211">Ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> atrybut jest stosowany do pola danych i zwraca wartość <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-211">This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8d2ff-212">Jeśli <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> atrybut nie ma zastosowania do pola danych, aby określić, czy mają być wyświetlane kolumny danych dynamicznych stosowane są następujące reguły:</span><span class="sxs-lookup"><span data-stu-id="8d2ff-212">If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:</span></span>  
  
-   <span data-ttu-id="8d2ff-213">Jeśli <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atrybut jest stosowany do pola danych, jest wyświetlana w polu danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-213">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed.</span></span> <span data-ttu-id="8d2ff-214">Ta reguła zastępuje wszystkie inne zasady.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-214">This rule overrides all the other rules.</span></span>  
  
-   <span data-ttu-id="8d2ff-215">Jeśli wartość <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> właściwość jest `true`, nie jest wyświetlana w polu danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-215">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="8d2ff-216">Dzieje się tak, ponieważ dane dynamiczne obsługuje pola klucza obcego w inny sposób i zazwyczaj nie będą wyświetlane wartości pola klucza obcego.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-216">This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.</span></span>  
  
-   <span data-ttu-id="8d2ff-217">Jeśli wartość <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> właściwość jest `true`, nie jest wyświetlana w polu danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-217">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="8d2ff-218">Zazwyczaj pola, które są generowane automatycznie w bazie danych nie zawierają istotne informacje.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-218">Typically fields that are automatically generated in the database do not contain relevant information.</span></span> <span data-ttu-id="8d2ff-219">Upewnij się, że stosujesz <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atrybutu do pola danych, jeśli musi zostać wyświetlony w polu danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-219">Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed.</span></span>  
  
-   <span data-ttu-id="8d2ff-220">Jeśli wartość <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> właściwość jest `true`, nie jest wyświetlana w polu danych.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-220">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      </Docs>
    </Member>
    <Member MemberName="ShortDisplayName">
      <MemberSignature Language="C#" Value="public virtual string ShortDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShortDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShortDisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ShortDisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-221">Pobiera krótką nazwę kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-221">Gets the short name for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-222">Krótka nazwa kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-222">The short name for the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-223">Ta właściwość jest udostępniana dla <xref:System.Web.UI.WebControls.GridView> kontroli i innych kontrolek, gdy jest potrzebne krótkiej nazwy z powodu ograniczone miejsca nagłówka kolumny.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-223">This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.SortExpression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-224">Pobiera wyrażenie, które służy do określania kolejności sortowania dla pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-224">Gets the expression that is used to determine the sort order for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-225">Wyrażenie, które służy do określania kolejności sortowania dla pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-225">The expression that is used to determine the sort order for the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-226">Pobiera <see cref="T:System.Web.DynamicData.MetaTable" /> obiekt, który reprezentuje pole danych należy do tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-226">Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that represents the table that the data field belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-227">Obiekt, który reprezentuje pole danych należy do tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-227">An object that represents the table that the data field belongs to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Model" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-228">Pobiera nazwę pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-228">Gets the data field name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d2ff-229">Nazwa pola danych, która jest reprezentację ciągu kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-229">The data field name, which is the string representation of the column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public TypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeCode As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode TypeCode { TypeCode get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.TypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-230">Pobiera typ pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-230">Gets the type of the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-231">Typ pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-231">The type of the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-232"><xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> Wartość właściwości jest określana na podstawie wartości <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-232">The <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.UIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8d2ff-233">Pobiera nazwę szablonu pola określone dla pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-233">Gets the name of the field template specified for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8d2ff-234">Nazwa szablonu pola określone dla pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d2ff-234">The name of the field template specified for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d2ff-235"><xref:System.Web.DynamicData.MetaColumn.UIHint%2A> Właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-235">The <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8d2ff-236">Jeśli <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atrybut nie ma zastosowania do pól danych <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> właściwość zwraca pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="8d2ff-236">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>