<Type Name="DynamicValidatorEventArgs" FullName="System.Web.DynamicData.DynamicValidatorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7be7525e3e075bf110830e5bf6d6f4cb9036691e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69139783" /></Metadata><TypeSignature Language="C#" Value="public class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidatorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidatorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidatorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DynamicValidatorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Klasa bazowa dla <see cref="T:System.Web.DynamicData.DynamicValidator" /> klas, które zawierają dane zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicValidator> Klasa przechwytuje wyjątki zgłoszone przez klasy LINQ to SQL lub z metod Entity Framework w modelu danych. Ta klasa nie zawiera danych zdarzenia. Jest on używany przez zdarzenia, które nie przekazują informacji o stanie do programu obsługi zdarzeń, gdy zdarzenie jest zgłaszane. Jeśli program obsługi zdarzeń wymaga informacji o stanie, należy utworzyć klasę pochodną z tej klasy do przechowywania danych.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, valuetype System.Web.DynamicData.DynamicDataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidatorEventArgs(Exception ^ exception, System::Web::DynamicData::DynamicDataSourceOperation operation);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicValidatorEventArgs : Exception * System.Web.DynamicData.DynamicDataSourceOperation -&gt; System.Web.DynamicData.DynamicValidatorEventArgs" Usage="new System.Web.DynamicData.DynamicValidatorEventArgs (exception, operation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="operation" Type="System.Web.DynamicData.DynamicDataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="exception">Wyjątek, który wystąpił.</param>
        <param name="operation">Operacja źródła danych, która spowodowała wyjątek.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> klasy, używając wyjątku, który wystąpił, i operacji źródła danych, która spowodowała wyjątek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane dynamiczne ASP.NET zapewniają operacje źródła danych, które mogą być wykonywane przez obiekt źródła danych. Te operacje obejmują `Delete`, `Insert`, `Select` i `Update` i .`ContextCreate` Jeśli wystąpi wyjątek podczas operacji źródła danych, operacja źródła danych, która spowodowała wyjątek, i wyjątek, który wystąpiły, są <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> reprezentowane <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> przez i odpowiednio.  
  
 Ten konstruktor inicjuje nowe wystąpienie <xref:System.Web.DynamicData.DynamicValidatorEventArgs> klasy przy użyciu tych właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek występujący podczas zdarzenia operacji źródła danych.</summary>
        <value>Wyjątek, który wystąpił podczas zdarzenia operacji źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane dynamiczne ASP.NET zapewniają operacje źródła danych, które mogą być wykonywane przez obiekt źródła danych. Te operacje obejmują `Delete`, `Insert`, `Select` i `Update` i .`ContextCreate` Jeśli wystąpi wyjątek, <xref:System.Web.DynamicData.DynamicValidator> Klasa używa tej właściwości w celu uzyskania typu wyjątku, który jest wyzwalany podczas operacji źródła danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.DynamicDataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DynamicDataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataSourceOperation Operation { System::Web::DynamicData::DynamicDataSourceOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.Operation : System.Web.DynamicData.DynamicDataSourceOperation" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera operację źródła danych, która spowodowała wyjątek w <see cref="T:System.Web.DynamicData.DynamicValidator" /> klasie.</summary>
        <value>Operacja źródła danych, która spowodowała wyjątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane dynamiczne ASP.NET zapewniają operację źródła danych, którą można wykonać za pomocą obiektu źródła danych. Te operacje obejmują `Delete`, `Insert`, `Select` i `Update` i .`ContextCreate` Jeśli wystąpi wyjątek, <xref:System.Web.DynamicData.DynamicValidator> Klasa używa tej właściwości do pobrania operacji, która wyzwoliła ten wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
