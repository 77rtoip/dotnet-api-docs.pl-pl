<Type Name="SecurityTokenResolver" FullName="System.IdentityModel.Selectors.SecurityTokenResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a4c33aff744ad43ad33bf91a2ff2e7e477d9847" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455304" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>Reprezentuje klasę narzędzie, które mogą pobierać tokeny zabezpieczające lub klawiszy, jeśli masz identyfikator klucza lub klauzuli identyfikatora klucza.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.IdentityModel.Selectors.SecurityTokenResolver> klasy można pobrać klucza lub zabezpieczeń token, gdy użytkownik ma identyfikator klucza lub klauzuli identyfikatora klucza. <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> metody pobrania tokenu, biorąc pod uwagę, że określono identyfikatora klucza lub klauzuli identyfikatora klucza. <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> pobrać klucz, biorąc pod uwagę, że istnieje klauzuli identyfikatora klucza. Metody z `Try` prefiksu powrotu `false` podczas pobierania zakończy się niepowodzeniem, natomiast metody bez `Try` prefiks Zgłoś wyjątek.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultSecurityTokenResolver">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultSecurityTokenResolver (tokens As ReadOnlyCollection(Of SecurityToken), canMatchLocalId As Boolean) As SecurityTokenResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Selectors::SecurityTokenResolver ^ CreateDefaultSecurityTokenResolver(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ tokens, bool canMatchLocalId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokens" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt;" />
        <Parameter Name="canMatchLocalId" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tokens">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> typu <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> zawierający zestaw tokenów zabezpieczających, dla których ten mechanizm rozpoznawania do tokenu zabezpieczeń można rozwiązać identyfikatorów klucza i klauzule identyfikatora klucza.</param>
        <param name="canMatchLocalId">
          <see langword="true" /> Aby rozwiązać <see langword="&lt;SecurityTokenReference&gt;" /> klucza klauzule identyfikator, które odwołują się do klucza zabezpieczeń, który znajduje się gdzieś w wiadomości protokołu SOAP, a w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy domyślny program rozpoznawania tokenów zabezpieczających dla tokenów zabezpieczających określony.</summary>
        <returns>A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> rozwiązań identyfikatorów klucza i klauzule pasujące tokeny zabezpieczające, określona w <paramref name="tokens" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program rozpoznawania tokenów zabezpieczających, zwracanego z tej metody używa <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> i <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> metody na tokeny zabezpieczające określony do rozpoznawania identyfikatorów klucza i klauzuli identyfikatora klucza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Elementy konfiguracji niestandardowej.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ładuje niestandardowej konfiguracji z pliku XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zgłasza <xref:System.NotImplementedException>. Można zastąpić tę metodę, aby umożliwić korzystanie z funkcji w klasie pochodnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveSecurityKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKey ^ ResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> można pobrać klucza dla.</param>
        <summary>Pobiera klucz, który odwołuje się do klauzuli określonego identyfikatora klucza.</summary>
        <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> oznacza to występujący w odwołaniu w klauzuli identyfikatora klucza określonego klucza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metody różnią się co się stanie po klauzuli identyfikatora klucza nie może być rozpoznana jako klucz. <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metoda zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyIdentifierClause" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można pobrać klucz określony w klauzuli identyfikatora klucza <paramref name="keyIdentifierClause" /> parametru.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera token zabezpieczający, który jest zgodny z określonym identyfikatorem klucza.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifier As SecurityKeyIdentifier) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> Do utworzenia tokenu zabezpieczającego dla.</param>
        <summary>Pobiera token zabezpieczający, który pasuje do jednej klauzuli identyfikatora klucza zabezpieczeń zawartych w określonym identyfikatora klucza.</summary>
        <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący określonego identyfikatora klucza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody różnią się co się stanie, jeśli identyfikator klucza nie można rozpoznać tokenu zabezpieczającego. <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metoda zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyIdentifier" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można utworzyć tokenu zabezpieczającego dla określonego identyfikatora klucza.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Do utworzenia tokenu zabezpieczającego dla.</param>
        <summary>Pobiera pasujący klauzuli identyfikatora klucza określonej tokenu zabezpieczającego.</summary>
        <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący klauzuli określonego identyfikatora klucza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody różnią się co się stanie po klauzuli identyfikatora klucza nie można rozpoznać tokenu zabezpieczającego. <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metoda zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKey">
      <MemberSignature Language="C#" Value="public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> można pobrać klucza dla.</param>
        <param name="key">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> zawiera klucz, który odwołuje się do klauzuli określonego identyfikatora klucza. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Próbuje pobrać klucz, który odwołuje się do klauzuli określonego identyfikatora klucza.</summary>
        <returns>
          <see langword="true" /> gdy można pobrać klucza do klauzuli identyfikatora klucza określonego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metody różnią się co się stanie po klauzuli identyfikatora klucza nie może być rozpoznana jako klucz. <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metoda zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyIdentifierClause" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> można pobrać klucza dla.</param>
        <param name="key">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> zawiera klucz, który odwołuje się do klauzuli określonego identyfikatora klucza. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Próbuje pobrać klucz, który odwołuje się do klauzuli określonego identyfikatora klucza.</summary>
        <returns>
          <see langword="true" /> gdy można pobrać klucza do klauzuli identyfikatora klucza określonego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore%2A> Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Próbuje pobrać token zabezpieczający, który odwołuje się do określonego obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> Do utworzenia tokenu zabezpieczającego dla.</param>
        <param name="token">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący określonego identyfikatora klucza. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Próbuje pobrać token zabezpieczający, który pasuje do jednej klauzuli identyfikatora klucza zawartych w określonym identyfikatora klucza.</summary>
        <returns>
          <see langword="true" /> gdy można pobrać tokenu zabezpieczającego dla określonego identyfikatora klucza. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody różnią się co się stanie, jeśli identyfikator klucza nie można rozpoznać tokenu zabezpieczającego. <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metoda zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyIdentifier" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Do utworzenia tokenu zabezpieczającego dla.</param>
        <param name="token">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący klauzuli określonego identyfikatora klucza. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Próbuje pobrać tokenu zabezpieczeń, który odpowiada klauzuli określonego identyfikatora klucza.</summary>
        <returns>
          <see langword="true" /> gdy można pobrać tokenu zabezpieczającego dla określonego identyfikatora klucza klauzuli; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody różnią się co się stanie po klauzuli identyfikatora klucza nie można rozpoznać tokenu zabezpieczającego. <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metoda zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyIdentifierClause" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Próbuje pobrać klucz, który odwołuje się do określonego obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> Do utworzenia tokenu zabezpieczającego dla.</param>
        <param name="token">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący określonego identyfikatora klucza. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, próbuje pobrać token zabezpieczający, który pasuje do co najmniej jednej klauzuli identyfikatora klucza zawartych w określonym identyfikatora klucza.</summary>
        <returns>
          <see langword="true" /> gdy można pobrać tokenu zabezpieczającego dla określonego identyfikatora klucza. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Do utworzenia tokenu zabezpieczającego dla.</param>
        <param name="token">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący klauzuli określonego identyfikatora klucza. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, próbuje rozpoznać tokenu zabezpieczeń, który odpowiada klauzuli określonego identyfikatora klucza.</summary>
        <returns>
          <see langword="true" /> gdy można pobrać tokenu zabezpieczającego dla określonego identyfikatora klucza klauzuli; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>