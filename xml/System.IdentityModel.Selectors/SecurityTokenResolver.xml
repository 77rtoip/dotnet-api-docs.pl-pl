<Type Name="SecurityTokenResolver" FullName="System.IdentityModel.Selectors.SecurityTokenResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a9f1909ecc5cbcee826670141ca59c0644e0e92" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46639025" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenResolver abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="f71db-101">Reprezentuje klasę użytkową, który może pobrać tokeny zabezpieczające lub klucze, gdy masz identyfikator klucza lub klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-101">Represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-102">Użyj <xref:System.IdentityModel.Selectors.SecurityTokenResolver> klasy do pobrania klucza lub zabezpieczeń token, gdy masz identyfikator klucza lub klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-102">Use the <xref:System.IdentityModel.Selectors.SecurityTokenResolver> class to retrieve a key or security token when you have a key identifier or key identifier clause.</span></span> <span data-ttu-id="f71db-103"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> metody pobierania tokenu, biorąc pod uwagę, że istnieje identyfikator klucza lub klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-103">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> methods retrieve a token given that there is a key identifier or key identifier clause.</span></span> <span data-ttu-id="f71db-104"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> pobrać klucz, biorąc pod uwagę, że istnieje klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-104">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> retrieve a key given that there is a key identifier clause.</span></span> <span data-ttu-id="f71db-105">Metody z `Try` prefiksu zwrócenia `false` podczas pobierania kończy się niepowodzeniem, natomiast metody bez `Try` prefiks zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f71db-105">The methods with a `Try` prefix return `false` when the retrieval is unsuccessful, whereas the methods without a `Try` prefix throw an exception.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f71db-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f71db-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultSecurityTokenResolver">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultSecurityTokenResolver (tokens As ReadOnlyCollection(Of SecurityToken), canMatchLocalId As Boolean) As SecurityTokenResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Selectors::SecurityTokenResolver ^ CreateDefaultSecurityTokenResolver(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ tokens, bool canMatchLocalId);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultSecurityTokenResolver : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; * bool -&gt; System.IdentityModel.Selectors.SecurityTokenResolver" Usage="System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver (tokens, canMatchLocalId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokens" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt;" />
        <Parameter Name="canMatchLocalId" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tokens"><span data-ttu-id="f71db-107">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> typu <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> zawierający zestaw tokenów zabezpieczających, dla których ten mechanizm rozpoznawania do tokenu zabezpieczeń może rozpoznać klucza identyfikatory i klauzul identyfikatora klucza do.</span><span class="sxs-lookup"><span data-stu-id="f71db-107">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that contains the set of security tokens for which this security token resolver can resolve key identifiers and key identifier clauses to.</span></span></param>
        <param name="canMatchLocalId"><span data-ttu-id="f71db-108"><see langword="true" /> Aby rozwiązać <see langword="&lt;SecurityTokenReference&gt;" /> klucza klauzul identyfikatora, które odwołują się klucz zabezpieczeń, który znajduje się gdzieś w komunikatu protokołu SOAP; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-108"><see langword="true" /> to resolve the <see langword="&lt;SecurityTokenReference&gt;" /> key identifier clauses that reference a security key that is located somewhere else in the SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f71db-109">Tworzy domyślny zabezpieczeń tokenu mechanizm dla tokenów zabezpieczających określony.</span><span class="sxs-lookup"><span data-stu-id="f71db-109">Creates a default security token resolver for the specified security tokens.</span></span></summary>
        <returns><span data-ttu-id="f71db-110">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> rozwiązań identyfikatorów klucza i klauzule zgodnych tokenów zabezpieczających, określone w <paramref name="tokens" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="f71db-110">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that resolves key identifiers and clauses that match the security tokens specified in the <paramref name="tokens" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-111">Używa zabezpieczeń program rozpoznawania tokenów, który jest zwracany z tej metody <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> i <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> metody na tokeny zabezpieczające określonym rozwiązaniem identyfikatorów klucza i klauzul identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-111">The security token resolver that is returned from this method, uses the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> methods on the specified security tokens to resolve key identifiers and key identifier clauses.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="securityTokenResolver.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="f71db-112">Elementy konfiguracji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="f71db-112">The custom configuration elements.</span></span></param>
        <summary><span data-ttu-id="f71db-113">W przypadku przesłonięcia w klasie pochodnej, ładuje niestandardowej konfiguracji z pliku XML.</span><span class="sxs-lookup"><span data-stu-id="f71db-113">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-114">Domyślnie, zgłasza <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="f71db-114">By default, throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="f71db-115">Można zastąpić tę metodę w celu zapewnienia funkcji w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="f71db-115">You can override this method to provide functionality in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveSecurityKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKey ^ ResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.ResolveSecurityKey : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityTokenResolver.ResolveSecurityKey keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="f71db-116">Element <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> można pobrać klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-116">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <summary><span data-ttu-id="f71db-117">Pobiera klucz, który odwołuje się do klauzuli określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-117">Obtains the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="f71db-118">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> to znaczy zastosowano odwołania do klauzuli identyfikatora klucza określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-118">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that is the key referenced in the specified key identifier clause.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-119"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metody różnią się co się stanie po klauzuli identyfikatora klucza nie może być rozpoznana jako klucz.</span><span class="sxs-lookup"><span data-stu-id="f71db-119">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key.</span></span> <span data-ttu-id="f71db-120"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f71db-120">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f71db-121"><paramref name="keyIdentifierClause" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-121"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f71db-122">Nie można pobrać klucza dla klauzuli identyfikatora klucza określonego w <paramref name="keyIdentifierClause" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="f71db-122">A key could not be retrieved for the key identifier clause specified in the <paramref name="keyIdentifierClause" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f71db-123">Pobiera token zabezpieczający, który jest zgodny z określonym identyfikatorem klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-123">Retrieves a security token that matches the specified key identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifier As SecurityKeyIdentifier) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.ResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenResolver.ResolveToken keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="f71db-124"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> Do utworzenia tokenu zabezpieczającego dla.</span><span class="sxs-lookup"><span data-stu-id="f71db-124">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <summary><span data-ttu-id="f71db-125">Pobiera token zabezpieczający, który pasuje do jednej z klauzul identyfikatora klucza zabezpieczeń, które są zawarte w określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-125">Retrieves a security token that matches one of the security key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="f71db-126">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentująca określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-126">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-127"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody różnią się co się stanie, gdy identyfikator klucza nie może być rozpoznana jako tokenu zabezpieczającego.</span><span class="sxs-lookup"><span data-stu-id="f71db-127">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token.</span></span> <span data-ttu-id="f71db-128"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f71db-128">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f71db-129"><paramref name="keyIdentifier" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-129"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f71db-130">Nie można utworzyć tokenu zabezpieczającego dla określonego identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-130">A security token cannot be created for the specified key identifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.ResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenResolver.ResolveToken keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="f71db-131"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Do utworzenia tokenu zabezpieczającego dla.</span><span class="sxs-lookup"><span data-stu-id="f71db-131">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <summary><span data-ttu-id="f71db-132">Pobiera token zabezpieczający, który pasuje do klauzuli identyfikatora klucza określonego.</span><span class="sxs-lookup"><span data-stu-id="f71db-132">Retrieves the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="f71db-133">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący klauzuli identyfikatora klucza określonego.</span><span class="sxs-lookup"><span data-stu-id="f71db-133">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-134"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody różnią się co się stanie po klauzuli identyfikatora klucza nie może być rozpoznana jako tokenu zabezpieczającego.</span><span class="sxs-lookup"><span data-stu-id="f71db-134">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token.</span></span> <span data-ttu-id="f71db-135"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f71db-135">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKey">
      <MemberSignature Language="C#" Value="public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="member this.TryResolveSecurityKey : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveSecurityKey (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="f71db-136">Element <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> można pobrać klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-136">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <param name="key"><span data-ttu-id="f71db-137">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> zawiera klucz, który odwołuje się do klauzuli określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-137">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the key that is referenced in the specified key identifier clause.</span></span> <span data-ttu-id="f71db-138">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="f71db-138">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="f71db-139">Próbuje pobrać klucz, który odwołuje się do klauzuli określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-139">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="f71db-140"><see langword="true" /> gdy można pobrać klucza do klauzuli identyfikatora klucza określonego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-140"><see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-141"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metody różnią się co się stanie po klauzuli identyfikatora klucza nie może być rozpoznana jako klucz.</span><span class="sxs-lookup"><span data-stu-id="f71db-141">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key.</span></span> <span data-ttu-id="f71db-142"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f71db-142">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f71db-143"><paramref name="keyIdentifierClause" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-143"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="f71db-144">Element <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> można pobrać klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-144">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <param name="key"><span data-ttu-id="f71db-145">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> zawiera klucz, który odwołuje się do klauzuli określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-145">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the key that is referenced in the specified key identifier clause.</span></span> <span data-ttu-id="f71db-146">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="f71db-146">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="f71db-147">Próbuje pobrać klucz, który odwołuje się do klauzuli określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-147">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="f71db-148"><see langword="true" /> gdy można pobrać klucza do klauzuli identyfikatora klucza określonego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-148"><see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-149"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore%2A> Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f71db-149">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f71db-150">Próbuje pobrać token zabezpieczający, który odwołuje się do określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="f71db-150">Attempts to retrieve the security token that is referenced in the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="member this.TryResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityTokenResolver.TryResolveToken (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="f71db-151"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> Do utworzenia tokenu zabezpieczającego dla.</span><span class="sxs-lookup"><span data-stu-id="f71db-151">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="f71db-152">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentująca określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-152">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span> <span data-ttu-id="f71db-153">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="f71db-153">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="f71db-154">Próbuje pobrać token zabezpieczający, który pasuje do jednej z klauzul identyfikatora klucza zawartych w określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-154">Attempts to retrieve the security token that matches one of the key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="f71db-155"><see langword="true" /> gdy można pobrać tokenu zabezpieczającego dla określonego identyfikatora klucza. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-155"><see langword="true" /> when a security token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-156"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody różnią się co się stanie, gdy identyfikator klucza nie może być rozpoznana jako tokenu zabezpieczającego.</span><span class="sxs-lookup"><span data-stu-id="f71db-156">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token.</span></span> <span data-ttu-id="f71db-157"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f71db-157">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f71db-158"><paramref name="keyIdentifier" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-158"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="member this.TryResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveToken (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="f71db-159"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Do utworzenia tokenu zabezpieczającego dla.</span><span class="sxs-lookup"><span data-stu-id="f71db-159">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="f71db-160">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący klauzuli identyfikatora klucza określonego.</span><span class="sxs-lookup"><span data-stu-id="f71db-160">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span> <span data-ttu-id="f71db-161">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="f71db-161">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="f71db-162">Próbuje pobrać token zabezpieczający, który pasuje do klauzuli identyfikatora klucza określonego.</span><span class="sxs-lookup"><span data-stu-id="f71db-162">Attempts to retrieve the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="f71db-163"><see langword="true" /> gdy można pobrać tokenu zabezpieczającego dla klauzuli identyfikatora klucza określonego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-163"><see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-164"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody różnią się co się stanie po klauzuli identyfikatora klucza nie może być rozpoznana jako tokenu zabezpieczającego.</span><span class="sxs-lookup"><span data-stu-id="f71db-164">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token.</span></span> <span data-ttu-id="f71db-165"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> Metoda zwraca `false`, podczas gdy <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f71db-165">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f71db-166"><paramref name="keyIdentifierClause" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-166"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f71db-167">Próbuje pobrać klucz, który odwołuje się do określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="f71db-167">Attempts to retrieve the key that is referenced in the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="f71db-168"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> Do utworzenia tokenu zabezpieczającego dla.</span><span class="sxs-lookup"><span data-stu-id="f71db-168">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="f71db-169">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentująca określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-169">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span> <span data-ttu-id="f71db-170">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="f71db-170">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="f71db-171">W przypadku przesłonięcia w klasie pochodnej, próbuje pobrać token zabezpieczający, który dopasowuje co najmniej jedną z klauzul identyfikatora klucza zawartych w określony identyfikator klucza.</span><span class="sxs-lookup"><span data-stu-id="f71db-171">When overridden in a derived class, attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="f71db-172"><see langword="true" /> gdy można pobrać tokenu zabezpieczającego dla określonego identyfikatora klucza. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-172"><see langword="true" /> when a security token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-173"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f71db-173">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="f71db-174"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Do utworzenia tokenu zabezpieczającego dla.</span><span class="sxs-lookup"><span data-stu-id="f71db-174">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="f71db-175">Po powrocie z tej metody zawiera <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> reprezentujący klauzuli identyfikatora klucza określonego.</span><span class="sxs-lookup"><span data-stu-id="f71db-175">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span> <span data-ttu-id="f71db-176">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="f71db-176">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="f71db-177">W przypadku przesłonięcia w klasie pochodnej, próbuje rozpoznać token zabezpieczający, który pasuje do klauzuli identyfikatora klucza określonego.</span><span class="sxs-lookup"><span data-stu-id="f71db-177">When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="f71db-178"><see langword="true" /> gdy można pobrać tokenu zabezpieczającego dla klauzuli identyfikatora klucza określonego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f71db-178"><see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f71db-179"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> Metoda jest wywoływana przez <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> i <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f71db-179">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>