<Type Name="List" FullName="System.Windows.Documents.List">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf601149905779ee1c69ca8b0c504f78a0566892" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69208194" /></Metadata><TypeSignature Language="C#" Value="public class List : System.Windows.Documents.Block" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi List extends System.Windows.Documents.Block" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.List" />
  <TypeSignature Language="VB.NET" Value="Public Class List&#xA;Inherits Block" />
  <TypeSignature Language="C++ CLI" Value="public ref class List : System::Windows::Documents::Block" />
  <TypeSignature Language="F#" Value="type List = class&#xA;    inherit Block" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Block</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("ListItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Element zawartości przepływu na poziomie bloku, który zapewnia funkcje do prezentowania zawartości na liście uporządkowanej lub nieuporządkowanej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.List>wymusza mocny model zawartości dla zawartości podrzędnej. Zobacz [Omówienie modelu zawartości TextElement](~/docs/framework/wpf/advanced/textelement-content-model-overview.md) , aby uzyskać więcej informacji <xref:System.Windows.Documents.List> na temat modelu zawartości.  
  
 <xref:System.Windows.Documents.List>jest elementem zawartości Flow zaprojektowanym do formatowania ze znacznikami, takimi jak punktory i numeracja.  
  
 <xref:System.Windows.Documents.ListItem>elementy są jedynym dopuszczalnym <xref:System.Windows.Documents.List> elementem podrzędnym elementu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Documents.List> jak zdefiniować za pomocą. [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]  
  
 [!code-xaml[ListSnippets#_ListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_listxaml)]  
  
 Poniższy przykład pokazuje, jak utworzyć i wypełnić <xref:System.Windows.Documents.List> programowo.  
  
 [!code-csharp[ListSnippets#_List_Props](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_props)]
 [!code-vb[ListSnippets#_List_Props](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_props)]  
  
 Na poniższej ilustracji przedstawiono sposób renderowania tego przykładu.  
  
 ![Zrzut ekranu Zrzut ekranu]listy(~/add/media/ordered-list.png "uporządkowanej: Lista uporządkowana")  
  
 Poniższy przykład przedstawia sposób definiowania zagnieżdżonych <xref:System.Windows.Documents.List> (list w ramach list) przy użyciu. [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]  
  
 [!code-xaml[ListSnippets#_NestedListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_nestedlistxaml)]  
  
 Na poniższej ilustracji przedstawiono sposób renderowania tego przykładu.  
  
 ![Lista zagnieżdżona] (~/add/media/flow-nested-list-example.png "Lista zagnieżdżona")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.ListItem" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Documents.List" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.List.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe, puste wystąpienie <see cref="T:System.Windows.Documents.List" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (System.Windows.Documents.ListItem listItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.ListItem listItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.List.#ctor(System.Windows.Documents.ListItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(System::Windows::Documents::ListItem ^ listItem);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.List : System.Windows.Documents.ListItem -&gt; System.Windows.Documents.List" Usage="new System.Windows.Documents.List listItem" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listItem" Type="System.Windows.Documents.ListItem" />
      </Parameters>
      <Docs>
        <param name="listItem">Obiekt określający początkową zawartość nowego <see cref="T:System.Windows.Documents.List" />elementu. <see cref="T:System.Windows.Documents.ListItem" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Documents.List" /> klasy, pobierając określony <see cref="T:System.Windows.Documents.ListItem" /> obiekt jako początkową zawartość nowego <see cref="T:System.Windows.Documents.List" />elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje użycie tego konstruktora.  
  
 [!code-csharp[ListSnippets#_List_Const](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_const)]
 [!code-vb[ListSnippets#_List_Const](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_const)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListItems">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItemCollection ListItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItemCollection ListItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.List.ListItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListItems As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::ListItemCollection ^ ListItems { System::Windows::Documents::ListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListItems : System.Windows.Documents.ListItemCollection" Usage="System.Windows.Documents.List.ListItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.ListItemCollection" /> Pobiera <see cref="T:System.Windows.Documents.List" />zawierający elementy,któreskładająsięnazawartość.<see cref="T:System.Windows.Documents.ListItem" /></summary>
        <value>Element <see cref="T:System.Windows.Documents.ListItemCollection" /> <see cref="T:System.Windows.Documents.List" />zawierający elementy,któreskładająsięnazawartość.<see cref="T:System.Windows.Documents.ListItem" />  
  
Ta właściwość nie ma wartości domyślnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj zwracanej przez tę właściwość, aby wyliczyć lub manipulować zawartością <xref:System.Windows.Documents.List> elementu. <xref:System.Windows.Documents.ListItemCollection>  
  
   
  
## Examples  
 W poniższych przykładach pokazano, <xref:System.Windows.Documents.List> <xref:System.Windows.Documents.List.ListItems%2A> jak wykonywać typowe operacje przy użyciu właściwości.  
  
 [!code-csharp[ListSnippets#_List_ListItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_listitems)]
 [!code-vb[ListSnippets#_List_ListItems](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_listitems)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerOffset">
      <MemberSignature Language="C#" Value="public double MarkerOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MarkerOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.List.MarkerOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MarkerOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MarkerOffset : double with get, set" Usage="System.Windows.Documents.List.MarkerOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pożądaną odległość między zawartością każdego <see cref="T:System.Windows.Documents.ListItem" /> elementu a bliską krawędzią znacznika listy.</summary>
        <value>Wartość podwójna określająca pożądaną odległość między zawartością listy a bliską krawędzią znaczników listy w pikselach niezależnych od urządzenia.  
  
Wartość <see cref="F:System.Double.NaN" /> (równoważnej wartości atrybutu "<c>automatyczny</c>") powoduje, że przesunięcie znacznika zostanie ustalone automatycznie.  
  
Wartość domyślna to <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MarkerOffset"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object MarkerOffset="double"/>  
- or -  
<object MarkerOffset="qualifiedDouble"/>  
- or -  
<object MarkerOffset="Auto"/>  
```  
  
<a name="xamlValues_MarkerOffset"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *double*  
 Ciąg reprezentujący <xref:System.Double> wartość równą lub większą niż **0,0** , ale mniejszą niż <xref:System.Double.PositiveInfinity>. Niekwalifikowana wartość jest mierzona w pikselach niezależnych od urządzenia. Ciągi nie muszą jawnie zawierać punktów dziesiętnych.  
  
 *qualifiedDouble*  
 Wartość *Podwójna* , jak opisano powyżej (z wyjątkiem `Auto`), po której następuje jeden z następujących specyfikatorów jednostek `px`: `in`, `cm`, `pt`,.  
  
 `px`(wartość domyślna) to[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` is inches; 1in==96px  
  
 `cm`jest centymetry; 1cm = = (96/2.54) px  
  
 `pt`to punkty; 1 pkt = = (96/72) px  
  
 Auto  
 Powoduje, że przesunięcie znacznika zostanie ustalone automatycznie z bieżącej charakterystyki czcionki.  Odpowiednik wartości <xref:System.Double.NaN>właściwości.  
  
<a name="dependencyPropertyInfo_MarkerOffset"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Documents.List.MarkerOffsetProperty>|  
|Właściwości metadanych ustawione na`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.List.MarkerStyle" />
      </Docs>
    </Member>
    <Member MemberName="MarkerOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarkerOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarkerOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.List.MarkerOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarkerOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarkerOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarkerOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.List.MarkerOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Documents.List.MarkerOffset" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.TextMarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextMarkerStyle MarkerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.List.MarkerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStyle As TextMarkerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextMarkerStyle MarkerStyle { System::Windows::TextMarkerStyle get(); void set(System::Windows::TextMarkerStyle value); };" />
      <MemberSignature Language="F#" Value="member this.MarkerStyle : System.Windows.TextMarkerStyle with get, set" Usage="System.Windows.Documents.List.MarkerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextMarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl znacznika dla elementu <see cref="T:System.Windows.Documents.List" />.</summary>
        <value>Element członkowski <see cref="T:System.Windows.TextMarkerStyle" /> wyliczenia określający styl znacznika do użycia.  
  
Wartość domyślna to <see cref="F:System.Windows.TextMarkerStyle.Disc" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_MarkerStyle"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Documents.List.MarkerStyle%2A>|  
|Właściwości metadanych ustawione na`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.List.MarkerOffset" />
      </Docs>
    </Member>
    <Member MemberName="MarkerStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarkerStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarkerStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.List.MarkerStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarkerStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarkerStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarkerStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.List.MarkerStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Documents.List.MarkerStyle" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIndex">
      <MemberSignature Language="C#" Value="public int StartIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.List.StartIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StartIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StartIndex : int with get, set" Usage="System.Windows.Documents.List.StartIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia początkowy indeks do etykietowania elementów na liście uporządkowanej.</summary>
        <value>Początkowy indeks do etykietowania elementów na liście uporządkowanej.  
  
Wartość domyślna to **1**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie ma wpływu na listy nieuporządkowane.  
  
<a name="dependencyPropertyInfo_StartIndex"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Documents.List.StartIndexProperty>|  
|Właściwości metadanych ustawione na`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StartIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StartIndexProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.List.StartIndexProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StartIndexProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StartIndexProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StartIndexProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.List.StartIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Documents.List.StartIndex" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
