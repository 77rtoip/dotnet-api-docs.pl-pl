<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab48ea222f69e09b0b493bad6b878974e0e32ebb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69207490" /></Metadata><TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52e3b-101">Reprezentuje pozycję w <see cref="T:System.Windows.Documents.FlowDocument" /> lub <see cref="T:System.Windows.Controls.TextBlock" />.</span><span class="sxs-lookup"><span data-stu-id="52e3b-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-102">W <xref:System.Windows.Documents.TextPointer> klasie wprowadzono następującą terminologię:</span><span class="sxs-lookup"><span data-stu-id="52e3b-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="52e3b-103">Położenie — z <xref:System.Windows.Documents.TextPointer> natury — zawsze wskazuje na *pozycję* zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="52e3b-104">Takie pozycje mieszczą się między znakami w zawartości lub między tagami elementów zawartości przepływu, które definiują strukturę zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="52e3b-105">Bieżąca pozycja — ponieważ <xref:System.Windows.Documents.TextPointer> zawsze wskazuje pozycję, a wiele operacji, które mogą być wykonywane <xref:System.Windows.Documents.TextPointer> w odniesieniu do położenia <xref:System.Windows.Documents.TextPointer>obecnie wskazywanego przez, warto po prostu odwołać się do Pozycja wskazywana przez <xref:System.Windows.Documents.TextPointer> element jako *Bieżąca pozycja*.</span><span class="sxs-lookup"><span data-stu-id="52e3b-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="52e3b-106">Pozycja wstawiania — pozycja *wstawiania* jest pozycją, w której można dodać nową zawartość bez przerywania żadnych reguł semantycznych dla skojarzonej zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="52e3b-107">W tej sytuacji pozycja wstawiania jest wszędzie w zawartości, w której można umieścić karetkę.</span><span class="sxs-lookup"><span data-stu-id="52e3b-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="52e3b-108">Przykładem prawidłowej <xref:System.Windows.Documents.TextPointer> pozycji, która nie jest pozycją wstawiania, jest pozycja między dwoma sąsiednimi <xref:System.Windows.Documents.Paragraph> tagami (czyli między tagiem zamykającym poprzedniego akapitu a tagiem otwierającym następnego akapitu).</span><span class="sxs-lookup"><span data-stu-id="52e3b-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="52e3b-109">Symbol — do celów <xref:System.Windows.Documents.TextPointer> operacji obejmujących symbole, każdy z następujących elementów jest traktowany jako *symbol*:</span><span class="sxs-lookup"><span data-stu-id="52e3b-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="52e3b-110">Otwierając lub zamykający tag dla <xref:System.Windows.Documents.TextElement> elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="52e3b-111"><xref:System.Windows.UIElement> Element zawarty<xref:System.Windows.Documents.InlineUIContainer> w lub <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="52e3b-112">Należy zauważyć, że <xref:System.Windows.UIElement> takie a jest zawsze zliczane jako dokładnie jeden symbol; jakakolwiek dodatkowa zawartość lub elementy zawarte <xref:System.Windows.UIElement> przez nie są zliczane jako symbole.</span><span class="sxs-lookup"><span data-stu-id="52e3b-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="52e3b-113">Każdy znak 16- [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] bitowy wewnątrz elementu tekstowego. <xref:System.Windows.Documents.Run></span><span class="sxs-lookup"><span data-stu-id="52e3b-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="52e3b-114">Kontener tekstu — *kontener tekstowy* to element, który tworzy ostatecznie obramowanie dla zawartości przepływu. Pozycja wskazywana przez <xref:System.Windows.Documents.TextPointer> zawsze znajduje się w kontenerze tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="52e3b-115">Obecnie kontener tekstu musi być <xref:System.Windows.Documents.FlowDocument> albo <xref:System.Windows.Controls.TextBlock>albo.</span><span class="sxs-lookup"><span data-stu-id="52e3b-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="52e3b-116">Ogólnie mówiąc, operacje między <xref:System.Windows.Documents.TextPointer> wystąpieniami w różnych kontenerach tekstowych nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="52e3b-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="52e3b-117">Dokument — zawartość w kontenerze tekstu jest określana jako *dokument*, jak w <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> metodzie i <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> właściwościach i <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> .</span><span class="sxs-lookup"><span data-stu-id="52e3b-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="52e3b-118">Klasa jest przeznaczona do ułatwienia przechodzenia i manipulowania zawartością reprezentowaną przez [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] elementy zawartości przepływu; ogólnie rzecz biorąc, te elementy pochodzą <xref:System.Windows.Documents.TextElement>od. <xref:System.Windows.Documents.TextPointer></span><span class="sxs-lookup"><span data-stu-id="52e3b-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="52e3b-119">Poniżej wymieniono niektóre operacje <xref:System.Windows.Documents.TextPointer> , które ułatwiają:</span><span class="sxs-lookup"><span data-stu-id="52e3b-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="52e3b-120">Wykonaj porównanie porządkowe bieżącej pozycji z drugą określoną pozycją.</span><span class="sxs-lookup"><span data-stu-id="52e3b-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="52e3b-121"><xref:System.Windows.Documents.TextPointer.CompareTo%2A> Zobacz metodę.</span><span class="sxs-lookup"><span data-stu-id="52e3b-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="52e3b-122">Określ typ zawartości przylegającej do bieżącej pozycji w określonym kierunku.</span><span class="sxs-lookup"><span data-stu-id="52e3b-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="52e3b-123">Zobacz metodę i <xref:System.Windows.Documents.TextPointerContext>Wyliczenie. <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="52e3b-124"><xref:System.Windows.Documents.TextElement> Pobierz te zakresy lub sąsiadująco z bieżącą pozycją.</span><span class="sxs-lookup"><span data-stu-id="52e3b-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="52e3b-125"><xref:System.Windows.Documents.Paragraph> Zobacz<xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> i metoda.</span><span class="sxs-lookup"><span data-stu-id="52e3b-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="52e3b-126">Pobierz kontener tekstu, który ma zakresy w bieżącym dokumencie.</span><span class="sxs-lookup"><span data-stu-id="52e3b-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="52e3b-127"><xref:System.Windows.Documents.TextPointer.Parent%2A> Zobacz właściwość.</span><span class="sxs-lookup"><span data-stu-id="52e3b-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="52e3b-128">Pobierz określoną liczbę znaków wcześniejszą lub niższą od bieżącego położenia.</span><span class="sxs-lookup"><span data-stu-id="52e3b-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="52e3b-129"><xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> Zobacz metodę.</span><span class="sxs-lookup"><span data-stu-id="52e3b-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="52e3b-130">Wstaw ciąg znaków w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="52e3b-131"><xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> Zobacz metodę.</span><span class="sxs-lookup"><span data-stu-id="52e3b-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="52e3b-132">Znajdź granice linii w zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-132">Find line boundaries in content.</span></span>  <span data-ttu-id="52e3b-133">Zobacz metodę i <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>Właściwość. <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="52e3b-134">Przekształć <xref:System.Windows.Documents.TextPointer> między położeniami i przesunięciami symboli do zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="52e3b-135">Zobacz metody <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>i. <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="52e3b-136">Wykonaj testowanie trafień wizualizacji, przetłumacząc między <xref:System.Windows.Documents.TextPointer> położenie <xref:System.Windows.Point> i reprezentującą współrzędne względne.</span><span class="sxs-lookup"><span data-stu-id="52e3b-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="52e3b-137">Znajdź w pobliżu pozycję wstawienia lub sprawdź, czy bieżące położenie jest pozycją wstawiania.</span><span class="sxs-lookup"><span data-stu-id="52e3b-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="52e3b-138">Zobacz metody <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> i <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> i<xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="52e3b-139">Pozycja i <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> wskazane <xref:System.Windows.Documents.TextPointer> przez obiekt są niezmienne.</span><span class="sxs-lookup"><span data-stu-id="52e3b-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="52e3b-140">Gdy zawartość jest edytowana lub modyfikowana, pozycja wskazywana <xref:System.Windows.Documents.TextPointer> przez nie zmienia się względem otaczającego tekstu, a przesunięcie tego położenia od początku zawartości jest odpowiednio dostosowywane w celu odzwierciedlenia nowej pozycji względnej w treści.</span><span class="sxs-lookup"><span data-stu-id="52e3b-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="52e3b-141">Na przykład, <xref:System.Windows.Documents.TextPointer> który wskazuje położenie na początku danego akapitu, kontynuuje wskazywanie na początku tego akapitu nawet wtedy, gdy zawartość jest wstawiana lub usuwana przed akapitem lub po nim.</span><span class="sxs-lookup"><span data-stu-id="52e3b-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="52e3b-142"><xref:System.Windows.Documents.TextPointer> Klasa nie udostępnia żadnych konstruktorów publicznych.</span><span class="sxs-lookup"><span data-stu-id="52e3b-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="52e3b-143">Wystąpienie <xref:System.Windows.Documents.TextPointer> jest tworzone przy użyciu właściwości lub metod innych obiektów (łącznie z innymi <xref:System.Windows.Documents.TextPointer> obiektami).</span><span class="sxs-lookup"><span data-stu-id="52e3b-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="52e3b-144">Poniższa lista zawiera kilka przykładów metod i właściwości, które tworzą i zwracają <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="52e3b-145">Ta lista nie jest wyczerpująca:</span><span class="sxs-lookup"><span data-stu-id="52e3b-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="52e3b-146"><xref:System.Windows.Documents.TextRange>Z: <xref:System.Windows.Documents.TextRange.Start%2A> i. <xref:System.Windows.Documents.TextRange.End%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="52e3b-147"><xref:System.Windows.Documents.TextElement>Z: <xref:System.Windows.Documents.TextElement.ContentStart%2A>, ,<xref:System.Windows.Documents.TextElement.ContentEnd%2A> ,i<xref:System.Windows.Documents.TextElement.ElementEnd%2A>. <xref:System.Windows.Documents.TextElement.ElementStart%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="52e3b-148">Z (kontener tekstu): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, i <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>. <xref:System.Windows.Controls.TextBlock></span><span class="sxs-lookup"><span data-stu-id="52e3b-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="52e3b-149">Z (kontener tekstu): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, i <xref:System.Windows.Documents.FlowDocument><xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="52e3b-150">Z istniejących <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, ,<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>i .<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-151">W poniższym przykładzie pokazano, jak użyć, <xref:System.Windows.Documents.TextPointer> aby znaleźć pozycję bezpośrednio wewnątrz pierwszego <xref:System.Windows.Documents.Run> elementu w określonym kontenerze tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="52e3b-152">Poniższy przykład implementuje algorytm wyszukiwania uproszczony za pomocą <xref:System.Windows.Documents.TextPointer> obiektów.</span><span class="sxs-lookup"><span data-stu-id="52e3b-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="52e3b-153">A <see cref="T:System.Windows.Documents.TextPointer" /> , która określa położenie do porównania z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="52e3b-154">Wykonuje porównanie porządkowe między pozycjami określonymi przez bieżącą <see cref="T:System.Windows.Documents.TextPointer" /> i <see cref="T:System.Windows.Documents.TextPointer" />sekundową wartość.</span><span class="sxs-lookup"><span data-stu-id="52e3b-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="52e3b-155"><see cref="T:System.Windows.Documents.TextPointer" /> -1 Jeśli bieżąca <paramref name="position" />poprzedza; 0, jeśli lokalizacje są takie same; + <paramref name="position" />1, jeśli bieżąca <see cref="T:System.Windows.Documents.TextPointer" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="52e3b-155">-1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-156">Wartość-1 wskazuje, że pozycja określona przez bieżącą <xref:System.Windows.Documents.TextPointer> poprzedza pozycję określoną przez. `position`</span><span class="sxs-lookup"><span data-stu-id="52e3b-156">A value of -1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="52e3b-157">Wartość 0 oznacza, że wskazane pozycje są równe.</span><span class="sxs-lookup"><span data-stu-id="52e3b-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="52e3b-158">Wartość dodatnia + 1 wskazuje, że pozycja określona przez bieżącą <xref:System.Windows.Documents.TextPointer> następuje zgodnie z pozycją określoną przez. `position`</span><span class="sxs-lookup"><span data-stu-id="52e3b-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-159">Poniższy przykład ilustruje użycie dla tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="52e3b-160">W przykładzie <xref:System.Windows.Documents.TextPointer.CompareTo%2A> Metoda jest używana w połączeniu z metodą, aby sprawdzić <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> , czy określony <xref:System.Windows.Documents.TextElement> element jest pusty.</span><span class="sxs-lookup"><span data-stu-id="52e3b-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52e3b-161"><paramref name="position" />Określa pozycję poza kontenerem tekstu skojarzonym z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-161"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="52e3b-162">Liczba znaków do usunięcia, rozpoczynając od bieżącego położenia.</span><span class="sxs-lookup"><span data-stu-id="52e3b-162">The number of characters to delete, starting at the current position.</span></span> <span data-ttu-id="52e3b-163">Określ wartość dodatnią, aby usunąć znaki, które są zgodne z bieżącą pozycją; Określ wartość ujemną, aby usunąć znaki poprzedzające bieżącą pozycję.</span><span class="sxs-lookup"><span data-stu-id="52e3b-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span></span></param>
        <summary><span data-ttu-id="52e3b-164">Usuwa określoną liczbę znaków z pozycji wskazywanej przez bieżące <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="52e3b-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="52e3b-165">Liczba znaków rzeczywiście usuniętych.</span><span class="sxs-lookup"><span data-stu-id="52e3b-165">The number of characters actually deleted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-166">Określ wartość dodatnią, aby usunąć znaki, które są zgodne z bieżącym położeniem (jak w programie <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); Określ wartość ujemną, aby usunąć znaki poprzedzające bieżącą pozycję (jak w programie <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="52e3b-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="52e3b-167">Liczba znaków faktycznie usuniętych może być mniejsza niż liczba określona przez `count`.</span><span class="sxs-lookup"><span data-stu-id="52e3b-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="52e3b-168">Dzieje się tak w przypadkach `count` , gdy określa więcej znaków niż istnieje do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="52e3b-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="52e3b-169">Metoda jest wywoływana w miejscu, w którym tekst jest niedozwolony.</span><span class="sxs-lookup"><span data-stu-id="52e3b-169">The method is called at a position where text is not allowed.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52e3b-170"><see cref="T:System.Windows.Documents.TextPointer" /> Pobiera na końcu zawartości w kontenerze tekstu skojarzonym z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="52e3b-171"><see cref="T:System.Windows.Documents.TextPointer" /> Na końcu zawartości w kontenerze tekstu skojarzonym z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-172"><xref:System.Windows.Documents.TextPointer> <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Documents.FlowDocument>Dla zwracanego elementu jest zawsze kontener tekstowy (lub), a nie <xref:System.Windows.Documents.TextElement>. <xref:System.Windows.Documents.TextPointer.Parent%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52e3b-173"><see cref="T:System.Windows.Documents.TextPointer" /> Pobiera na początku zawartości w kontenerze tekstu skojarzonym z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="52e3b-174"><see cref="T:System.Windows.Documents.TextPointer" /> Na początku zawartości w kontenerze tekstu skojarzonym z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-175">Użyj pozycji zwróconej przez tę właściwość jako pozycji linii bazowej, z której ma nastąpić współpraca z względnymi przesunięciami do innych pozycji.</span><span class="sxs-lookup"><span data-stu-id="52e3b-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="52e3b-176">Metody <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> i<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> umożliwiają przetłumaczenie między położeniami i przesunięciami położenia.</span><span class="sxs-lookup"><span data-stu-id="52e3b-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="52e3b-177"><xref:System.Windows.Documents.TextPointer> <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Documents.FlowDocument>Dla zwracanego elementu jest zawsze kontener tekstowy (lub), a nie <xref:System.Windows.Documents.TextElement>. <xref:System.Windows.Documents.TextPointer.Parent%2A></span><span class="sxs-lookup"><span data-stu-id="52e3b-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-178">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek wyszukiwania sąsiadującego elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span></span></param>
        <summary><span data-ttu-id="52e3b-179">Zwraca element, jeśli istnieje, który jest obramowany jako <see cref="T:System.Windows.Documents.TextPointer" /> bieżący w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-180">Przyległy element w określonym <paramref name="direction" />lub <see langword="null" /> nie istnieje przyległy element.</span><span class="sxs-lookup"><span data-stu-id="52e3b-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-181">Zwrócony element jest zwykle a <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="52e3b-182">Można <xref:System.Windows.UIElement> zwrócić, <xref:System.Windows.Documents.TextPointer> gdy wskazujepołożenie<xref:System.Windows.Documents.InlineUIContainer> wewnątrz elementu lub elementu. <xref:System.Windows.Documents.BlockUIContainer></span><span class="sxs-lookup"><span data-stu-id="52e3b-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-183">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek, w którym ma znajdować się ramka związana z zawartością.</span><span class="sxs-lookup"><span data-stu-id="52e3b-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span></span></param>
        <summary><span data-ttu-id="52e3b-184">Zwraca pole ograniczenia (<see cref="T:System.Windows.Rect" />) dla zawartości, która jest obramowana jako bieżąca <see cref="T:System.Windows.Documents.TextPointer" /> w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-185">Pole ograniczające zawartość, która jest obramowana jako <see cref="T:System.Windows.Documents.TextPointer" /> bieżąca w określonym kierunku lub <see cref="P:System.Windows.Rect.Empty" /> Jeśli bieżące, prawidłowe informacje o układzie są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="52e3b-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-186"><xref:System.Windows.Documents.TextElement>krawędzie nie są uważane za zawartość na potrzeby tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="52e3b-187">Jeśli jest ustawiona <xref:System.Windows.Documents.TextElement> przed krawędzią, wartość zwracana jest polem ograniczenia<xref:System.Windows.Documents.TextElement> dla następnej niezawartości w określonym kierunku. <xref:System.Windows.Documents.TextPointer></span><span class="sxs-lookup"><span data-stu-id="52e3b-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="52e3b-188">Jeśli w określonym kierunku nie ma żadnej zawartości, jest zwracana zerowa szerokość <xref:System.Windows.Rect> z wysokością odpowiadającą wysokości każdej poprzedniej zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="52e3b-189">Operacja wykonywana przez tę metodę zależy od prawidłowego układu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="52e3b-190">W razie potrzeby ta metoda próbuje automatycznie ponownie wygenerować prawidłowy układ przed kontynuowaniem operacji.</span><span class="sxs-lookup"><span data-stu-id="52e3b-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="52e3b-191">Ponowne generowanie układu może być stosunkowo kosztowną operacją.</span><span class="sxs-lookup"><span data-stu-id="52e3b-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="52e3b-192"><xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> Użyj właściwości, aby sprawdzić poprawność układu przed wykonaniem operacji, które mogą ponownie wygenerować układ.</span><span class="sxs-lookup"><span data-stu-id="52e3b-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="52e3b-193">Aby uzyskać więcej informacji, zobacz [Układ](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="52e3b-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-194">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek, w którym ma zostać wyszukana Najbliższa pozycja wstawiania.</span><span class="sxs-lookup"><span data-stu-id="52e3b-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span></span></param>
        <summary><span data-ttu-id="52e3b-195"><see cref="T:System.Windows.Documents.TextPointer" /> Zwraca do najbliższej pozycji wstawiania w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-196"><see cref="T:System.Windows.Documents.TextPointer" /> Do najbliższej pozycji wstawiania w określonym kierunku.</span><span class="sxs-lookup"><span data-stu-id="52e3b-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-197">Pozycja wstawiania jest pozycją, w której można dodać nową zawartość bez przerywania żadnych reguł semantycznych dla skojarzonej zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="52e3b-198">W tej sytuacji pozycja wstawiania jest wszędzie w zawartości, w której można umieścić karetkę.</span><span class="sxs-lookup"><span data-stu-id="52e3b-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="52e3b-199">Przykładem prawidłowej <xref:System.Windows.Documents.TextPointer> pozycji, która nie jest pozycją wstawiania, jest pozycja między dwoma sąsiednimi <xref:System.Windows.Documents.Paragraph> tagami (czyli między tagiem zamykającym poprzedniego akapitu a tagiem otwierającym następnego akapitu).</span><span class="sxs-lookup"><span data-stu-id="52e3b-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="52e3b-200">Jeśli już wskazuje na prawidłową pozycję wstawienia, ale tag zamykający niepustej sekwencji formatowania bezpośrednio następuje po tej pozycji w danym kierunku, <xref:System.Windows.Documents.TextPointer> a następnie zwracany przez tę metodę jest dostosowywany do punktu wstawiania <xref:System.Windows.Documents.TextPointer> Umieść bezpośrednio po zamknięciu sekwencji formatowania.</span><span class="sxs-lookup"><span data-stu-id="52e3b-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="52e3b-201">Rozważmy na przykład sekwencję `<Bold>a</Bold>b`znaczników.</span><span class="sxs-lookup"><span data-stu-id="52e3b-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="52e3b-202">Należy zauważyć, że istnieją dwa położenia wstawiania `a` między literami `b` i-jeden, które poprzedza tag `Bold` zamykający, i jeden bezpośrednio po tagu `Bold` zamykającym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-202">Note that there are two insertion positions between the letters `a` and `b` - one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="52e3b-203">Jeśli <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> jest wywoływana <xref:System.Windows.Documents.TextPointer> w odniesieniu do pozycji bezpośrednio po literze `a` i przed tagiem zamykającym `Bold` oraz z `direction` <xref:System.Windows.Documents.LogicalDirection.Forward>, zwracana <xref:System.Windows.Documents.TextPointer> wartość jest dostosowywana do wskazywania Umieść tuż przed literą `b`po tagu zamykającym `Bold` .</span><span class="sxs-lookup"><span data-stu-id="52e3b-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="52e3b-204">Podobne dostosowanie jest wykonywane na potrzeby otwierania tagów formatowania podczas pracy w odwrotnym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="52e3b-205">Ta metoda jest przeznaczona do zapewnienia metody rozróżnienia między położeniami wstawiania w podobnych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="52e3b-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="52e3b-206">Tej metody można również użyć, aby uzyskać wybiórcze punkty wstawiania w przypadku, gdy jest używana sekwencja tagów strukturalnych.</span><span class="sxs-lookup"><span data-stu-id="52e3b-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="52e3b-207">Na przykład, gdy w położeniu między tagiem zamykającym i otwierającym znaczniki akapitu można użyć parametru kierunku, aby wybrać najbliższy punkt wstawiania na początku następnego akapitu (przez określenie <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) lub na końcu poprzedniego akapitu ( przez określenie <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="52e3b-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="52e3b-208">Jeśli wskaźnik jest już w pozycji wstawienia i nie ma żadnych sąsiednich znaczników formatowania w określonym `direction`, zwrócone <xref:System.Windows.Documents.TextPointer> punkty do tego samego położenia co wywołanie <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="52e3b-209">Jest możliwe, że nie istnieje prawidłowa pozycja wstawiania względem pozycji wskazywanej przez <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="52e3b-210">Taka sytuacja może wystąpić, jeśli przywoływana zawartość jest strukturalnie niekompletna, tak jak w przypadku pustej tabeli lub listy.</span><span class="sxs-lookup"><span data-stu-id="52e3b-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="52e3b-211">W takich przypadkach ta metoda po prostu zwraca <xref:System.Windows.Documents.TextPointer> w tym samym miejscu co metoda, <xref:System.Windows.Documents.TextPointer> z której została wywołana.</span><span class="sxs-lookup"><span data-stu-id="52e3b-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="52e3b-212">Ta metoda zawsze zwraca prawidłowy <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-213">Ten przykład pokazuje, <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> jak używać metody do sprawdzenia, czy określony <xref:System.Windows.Documents.TextElement> element jest pusty w zawartości do wydrukowania.</span><span class="sxs-lookup"><span data-stu-id="52e3b-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52e3b-214">Zwraca wartość <see cref="T:System.Windows.Documents.TextPointer" />do początku wiersza, który jest określony względem bieżącej. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="52e3b-215">Liczba znaczników początkowych, które mają zostać pominięte podczas określania wiersza, dla którego ma zostać zwrócona pozycja początkowa.</span><span class="sxs-lookup"><span data-stu-id="52e3b-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="52e3b-216">Wartości ujemne określają poprzednie wiersze, 0 określa bieżący wiersz, a wartości dodatnie określają następujące wiersze.</span><span class="sxs-lookup"><span data-stu-id="52e3b-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <summary><span data-ttu-id="52e3b-217">Zwraca wartość <see cref="T:System.Windows.Documents.TextPointer" />do początku wiersza, który jest określony względem bieżącej. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="52e3b-218">Wskazuje początek określonego wiersza ( <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> z ustawionym na <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />) lub <see langword="null" /> Jeśli określony wiersz znajduje się poza zakresem lub nie można go zlokalizować. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-219">Jeśli wskazuje na niejednoznaczne położenie, na przykład między dwoma wierszami, linia w kierunku określonym przez <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> jest wybierana jako względna linia początkowa. <xref:System.Windows.Documents.TextPointer></span><span class="sxs-lookup"><span data-stu-id="52e3b-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="52e3b-220">Operacja wykonywana przez tę metodę zależy od prawidłowego układu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="52e3b-221">W razie potrzeby ta metoda próbuje automatycznie ponownie wygenerować prawidłowy układ przed kontynuowaniem operacji.</span><span class="sxs-lookup"><span data-stu-id="52e3b-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="52e3b-222">Ponowne generowanie układu może być stosunkowo kosztowną operacją.</span><span class="sxs-lookup"><span data-stu-id="52e3b-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="52e3b-223">Użyj <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> , aby sprawdzić poprawność układu przed wykonaniem operacji, które mogą ponownie wygenerować układ.</span><span class="sxs-lookup"><span data-stu-id="52e3b-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="52e3b-224">Aby uzyskać więcej informacji, zobacz [Układ](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="52e3b-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="52e3b-225">Liczba znaczników początkowych, które mają zostać pominięte podczas określania wiersza, dla którego ma zostać zwrócona pozycja początkowa.</span><span class="sxs-lookup"><span data-stu-id="52e3b-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="52e3b-226">Wartości ujemne określają poprzednie wiersze, 0 określa bieżący wiersz, a wartości dodatnie określają następujące wiersze.</span><span class="sxs-lookup"><span data-stu-id="52e3b-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <param name="actualCount"><span data-ttu-id="52e3b-227">Gdy ta metoda zwraca, zawiera rzeczywistą liczbę znaczników początkowych, które zostały pominięte podczas określania wiersza, dla którego ma zostać zwrócona pozycja początkowa.</span><span class="sxs-lookup"><span data-stu-id="52e3b-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span></span>  <span data-ttu-id="52e3b-228">Ta wartość może być mniejsza niż <paramref name="count" /> jeśli początek lub koniec zawartości zostanie osiągnięty przed pominięciem określonej liczby wierszy.</span><span class="sxs-lookup"><span data-stu-id="52e3b-228">This value may be less than <paramref name="count" /> if the beginning or end of content is encountered before the specified number of lines are skipped.</span></span> <span data-ttu-id="52e3b-229">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="52e3b-229">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="52e3b-230">Zwraca do początku wiersza, który jest określony względem bieżącego <see cref="T:System.Windows.Documents.TextPointer" />, i zgłasza liczbę pominiętych wierszy. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span></span></summary>
        <returns><span data-ttu-id="52e3b-231">Wskazuje początek określonego wiersza ( <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> z ustawionym na <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />) lub na początek wiersza znajdującego się najbliżej określonego wiersza, jeśli określony wiersz znajduje się poza zakresem. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-232">Jeśli wskazuje na niejednoznaczne położenie, na przykład między dwoma wierszami, linia w kierunku określonym <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> przez właściwość jest wybierana jako względna linia początkowa. <xref:System.Windows.Documents.TextPointer></span><span class="sxs-lookup"><span data-stu-id="52e3b-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-233">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek wyszukiwania następnego symbolu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span></span></param>
        <summary><span data-ttu-id="52e3b-234">Zwraca wskaźnik do następnego symbolu w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-234">Returns a pointer to the next symbol in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-235">Do następnego symbolu w żądanym kierunku lub <see langword="null" /> Jeśli bieżące <see cref="T:System.Windows.Documents.TextPointer" /> obramowanie zaczynają się lub kończą. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-236">Dowolny z następujących elementów jest traktowany jako symbol:</span><span class="sxs-lookup"><span data-stu-id="52e3b-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="52e3b-237">Otwierając lub zamykający tag dla <xref:System.Windows.Documents.TextElement> elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="52e3b-238"><xref:System.Windows.UIElement> Element zawarty<xref:System.Windows.Documents.InlineUIContainer> w lub <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="52e3b-239">Należy zauważyć, że <xref:System.Windows.UIElement> takie a jest zawsze zliczane jako dokładnie jeden symbol; jakakolwiek dodatkowa zawartość lub elementy zawarte <xref:System.Windows.UIElement> przez nie są zliczane jako symbole.</span><span class="sxs-lookup"><span data-stu-id="52e3b-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="52e3b-240">16-bitowy [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] znak wewnątrz elementu tekstowego <xref:System.Windows.Documents.Run> .</span><span class="sxs-lookup"><span data-stu-id="52e3b-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="52e3b-241">Jeśli <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>następny symbol jest kategoryzowany jako, <xref:System.Windows.Documents.TextPointerContext.ElementStart>lub <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (zgodnie z <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> definicją przez metodę), <xref:System.Windows.Documents.TextPointer> zwracany przez tę metodę jest zaawansowany przez dokładnie jeden symbol z bieżącego położenia.</span><span class="sxs-lookup"><span data-stu-id="52e3b-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="52e3b-242">Jeśli następny symbol <xref:System.Windows.Documents.TextPointerContext.Text>jest kategoryzowany jako, <xref:System.Windows.Documents.TextPointer> a następnie zwracany przez tę metodę jest zaawansowaną wklejając tekst do następnego symbolu nietekstowego (czyli następnego położenia, gdzie <xref:System.Windows.Documents.TextPointerContext> nie <xref:System.Windows.Documents.TextPointerContext.Text>jest).</span><span class="sxs-lookup"><span data-stu-id="52e3b-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="52e3b-243">Dokładna liczba symboli przekroczenia może zostać obliczona z wyprzedzeniem <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> przez wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-244">Poniższy przykład ilustruje użycie dla tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="52e3b-245">W przykładzie zastosowano <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> metodę w połączeniu <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> z metodą w celu przechodzenia i wyodrębnienia symboli w określonym <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="52e3b-246">Chociaż przykład może służyć do wyodrębnienia [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] struktury zawartości danego <xref:System.Windows.Documents.TextElement>elementu, jest on przeznaczony tylko do celów informacyjnych i nie powinien być używany w kodzie produkcyjnym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="52e3b-247">Zapoznaj <xref:System.Xml> się z przestrzenią nazw bogaty zestaw typów przeznaczony do pracy z i przetwarzania kodu XML.</span><span class="sxs-lookup"><span data-stu-id="52e3b-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-248">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości określa kierunek logiczny, w którym ma zostać wyszukana następna pozycja wstawiania.</span><span class="sxs-lookup"><span data-stu-id="52e3b-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span></span></param>
        <summary><span data-ttu-id="52e3b-249"><see cref="T:System.Windows.Documents.TextPointer" /> Zwraca do następnej pozycji wstawienia w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-250">A <see cref="T:System.Windows.Documents.TextPointer" /> , który identyfikuje następną pozycję wstawienia w żądanym kierunku, <see langword="null" /> lub jeśli nie można znaleźć kolejnej pozycji wstawiania.</span><span class="sxs-lookup"><span data-stu-id="52e3b-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-251">*Pozycja wstawiania* jest pozycją, w której można dodać nową zawartość bez przerywania żadnych reguł semantycznych dla skojarzonej zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="52e3b-252">W tej sytuacji pozycja wstawiania jest wszędzie w zawartości, w której można umieścić karetkę.</span><span class="sxs-lookup"><span data-stu-id="52e3b-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="52e3b-253">Przykładem prawidłowej <xref:System.Windows.Documents.TextPointer> pozycji, która nie jest pozycją wstawiania, jest pozycja między dwoma sąsiednimi <xref:System.Windows.Documents.Paragraph> tagami (czyli między tagiem zamykającym poprzedniego akapitu a tagiem otwierającym następnego akapitu).</span><span class="sxs-lookup"><span data-stu-id="52e3b-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-254">Poniższy przykład ilustruje użycie dla tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="52e3b-255">W przykładzie zastosowano <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> metodę w celu przechodzenia przez granice elementów zawartości w celu zliczenia <xref:System.Windows.Documents.Paragraph> liczby elementów obecnych między dwoma określonymi <xref:System.Windows.Documents.TextPointer> wystąpieniami.</span><span class="sxs-lookup"><span data-stu-id="52e3b-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="52e3b-256">A <see cref="T:System.Windows.Documents.TextPointer" /> , która określa pozycję, aby znaleźć odległość (w symbolach) na.</span><span class="sxs-lookup"><span data-stu-id="52e3b-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span></span></param>
        <summary><span data-ttu-id="52e3b-257">Zwraca liczbę symboli między bieżącą <see cref="T:System.Windows.Documents.TextPointer" /> i drugą określoną. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="52e3b-258">Względna liczba symboli między bieżącą <see cref="T:System.Windows.Documents.TextPointer" /> i. <paramref name="position" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span></span>  <span data-ttu-id="52e3b-259">Wartość ujemna wskazuje, że bieżąca <see cref="T:System.Windows.Documents.TextPointer" /> następuje po pozycji określonej przez <paramref name="position" />, 0 wskazuje, że pozycje są równe, a wartość dodatnia wskazuje, że bieżąca <see cref="T:System.Windows.Documents.TextPointer" /> poprzedza pozycję określoną przez <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="52e3b-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-260">Dowolny z następujących elementów jest traktowany jako symbol:</span><span class="sxs-lookup"><span data-stu-id="52e3b-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="52e3b-261">Otwierając lub zamykający tag dla <xref:System.Windows.Documents.TextElement> elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="52e3b-262"><xref:System.Windows.UIElement> Element zawarty<xref:System.Windows.Documents.InlineUIContainer> w lub <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="52e3b-263">Należy zauważyć, że <xref:System.Windows.UIElement> takie a jest zawsze zliczane jako dokładnie jeden symbol; jakakolwiek dodatkowa zawartość lub elementy zawarte <xref:System.Windows.UIElement> przez nie są zliczane jako symbole.</span><span class="sxs-lookup"><span data-stu-id="52e3b-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="52e3b-264">16-bitowy [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] znak wewnątrz elementu tekstowego <xref:System.Windows.Documents.Run> .</span><span class="sxs-lookup"><span data-stu-id="52e3b-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-265">Poniższy przykład ilustruje użycie dla tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="52e3b-266">W przykładzie zastosowano <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> metodę, aby znaleźć przesunięcia dla dwóch <xref:System.Windows.Documents.TextPointer> wystąpień, a następnie za pomocą tych informacji zapisać i <xref:System.Windows.Controls.RichTextBox>przywrócić zaznaczenie w.</span><span class="sxs-lookup"><span data-stu-id="52e3b-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="52e3b-267">W przykładzie założono, że zawartość <xref:System.Windows.Controls.RichTextBox> nie zmieniła się między pozycją Zapisz i Przywróć zaznaczenie.</span><span class="sxs-lookup"><span data-stu-id="52e3b-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52e3b-268"><paramref name="position" />Określa pozycję poza kontenerem tekstu skojarzonym z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-268"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-269">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek określania kategorii dla sąsiedniej zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span></span></param>
        <summary><span data-ttu-id="52e3b-270">Zwraca wskaźnik kategorii dla zawartości przylegającej do bieżącej <see cref="T:System.Windows.Documents.TextPointer" /> w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-271">Jedna z <see cref="T:System.Windows.Documents.TextPointerContext" /> wartości, która wskazuje kategorię dla sąsiedniej zawartości w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="52e3b-272">Poniższy przykład ilustruje użycie dla tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="52e3b-273">W przykładzie zastosowano <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> metodę, aby zaimplementować algorytm służący do obliczania salda otwierania i zamykania tagów elementów między dwoma <xref:System.Windows.Documents.TextPointer> określonymi pozycjami.</span><span class="sxs-lookup"><span data-stu-id="52e3b-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="52e3b-274">Każdy tag otwierającego elementu jest liczony jako + 1, a każdy zamykający tag elementu jest liczony jako-1.</span><span class="sxs-lookup"><span data-stu-id="52e3b-274">Each opening element tag is counted as +1, and each closing element tag is counted as -1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52e3b-275"><see cref="T:System.Windows.Documents.TextPointer" /> Zwraca do pozycji wskazywanej przez określone przesunięcie (w symbolach) od początku zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="52e3b-276">Przesunięcie w symbolach, dla których należy obliczyć i zwrócić pozycję.</span><span class="sxs-lookup"><span data-stu-id="52e3b-276">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="52e3b-277">Jeśli przesunięcie jest ujemne, pozycja jest obliczana w logicznym kierunku odwrotnym od wskazanego przez <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> właściwość.</span><span class="sxs-lookup"><span data-stu-id="52e3b-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span></span></param>
        <summary><span data-ttu-id="52e3b-278">Zwraca do pozycji wskazywanej przez określone przesunięcie (w symbolach) od początku bieżącego <see cref="T:System.Windows.Documents.TextPointer" />. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="52e3b-279">A <see cref="T:System.Windows.Documents.TextPointer" /> do pozycji wskazywanej przez określone przesunięcie lub <see langword="null" /> Jeśli nie można znaleźć odpowiadającej jej pozycji.</span><span class="sxs-lookup"><span data-stu-id="52e3b-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-280">Dowolny z następujących elementów jest traktowany jako symbol:</span><span class="sxs-lookup"><span data-stu-id="52e3b-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="52e3b-281">Otwierając lub zamykający tag dla <xref:System.Windows.Documents.TextElement> elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="52e3b-282"><xref:System.Windows.UIElement> Element zawarty<xref:System.Windows.Documents.InlineUIContainer> w lub <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="52e3b-283">Należy zauważyć, że <xref:System.Windows.UIElement> takie a jest zawsze zliczane jako dokładnie jeden symbol; jakakolwiek dodatkowa zawartość lub elementy zawarte <xref:System.Windows.UIElement> przez nie są zliczane jako symbole.</span><span class="sxs-lookup"><span data-stu-id="52e3b-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="52e3b-284">16-bitowy [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] znak wewnątrz elementu tekstowego <xref:System.Windows.Documents.Run> .</span><span class="sxs-lookup"><span data-stu-id="52e3b-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-285">Poniższy przykład ilustruje użycie dla tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="52e3b-286">W przykładzie zastosowano <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> metodę w celu zaimplementowania pary metod, jeden do obliczenia przesunięcia do określonego położenia względem dowolnego akapitu hostingu, a drugi do <xref:System.Windows.Documents.TextPointer> zwrócenia do określonego przesunięcia w określonym akapicie.</span><span class="sxs-lookup"><span data-stu-id="52e3b-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="52e3b-287">Przesunięcie w symbolach, dla których należy obliczyć i zwrócić pozycję.</span><span class="sxs-lookup"><span data-stu-id="52e3b-287">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="52e3b-288">Jeśli przesunięcie jest ujemne, zwrócone <see cref="T:System.Windows.Documents.TextPointer" /> poprzedza bieżące <see cref="T:System.Windows.Documents.TextPointer" />; w przeciwnym razie następuje.</span><span class="sxs-lookup"><span data-stu-id="52e3b-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span></span></param>
        <param name="direction"><span data-ttu-id="52e3b-289">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek zwracanego <see cref="T:System.Windows.Documents.TextPointer" />elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></param>
        <summary><span data-ttu-id="52e3b-290">Zwraca do pozycji wskazywanej przez określone przesunięcie, w symbolach, od początku bieżącego <see cref="T:System.Windows.Documents.TextPointer" /> i w określonym kierunku. <see cref="T:System.Windows.Documents.TextPointer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-291">A <see cref="T:System.Windows.Documents.TextPointer" /> do pozycji wskazywanej przez określone przesunięcie lub <see langword="null" /> przesunięcie wykracza poza koniec zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-292">Dowolny z następujących elementów jest traktowany jako symbol:</span><span class="sxs-lookup"><span data-stu-id="52e3b-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="52e3b-293">Otwierając lub zamykający tag dla <xref:System.Windows.Documents.TextElement> elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="52e3b-294"><xref:System.Windows.UIElement> Element zawarty<xref:System.Windows.Documents.InlineUIContainer> w lub <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="52e3b-295">Należy zauważyć, że <xref:System.Windows.UIElement> takie a jest zawsze zliczane jako dokładnie jeden symbol; jakakolwiek dodatkowa zawartość lub elementy zawarte <xref:System.Windows.UIElement> przez nie są zliczane jako symbole.</span><span class="sxs-lookup"><span data-stu-id="52e3b-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="52e3b-296">16-bitowy [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] znak wewnątrz elementu tekstowego <xref:System.Windows.Documents.Run> .</span><span class="sxs-lookup"><span data-stu-id="52e3b-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52e3b-297">Zwraca tekst sąsiadujący z bieżącym <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="52e3b-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-298">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek, w którym można znaleźć i zwrócić dowolny tekst.</span><span class="sxs-lookup"><span data-stu-id="52e3b-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span></span></param>
        <summary><span data-ttu-id="52e3b-299">Zwraca ciąg zawierający dowolny tekst przylegający do bieżącego <see cref="T:System.Windows.Documents.TextPointer" /> w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-300">Ciąg zawierający każdy sąsiadujący tekst w określonym kierunku logicznym lub <see cref="F:System.String.Empty" /> nie można odnaleźć sąsiadującego tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-301">Ta metoda zwraca tylko nieprzerwane uruchomienia tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="52e3b-302">Wartość Nothing nie jest zwracana, jeśli dowolny typ <xref:System.Windows.Documents.TextPointerContext.Text> symboli inny niż przylegają <xref:System.Windows.Documents.TextPointer> do bieżącego w określonym kierunku.</span><span class="sxs-lookup"><span data-stu-id="52e3b-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="52e3b-303">Podobnie tekst jest zwracany tylko do następnego symbolu innego niż tekst.</span><span class="sxs-lookup"><span data-stu-id="52e3b-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-304">Poniższy przykład ilustruje użycie dla tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="52e3b-305">W przykładzie zastosowano <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> metodę w celu zaimplementowania prostego wyodrębniania tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="52e3b-306">Metoda zwraca ciąg łączenia całego tekstu między dwoma określonymi <xref:System.Windows.Documents.TextPointer> wystąpieniami.</span><span class="sxs-lookup"><span data-stu-id="52e3b-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="52e3b-307">Przykład może służyć do wyodrębnienia dowolnego tekstu między dwoma <xref:System.Windows.Documents.TextPointer> wystąpieniami, który jest przeznaczony tylko do celów informacyjnych i nie powinien być używany w kodzie produkcyjnym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="52e3b-308">Zamiast tego użyj właściwości. <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="52e3b-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-309">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek, w którym można znaleźć i skopiować dowolny tekst.</span><span class="sxs-lookup"><span data-stu-id="52e3b-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span></span></param>
        <param name="textBuffer"><span data-ttu-id="52e3b-310">Bufor, do którego kopiowany jest dowolny tekst.</span><span class="sxs-lookup"><span data-stu-id="52e3b-310">A buffer into which any text is copied.</span></span></param>
        <param name="startIndex"><span data-ttu-id="52e3b-311">Indeks, w <paramref name="textBuffer" /> którym rozpocznie się pisanie skopiowanego tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-311">An index into <paramref name="textBuffer" /> at which to begin writing copied text.</span></span></param>
        <param name="count"><span data-ttu-id="52e3b-312">Maksymalna liczba znaków do skopiowania.</span><span class="sxs-lookup"><span data-stu-id="52e3b-312">The maximum number of characters to copy.</span></span></param>
        <summary><span data-ttu-id="52e3b-313">Kopiuje określoną maksymalną liczbę znaków z dowolnego sąsiadującego tekstu w określonym kierunku do tablicy znaków dostarczonej przez obiekt wywołujący.</span><span class="sxs-lookup"><span data-stu-id="52e3b-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span></span></summary>
        <returns><span data-ttu-id="52e3b-314">Liczba znaków rzeczywiście skopiowanych do <paramref name="textBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="52e3b-314">The number of characters actually copied into <paramref name="textBuffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-315">Ta metoda zwraca tylko nieprzerwane uruchomienia tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="52e3b-316">Wartość Nothing nie jest zwracana, jeśli dowolny typ <xref:System.Windows.Documents.TextPointerContext.Text> symboli inny niż przylegają <xref:System.Windows.Documents.TextPointer> do bieżącego w określonym kierunku.</span><span class="sxs-lookup"><span data-stu-id="52e3b-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="52e3b-317">Podobnie tekst jest zwracany tylko do następnego symbolu innego niż tekst.</span><span class="sxs-lookup"><span data-stu-id="52e3b-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="52e3b-318"><paramref name="startIndex" />jest mniejsza niż 0 lub większa niż <see cref="P:System.Array.Length" /> <paramref name="textBuffer" />właściwość.</span><span class="sxs-lookup"><span data-stu-id="52e3b-318"><paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span></span>  
  
<span data-ttu-id="52e3b-319">—lub—</span><span class="sxs-lookup"><span data-stu-id="52e3b-319">-or-</span></span> 
 <span data-ttu-id="52e3b-320"><paramref name="count" />jest mniejsza od 0 lub większa od pozostałego miejsca <paramref name="textBuffer" /> w<paramref name="textBuffer" />(.<see cref="P:System.Array.Length" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-320"><paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span></span> <span data-ttu-id="52e3b-321">minus <paramref name="startIndex" />).</span><span class="sxs-lookup"><span data-stu-id="52e3b-321">minus <paramref name="startIndex" />).</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="52e3b-322">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, która określa logiczny kierunek, w którym należy obliczyć liczbę znaków.</span><span class="sxs-lookup"><span data-stu-id="52e3b-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span></span></param>
        <summary><span data-ttu-id="52e3b-323">Zwraca liczbę znaków Unicode między bieżącym <see cref="T:System.Windows.Documents.TextPointer" /> i następnym symbolem innym niż tekst w określonym kierunku logicznym.</span><span class="sxs-lookup"><span data-stu-id="52e3b-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="52e3b-324">Liczba znaków Unicode między bieżącym <see cref="T:System.Windows.Documents.TextPointer" /> i następnym symbolem niebędącym tekstem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span></span>  <span data-ttu-id="52e3b-325">Ta liczba może mieć wartość 0, jeśli nie ma sąsiadującego tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-325">This number may be 0 if there is no adjacent text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-326">Dowolny z następujących elementów jest traktowany jako symbol:</span><span class="sxs-lookup"><span data-stu-id="52e3b-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="52e3b-327">Otwierając lub zamykający tag dla <xref:System.Windows.Documents.TextElement> elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="52e3b-328"><xref:System.Windows.UIElement> Element zawarty<xref:System.Windows.Documents.InlineUIContainer> w lub <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="52e3b-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="52e3b-329">Należy zauważyć, że <xref:System.Windows.UIElement> takie a jest zawsze zliczane jako dokładnie jeden symbol; jakakolwiek dodatkowa zawartość lub elementy zawarte <xref:System.Windows.UIElement> przez nie są zliczane jako symbole.</span><span class="sxs-lookup"><span data-stu-id="52e3b-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="52e3b-330">16-bitowy [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] znak wewnątrz elementu tekstowego <xref:System.Windows.Documents.Run> .</span><span class="sxs-lookup"><span data-stu-id="52e3b-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52e3b-331">Pobiera wartość wskazującą, czy kontener tekstu skojarzony z bieżącym położeniem ma prawidłowy układ (Aktualności).</span><span class="sxs-lookup"><span data-stu-id="52e3b-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span></span></summary>
        <value><span data-ttu-id="52e3b-332"><see langword="true" />Jeśli układ jest aktualny i prawidłowy; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-332"><see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-333">W razie potrzeby operacje, które są zależne od prawidłowego układu (takie <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> jak Metoda <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> , Metoda i <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> Właściwość) podejmują próbę automatycznego ponownego wygenerowania prawidłowego układu przed kontynuowaniem operacji.</span><span class="sxs-lookup"><span data-stu-id="52e3b-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="52e3b-334">Ponowne generowanie układu może być stosunkowo kosztowną operacją.</span><span class="sxs-lookup"><span data-stu-id="52e3b-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="52e3b-335">Użyj tej właściwości, aby sprawdzić poprawność układu przed wykonaniem operacji, które mogą ponownie wygenerować układ.</span><span class="sxs-lookup"><span data-stu-id="52e3b-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="52e3b-336">Aby uzyskać więcej informacji, zobacz [Układ](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="52e3b-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52e3b-337">Wstawia podział wiersza w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-337">Inserts a line break at the current position.</span></span></summary>
        <returns><span data-ttu-id="52e3b-338"><see cref="T:System.Windows.Documents.TextPointer" /> Umieszczone bezpośrednio<see cref="T:System.Windows.Documents.LineBreak" /> po elemencie wstawionym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="52e3b-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52e3b-339">Wstawia podział akapitu w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-339">Inserts a paragraph break at the current position.</span></span></summary>
        <returns><span data-ttu-id="52e3b-340">Od <see cref="T:System.Windows.Documents.TextPointer" /> A do początku (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) nowego akapitu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-341">Jeśli ta metoda jest wywoływana, gdy bieżąca pozycja znajduje się wewnątrz istniejącego <xref:System.Windows.Documents.Paragraph> elementu, istniejący akapit i jakakolwiek zawartość, którą zawiera, są podzielone na dwa akapity w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="52e3b-342">Jeśli ta metoda jest wywoływana, gdy bieżąca pozycja nie znajduje się w istniejącym akapicie, wstawiany jest nowy pusty akapit.</span><span class="sxs-lookup"><span data-stu-id="52e3b-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="52e3b-343">Jeśli ta metoda jest wywoływana w pozycji nieodpowiedniej do dzielenia lub wstawiania akapitu (na przykład jeśli bieżące położenie jest wewnątrz <xref:System.Windows.Documents.Hyperlink> elementu), zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="52e3b-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="52e3b-344">Ta metoda jest wywoływana na pozycji, której nie można podzielić, aby pomieścić nowy akapit, taki jak zakres <see cref="T:System.Windows.Documents.Hyperlink" /> lub. <see cref="T:System.Windows.Documents.InlineUIContainer" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="52e3b-345">Tekst do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="52e3b-345">The text to insert.</span></span></param>
        <summary><span data-ttu-id="52e3b-346">Wstawia określony tekst do tekstu <see cref="T:System.Windows.Documents.Run" /> w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-347">Jeśli element nie <xref:System.Windows.Documents.Run> `textData`jest objęty zakresem, zostanie wstawiony wraz z. <xref:System.Windows.Documents.TextPointer> <xref:System.Windows.Documents.Run></span><span class="sxs-lookup"><span data-stu-id="52e3b-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="52e3b-348">Bieżąca pozycja nie znajduje się w obrębie <see cref="T:System.Windows.Documents.Run" /> elementu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52e3b-349"><paramref name="textData" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52e3b-349"><paramref name="textData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52e3b-350">Pobiera wartość wskazującą, czy bieżąca pozycja jest pozycją wstawiania.</span><span class="sxs-lookup"><span data-stu-id="52e3b-350">Gets a value that indicates whether the current position is an insertion position.</span></span></summary>
        <value><span data-ttu-id="52e3b-351"><see langword="true" />Jeśli bieżąca pozycja jest pozycją wstawiania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-351"><see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-352">Pozycja wstawiania jest pozycją, w której można dodać nową zawartość bez przerywania żadnych reguł semantycznych dla skojarzonej zawartości.</span><span class="sxs-lookup"><span data-stu-id="52e3b-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="52e3b-353">W tej sytuacji pozycja wstawiania jest wszędzie w zawartości, w której można umieścić karetkę.</span><span class="sxs-lookup"><span data-stu-id="52e3b-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="52e3b-354">Przykładem prawidłowej <xref:System.Windows.Documents.TextPointer> pozycji, która nie jest pozycją wstawiania, jest pozycja między dwoma sąsiednimi <xref:System.Windows.Documents.Paragraph> tagami (czyli między tagiem zamykającym poprzedniego akapitu a tagiem otwierającym następnego akapitu).</span><span class="sxs-lookup"><span data-stu-id="52e3b-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52e3b-355">Pobiera wartość wskazującą, czy bieżące położenie jest na początku wiersza.</span><span class="sxs-lookup"><span data-stu-id="52e3b-355">Gets a value that indicates whether the current position is at the beginning of a line.</span></span></summary>
        <value><span data-ttu-id="52e3b-356"><see langword="true" />Jeśli bieżące położenie znajduje się na początku wiersza; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-356"><see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-357">Jeśli wskazuje na niejednoznaczne położenie, na przykład między dwoma wierszami, linia w kierunku określonym <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> przez właściwość jest wybierana jako względna linia początkowa. <xref:System.Windows.Documents.TextPointer></span><span class="sxs-lookup"><span data-stu-id="52e3b-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="52e3b-358">Operacja wykonywana przez tę właściwość zależy od prawidłowego układu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="52e3b-359">W razie potrzeby ta metoda próbuje automatycznie ponownie wygenerować prawidłowy układ przed kontynuowaniem operacji.</span><span class="sxs-lookup"><span data-stu-id="52e3b-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="52e3b-360">Ponowne generowanie układu może być stosunkowo kosztowną operacją.</span><span class="sxs-lookup"><span data-stu-id="52e3b-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="52e3b-361"><xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> Użyj właściwości, aby sprawdzić poprawność układu przed wykonaniem operacji, które mogą ponownie wygenerować układ.</span><span class="sxs-lookup"><span data-stu-id="52e3b-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="52e3b-362">Aby uzyskać więcej informacji, zobacz [Układ](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="52e3b-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition"><span data-ttu-id="52e3b-363">A <see cref="T:System.Windows.Documents.TextPointer" /> , która określa położenie do porównania z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="52e3b-364">Wskazuje, czy określona pozycja znajduje się w tym samym kontenerze tekstu co bieżąca pozycja.</span><span class="sxs-lookup"><span data-stu-id="52e3b-364">Indicates whether the specified position is in the same text container as the current position.</span></span></summary>
        <returns><span data-ttu-id="52e3b-365"><see langword="true" />Jeśli <paramref name="textPosition" /> wskazuje pozycję znajdującą się w tym samym kontenerze tekstu co bieżąca pozycja; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="52e3b-365"><see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-366">Większość operacji obejmujących wiele <xref:System.Windows.Documents.TextPointer> wystąpień jest prawidłowa tylko wtedy, gdy wystąpienia w danym przypadku wskazują pozycje, które znajdują się w tym samym zakresie kontenera tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="52e3b-367">Na przykład <xref:System.Windows.Documents.TextPointer.CompareTo%2A> metody i <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>niemogą być używane z dopozycjipozakonteneremtekstuskojarzonymzbieżącympołożeniem.<xref:System.Windows.Documents.TextPointer></span><span class="sxs-lookup"><span data-stu-id="52e3b-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="52e3b-368">Użyj tej metody, aby sprawdzić, czy <xref:System.Windows.Documents.TextPointer> określony jest zgodny z bieżącą pozycją dla takich operacji.</span><span class="sxs-lookup"><span data-stu-id="52e3b-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e3b-369">Poniższy przykład ilustruje użycie dla tej metody.</span><span class="sxs-lookup"><span data-stu-id="52e3b-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="52e3b-370">W przykładzie zastosowano <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> metodę, aby sprawdzić, czy <xref:System.Windows.Documents.TextPointer> określony element jest umieszczony między dwoma <xref:System.Windows.Documents.TextPointer> innymi określonymi wystąpieniami w sytuacji, gdy nie ma żadnej gwarancji, że wszystkie trzy pozycje należą do tego samego kontenera tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52e3b-371"><paramref name="textPosition" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52e3b-371"><paramref name="textPosition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52e3b-372">Pobiera logiczny kierunek skojarzony z bieżącą pozycją, która jest używana do rozróżniania zawartości skojarzonej z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span></span></summary>
        <value><span data-ttu-id="52e3b-373"><see cref="T:System.Windows.Documents.LogicalDirection" /> Wartość, która jest skojarzona z bieżącym położeniem.</span><span class="sxs-lookup"><span data-stu-id="52e3b-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e3b-374">Przykładem sposobu użycia tej właściwości jest to, <xref:System.Windows.Documents.LogicalDirection> <xref:System.Windows.Documents.TextPointer> że zwracana przez metodę test trafień zawiera trafienie między dwoma znakami tekstu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="52e3b-375">Logiczny kierunek określa, które z dwóch znaków zostały faktycznie trafione — w lewo lub w prawo.</span><span class="sxs-lookup"><span data-stu-id="52e3b-375">The logical direction specifies which of the two characters was actually hit - the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52e3b-376">Pobiera akapit, który nakłada się na bieżące położenie (jeśli istnieje).</span><span class="sxs-lookup"><span data-stu-id="52e3b-376">Gets the paragraph that scopes the current position, if any.</span></span></summary>
        <value><span data-ttu-id="52e3b-377">To zakresy w bieżącym położeniu lub <see langword="null" /> w przypadku, gdy taki akapit nie istnieje. <see cref="T:System.Windows.Documents.Paragraph" /></span><span class="sxs-lookup"><span data-stu-id="52e3b-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52e3b-378">Pobiera logiczny element nadrzędny, który ma zakresy w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-378">Gets the logical parent that scopes the current position.</span></span></summary>
        <value><span data-ttu-id="52e3b-379">Logiczny element nadrzędny, który ma zakresy w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="52e3b-379">The logical parent that scopes the current position.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52e3b-380">Ten typ lub element członkowski obsługuje [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="52e3b-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="52e3b-381">Ciąg reprezentujący obiekt.</span><span class="sxs-lookup"><span data-stu-id="52e3b-381">The string that represents the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
