<Type Name="TextElementEditingBehaviorAttribute" FullName="System.Windows.Documents.TextElementEditingBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2c5bb0110e75eeecebafdc4fc3d9fcf73706710" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69207523" /></Metadata><TypeSignature Language="C#" Value="public sealed class TextElementEditingBehaviorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextElementEditingBehaviorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextElementEditingBehaviorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEditingBehaviorAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TextElementEditingBehaviorAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa sposób <see cref="T:System.Windows.Controls.RichTextBox" /> obsługi niestandardowego elementu tekstowego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia niestandardowego elementu tekstowego można użyć <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> atrybutu, aby określić, że element powinien być traktowany jako pojedynczy, niepodzielony obiekt.  <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> `false`Gdy właściwości <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> i sąustawione<xref:System.Windows.Controls.RichTextBox>na, zachowuje granice i zawartość elementu, gdyużytkownikedytuje.<xref:System.Windows.Controls.RichTextBox>  Ogólnie rzecz biorąc, element niestandardowy zachowuje się podobnie do <xref:System.Windows.Documents.Hyperlink>.  Następujące zachowanie występuje w przypadku użycia tej klasy i ustawienia obu właściwości na `false`:  
  
-   Gdy użytkownik skopiuje i wklei część zawartości w niestandardowym elemencie, formatowanie skopiowanego tekstu nie jest zachowywane.  
  
-   Gdy użytkownik wpisze przed lub po zawartości elementu niestandardowego, Nowa zawartość nie uzyskuje informacji o formatowaniu elementów niestandardowych.  
  
-   Użytkownik nie może wstawić podziału wiersza w elemencie niestandardowym.  
  
 Podczas tworzenia elementu niestandardowego należy użyć <xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> metody i `true` ustawić `preserveTextElements` wartość, aby zachować niestandardowe wartości elementu i właściwości podczas serializacji go do dysku lub Schowka.  
  
 <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextElementEditingBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextElementEditingBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMergeable">
      <MemberSignature Language="C#" Value="public bool IsMergeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMergeable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMergeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMergeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMergeable : bool with get, set" Usage="System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Controls.RichTextBox" /> można scalić dwa sąsiadujące elementy tekstowe.</summary>
        <value><see langword="true" />Jeśli element <see cref="T:System.Windows.Controls.RichTextBox" /> jest bezpłatny do scalania sąsiednich elementów tekstowych, które mają identyczne wartości właściwości, <see langword="false" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> tak `true`jest, decyzja o połączeniu sąsiadujących elementów tekstowych, które mają identyczne wartości właściwości, <xref:System.Windows.Controls.RichTextBox>jest pozostawiana do.  Gdy <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> ma `false`wartość ,<xref:System.Windows.Controls.RichTextBox> nie łączy dwa sąsiadujące elementy tekstowe.  
  
 <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypographicOnly">
      <MemberSignature Language="C#" Value="public bool IsTypographicOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypographicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTypographicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTypographicOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTypographicOnly : bool with get, set" Usage="System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element tekstowy zapewnia formatowanie na podstawie znaku, czy formatowanie dotyczy całego elementu.</summary>
        <value><see langword="true" />Jeśli formatowanie powinno być stosowane do pojedynczych znaków; <see langword="false" /> Jeśli formatowanie ma być stosowane do całego elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> jest`true` i użytkownik kopiuje i wklei część zawartości niestandardowego elementu tekstowego, formatowanie jest zachowywane.  Gdy <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> jest`false`, formatowanie jest zachowywane tylko wtedy, gdy użytkownik kopiuje i wklei całą zawartość niestandardowego elementu tekstowego.  
  
 <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
