<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e548e08b556eb3bea554b24d86bbc3a1cc4dbe43" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69208813" /></Metadata><TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="69dd9-101">Zawiera standardowy zestaw poleceń związanych z edycją.</span><span class="sxs-lookup"><span data-stu-id="69dd9-101">Provides a standard set of editing related commands.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-102">W poniższej tabeli przedstawiono polecenia edycji i skojarzone domyślne gesty klawiszy (z nazwami kluczy z <xref:System.Windows.Input.Key> i <xref:System.Windows.Input.ModifierKeys> wyliczenia).</span><span class="sxs-lookup"><span data-stu-id="69dd9-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="69dd9-103">Edycja — polecenie</span><span class="sxs-lookup"><span data-stu-id="69dd9-103">Editing command</span></span>|<span data-ttu-id="69dd9-104">Gest domyślnego klawisza</span><span class="sxs-lookup"><span data-stu-id="69dd9-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="69dd9-105">Brak gestu domyślnego klucza</span><span class="sxs-lookup"><span data-stu-id="69dd9-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="69dd9-106">Brak gestu domyślnego klucza</span><span class="sxs-lookup"><span data-stu-id="69dd9-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="69dd9-107">Polecenia przenoszenia karetki i rozwijania wyboru, które udostępniają wspólny zestaw domyślnych gestów klawiszy, ogólna różnica polega na dodaniu <xref:System.Windows.Input.ModifierKeys.Shift> klucza do odróżnienia poleceń wyboru od przenoszenia karetki.</span><span class="sxs-lookup"><span data-stu-id="69dd9-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="69dd9-108">Na przykład <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> polecenie ma <xref:System.Windows.Input.ModifierKeys.Shift> <xref:System.Windows.Input.Key.Left>gest klawisza domyślnego, a odpowiadające mu <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> polecenie ma gest + <xref:System.Windows.Input.Key.Left>klawisza domyślnego.</span><span class="sxs-lookup"><span data-stu-id="69dd9-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="69dd9-109">Ogólnie rzecz biorąc, definicje poleceń dostarczonych przez <xref:System.Windows.Documents.EditingCommands> klasę nie wykorzystują parametrów polecenia `parameter` (parametr oczekiwany przez <xref:System.Windows.Input.ICommand.Execute%2A> metodę).</span><span class="sxs-lookup"><span data-stu-id="69dd9-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="69dd9-110">Aby uzyskać więcej informacji na temat poleceń i poleceń, zobacz [Omówienie danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="69dd9-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-111">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-112">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-113">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-114">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-115">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-116">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-117">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-118">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-119"><see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> Reprezentuje polecenie, które żąda wyśrodkowania bieżącego akapitu lub zaznaczenia akapitów.</span><span class="sxs-lookup"><span data-stu-id="69dd9-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span></span></summary>
        <value><span data-ttu-id="69dd9-120">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-120">The requested command.</span></span>  <span data-ttu-id="69dd9-121">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="E" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-122">To polecenie działa na <xref:System.Windows.Documents.Paragraph> poziomie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="69dd9-123">Jeśli to polecenie jest wywoływane dla częściowego zaznaczenia zawartości w obrębie akapitu (w tym pustego zaznaczenia, gdzie karetka znajduje się w akapicie), żądany efekt jest stosowany do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="69dd9-124">Jeśli to polecenie jest wywoływane w zaznaczeniu obejmującym wiele akapitów, efekt jest stosowany do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="69dd9-125">Na poniższej ilustracji przedstawiono przykład zawartości wyśrodkowanej.</span><span class="sxs-lookup"><span data-stu-id="69dd9-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="69dd9-126">![Zrzut ekranu Wartość właściwości TextAlign środka](~/add/media/flowdoc-textalign-center.png "zrzutu ekranu: Wartość właściwości TextAlign środka")</span><span class="sxs-lookup"><span data-stu-id="69dd9-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="69dd9-127">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-128">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-129">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-130">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-131">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-132">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-133">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-134">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-135">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-136">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-137"><see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> Reprezentuje polecenie, które żąda justowania bieżącego akapitu lub zaznaczenia akapitów.</span><span class="sxs-lookup"><span data-stu-id="69dd9-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span></span></summary>
        <value><span data-ttu-id="69dd9-138">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-138">The requested command.</span></span>  <span data-ttu-id="69dd9-139">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="J" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-140">To polecenie działa na <xref:System.Windows.Documents.Paragraph> poziomie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="69dd9-141">Jeśli to polecenie jest wywoływane dla częściowego zaznaczenia zawartości w obrębie akapitu (w tym pustego zaznaczenia, gdzie karetka znajduje się w akapicie), żądany efekt jest stosowany do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="69dd9-142">Jeśli to polecenie jest wywoływane w zaznaczeniu, który obejmuje wiele akapitów, efekt zostanie zastosowany do wszystkich akapitów w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="69dd9-143">Gdy zawartość jest uzasadniona, poziomy odstępy w poszczególnych wierszach zawartości są dostosowywane tak, aby wyrównane linie były równe lub zbliżone do szerokości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="69dd9-144">Zawartość jest zwykle wyrównana do tworzenia gładkich krawędzi po bokach zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="69dd9-145">Ponieważ jest często krótszy niż reszta, ostatni wiersz w akapicie może pozostać niewyrównany po wywołaniu tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="69dd9-146">Poniższy rysunek przedstawia zawartość niewyrównanych (wyrównanych do lewej).</span><span class="sxs-lookup"><span data-stu-id="69dd9-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="69dd9-147">![Zrzut ekranu Zawartość jest nieuzasadnionego](~/add/media/content-unjustified.png "zrzutu ekranu: Zawartość jest niewyrównana")</span><span class="sxs-lookup"><span data-stu-id="69dd9-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="69dd9-148">Na poniższej ilustracji przedstawiono tę samą zawartość po jej wyjustowania.</span><span class="sxs-lookup"><span data-stu-id="69dd9-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="69dd9-149">![Zrzut ekranu przedstawiający tekst wyjustowany do zawartości] (~/add/media/content-justified.png "Zrzut ekranu przedstawiający tekst wyjustowany do zawartości")</span><span class="sxs-lookup"><span data-stu-id="69dd9-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="69dd9-150">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-151">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-152">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-153">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-154">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-155">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-156">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-157">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-158">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-159">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-160">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-161"><see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> Reprezentuje polecenie, które żąda, aby zaznaczenie zawartości było wyrównane do lewej strony.</span><span class="sxs-lookup"><span data-stu-id="69dd9-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span></span></summary>
        <value><span data-ttu-id="69dd9-162">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-162">The requested command.</span></span>  <span data-ttu-id="69dd9-163">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="L" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-164">To polecenie działa na <xref:System.Windows.Documents.Paragraph> poziomie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="69dd9-165">Jeśli to polecenie jest wywoływane dla częściowego zaznaczenia zawartości w obrębie akapitu (w tym pustego zaznaczenia, gdzie karetka znajduje się w akapicie), żądany efekt jest stosowany do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="69dd9-166">Jeśli to polecenie jest wywoływane w zaznaczeniu obejmującym wiele akapitów, efekt jest stosowany do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="69dd9-167">Na poniższej ilustracji przedstawiono przykład zawartości wyrównanej do lewej.</span><span class="sxs-lookup"><span data-stu-id="69dd9-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="69dd9-168">![Zrzut ekranu Wartość właściwości TextAlign dla]lewego(~/add/media/flowdoc-textalign-left.png "zrzutu ekranu: Wartość właściwości TextAlign z lewej")</span><span class="sxs-lookup"><span data-stu-id="69dd9-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="69dd9-169">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-170">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-171">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-172">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-173">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-174">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-175">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-176">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-177">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-178">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-179">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-180"><see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> Reprezentuje polecenie, które żąda, aby wybór zawartości był wyrównany do prawej strony.</span><span class="sxs-lookup"><span data-stu-id="69dd9-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span></span></summary>
        <value><span data-ttu-id="69dd9-181">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-181">The requested command.</span></span>  <span data-ttu-id="69dd9-182">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="R" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-183">To polecenie działa na <xref:System.Windows.Documents.Paragraph> poziomie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="69dd9-184">Jeśli to polecenie jest wywoływane dla częściowego zaznaczenia zawartości w obrębie akapitu (w tym pustego zaznaczenia, gdzie karetka znajduje się w akapicie), żądany efekt jest stosowany do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="69dd9-185">Jeśli to polecenie jest wywoływane w zaznaczeniu obejmującym wiele akapitów, efekt jest stosowany do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="69dd9-186">Na poniższej ilustracji przedstawiono przykład zawartości wyrównanej do prawej.</span><span class="sxs-lookup"><span data-stu-id="69dd9-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="69dd9-187">![Zrzut ekranu Wartość TextAlign na]prawym(~/add/media/flowdoc-textalign-right.png "zrzucie ekranu: Wartość TextAlign z prawej")</span><span class="sxs-lookup"><span data-stu-id="69dd9-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="69dd9-188">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-189">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-190">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-191">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-192">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-193">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-194">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-195">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-196">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-197">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-198">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-199"><see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> Reprezentuje polecenie, które żąda wprowadzenia Backspace w bieżącym położeniu lub w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-200">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-200">The requested command.</span></span>  <span data-ttu-id="69dd9-201">Domyślnym gestem dla tego polecenia jest <see langword="Backspace" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-201">The default key gesture for this command is <see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-202">Po wywołaniu pustego zaznaczenia to polecenie usuwa separator akapitu tuż przed karetką.</span><span class="sxs-lookup"><span data-stu-id="69dd9-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="69dd9-203">Po wywołaniu dla niepustego zaznaczenia to polecenie usuwa zaznaczenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="69dd9-204">To polecenie zachowuje formatowanie usuniętego zaznaczenia dla zawartości bezpośrednio wstawionej w tej samej lokalizacji po wywołaniu tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="69dd9-205">Z drugiej strony <xref:System.Windows.Documents.EditingCommands.Delete%2A> polecenie, które nie zachowuje poprzedniego formatowania.</span><span class="sxs-lookup"><span data-stu-id="69dd9-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="69dd9-206">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-207">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-208">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-209">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-210">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-211">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-212">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-213">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-214">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-215">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-216">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-217"><see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> Reprezentuje polecenie, które żąda skorygowania dowolnego błędnego wyrazu w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span></span></summary>
        <value><span data-ttu-id="69dd9-218">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-218">The requested command.</span></span>  <span data-ttu-id="69dd9-219">To polecenie nie ma gestu domyślnego klucza.</span><span class="sxs-lookup"><span data-stu-id="69dd9-219">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-220">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-221">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-222"><see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> Reprezentuje polecenie, które żąda zmniejszenia rozmiaru czcionki dla bieżącego zaznaczenia o 1 punkt.</span><span class="sxs-lookup"><span data-stu-id="69dd9-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span></span></summary>
        <value><span data-ttu-id="69dd9-223">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-223">The requested command.</span></span>  <span data-ttu-id="69dd9-224">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="OemOpenBrackets" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-225">Jeśli to polecenie jest wywoływane na pustym zaznaczeniu, gdzie karetka znajduje się w obrębie słowa, zaznaczenie zostanie automatycznie rozwinięte, aby zastosować polecenie do całego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="69dd9-226">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-227">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-228">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-229">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-230">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-231">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-232">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-233">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-234">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-235">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-236">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-237"><see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> Reprezentuje polecenie, które żąda zmniejszenia wcięcia bieżącego akapitu o jeden tabulator.</span><span class="sxs-lookup"><span data-stu-id="69dd9-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="69dd9-238">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-238">The requested command.</span></span>  <span data-ttu-id="69dd9-239">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="T" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-240">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-241">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69dd9-242">To polecenie nie ma wpływu na element tekstowy, <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> chyba że właściwość elementu tekstowego jest ustawiona na. `true`</span><span class="sxs-lookup"><span data-stu-id="69dd9-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-243">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-244">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-245">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-246">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-247">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-248">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-249">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-250">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-251">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-252"><see cref="P:System.Windows.Documents.EditingCommands.Delete" /> Reprezentuje polecenie, które żąda usunięcia bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span></span></summary>
        <value><span data-ttu-id="69dd9-253">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-253">The requested command.</span></span>  <span data-ttu-id="69dd9-254">Domyślnym gestem dla tego polecenia jest <see langword="Delete" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-254">The default key gesture for this command is <see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-255">To polecenie odrzuca wszelkie formatowanie usuniętego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="69dd9-256">Z kolei z <xref:System.Windows.Documents.EditingCommands.Backspace%2A> poleceniem, które zachowuje formatowanie usuniętego zaznaczenia dla zawartości bezpośrednio wstawionej w tej samej lokalizacji po wywołaniu tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="69dd9-257">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-258">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-259">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-260">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-261">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-262">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-263">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-264">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-265">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-266">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-267">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-268"><see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> Reprezentuje polecenie, które żąda usunięcia następnego wyrazu (względem bieżącego położenia).</span><span class="sxs-lookup"><span data-stu-id="69dd9-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="69dd9-269">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-269">The requested command.</span></span>  <span data-ttu-id="69dd9-270">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="Delete" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-271">Jeśli karetka znajduje się w obrębie słowa, pozostała część wyrazu między bieżącą pozycją a końcem wyrazu zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="69dd9-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="69dd9-272">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-273">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-274">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-275">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-276">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-277">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-278">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-279">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-280">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-281">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-282">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-283"><see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> Reprezentuje polecenie, które żąda usunięcia poprzedniego wyrazu (względem bieżącego położenia).</span><span class="sxs-lookup"><span data-stu-id="69dd9-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="69dd9-284">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-284">The requested command.</span></span>  <span data-ttu-id="69dd9-285">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="Backspace" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-286">Jeśli karetka znajduje się w obrębie słowa, pozostała część wyrazu między bieżącą pozycją a początkiem wyrazu zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="69dd9-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="69dd9-287">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-288">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-289">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-290">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-291">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-292">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-293">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-294">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-295">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-296">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-297">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-298"><see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> Reprezentuje polecenie, które żąda wstawiania podziału wiersza w bieżącym położeniu lub w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-299">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-299">The requested command.</span></span>  <span data-ttu-id="69dd9-300">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="Enter" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-301">Dla edytorów, które obsługują zawartość przepływu, <xref:System.Windows.Controls.RichTextBox>takich jak polecenie <xref:System.Windows.Documents.LineBreak> powoduje, że element zostanie wstawiony w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="69dd9-302">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-303">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox>i.</span><span class="sxs-lookup"><span data-stu-id="69dd9-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-304">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-305">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-306">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-307">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-308">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-309">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-310">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-311">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-312">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-313"><see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> Reprezentuje polecenie, które żąda wstawiania podziału akapitu w bieżącym położeniu lub w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-314">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-314">The requested command.</span></span>  <span data-ttu-id="69dd9-315">Domyślnym gestem dla tego polecenia jest <see langword="Enter" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-315">The default key gesture for this command is <see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-316">To polecenie jest równoznaczne z naciśnięciem klawisza ENTER.</span><span class="sxs-lookup"><span data-stu-id="69dd9-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="69dd9-317">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-318">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox> i (gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> właściwość ma `true`wartość).</span><span class="sxs-lookup"><span data-stu-id="69dd9-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69dd9-319">To polecenie nie ma wpływu na element tekstowy, <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> chyba że właściwość elementu tekstowego jest ustawiona na. `true`</span><span class="sxs-lookup"><span data-stu-id="69dd9-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-320">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-321">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-322">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-323">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-324">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-325">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-326">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-327">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-328">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-329"><see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> Reprezentuje polecenie, które żąda, aby wszystkie wystąpienia błędnie napisanych wyrazów w bieżącym położeniu lub w bieżącym zaznaczeniu zostały zignorowane.</span><span class="sxs-lookup"><span data-stu-id="69dd9-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span></span></summary>
        <value><span data-ttu-id="69dd9-330">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-330">The requested command.</span></span>  <span data-ttu-id="69dd9-331">To polecenie nie ma gestu domyślnego klucza.</span><span class="sxs-lookup"><span data-stu-id="69dd9-331">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-332">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-333">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-334"><see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> Reprezentuje polecenie, które żąda zwiększenia rozmiaru czcionki dla bieżącego zaznaczenia o 1 punkt.</span><span class="sxs-lookup"><span data-stu-id="69dd9-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span></span></summary>
        <value><span data-ttu-id="69dd9-335">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-335">The requested command.</span></span>  <span data-ttu-id="69dd9-336">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="OemCloseBrackets" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-337">Jeśli to polecenie jest wywoływane na pustym zaznaczeniu, gdzie karetka znajduje się w obrębie wyrazu, zaznaczenie zostanie rozwinięte, aby zastosować polecenie do całego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="69dd9-338">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-339">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-340">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-341">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-342">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-343">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-344">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-345">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-346">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-347">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-348">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-349"><see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> Reprezentuje polecenie, które żąda zwiększenia wcięcia bieżącego akapitu o jeden tabulator.</span><span class="sxs-lookup"><span data-stu-id="69dd9-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="69dd9-350">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-350">The requested command.</span></span>  <span data-ttu-id="69dd9-351">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="T" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-352">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-353">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="69dd9-354">To polecenie nie ma wpływu na element tekstowy, <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> chyba że właściwość elementu tekstowego jest ustawiona na. `true`</span><span class="sxs-lookup"><span data-stu-id="69dd9-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-355">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-356">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-357">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-358">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-359">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-360">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-361">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-362">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-363">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-364"><see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> Reprezentuje polecenie, które żąda przejścia w dół o jeden wiersz w dół.</span><span class="sxs-lookup"><span data-stu-id="69dd9-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span></span></summary>
        <value><span data-ttu-id="69dd9-365">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-365">The requested command.</span></span>  <span data-ttu-id="69dd9-366">Domyślnym gestem dla tego polecenia jest <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-366">The default key gesture for this command is <see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-367">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-368">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox>i.</span><span class="sxs-lookup"><span data-stu-id="69dd9-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-369">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-370">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-371">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-372">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-373">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-374">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-375">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-376">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-377">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-378"><see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> Reprezentuje polecenie, które powoduje, że karetka przesunie się o jedną stronę w dół.</span><span class="sxs-lookup"><span data-stu-id="69dd9-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span></span></summary>
        <value><span data-ttu-id="69dd9-379">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-379">The requested command.</span></span>  <span data-ttu-id="69dd9-380">Domyślnym gestem dla tego polecenia jest <see langword="PageDown" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-380">The default key gesture for this command is <see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-381">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-382">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox>i.</span><span class="sxs-lookup"><span data-stu-id="69dd9-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-383">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-384">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-385">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-386">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-387">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-388">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-389">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-390">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-391">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-392"><see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> Reprezentuje polecenie, które wymaga, aby karetka przesunie się o jeden akapit w dół.</span><span class="sxs-lookup"><span data-stu-id="69dd9-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="69dd9-393">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-393">The requested command.</span></span>  <span data-ttu-id="69dd9-394">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="Down" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-395">To polecenie umieszcza karetkę na początku następnego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="69dd9-396">To polecenie zachowuje się <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> <xref:System.Windows.Controls.TextBox>jak w przypadku wywołania w.</span><span class="sxs-lookup"><span data-stu-id="69dd9-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="69dd9-397">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-398">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox>i.</span><span class="sxs-lookup"><span data-stu-id="69dd9-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-399">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-400">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-401">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-402">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-403">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-404">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-405">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-406">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-407">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-408"><see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> Reprezentuje polecenie, które wymaga, aby karetka przesunie jeden znak w lewo.</span><span class="sxs-lookup"><span data-stu-id="69dd9-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span></span></summary>
        <value><span data-ttu-id="69dd9-409">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-409">The requested command.</span></span>  <span data-ttu-id="69dd9-410">Domyślnym gestem dla tego polecenia jest <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-410">The default key gesture for this command is <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-411">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-412">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-413">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-414">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-415">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-416">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-417">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-418">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-419">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-420">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-421">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-422"><see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> Reprezentuje polecenie, które wymaga, aby karetka przesunie jeden wyraz w lewo.</span><span class="sxs-lookup"><span data-stu-id="69dd9-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span></span></summary>
        <value><span data-ttu-id="69dd9-423">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-423">The requested command.</span></span>  <span data-ttu-id="69dd9-424">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="Left" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-425">Jeśli karetka znajduje się w obrębie słowa, to polecenie przesuwa karetkę do początku tego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="69dd9-426">W przeciwnym razie to polecenie przesuwa karetkę do początku poprzedniego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="69dd9-427">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-428">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-429">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-430">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-431">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-432">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-433">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-434">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-435">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-436">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-437">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-438"><see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> Reprezentuje polecenie, które wymaga, aby karetka przesunie jeden znak w prawo.</span><span class="sxs-lookup"><span data-stu-id="69dd9-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span></span></summary>
        <value><span data-ttu-id="69dd9-439">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-439">The requested command.</span></span>  <span data-ttu-id="69dd9-440">Domyślnym gestem dla tego polecenia jest <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-440">The default key gesture for this command is <see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-441">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-442">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-443">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-444">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-445">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-446">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-447">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-448">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-449">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-450">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-451">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-452"><see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> Reprezentuje polecenie, które wymaga, aby karetka przesunie się o jeden wyraz w prawo.</span><span class="sxs-lookup"><span data-stu-id="69dd9-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span></span></summary>
        <value><span data-ttu-id="69dd9-453">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-453">The requested command.</span></span>  <span data-ttu-id="69dd9-454">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="Right" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-455">Jeśli karetka znajduje się w obrębie słowa, to polecenie przesuwa karetkę do końca tego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="69dd9-456">W przeciwnym razie to polecenie przesuwa karetkę do początku następnego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="69dd9-457">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-458">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-459">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-460">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-461">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-462">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-463">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-464">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-465">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-466">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-467">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-468"><see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> Reprezentuje polecenie, które żąda, aby karetka była przenoszona na bardzo koniec zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span></span></summary>
        <value><span data-ttu-id="69dd9-469">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-469">The requested command.</span></span>  <span data-ttu-id="69dd9-470">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="End" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-471">*Kontener tekstowy* to element, który tworzy ostatecznie obramowanie dla zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="69dd9-472"><xref:System.Windows.Controls.TextBlock>i <xref:System.Windows.Documents.FlowDocument> są przykładami kontenerów tekstu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="69dd9-473">Zawartość zbiorczą znajdującą się w kontenerze tekstu nazywa się *dokumentem*.</span><span class="sxs-lookup"><span data-stu-id="69dd9-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="69dd9-474">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-475">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-476">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-477">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-478">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-479">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-480">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-481">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-482">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-483">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-484">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-485"><see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> Reprezentuje polecenie, które żąda, aby karetka była przenoszona na bardzo początek zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="69dd9-486">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-486">The requested command.</span></span>  <span data-ttu-id="69dd9-487">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="Home" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-488">*Kontener tekstowy* to element, który tworzy ostatecznie obramowanie dla zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="69dd9-489"><xref:System.Windows.Controls.TextBlock>i <xref:System.Windows.Documents.FlowDocument> są przykładami kontenerów tekstu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="69dd9-490">Zawartość zbiorczą znajdującą się w kontenerze tekstu nazywa się *dokumentem*.</span><span class="sxs-lookup"><span data-stu-id="69dd9-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="69dd9-491">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-492">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-493">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-494">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-495">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-496">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-497">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-498">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-499">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-500">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-501">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-502"><see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> Reprezentuje polecenie, które żąda przejścia karetki na koniec bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="69dd9-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="69dd9-503">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-503">The requested command.</span></span>  <span data-ttu-id="69dd9-504">Domyślnym gestem dla tego polecenia jest <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-504">The default key gesture for this command is <see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-505">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-506">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-507">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-508">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-509">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-510">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-511">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-512">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-513">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-514">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-515">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-516"><see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> Reprezentuje polecenie, które żąda przejścia karetki na początek bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="69dd9-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="69dd9-517">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-517">The requested command.</span></span>  <span data-ttu-id="69dd9-518">Domyślnym gestem dla tego polecenia jest <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-518">The default key gesture for this command is <see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-519">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-520">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-521">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-522">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-523">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-524">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-525">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-526">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-527">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-528">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-529">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-530"><see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> Reprezentuje polecenie, które żąda, aby karetka przesunie się o jeden wiersz w górę.</span><span class="sxs-lookup"><span data-stu-id="69dd9-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span></span></summary>
        <value><span data-ttu-id="69dd9-531">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-531">The requested command.</span></span>  <span data-ttu-id="69dd9-532">Domyślnym gestem dla tego polecenia jest <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-532">The default key gesture for this command is <see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-533">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-534">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox>i.</span><span class="sxs-lookup"><span data-stu-id="69dd9-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-535">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-536">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-537">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-538">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-539">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-540">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-541">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-542">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-543">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-544"><see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> Reprezentuje polecenie, które powoduje, że karetka przesuwa się o jedną stronę w górę.</span><span class="sxs-lookup"><span data-stu-id="69dd9-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span></span></summary>
        <value><span data-ttu-id="69dd9-545">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-545">The requested command.</span></span>  <span data-ttu-id="69dd9-546">Domyślnym gestem dla tego polecenia jest <see langword="PageUp" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-546">The default key gesture for this command is <see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-547">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-548">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox>i.</span><span class="sxs-lookup"><span data-stu-id="69dd9-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-549">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-550">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-551">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-552">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-553">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-554">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-555">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-556">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-557">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-558"><see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> Reprezentuje polecenie, które żąda, aby karetka była przenoszona do jednego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="69dd9-559">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-559">The requested command.</span></span>  <span data-ttu-id="69dd9-560">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="Up" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-561">To polecenie umieszcza karetkę na początku następnego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="69dd9-562">To polecenie zachowuje się <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> <xref:System.Windows.Controls.TextBox>jak w przypadku wywołania w.</span><span class="sxs-lookup"><span data-stu-id="69dd9-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="69dd9-563">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-564">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox>i.</span><span class="sxs-lookup"><span data-stu-id="69dd9-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-565">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-566">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-567">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-568">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-569">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-570">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-571">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-572">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-573">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-574"><see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte w dół o jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="69dd9-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span></span></summary>
        <value><span data-ttu-id="69dd9-575">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-575">The requested command.</span></span>  <span data-ttu-id="69dd9-576">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="Down" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-577">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-578">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-579">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-580">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-581">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-582">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-583">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-584">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-585">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-586">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-587">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-588"><see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie zostało rozszerzone o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="69dd9-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span></span></summary>
        <value><span data-ttu-id="69dd9-589">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-589">The requested command.</span></span>  <span data-ttu-id="69dd9-590">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="PageDown" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-591">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-592">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-593">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-594">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-595">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-596">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-597">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-598">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-599">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-600">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-601">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-602"><see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte w dół o jeden akapit.</span><span class="sxs-lookup"><span data-stu-id="69dd9-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="69dd9-603">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-603">The requested command.</span></span>  <span data-ttu-id="69dd9-604">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="Down" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-605">To polecenie rozszerza zaznaczenie do początku następnego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="69dd9-606">W przeciwnym razie to polecenie rozszerza zaznaczenie na koniec bieżącego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="69dd9-607">Rozwinięte zaznaczenie obejmuje podział akapitu, który oznacza koniec akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="69dd9-608">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-609">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-610">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-611">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-612">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-613">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-614">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-615">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-616">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-617">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-618">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-619"><see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte po lewej stronie o jeden znak.</span><span class="sxs-lookup"><span data-stu-id="69dd9-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span></span></summary>
        <value><span data-ttu-id="69dd9-620">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-620">The requested command.</span></span>  <span data-ttu-id="69dd9-621">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="Left" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-622">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-623">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-624">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-625">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-626">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-627">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-628">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-629">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-630">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-631">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-632">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-633"><see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte po lewej stronie o jeden wyraz.</span><span class="sxs-lookup"><span data-stu-id="69dd9-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span></span></summary>
        <value><span data-ttu-id="69dd9-634">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-634">The requested command.</span></span>  <span data-ttu-id="69dd9-635">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="Left" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-636">Jeśli karetka znajduje się w obrębie słowa, to polecenie rozszerza zaznaczenie do początku tego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="69dd9-637">W przeciwnym razie to polecenie rozszerza zaznaczenie na początek poprzedniego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="69dd9-638">Rozwinięte zaznaczenie nie zawiera ogranicznika wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="69dd9-639">Kontrast z <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, który obejmuje ogranicznik wyrazu w rozwiniętym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="69dd9-640">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-641">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-642">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-643">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-644">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-645">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-646">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-647">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-648">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-649">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-650">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-651"><see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte po prawej stronie o jeden znak.</span><span class="sxs-lookup"><span data-stu-id="69dd9-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span></span></summary>
        <value><span data-ttu-id="69dd9-652">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-652">The requested command.</span></span>  <span data-ttu-id="69dd9-653">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="Right" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-654">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-655">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-656">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-657">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-658">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-659">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-660">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-661">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-662">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-663">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-664">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-665"><see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte bezpośrednio przez jedno słowo.</span><span class="sxs-lookup"><span data-stu-id="69dd9-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span></span></summary>
        <value><span data-ttu-id="69dd9-666">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-666">The requested command.</span></span>  <span data-ttu-id="69dd9-667">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="Right" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-668">Jeśli karetka znajduje się w obrębie słowa, to polecenie rozszerza zaznaczenie do końca tego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="69dd9-669">W przeciwnym razie to polecenie rozszerza zaznaczenie na koniec następnego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="69dd9-670">Rozwinięte zaznaczenie obejmuje ogranicznik wyrazu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="69dd9-671">Kontrast, <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> z którym nie obejmuje ogranicznika wyrazu w rozwiniętym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="69dd9-672">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-673">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-674">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-675">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-676">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-677">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-678">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-679">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-680">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-681">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-682">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-683"><see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte na bardzo zakończenie zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span></span></summary>
        <value><span data-ttu-id="69dd9-684">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-684">The requested command.</span></span>  <span data-ttu-id="69dd9-685">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="End" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-686">*Kontener tekstowy* to element, który tworzy ostatecznie obramowanie dla zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="69dd9-687"><xref:System.Windows.Controls.TextBlock>i <xref:System.Windows.Documents.FlowDocument> są przykładami kontenerów tekstu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="69dd9-688">Zawartość zbiorczą znajdującą się w kontenerze tekstu nazywa się *dokumentem*.</span><span class="sxs-lookup"><span data-stu-id="69dd9-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="69dd9-689">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-690">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-691">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-692">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-693">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-694">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-695">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-696">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-697">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-698">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-699">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-700"><see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte na początku zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="69dd9-701">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-701">The requested command.</span></span>  <span data-ttu-id="69dd9-702">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="Home" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-703">*Kontener tekstowy* to element, który tworzy ostatecznie obramowanie dla zawartości.</span><span class="sxs-lookup"><span data-stu-id="69dd9-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="69dd9-704"><xref:System.Windows.Controls.TextBlock>i <xref:System.Windows.Documents.FlowDocument> są przykładami kontenerów tekstu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="69dd9-705">Zawartość zbiorczą znajdującą się w kontenerze tekstu nazywa się *dokumentem*.</span><span class="sxs-lookup"><span data-stu-id="69dd9-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="69dd9-706">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-707">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-708">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-709">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-710">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-711">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-712">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-713">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-714">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-715">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-716">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-717"><see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte na koniec bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="69dd9-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="69dd9-718">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-718">The requested command.</span></span>  <span data-ttu-id="69dd9-719">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="End" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-720">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-721">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-722">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-723">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-724">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-725">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-726">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-727">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-728">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-729">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-730">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-731"><see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte na początku bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="69dd9-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="69dd9-732">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-732">The requested command.</span></span>  <span data-ttu-id="69dd9-733">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="Home" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-734">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-735">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-736">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-737">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-738">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-739">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-740">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-741">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-742">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-743">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-744">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-745"><see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte o jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="69dd9-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span></span></summary>
        <value><span data-ttu-id="69dd9-746">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-746">The requested command.</span></span>  <span data-ttu-id="69dd9-747">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="Up" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-748">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-749">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-750">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-751">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-752">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-753">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-754">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-755">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-756">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-757">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-758">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-759"><see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie zostało rozszerzone o jedną stronę.</span><span class="sxs-lookup"><span data-stu-id="69dd9-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span></span></summary>
        <value><span data-ttu-id="69dd9-760">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-760">The requested command.</span></span>  <span data-ttu-id="69dd9-761">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="PageUp" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-762">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-763">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-764">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-765">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-766">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-767">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-768">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-769">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-770">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-771">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-772">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-773"><see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> Reprezentuje polecenie, które żąda, aby bieżące zaznaczenie było rozwinięte o jeden akapit.</span><span class="sxs-lookup"><span data-stu-id="69dd9-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="69dd9-774">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-774">The requested command.</span></span>  <span data-ttu-id="69dd9-775">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="Up" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-776">Jeśli karetka znajduje się na początku akapitu, to polecenie rozszerza zaznaczenie na początek poprzedniego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="69dd9-777">W przeciwnym razie to polecenie rozszerza zaznaczenie na początek bieżącego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="69dd9-778">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-779">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-780">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-781">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-782">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-783">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-784">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-785">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-786">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-787">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-788">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-789"><see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> Reprezentuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span></span></summary>
        <value><span data-ttu-id="69dd9-790">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-790">The requested command.</span></span>  <span data-ttu-id="69dd9-791">Domyślnym gestem dla tego polecenia jest <see langword="Shift" />. + <see langword="Tab" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-792">Zachowanie tego polecenia zależy od bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="69dd9-793">Jeśli zaznaczenie nie jest puste, to polecenie jest równoważne <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="69dd9-794">Jeśli karetka znajduje się w komórce tabeli (reprezentowanej przez <xref:System.Windows.Documents.TableCell> element), to polecenie przesuwa karetkę do poprzedniej komórki.</span><span class="sxs-lookup"><span data-stu-id="69dd9-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="69dd9-795">W przeciwnym razie znak tabulacji zostanie wstawiony w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="69dd9-796">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-797">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox> i (gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> właściwość ma `true`wartość).</span><span class="sxs-lookup"><span data-stu-id="69dd9-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-798">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-799">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-800">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-801">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-802">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-803">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-804">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-805">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-806">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-807"><see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> Reprezentuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span></span></summary>
        <value><span data-ttu-id="69dd9-808">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-808">The requested command.</span></span>  <span data-ttu-id="69dd9-809">Domyślnym gestem dla tego polecenia jest <see langword="Tab" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-809">The default key gesture for this command is <see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-810">Zachowanie tego polecenia zależy od bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="69dd9-811">Jeśli zaznaczenie jest niepuste lub jeśli zaznaczenie jest puste i bieżące położenie karetki znajduje się na początku akapitu, to polecenie jest równoważne <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="69dd9-812">Jeśli karetka znajduje się w komórce tabeli (reprezentowanej przez <xref:System.Windows.Documents.TableCell> element), to polecenie przesuwa karetkę do następnej komórki.</span><span class="sxs-lookup"><span data-stu-id="69dd9-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="69dd9-813">Jeśli karetka znajduje się w ostatniej komórce tabeli, to polecenie powoduje dołączenie nowego wiersza do tabeli, z karetką umieszczoną w pierwszej komórce nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="69dd9-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="69dd9-814">W przeciwnym razie znak tabulacji zostanie wstawiony w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="69dd9-815">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-816">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox> program <xref:System.Windows.Controls.TextBox> i (gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> właściwość ma `true`wartość).</span><span class="sxs-lookup"><span data-stu-id="69dd9-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-817">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-818">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-819">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-820">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-821">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-822">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-823">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-824">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-825">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-826">Reprezentuje polecenie, które żąda przełączenia <see cref="T:System.Windows.Documents.Bold" /> formatowania w bieżącym zaznaczeniu. <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-827">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-827">The requested command.</span></span>  <span data-ttu-id="69dd9-828">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="B" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-829">Jeśli dla bieżącego zaznaczenia znajduje się w zakresie od <xref:System.Windows.FontWeights.Thin%2A> do <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> zostanie zastosowany do bieżącego zaznaczenia. <xref:System.Windows.FontWeight></span><span class="sxs-lookup"><span data-stu-id="69dd9-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="69dd9-830">W przeciwnym razie jest stosowane. <xref:System.Windows.FontWeights.Normal%2A></span><span class="sxs-lookup"><span data-stu-id="69dd9-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="69dd9-831">Aby uzyskać porównawczą listę <xref:System.Windows.FontWeight> wartości, zobacz <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="69dd9-832">Gdy zaznaczenie jest puste, a karetka znajduje się w obrębie słowa, zaznaczenie zostanie rozwinięte, aby uwzględnić całe słowo.</span><span class="sxs-lookup"><span data-stu-id="69dd9-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="69dd9-833">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-834">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-835">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-836">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-837">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-838">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-839">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-840">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-841">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-842">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-843">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-844"><see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> Reprezentuje polecenie, które żąda, aby formatowanie listy nieuporządkowanej (nazywanej także listą punktowaną) było przełączane w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-845">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-845">The requested command.</span></span>  <span data-ttu-id="69dd9-846">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="L" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-847">To polecenie działa na <xref:System.Windows.Documents.Paragraph> poziomie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="69dd9-848">Jeśli to polecenie jest wywoływane dla częściowego zaznaczenia zawartości w obrębie akapitu (w tym pustego zaznaczenia, gdzie karetka znajduje się w akapicie), żądany efekt jest stosowany do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="69dd9-849">Jeśli to polecenie jest wywoływane w zaznaczeniu obejmującym wiele akapitów, efekt jest stosowany do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="69dd9-850">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-851">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-852">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-853">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-854">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-855">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-856">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-857">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-858">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-859">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-860">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-861"><see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> Reprezentuje polecenie, które przełącza tryb wpisywania między wstawianiem i zastępowaniem.</span><span class="sxs-lookup"><span data-stu-id="69dd9-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span></span></summary>
        <value><span data-ttu-id="69dd9-862">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-862">The requested command.</span></span>  <span data-ttu-id="69dd9-863">Domyślnym gestem dla tego polecenia jest <see langword="Insert" />.</span><span class="sxs-lookup"><span data-stu-id="69dd9-863">The default key gesture for this command is <see langword="Insert" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-864">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-865">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="69dd9-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-866">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-867">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-868">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-869">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-870">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-871">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-872">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-873">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-874">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-875">Reprezentuje polecenie, które żąda przełączenia <see cref="T:System.Windows.Documents.Italic" /> formatowania w bieżącym zaznaczeniu. <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-876">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-876">The requested command.</span></span>  <span data-ttu-id="69dd9-877">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="I" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-878">Jeśli dla bieżącego <xref:System.Windows.FontStyles.Normal%2A> zaznaczenia<xref:System.Windows.FontStyles.Italic%2A> jest stosowane do bieżącego zaznaczenia. <xref:System.Windows.FontStyle></span><span class="sxs-lookup"><span data-stu-id="69dd9-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="69dd9-879">W przeciwnym razie jest stosowane. <xref:System.Windows.FontStyles.Normal%2A></span><span class="sxs-lookup"><span data-stu-id="69dd9-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="69dd9-880">Gdy zaznaczenie jest puste, a karetka znajduje się w obrębie słowa, zaznaczenie zostanie rozwinięte, aby uwzględnić całe słowo.</span><span class="sxs-lookup"><span data-stu-id="69dd9-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="69dd9-881">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-882">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-883">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-884">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-885">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-886">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-887">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-888">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-889">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-890">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-891">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-892"><see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> Reprezentuje polecenie, które wymaga przełączenia formatowania uporządkowanej listy (nazywanej także listą numerowaną) w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-893">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-893">The requested command.</span></span>  <span data-ttu-id="69dd9-894">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="N" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-895">To polecenie działa na <xref:System.Windows.Documents.Paragraph> poziomie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="69dd9-896">Jeśli to polecenie jest wywoływane dla częściowego zaznaczenia zawartości w obrębie akapitu (w tym pustego zaznaczenia, gdzie karetka znajduje się w akapicie), żądany efekt jest stosowany do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="69dd9-897">Jeśli to polecenie jest wywoływane w zaznaczeniu obejmującym wiele akapitów, efekt jest stosowany do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="69dd9-898">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-899">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-900">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-901">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-902">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-903">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-904">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-905">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-906">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-907">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-908">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-909"><see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> Reprezentuje polecenie, które żąda przełączenia formatowania indeksu w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-910">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-910">The requested command.</span></span>  <span data-ttu-id="69dd9-911">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="OemPlus" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-912">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-913">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-914">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-915">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-916">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-917">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-918">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-919">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-920">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-921">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-922"><see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> Reprezentuje polecenie, które żąda przełączenia formatowania indeksu górnego w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="69dd9-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-923">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-923">The requested command.</span></span>  <span data-ttu-id="69dd9-924">Domyślnym <see langword="Ctrl" />gestem dla tego polecenia jest. + <see langword="Shift" /> + <see langword="OemPlus" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-925">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-926">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-927">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-928">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-929">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-930">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-931">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-932">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-933">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-934">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69dd9-935">Reprezentuje polecenie, które żąda przełączenia <see cref="T:System.Windows.Documents.Underline" /> formatowania w bieżącym zaznaczeniu. <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="69dd9-936">Żądane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-936">The requested command.</span></span>  <span data-ttu-id="69dd9-937">Domyślnym gestem dla tego polecenia jest <see langword="Ctrl" />. + <see langword="U" /></span><span class="sxs-lookup"><span data-stu-id="69dd9-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69dd9-938">Gdy zaznaczenie jest puste, a karetka znajduje się w obrębie słowa, zaznaczenie zostanie rozwinięte, aby uwzględnić całe słowo.</span><span class="sxs-lookup"><span data-stu-id="69dd9-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="69dd9-939">Nie jest konieczna rzeczywista implementacja, która reaguje na to polecenie na żadnym z określonych obiektów; w wielu przypadkach implementacja, która reaguje na polecenie, jest odpowiedzialna za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="69dd9-940">To polecenie jest natywnie obsługiwane przez <xref:System.Windows.Controls.RichTextBox>program.</span><span class="sxs-lookup"><span data-stu-id="69dd9-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="69dd9-941">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="69dd9-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="69dd9-942">Poniższy przykład pokazuje, jak wywołać polecenie edycji na obiekcie, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="69dd9-943">Na potrzeby tego przykładu <xref:System.Windows.Controls.RichTextBox> służy jako obiekt docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="69dd9-944">Należy pamiętać <xref:System.Windows.Controls.RichTextBox> , że <xref:System.Windows.IInputElement> implementuje interfejs (Dziedziczony <xref:System.Windows.FrameworkElement>z) i zawiera natywną obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-945">Pierwszym argumentem dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody jest parametr polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="69dd9-946">Większość poleceń edycji ignoruje parametr polecenia; Ogólnie rzecz biorąc, ten parametr powinien `null` dotyczyć poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="69dd9-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="69dd9-947">Drugi argument określa obiekt, do którego zostanie rozesłane polecenie.</span><span class="sxs-lookup"><span data-stu-id="69dd9-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="69dd9-948">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejs i powinien zawierać procedurę obsługi dla określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="69dd9-949">Ogólnie rzecz biorąc, polecenie jest ignorowane w przypadku wywołania na obiekcie, który nie obsługuje tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="69dd9-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>
