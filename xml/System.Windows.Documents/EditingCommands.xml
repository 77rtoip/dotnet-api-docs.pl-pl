<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56ac8ca9237ec99eb53ae1283903a5a349c16b21" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36364132" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="db2d0-101">Zawiera standardowy zestaw pokrewne polecenia edycji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="db2d0-101">Provides a standard set of editing related commands.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-102">W poniższej tabeli przedstawiono poleceń edycji i skojarzoną domyślną gestów klucza (z nazwami kluczy z <xref:System.Windows.Input.Key> i <xref:System.Windows.Input.ModifierKeys> wyliczenia).</span><span class="sxs-lookup"><span data-stu-id="db2d0-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="db2d0-103">Polecenie edycji</span><span class="sxs-lookup"><span data-stu-id="db2d0-103">Editing command</span></span>|<span data-ttu-id="db2d0-104">Domyślne gestu klucza</span><span class="sxs-lookup"><span data-stu-id="db2d0-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="db2d0-105">nie domyślnego gestu klucza</span><span class="sxs-lookup"><span data-stu-id="db2d0-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="db2d0-106">nie domyślnego gestu klucza</span><span class="sxs-lookup"><span data-stu-id="db2d0-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="db2d0-107">Polecenia przepływu karetki i wybór rozwijanie polecenia korzystają ze wspólnego zestawu kluczy gestów domyślne, ogólne różnica jest dodanie <xref:System.Windows.Input.ModifierKeys.Shift> klucza do odróżnienia polecenia wyboru poleceń przepływu karetki.</span><span class="sxs-lookup"><span data-stu-id="db2d0-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="db2d0-108">Na przykład <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> polecenie ma domyślne gestu klucza z <xref:System.Windows.Input.Key.Left>i odpowiadający mu <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> polecenie ma domyślne gestu klucza z <xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="db2d0-109">Ogólnie rzecz biorąc, definicje polecenia udostępniane przez <xref:System.Windows.Documents.EditingCommands> nie wprowadzaj klasy korzystanie z parametrów polecenia ( `parameter` parametru oczekiwany przez <xref:System.Windows.Input.ICommand.Execute%2A> — metoda).</span><span class="sxs-lookup"><span data-stu-id="db2d0-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="db2d0-110">Aby uzyskać więcej informacji na polecenia i steruje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="db2d0-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-111">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-112">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-113">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-114">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-115">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-116">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-117">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-118">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-119">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> polecenia, które żądania, że wyśrodkowany bieżącego akapitu lub akapitów zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-120">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-120">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-121">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="E" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-122">To polecenie działa w <xref:System.Windows.Documents.Paragraph> poziom.</span><span class="sxs-lookup"><span data-stu-id="db2d0-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="db2d0-123">Jeśli to polecenie jest wywoływana częściowy wybór zawartości akapitu (w tym zaznaczenie jest puste, gdzie karetka znajduje się w obrębie akapitu), żądany efekt jest stosowane do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="db2d0-124">Jeśli to polecenie jest wywoływana, wybór, obejmującej wiele akapitów, efekt jest stosowane do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="db2d0-125">Na poniższej ilustracji przedstawiono przykład wyśrodkowany zawartości.</span><span class="sxs-lookup"><span data-stu-id="db2d0-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="db2d0-126">![Zrzut ekranu: Wartość właściwości TextAlign Centrum](~/add/media/flowdoc-textalign-center.png "zrzut ekranu: wartość właściwości TextAlign Centrum")</span><span class="sxs-lookup"><span data-stu-id="db2d0-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="db2d0-127">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-128">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-129">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-130">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-131">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-132">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-133">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-134">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-135">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-136">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-137">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> polecenia, które żądań być uzasadnione bieżącego akapitu lub akapitów zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-138">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-138">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-139">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="J" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-140">To polecenie działa w <xref:System.Windows.Documents.Paragraph> poziom.</span><span class="sxs-lookup"><span data-stu-id="db2d0-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="db2d0-141">Jeśli to polecenie jest wywoływana częściowy wybór zawartości akapitu (w tym zaznaczenie jest puste, gdzie karetka znajduje się w obrębie akapitu), żądany efekt jest stosowane do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="db2d0-142">Jeśli to polecenie jest wywoływana, wybór, obejmującej wiele akapitów, efekt jest stosowany do wszystkich akapitów w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="db2d0-143">Gdy zawartość jest uzasadnione, odstępy w poziomie w każdym wierszu zawartość zostanie zmieniona tak, aby uzasadnionych wiersze są takie same lub w pobliżu równy szerokości.</span><span class="sxs-lookup"><span data-stu-id="db2d0-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="db2d0-144">Zawartość jest uzasadnione zwykle utworzyć smooth krawędzi na strony zawartość.</span><span class="sxs-lookup"><span data-stu-id="db2d0-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="db2d0-145">Często jest krótszy niż pozostałe, w ostatnim wierszu akapitu mogą pozostać nieuzasadnione po wywołaniu tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="db2d0-146">Na poniższej ilustracji przedstawiono nieuzasadnione zawartości (wyrównanego do lewej).</span><span class="sxs-lookup"><span data-stu-id="db2d0-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="db2d0-147">![Zrzut ekranu: Zawartość jest uzasadnione](~/add/media/content-unjustified.png "zrzut ekranu: zawartość jest uzasadnione")</span><span class="sxs-lookup"><span data-stu-id="db2d0-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="db2d0-148">Na poniższej ilustracji przedstawiono tę samą zawartość po została uzasadniona.</span><span class="sxs-lookup"><span data-stu-id="db2d0-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="db2d0-149">![Zrzut ekranu przedstawiający zawartości uzasadnione tekst](~/add/media/content-justified.png "zrzut ekranu przedstawiający zawartości uzasadnione tekstu")</span><span class="sxs-lookup"><span data-stu-id="db2d0-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="db2d0-150">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-151">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-152">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-153">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-154">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-155">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-156">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-157">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-158">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-159">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-160">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-161">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> polecenia, które żądań zaznaczenia zawartości wyrównać po lewej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-162">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-162">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-163">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="L" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-164">To polecenie działa w <xref:System.Windows.Documents.Paragraph> poziom.</span><span class="sxs-lookup"><span data-stu-id="db2d0-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="db2d0-165">Jeśli to polecenie jest wywoływana częściowy wybór zawartości akapitu (w tym zaznaczenie jest puste, gdzie karetka znajduje się w obrębie akapitu), żądany efekt jest stosowane do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="db2d0-166">Jeśli to polecenie jest wywoływana, wybór, obejmującej wiele akapitów, efekt jest stosowane do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="db2d0-167">Na poniższej ilustracji przedstawiono przykład wyrównany zawartości.</span><span class="sxs-lookup"><span data-stu-id="db2d0-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="db2d0-168">![Zrzut ekranu: Wartość właściwości TextAlign lewej](~/add/media/flowdoc-textalign-left.png "zrzut ekranu: wartość właściwości TextAlign z lewej strony")</span><span class="sxs-lookup"><span data-stu-id="db2d0-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="db2d0-169">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-170">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-171">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-172">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-173">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-174">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-175">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-176">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-177">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-178">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-179">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-180">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> polecenia, które żądań zaznaczenia zawartości być wyrównane do prawej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-181">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-181">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-182">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="R" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-183">To polecenie działa w <xref:System.Windows.Documents.Paragraph> poziom.</span><span class="sxs-lookup"><span data-stu-id="db2d0-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="db2d0-184">Jeśli to polecenie jest wywoływana częściowy wybór zawartości akapitu (w tym zaznaczenie jest puste, gdzie karetka znajduje się w obrębie akapitu), żądany efekt jest stosowane do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="db2d0-185">Jeśli to polecenie jest wywoływana, wybór, obejmującej wiele akapitów, efekt jest stosowane do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="db2d0-186">Na poniższej ilustracji przedstawiono przykład wyrównany zawartości.</span><span class="sxs-lookup"><span data-stu-id="db2d0-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="db2d0-187">![Zrzut ekranu: Wartość TextAlign prawa](~/add/media/flowdoc-textalign-right.png "zrzut ekranu: wartość TextAlign prawa")</span><span class="sxs-lookup"><span data-stu-id="db2d0-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="db2d0-188">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-189">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-190">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-191">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-192">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-193">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-194">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-195">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-196">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-197">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-198">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-199">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> polecenia, które żądania wprowadzenia polecenie backspace w bieżącym położeniu lub za pośrednictwem bieżącego zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-200">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-200">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-201">Gest klucza domyślnego dla tego polecenia jest <see langword="Backspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-201">The default key gesture for this command is <see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-202">Po wywołaniu na zaznaczenie jest puste, to polecenie usuwa separatora znaków lub bezpośrednio przed karetką.</span><span class="sxs-lookup"><span data-stu-id="db2d0-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="db2d0-203">Po wywołaniu wyboru niepustym, to polecenie usuwa zaznaczenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="db2d0-204">To polecenie zachowuje formatowanie usunięto zaznaczenie zawartości natychmiast wstawione w tej samej lokalizacji, po wywołaniu tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="db2d0-205">Natomiast z <xref:System.Windows.Documents.EditingCommands.Delete%2A> polecenia, które nie zachowuje poprzedniej formatowania.</span><span class="sxs-lookup"><span data-stu-id="db2d0-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="db2d0-206">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-207">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-208">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-209">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-210">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-211">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-212">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-213">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-214">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-215">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-216">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-217">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> polecenia, które żądań korygowane żadnych wyraz w bieżącym położeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-218">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-218">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-219">Nie domyślnego gestu klucza nie ma tego polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-219">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-220">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-221">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-222">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> polecenia, które żądań zmniejszyć rozmiar czcionki dla bieżącego zaznaczenia przez punkt 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-223">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-223">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-224">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="OemOpenBrackets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-225">Jeśli to polecenie jest wywoływana, zaznaczenie jest puste, gdzie karetka znajduje się wewnątrz słowa, zaznaczenie jest automatycznie dodawany do dotyczą polecenie całe wyrazy.</span><span class="sxs-lookup"><span data-stu-id="db2d0-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="db2d0-226">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-227">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-228">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-229">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-230">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-231">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-232">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-233">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-234">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-235">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-236">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-237">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> polecenia, który żąda tego wcięcie dla bieżącego akapitu należy zmniejszyć o jedną pozycję tabulatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-238">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-238">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-239">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-240">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-241">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="db2d0-242">To polecenie nie ma wpływu na element tekstowy chyba że <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> właściwość tekst elementu ma wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="db2d0-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-243">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-244">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-245">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-246">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-247">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-248">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-249">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-250">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-251">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-252">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> polecenia, które żądania, czy można usunąć bieżącego zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-253">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-253">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-254">Gest klucza domyślnego dla tego polecenia jest <see langword="Delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-254">The default key gesture for this command is <see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-255">To polecenie spowoduje odrzucenie formatowanie usunięto zaznaczenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="db2d0-256">Natomiast z <xref:System.Windows.Documents.EditingCommands.Backspace%2A> polecenia, który zachowuje formatowanie usunięto zaznaczenie zawartości natychmiast wstawione w tej samej lokalizacji, po wywołaniu tego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="db2d0-257">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-258">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-259">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-260">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-261">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-262">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-263">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-264">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-265">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-266">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-267">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-268">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> polecenia, które żądań usunięte wyrazu (względem bieżącej pozycji).</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-269">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-269">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-270">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-271">W przypadku karetka znajduje się wewnątrz słowa, zostaną usunięte w pozostałej części słowa między bieżącą pozycję i na końcu słowo.</span><span class="sxs-lookup"><span data-stu-id="db2d0-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="db2d0-272">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-273">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-274">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-275">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-276">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-277">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-278">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-279">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-280">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-281">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-282">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-283">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> polecenia, które żądań usunięte poprzedniego wyrazu (względem bieżącej pozycji).</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-284">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-284">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-285">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Backspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-286">W przypadku karetka znajduje się wewnątrz słowa, zostaną usunięte w pozostałej części słowa między bieżącą pozycję i początek wyrazu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="db2d0-287">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-288">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-289">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-290">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-291">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-292">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-293">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-294">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-295">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-296">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-297">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-298">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> polecenia, które żądań wstawić podział wiersza w bieżącym położeniu lub za pośrednictwem bieżącego zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-299">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-299">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-300">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="Enter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-301">Dla edytory obsługujących zawartość przepływu, takich jak <xref:System.Windows.Controls.RichTextBox>, to polecenie powoduje, że <xref:System.Windows.Documents.LineBreak> element do wstawienia w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="db2d0-302">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-303">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-304">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-305">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-306">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-307">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-308">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-309">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-310">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-311">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-312">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-313">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> polecenia, które żądań wstawić podział akapitu w bieżącym położeniu lub za pośrednictwem bieżącego zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-314">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-314">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-315">Gest klucza domyślnego dla tego polecenia jest <see langword="Enter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-315">The default key gesture for this command is <see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-316">To polecenie jest odpowiednikiem użytkownika, naciskając klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="db2d0-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="db2d0-317">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-318">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox> (gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> jest właściwość `true`).</span><span class="sxs-lookup"><span data-stu-id="db2d0-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="db2d0-319">To polecenie nie ma wpływu na element tekstowy chyba że <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> właściwość tekst elementu ma wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="db2d0-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-320">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-321">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-322">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-323">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-324">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-325">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-326">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-327">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-328">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-329">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> polecenia, które żądań zignorowane wystąpienia pisowni w bieżącym położeniu lub w bieżącym zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-330">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-330">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-331">Nie domyślnego gestu klucza nie ma tego polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-331">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-332">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-333">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-334">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> polecenia, które żądania, czy rozmiar czcionki dla bieżącego wyboru zwiększana o 1 punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-335">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-335">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-336">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="OemCloseBrackets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-337">Jeśli to polecenie jest wywoływana, zaznaczenie jest puste, gdzie karetka znajduje się wewnątrz słowa, zaznaczenie jest rozwinięty, dotyczą polecenie całe wyrazy.</span><span class="sxs-lookup"><span data-stu-id="db2d0-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="db2d0-338">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-339">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-340">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-341">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-342">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-343">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-344">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-345">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-346">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-347">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-348">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-349">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> polecenia, który żąda tego wcięcie dla bieżącego akapitu zwiększana o jedną pozycję tabulatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-350">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-350">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-351">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-352">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-353">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="db2d0-354">To polecenie nie ma wpływu na element tekstowy chyba że <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> właściwość tekst elementu ma wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="db2d0-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-355">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-356">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-357">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-358">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-359">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-360">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-361">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-362">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-363">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-364">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> polecenia, które żądań Przenieś karetkę w dół o jeden wiersz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-365">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-365">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-366">Gest klucza domyślnego dla tego polecenia jest <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-366">The default key gesture for this command is <see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-367">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-368">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-369">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-370">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-371">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-372">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-373">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-374">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-375">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-376">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-377">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-378">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> polecenia, które żądań karetkę Przenieś o jedną stronę w dół.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-379">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-379">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-380">Gest klucza domyślnego dla tego polecenia jest <see langword="PageDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-380">The default key gesture for this command is <see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-381">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-382">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-383">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-384">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-385">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-386">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-387">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-388">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-389">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-390">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-391">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-392">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> polecenia, które żądań Przenieś karetkę dół przez jeden akapit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-393">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-393">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-394">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-395">To polecenie ustawia położenie karetki na początku następnego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="db2d0-396">To polecenie zachowuje się jak <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> po wywołaniu na <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="db2d0-397">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-398">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-399">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-400">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-401">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-402">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-403">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-404">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-405">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-406">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-407">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-408">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> polecenia, które żądań karetkę lewej Przesuń o jeden znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-409">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-409">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-410">Gest klucza domyślnego dla tego polecenia jest <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-410">The default key gesture for this command is <see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-411">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-412">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-413">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-414">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-415">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-416">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-417">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-418">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-419">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-420">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-421">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-422">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> polecenia, które żądania, że karetkę przenieść o jedno słowo w lewo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-423">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-423">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-424">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-425">W przypadku karetkę wyrazu, to polecenie spowoduje przeniesienie karetkę do początku wyrazie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="db2d0-426">W przeciwnym razie to polecenie spowoduje przeniesienie karetkę na początek poprzedniego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="db2d0-427">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-428">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-429">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-430">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-431">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-432">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-433">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-434">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-435">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-436">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-437">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-438">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> polecenia, które żądań czy karetki w prawo o jeden znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-439">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-439">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-440">Gest klucza domyślnego dla tego polecenia jest <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-440">The default key gesture for this command is <see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-441">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-442">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-443">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-444">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-445">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-446">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-447">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-448">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-449">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-450">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-451">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-452">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> polecenia, które żądań prawo Przesuń karetkę o jedno słowo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-453">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-453">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-454">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-455">W przypadku karetkę wyrazu, to polecenie spowoduje przeniesienie karetkę na końcu tego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="db2d0-456">W przeciwnym razie to polecenie spowoduje przeniesienie karetkę na początek następnego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="db2d0-457">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-458">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-459">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-460">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-461">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-462">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-463">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-464">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-465">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-466">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-467">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-468">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> polecenia, które żądania, że karetkę przenosić do bardzo koniec zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-469">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-469">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-470">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-471">A *kontenera dopisków fonetycznych* jest elementem formularzy ultimate obramowania wykonywanego zawartości.</span><span class="sxs-lookup"><span data-stu-id="db2d0-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="db2d0-472"><xref:System.Windows.Controls.TextBlock> i <xref:System.Windows.Documents.FlowDocument> przedstawiono kontenery tekstu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="db2d0-473">Zawartość zbiorczo zawartych w kontenerze tekstu jest określany jako *dokumentu*.</span><span class="sxs-lookup"><span data-stu-id="db2d0-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="db2d0-474">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-475">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-476">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-477">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-478">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-479">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-480">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-481">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-482">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-483">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-484">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-485">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> polecenia, które żądania, że karetkę przenosić do początku części zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-486">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-486">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-487">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-488">A *kontenera dopisków fonetycznych* jest elementem formularzy ultimate obramowania wykonywanego zawartości.</span><span class="sxs-lookup"><span data-stu-id="db2d0-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="db2d0-489"><xref:System.Windows.Controls.TextBlock> i <xref:System.Windows.Documents.FlowDocument> przedstawiono kontenery tekstu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="db2d0-490">Zawartość zbiorczo zawartych w kontenerze tekstu jest określany jako *dokumentu*.</span><span class="sxs-lookup"><span data-stu-id="db2d0-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="db2d0-491">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-492">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-493">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-494">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-495">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-496">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-497">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-498">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-499">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-500">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-501">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-502">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> polecenia, które żądania, że karetkę Przenieś na koniec bieżącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-503">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-503">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-504">Gest klucza domyślnego dla tego polecenia jest <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-504">The default key gesture for this command is <see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-505">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-506">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-507">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-508">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-509">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-510">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-511">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-512">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-513">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-514">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-515">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-516">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> polecenia, które żądania, że karetkę Przenieś na początek bieżącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-517">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-517">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-518">Gest klucza domyślnego dla tego polecenia jest <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-518">The default key gesture for this command is <see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-519">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-520">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-521">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-522">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-523">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-524">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-525">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-526">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-527">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-528">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-529">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-530">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> polecenia, które żądania, że karetkę Przenieś w górę o jeden wiersz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-531">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-531">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-532">Gest klucza domyślnego dla tego polecenia jest <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-532">The default key gesture for this command is <see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-533">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-534">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-535">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-536">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-537">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-538">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-539">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-540">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-541">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-542">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-543">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-544">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> polecenia, które żądań karetkę przesunięty o jedną stronę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-545">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-545">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-546">Gest klucza domyślnego dla tego polecenia jest <see langword="PageUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-546">The default key gesture for this command is <see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-547">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-548">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-549">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-550">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-551">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-552">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-553">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-554">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-555">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-556">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-557">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-558">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> polecenia, które żądań Przenieś karetkę górę przez jeden akapit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-559">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-559">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-560">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-561">To polecenie ustawia położenie karetki na początku następnego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="db2d0-562">To polecenie zachowuje się jak <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> po wywołaniu na <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="db2d0-563">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-564">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-565">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-566">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-567">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-568">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-569">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-570">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-571">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-572">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-573">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-574">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> polecenia, które żądań rozszerzona bieżące zaznaczenie w dół o jeden wiersz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-575">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-575">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-576">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-577">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-578">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-579">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-580">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-581">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-582">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-583">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-584">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-585">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-586">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-587">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-588">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> polecenia, które żądań rozszerzona bieżące zaznaczenie w dół o jedną stronę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-589">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-589">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-590">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="PageDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-591">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-592">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-593">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-594">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-595">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-596">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-597">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-598">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-599">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-600">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-601">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-602">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> polecenia, które żądań rozszerzona bieżące zaznaczenie w dół przez jeden akapit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-603">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-603">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-604">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-605">To polecenie rozszerza zaznaczenie na początek następnego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="db2d0-606">W przeciwnym razie polecenie rozszerza zaznaczenie do końca bieżącego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="db2d0-607">Rozszerzony wybór zawiera podział akapit, który oznacza koniec akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="db2d0-608">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-609">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-610">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-611">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-612">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-613">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-614">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-615">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-616">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-617">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-618">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-619">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> polecenia, które żądania, że bieżące zaznaczenie lewej rozszerzona o jeden znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-620">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-620">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-621">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-622">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-623">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-624">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-625">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-626">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-627">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-628">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-629">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-630">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-631">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-632">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-633">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> polecenia, które żądania, że bieżące zaznaczenie lewej rozszerzona o jedno słowo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-634">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-634">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-635">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-636">W przypadku karetkę wyrazu, to polecenie rozszerza zaznaczenie na początku tego programu word.</span><span class="sxs-lookup"><span data-stu-id="db2d0-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="db2d0-637">W przeciwnym razie polecenie rozszerza zaznaczenie na początek poprzedniego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="db2d0-638">Rozszerzony wybór nie ma ogranicznika słowa.</span><span class="sxs-lookup"><span data-stu-id="db2d0-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="db2d0-639">Natomiast z <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, który ma ogranicznika słowa w rozszerzony wybór.</span><span class="sxs-lookup"><span data-stu-id="db2d0-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="db2d0-640">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-641">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-642">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-643">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-644">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-645">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-646">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-647">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-648">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-649">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-650">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-651">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> polecenia, które żądań rozszerzona bieżące zaznaczenie w prawo o jeden znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-652">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-652">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-653">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-654">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-655">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-656">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-657">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-658">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-659">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-660">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-661">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-662">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-663">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-664">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-665">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> polecenia, które żądań rozszerzona bieżące zaznaczenie w prawo o jedno słowo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-666">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-666">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-667">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-668">W przypadku karetkę wyrazu, to polecenie rozszerza zaznaczenie na końcu tego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="db2d0-669">W przeciwnym razie to polecenie rozszerza zaznaczenie do zakończenia następnego wyrazu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="db2d0-670">Rozszerzony wybór obejmuje ogranicznika słowa.</span><span class="sxs-lookup"><span data-stu-id="db2d0-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="db2d0-671">Natomiast z <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> której nie ma ogranicznika słowa w rozszerzony wybór.</span><span class="sxs-lookup"><span data-stu-id="db2d0-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="db2d0-672">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-673">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-674">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-675">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-676">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-677">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-678">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-679">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-680">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-681">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-682">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-683">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> polecenia, które żądań rozszerzona bieżące zaznaczenie na końcu zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-684">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-684">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-685">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-686">A *kontenera dopisków fonetycznych* jest elementem formularzy ultimate obramowania wykonywanego zawartości.</span><span class="sxs-lookup"><span data-stu-id="db2d0-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="db2d0-687"><xref:System.Windows.Controls.TextBlock> i <xref:System.Windows.Documents.FlowDocument> przedstawiono kontenery tekstu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="db2d0-688">Zawartość zbiorczo zawartych w kontenerze tekstu jest określany jako *dokumentu*.</span><span class="sxs-lookup"><span data-stu-id="db2d0-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="db2d0-689">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-690">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-691">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-692">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-693">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-694">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-695">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-696">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-697">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-698">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-699">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-700">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> polecenia, które żądań rozszerzona bieżące zaznaczenie na samym początku zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-701">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-701">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-702">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-703">A *kontenera dopisków fonetycznych* jest elementem formularzy ultimate obramowania wykonywanego zawartości.</span><span class="sxs-lookup"><span data-stu-id="db2d0-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="db2d0-704"><xref:System.Windows.Controls.TextBlock> i <xref:System.Windows.Documents.FlowDocument> przedstawiono kontenery tekstu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="db2d0-705">Zawartość zbiorczo zawartych w kontenerze tekstu jest określany jako *dokumentu*.</span><span class="sxs-lookup"><span data-stu-id="db2d0-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="db2d0-706">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-707">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-708">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-709">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-710">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-711">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-712">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-713">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-714">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-715">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-716">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-717">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> polecenia, które żądań rozszerzona bieżące zaznaczenie do końca bieżącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-718">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-718">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-719">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-720">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-721">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-722">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-723">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-724">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-725">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-726">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-727">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-728">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-729">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-730">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-731">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> polecenia, które żądań rozszerzona bieżący wybór do początku bieżącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-732">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-732">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-733">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-734">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-735">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-736">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-737">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-738">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-739">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-740">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-741">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-742">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-743">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-744">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-745">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> polecenia, które żądań rozszerzona bieżące zaznaczenie górę o jeden wiersz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-746">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-746">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-747">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-748">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-749">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-750">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-751">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-752">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-753">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-754">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-755">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-756">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-757">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-758">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-759">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> polecenia, które żądań rozszerzona bieżące zaznaczenie się o jedną stronę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-760">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-760">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-761">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="PageUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-762">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-763">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-764">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-765">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-766">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-767">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-768">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-769">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-770">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-771">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-772">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-773">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> polecenia, które żądania, czy bieżące zaznaczenie można rozszerzać się przez jeden akapit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-774">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-774">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-775">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-776">Jeśli karetka znajduje się na początku akapitu, to polecenie rozszerza zaznaczenie na początek poprzedniego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="db2d0-777">W przeciwnym razie polecenie rozszerza zaznaczenie do początku bieżącego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="db2d0-778">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-779">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-780">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-781">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-782">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-783">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-784">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-785">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-786">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-787">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-788">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-789">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-790">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-790">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-791">Gest klucza domyślnego dla tego polecenia jest <see langword="Shift" /> + <see langword="Tab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-792">Zachowanie dla tego polecenia jest zależny od bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="db2d0-793">Jeśli zaznaczenie jest pusta, to polecenie jest odpowiednikiem <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="db2d0-794">Jeśli karetka znajduje się w komórce tabeli (reprezentowane przez <xref:System.Windows.Documents.TableCell> element), to polecenie spowoduje przeniesienie karetkę do poprzedniej komórki.</span><span class="sxs-lookup"><span data-stu-id="db2d0-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="db2d0-795">W przeciwnym razie wstawiany jest znak tabulacji w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="db2d0-796">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-797">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox> (gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> jest właściwość `true`).</span><span class="sxs-lookup"><span data-stu-id="db2d0-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-798">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-799">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-800">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-801">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-802">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-803">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-804">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-805">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-806">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-807">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-808">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-808">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-809">Gest klucza domyślnego dla tego polecenia jest <see langword="Tab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-809">The default key gesture for this command is <see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-810">Zachowanie dla tego polecenia jest zależny od bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="db2d0-811">Jeśli zaznaczenie jest pusty lub jeśli zaznaczenie jest puste i jest bieżącym położeniu karetki na początku akapitu, to polecenie jest odpowiednikiem <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="db2d0-812">Jeśli karetka znajduje się w komórce tabeli (reprezentowane przez <xref:System.Windows.Documents.TableCell> element), to polecenie spowoduje przeniesienie karetkę do następnej komórki.</span><span class="sxs-lookup"><span data-stu-id="db2d0-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="db2d0-813">Jeśli karetka znajduje się w ostatniej komórce tabeli, to polecenie powoduje, że nowy wiersz do dołączenia do tabeli z karetka znajduje się w pierwszej komórki nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="db2d0-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="db2d0-814">W przeciwnym razie wstawiany jest znak tabulacji w bieżącym położeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="db2d0-815">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-816">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox> i <xref:System.Windows.Controls.TextBox> (gdy <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> jest właściwość `true`).</span><span class="sxs-lookup"><span data-stu-id="db2d0-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-817">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-818">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-819">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-820">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-821">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-822">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-823">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-824">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-825">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-826">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> polecenia, które żądania wysyłane przez <see cref="T:System.Windows.Documents.Bold" /> formatowania zostać przełączona w bieżącym zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-827">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-827">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-828">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="B" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-829">Jeśli <xref:System.Windows.FontWeight> bieżące zaznaczenie jest poza zakresem od <xref:System.Windows.FontWeights.Thin%2A> do <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> jest stosowany do bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="db2d0-830">W przeciwnym razie <xref:System.Windows.FontWeights.Normal%2A> została zastosowana.</span><span class="sxs-lookup"><span data-stu-id="db2d0-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="db2d0-831">Lista porównawczych <xref:System.Windows.FontWeight> wartości, zobacz <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="db2d0-832">Jeśli zaznaczenie jest puste i karetka znajduje się wewnątrz słowa, zaznaczenie jest rozszerzona w celu uwzględnienia całe wyrazy.</span><span class="sxs-lookup"><span data-stu-id="db2d0-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="db2d0-833">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-834">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-835">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-836">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-837">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-838">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-839">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-840">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-841">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-842">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-843">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-844">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> polecenia, które żądania, że formatowanie nieuporządkowaną listę (określane również jako listy punktowane) zostać przełączona w bieżącym zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-845">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-845">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-846">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-847">To polecenie działa w <xref:System.Windows.Documents.Paragraph> poziom.</span><span class="sxs-lookup"><span data-stu-id="db2d0-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="db2d0-848">Jeśli to polecenie jest wywoływana częściowy wybór zawartości akapitu (w tym zaznaczenie jest puste, gdzie karetka znajduje się w obrębie akapitu), żądany efekt jest stosowane do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="db2d0-849">Jeśli to polecenie jest wywoływana, wybór, obejmującej wiele akapitów, efekt jest stosowane do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="db2d0-850">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-851">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-852">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-853">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-854">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-855">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-856">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-857">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-858">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-859">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-860">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-861">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> polecenia, które Przełącza tryb pisania pomiędzy wstawianiem, a zastępowaniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-862">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-862">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-863">Gest klucza domyślnego dla tego polecenia jest <see langword="Insert" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-863">The default key gesture for this command is <see langword="Insert" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-864">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-865">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, i <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-866">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-867">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-868">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-869">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-870">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-871">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-872">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-873">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-874">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-875">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> polecenia, które żądania wysyłane przez <see cref="T:System.Windows.Documents.Italic" /> formatowania zostać przełączona w bieżącym zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-876">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-876">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-877">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="I" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-878">Jeśli <xref:System.Windows.FontStyle> bieżące zaznaczenie jest <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> jest stosowany do bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="db2d0-879">W przeciwnym razie <xref:System.Windows.FontStyles.Normal%2A> została zastosowana.</span><span class="sxs-lookup"><span data-stu-id="db2d0-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="db2d0-880">Jeśli zaznaczenie jest puste i karetka znajduje się wewnątrz słowa, zaznaczenie jest rozszerzona w celu uwzględnienia całe wyrazy.</span><span class="sxs-lookup"><span data-stu-id="db2d0-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="db2d0-881">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-882">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-883">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-884">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-885">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-886">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-887">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-888">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-889">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-890">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-891">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-892">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> polecenia, które żądania, że formatowanie listy uporządkowanej (nazywane również lista numerowana) zostać przełączona w bieżącym zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-893">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-893">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-894">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-895">To polecenie działa w <xref:System.Windows.Documents.Paragraph> poziom.</span><span class="sxs-lookup"><span data-stu-id="db2d0-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="db2d0-896">Jeśli to polecenie jest wywoływana częściowy wybór zawartości akapitu (w tym zaznaczenie jest puste, gdzie karetka znajduje się w obrębie akapitu), żądany efekt jest stosowane do całego akapitu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="db2d0-897">Jeśli to polecenie jest wywoływana, wybór, obejmującej wiele akapitów, efekt jest stosowane do całej zawartości każdego akapitu, który uczestniczy w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="db2d0-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="db2d0-898">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-899">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-900">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-901">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-902">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-903">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-904">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-905">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-906">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-907">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-908">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-909">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> polecenia, które żądania, że indeks dolny zostać przełączona w bieżącym zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-910">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-910">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-911">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="OemPlus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-912">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-913">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-914">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-915">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-916">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-917">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-918">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-919">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-920">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-921">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-922">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> polecenia, które żądania, czy górny zostać przełączona w bieżącym zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-923">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-923">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-924">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-925">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-926">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-927">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-928">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-929">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-930">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-931">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-932">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-933">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-934">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="db2d0-935">Reprezentuje <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> polecenia, które żądania wysyłane przez <see cref="T:System.Windows.Documents.Underline" /> formatowania zostać przełączona w bieżącym zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="db2d0-936">Żądane polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-936">The requested command.</span>
          </span>
          <span data-ttu-id="db2d0-937">Gest klucza domyślnego dla tego polecenia jest <see langword="Ctrl" /> + <see langword="U" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="db2d0-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db2d0-938">Jeśli zaznaczenie jest puste i karetka znajduje się wewnątrz słowa, zaznaczenie jest rozszerzona w celu uwzględnienia całe wyrazy.</span><span class="sxs-lookup"><span data-stu-id="db2d0-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="db2d0-939">Nie jest zawsze rzeczywiste implementację, która odpowiada na polecenie w dowolnym danego obiektu; w wielu przypadkach implementację, która odpowiada na polecenie jest odpowiedzialny za moduł zapisujący aplikacji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="db2d0-940">To polecenie jest obsługiwany natywnie w <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="db2d0-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="db2d0-941">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="db2d0-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="db2d0-942">W poniższym przykładzie pokazano sposób wywołania polecenia edycji na obiekt, który obsługuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="db2d0-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="db2d0-943">Na przykład <xref:System.Windows.Controls.RichTextBox> służy jako element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="db2d0-944">Należy pamiętać, że <xref:System.Windows.Controls.RichTextBox> implementuje <xref:System.Windows.IInputElement> interfejsu (dziedziczone z <xref:System.Windows.FrameworkElement>), a także macierzystą obsługę wielu poleceń edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-945">Pierwszy argument dla <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest parametrem polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="db2d0-946">Parametr polecenia; ignorowanie polecenia najbardziej edycji Ogólnie rzecz biorąc, ten parametr powinien być `null` dla polecenia edycji.</span><span class="sxs-lookup"><span data-stu-id="db2d0-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="db2d0-947">Drugi argument określa obiekt, do której będą kierowane polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="db2d0-948">Ten obiekt musi implementować <xref:System.Windows.IInputElement> interfejsu i powinien zawierać obsługę określonego polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="db2d0-949">Ogólnie rzecz biorąc polecenie jest ignorowane, gdy została wywołana dla obiektu, który nie obsługuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="db2d0-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>