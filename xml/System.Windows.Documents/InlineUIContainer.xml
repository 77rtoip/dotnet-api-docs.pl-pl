<Type Name="InlineUIContainer" FullName="System.Windows.Documents.InlineUIContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40ecd4d740c1e65d329083c22fad8a0d8f1ee103" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69208281" /></Metadata><TypeSignature Language="C#" Value="public class InlineUIContainer : System.Windows.Documents.Inline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InlineUIContainer extends System.Windows.Documents.Inline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.InlineUIContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class InlineUIContainer&#xA;Inherits Inline" />
  <TypeSignature Language="C++ CLI" Value="public ref class InlineUIContainer : System::Windows::Documents::Inline" />
  <TypeSignature Language="F#" Value="type InlineUIContainer = class&#xA;    inherit Inline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Inline</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Documents.TextElementEditingBehavior(IsMergeable=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Element zawartości przepływu na poziomie wbudowanym, który <see cref="T:System.Windows.UIElement" /> umożliwia osadzanie w zawartości <see cref="T:System.Windows.Controls.Button" />przepływu elementów (tj.).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element (tj <xref:System.Windows.Controls.Button>.) może być osadzony bezpośrednio w zawartości przepływu, <xref:System.Windows.Documents.InlineUIContainer> umieszczając go w (Zobacz przykład poniżej). <xref:System.Windows.UIElement>  
  
 Może bezpośrednio hostować nie więcej niż jeden <xref:System.Windows.UIElement> element podrzędny. <xref:System.Windows.Documents.InlineUIContainer>  Jednak element podrzędny obsługiwany przez <xref:System.Windows.Documents.InlineUIContainer> element może hostować elementy podrzędne.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Documents.InlineUIContainer> jak używać elementów do hostowania <xref:System.Windows.UIElement> elementów w zawartości przepływu.  
  
 [!code-xaml[SpanSnippets#_InlineUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_inlineuixaml)]  
  
 Na poniższej ilustracji przedstawiono sposób renderowania tego przykładu.  
  
 ![Zrzut ekranu Elementy UIElement osadzone na zrzucie]ekranu przepływu:(~/add/media/inlineuicontainer.png " Elementy UIElement osadzone w przepływie")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.BlockUIContainer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Documents.InlineUIContainer" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InlineUIContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.InlineUIContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InlineUIContainer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe, puste wystąpienie <see cref="T:System.Windows.Documents.InlineUIContainer" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InlineUIContainer (System.Windows.UIElement childUIElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement childUIElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childUIElement As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InlineUIContainer(System::Windows::UIElement ^ childUIElement);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.InlineUIContainer : System.Windows.UIElement -&gt; System.Windows.Documents.InlineUIContainer" Usage="new System.Windows.Documents.InlineUIContainer childUIElement" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="childUIElement" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="childUIElement">Obiekt określający początkową zawartość nowego <see cref="T:System.Windows.Documents.InlineUIContainer" />elementu. <see cref="T:System.Windows.UIElement" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Documents.InlineUIContainer" /> klasy, pobierając określony <see cref="T:System.Windows.UIElement" /> obiekt jako początkową zawartość nowego <see cref="T:System.Windows.Documents.InlineUIContainer" />elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje użycie tego konstruktora.  
  
 [!code-csharp[SpanSnippets#_InlineUI_Const1](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_inlineui_const1)]
 [!code-vb[SpanSnippets#_InlineUI_Const1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_inlineui_const1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InlineUIContainer (System.Windows.UIElement childUIElement, System.Windows.Documents.TextPointer insertionPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement childUIElement, class System.Windows.Documents.TextPointer insertionPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement,System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childUIElement As UIElement, insertionPosition As TextPointer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InlineUIContainer(System::Windows::UIElement ^ childUIElement, System::Windows::Documents::TextPointer ^ insertionPosition);" />
      <MemberSignature Language="F#" Value="new System.Windows.Documents.InlineUIContainer : System.Windows.UIElement * System.Windows.Documents.TextPointer -&gt; System.Windows.Documents.InlineUIContainer" Usage="new System.Windows.Documents.InlineUIContainer (childUIElement, insertionPosition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childUIElement" Type="System.Windows.UIElement" />
        <Parameter Name="insertionPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="childUIElement">Obiekt określający początkową zawartość nowego <see cref="T:System.Windows.Documents.InlineUIContainer" />elementu. <see cref="T:System.Windows.UIElement" />  Ten parametr może mieć <see langword="null" />stan, w którym nie <see cref="T:System.Windows.UIElement" /> wstawiono żadnego przypadku.</param>
        <param name="insertionPosition">Określenie pozycji wstawiania, w której ma zostać <see cref="T:System.Windows.Documents.InlineUIContainer" /> wstawiony element po utworzeniu lub <see langword="null" /> bez automatycznego wstawiania. <see cref="T:System.Windows.Documents.TextPointer" /></param>
        <summary>Inicjuje <see cref="T:System.Windows.Documents.InlineUIContainer" /> nowe wystąpienie klasy, pobierając określony <see cref="T:System.Windows.Documents.InlineUIContainer" /> <see cref="T:System.Windows.UIElement" /> obiekt jako początkową zawartość nowego i <see cref="T:System.Windows.Documents.TextPointer" /> określając pozycję wstawiania dla nowego <see cref="T:System.Windows.Documents.InlineUIContainer" /> elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje użycie tego konstruktora.  
  
 [!code-csharp[SpanSnippets#_InlineUI_Const2](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_inlineui_const2)]
 [!code-vb[SpanSnippets#_InlineUI_Const2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_inlineui_const2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.InlineUIContainer.Child" />
      <MemberSignature Language="VB.NET" Value="Public Property Child As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Child { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Child : System.Windows.UIElement with get, set" Usage="System.Windows.Documents.InlineUIContainer.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Windows.UIElement" /> hostowaną <see cref="T:System.Windows.Documents.InlineUIContainer" />przez.</summary>
        <value><see cref="T:System.Windows.UIElement" /> Obsługiwane<see cref="T:System.Windows.Documents.InlineUIContainer" />przez.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może bezpośrednio hostować nie więcej niż jeden <xref:System.Windows.UIElement> element podrzędny. <xref:System.Windows.Documents.InlineUIContainer>  Jednak element podrzędny obsługiwany przez <xref:System.Windows.Documents.InlineUIContainer> element może hostować elementy podrzędne.  
  
 W [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)], zawijanie <xref:System.Windows.UIElement> a w <xref:System.Windows.Documents.InlineUIContainer> jest równoważne ustawieniu, które <xref:System.Windows.UIElement> jest wartością <xref:System.Windows.Documents.InlineUIContainer.Child%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Documents.InlineUIContainer> jak używać elementów do hostowania <xref:System.Windows.UIElement> elementów w zawartości przepływu.  
  
 [!code-xaml[SpanSnippets#_InlineUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_inlineuixaml)]  
  
 Na poniższej ilustracji przedstawiono sposób renderowania tego przykładu.  
  
 ![Zrzut ekranu Elementy UIElement osadzone na zrzucie]ekranu przepływu:(~/add/media/inlineuicontainer.png " Elementy UIElement osadzone w przepływie")  
  
 Poniższy przykład pokazuje, <xref:System.Windows.Documents.InlineUIContainer.Child%2A> jak używać właściwości programowo.  
  
 [!code-csharp[SpanSnippets#_InlineUI_Child](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_inlineui_child)]
 [!code-vb[SpanSnippets#_InlineUI_Child](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_inlineui_child)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
