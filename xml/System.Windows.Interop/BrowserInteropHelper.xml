<Type Name="BrowserInteropHelper" FullName="System.Windows.Interop.BrowserInteropHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a1c767a2b6d7059759eaa0290d04b53d867c022" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69168536" /></Metadata><TypeSignature Language="C#" Value="public static class BrowserInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed BrowserInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.BrowserInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class BrowserInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class BrowserInteropHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type BrowserInteropHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Klasa pomocnika, która zawiera informacje o środowisku przeglądarki, w którym jest hostowana Aplikacja przeglądarki XAML (XBAP).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClientSite">
      <MemberSignature Language="C#" Value="public static object ClientSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object ClientSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.ClientSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ClientSite As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ ClientSite { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientSite : obj" Usage="System.Windows.Interop.BrowserInteropHelper.ClientSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca odwołanie do obiektu, którego można użyć w celu uzyskania dostępu do przeglądarki hosta za pośrednictwem interfejsów kontenera OLE (na przykład IOleClientSite:: getcontainerer ();).</summary>
        <value>Obiekt, do <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite" />którego można rzutować.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać ten obiekt. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HostScript">
      <MemberSignature Language="C#" Value="public static dynamic HostScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object HostScript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.HostScript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HostScript As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ HostScript { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostScript : obj" Usage="System.Windows.Interop.BrowserInteropHelper.HostScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt skryptu, który zapewnia dostęp do obiektu okna HTML, niestandardowych funkcji skryptów i zmiennych globalnych dla strony HTML, jeśli [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] znajduje się w ramce.</summary>
        <value>Obiekt skryptu, który zapewnia dostęp do obiektu okna HTML, niestandardowych funkcji skryptu i zmiennych globalnych dla strony HTML, jeśli [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] znajduje się w ramce; <see langword="null" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przy użyciu zwróconego <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> obiektu można uzyskać dostęp do właściwości, metod i zdarzeń obiektu okna HTML, wywołać funkcję skryptu bezpośrednio lub uzyskać dostęp do zmiennej globalnej. Składnia do uzyskiwania dostępu do tych elementów używa znanej notacji kropkowej.  
  
 Aby uzyskać więcej informacji na temat obiektu okna, zobacz [obiekt window](https://go.microsoft.com/fwlink/?LinkId=160274) w dokumentacji dynamicznej HTML (DHTML).  
  
 Właściwość <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> zwraca`null` , jeśli ramka jest przechodzenia do lokalizacji między domenami.  
  
 Tę funkcję można wyłączyć dla programu Internet Explorer, ustawiając wartość rejestru **ScriptInteropDisallow** . Aby uzyskać więcej informacji, zobacz [zabezpieczenia (WPF)](~/docs/framework/wpf/security-wpf.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób pobierania <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> obiektu i zamykania okna przeglądarki.  
  
 [!code-xaml[XbapBrowserInterop#1](~/samples/snippets/csharp/VS_Snippets_Wpf/xbapbrowserinterop/cs/page1.xaml#1)]  
[!code-csharp[XbapBrowserInterop#10](~/samples/snippets/csharp/VS_Snippets_Wpf/xbapbrowserinterop/cs/page1.xaml.cs#10)]
[!code-vb[XbapBrowserInterop#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/xbapbrowserinterop/vb/page1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowserHosted">
      <MemberSignature Language="C#" Value="public static bool IsBrowserHosted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsBrowserHosted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsBrowserHosted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsBrowserHosted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserHosted : bool" Usage="System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy bieżąca [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] aplikacja jest hostowana w przeglądarce.</summary>
        <value><see langword="true" />Jeśli aplikacja jest hostowana w przeglądarce; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może być hostem niezależny od i, w związku z czym, może być ładowany do kilku różnych typów hostów, w <xref:System.Windows.Controls.Frame>tym z <xref:System.Windows.Navigation.NavigationWindow>, a lub z przeglądarką. <xref:System.Windows.Controls.Page> Taka sytuacja może wystąpić, gdy istnieje zestaw biblioteki, który zawiera co najmniej jedną stronę, do której odwołuje się wiele autonomicznych i[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]umożliwia przeglądania () aplikacji hosta.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A?displayProperty=nameWithType> programu w celu ustalenia, <xref:System.Windows.Controls.Page> czy jest hostowany w przeglądarce.  
  
 [!code-csharp[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOBrowserInteropHelperSnippets/CSharp/Page1.xaml.cs#isbrowserhostedcode)]
 [!code-vb[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOBrowserInteropHelperSnippets/visualbasic/page1.xaml.vb#isbrowserhostedcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public static Uri Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.Source" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ Source { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri" Usage="System.Windows.Interop.BrowserInteropHelper.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lokalizację, z [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] której została uruchomiona aplikacja. [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</summary>
        <value>Dla lokalizacji [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] ,<see langword="null" />z której uruchomiono aplikację; w przeciwnym razie. <see cref="T:System.Uri" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera <xref:System.Uri> tylko dla[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] aplikacji. <xref:System.Windows.Interop.BrowserInteropHelper.Source%2A> Aby zapoznać się z <xref:System.Windows.Interop.BrowserInteropHelper.Source%2A> przykładem właściwości, zobacz. <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
