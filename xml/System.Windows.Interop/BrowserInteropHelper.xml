<Type Name="BrowserInteropHelper" FullName="System.Windows.Interop.BrowserInteropHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2852649ccc7b0cec9408fdc00398ef0b0a822a5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36504119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class BrowserInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed BrowserInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.BrowserInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class BrowserInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class BrowserInteropHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type BrowserInteropHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Klasa pomocy, który zawiera informacje o środowisku przeglądarki, w którym znajduje się aplikacja XAML (XBAP) aplikacji przeglądarki.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClientSite">
      <MemberSignature Language="C#" Value="public static object ClientSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object ClientSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.ClientSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ClientSite As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ ClientSite { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientSite : obj" Usage="System.Windows.Interop.BrowserInteropHelper.ClientSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca odwołanie do obiektu, który może być używane do dostępu w przeglądarce hosta za pośrednictwem interfejsy kontenera OLE (na przykład IOleClientSite::GetContainer();).</summary>
        <value>Obiekt, który mogą być rzutowane na <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać ten obiekt. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HostScript">
      <MemberSignature Language="C#" Value="public static dynamic HostScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object HostScript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.HostScript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HostScript As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ HostScript { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostScript : obj" Usage="System.Windows.Interop.BrowserInteropHelper.HostScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt skryptu, który zapewnia dostęp do okna obiektu kodu HTML, funkcje skryptu niestandardowego i zmienne globalne dla strony HTML, jeśli [! INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-XBAP-MD.MD)] znajduje się w ramce.</summary>
        <value>Obiekt skryptów, która zapewnia dostęp do okna obiektu kodu HTML, funkcje skryptu niestandardowego i zmienne globalne dla strony HTML, jeśli [! INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-XBAP-MD.MD)] znajduje się w ramce; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z zwróconego <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> obiektu, dostęp do właściwości, metod i zdarzeń obiektu okna HTML, bezpośrednio wywołać funkcję skryptu lub uzyskać dostępu do zmiennej globalnej. Składnia służąca do dostęp do tych elementów używa znanych kropkowego.  
  
 Aby uzyskać więcej informacji o obiekcie okna, zobacz [obiekt window](http://go.microsoft.com/fwlink/?LinkId=160274) w dokumentacji dynamiczne DHTML (HTML).  
  
 <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> Zwraca `null` Jeśli ramki jest przejście z lokalizacji między domenami.  
  
 Tę funkcję można wyłączyć dla programu Internet Explorer, ustawiając **ScriptInteropDisallow** wartości rejestru. Aby uzyskać więcej informacji, zobacz [zabezpieczeń (WPF)](~/docs/framework/wpf/security-wpf.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> obiektów i zamknięcie okna przeglądarki.  
  
 [!code-xaml[XbapBrowserInterop#1](~/samples/snippets/csharp/VS_Snippets_Wpf/xbapbrowserinterop/cs/page1.xaml#1)]  
[!code-csharp[XbapBrowserInterop#10](~/samples/snippets/csharp/VS_Snippets_Wpf/xbapbrowserinterop/cs/page1.xaml.cs#10)]
[!code-vb[XbapBrowserInterop#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/xbapbrowserinterop/vb/page1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowserHosted">
      <MemberSignature Language="C#" Value="public static bool IsBrowserHosted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsBrowserHosted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsBrowserHosted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsBrowserHosted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserHosted : bool" Usage="System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która określa, czy bieżący [! Aplikacja include[TLA#tla_winclient](~/includes/tlasharptla-winclient-MD.MD)] jest obsługiwane przeglądarki.</summary>
        <value>
          <see langword="true" /> Jeśli aplikacja jest przeglądarki hostowanej; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Controls.Page> może być niezależny od hosta i, w związku z tym może być załadowany do wielu różnych typów hostów, w tym <xref:System.Windows.Controls.Frame>, <xref:System.Windows.Navigation.NavigationWindow>, lub w przeglądarce. Może się to zdarzyć, jeśli masz w zestawie biblioteki, która zawiera jedną lub więcej stron, odwołuje się wiele autonomicznych i można przeglądać ([!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]) hostowania aplikacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A?displayProperty=nameWithType> można określić, czy <xref:System.Windows.Controls.Page> znajduje się w przeglądarce.  
  
 [!code-csharp[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOBrowserInteropHelperSnippets/CSharp/Page1.xaml.cs#isbrowserhostedcode)]
 [!code-vb[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOBrowserInteropHelperSnippets/visualbasic/page1.xaml.vb#isbrowserhostedcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public static Uri Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.BrowserInteropHelper.Source" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ Source { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri" Usage="System.Windows.Interop.BrowserInteropHelper.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera [! INCLUDE[TLA#tla_uri](~/includes/tlasharptla-URI-MD.MD)] dla lokalizacji, z której [! INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-XBAP-MD.MD)] aplikacja była uruchomiona.</summary>
        <value>
          <see cref="T:System.Uri" /> Dla lokalizacji, z której [! INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-XBAP-MD.MD)] aplikacja była uruchomiona; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Interop.BrowserInteropHelper.Source%2A> Właściwość zawiera tylko <xref:System.Uri> dla [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] aplikacji. Przykład <xref:System.Windows.Interop.BrowserInteropHelper.Source%2A> właściwości, zobacz <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>