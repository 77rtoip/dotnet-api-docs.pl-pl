<Type Name="D3DImage" FullName="System.Windows.Interop.D3DImage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="567efaf4215fbce1c4cbe8f4e48b7b00f9bdfe91" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69168509" /></Metadata><TypeSignature Language="C#" Value="public class D3DImage : System.Windows.Media.ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi D3DImage extends System.Windows.Media.ImageSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.D3DImage" />
  <TypeSignature Language="VB.NET" Value="Public Class D3DImage&#xA;Inherits ImageSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class D3DImage : System::Windows::Media::ImageSource" />
  <TypeSignature Language="F#" Value="type D3DImage = class&#xA;    inherit ImageSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ImageSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e3ad3-101">Zostanie <see cref="T:System.Windows.Media.ImageSource" /> wyświetlona powierzchnia modułu Direct3D utworzona przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-101">An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-102"><xref:System.Windows.Interop.D3DImage> Użyj klasy do hostowania zawartości Direct3D w aplikacji Windows Presentation Foundation (WPF).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-102">Use the <xref:System.Windows.Interop.D3DImage> class to host Direct3D content in a Windows Presentation Foundation (WPF) application.</span></span>  
  
 <span data-ttu-id="e3ad3-103">Wywołaj <xref:System.Windows.Interop.D3DImage>metodę, aby zmienić zawartość Direct3D wyświetlaną przez. <xref:System.Windows.Interop.D3DImage.Lock%2A></span><span class="sxs-lookup"><span data-stu-id="e3ad3-103">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the Direct3D content displayed by the <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="e3ad3-104">Wywołaj <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metodę, aby przypisać powierzchnię Direct3D do elementu <xref:System.Windows.Interop.D3DImage>.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-104">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to a <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="e3ad3-105">Wywołaj <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metodę, aby śledzić aktualizacje na powierzchnię Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-105">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to track updates to the Direct3D surface.</span></span> <span data-ttu-id="e3ad3-106">Wywołaj <xref:System.Windows.Interop.D3DImage.Unlock%2A> metodę, aby wyświetlić zmienione obszary.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-106">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to display the changed areas.</span></span>  
  
 <span data-ttu-id="e3ad3-107">Klasa zarządza dwoma buforami wyświetlania, które są nazywane buforem zapasowym i *buforem przednim*. \*\* <xref:System.Windows.Interop.D3DImage></span><span class="sxs-lookup"><span data-stu-id="e3ad3-107">The <xref:System.Windows.Interop.D3DImage> class manages two display buffers, which are called the *back buffer* and the *front buffer*.</span></span> <span data-ttu-id="e3ad3-108">Bufor zapasowy jest powierzchnią Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-108">The back buffer is your Direct3D surface.</span></span>  <span data-ttu-id="e3ad3-109">Zmiany buforu zapasowego są kopiowane do przodu do buforu przedniego podczas wywoływania <xref:System.Windows.Interop.D3DImage.Unlock%2A> metody, gdzie jest wyświetlana na sprzęcie.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-109">Changes to the back buffer are copied forward to the front buffer when you call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method, where it is displayed on the hardware.</span></span> <span data-ttu-id="e3ad3-110">Czasami bufor przedni jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-110">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="e3ad3-111">Brak dostępności może być spowodowany blokowaniem ekranu, wyłącznym aplikacjom Direct3D w trybie pełnoekranowym, przełączaniem użytkownika lub innymi działaniami systemowymi.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-111">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="e3ad3-112">W takim przypadku aplikacja WPF zostanie powiadomiona o obsłudze <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-112">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="e3ad3-113">Sposób, w jaki aplikacja reaguje na przedni bufor staje się niedostępny, zależy od tego, czy WPF jest włączona, aby wrócić do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-113">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="e3ad3-114"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Metoda ma Przeciążenie, które przyjmuje parametr, który określa, czy WPF powraca do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-114">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering"></a><span data-ttu-id="e3ad3-115">Reagowanie na niedostępny bufor przedni, gdy WPF nie powraca do renderowania oprogramowania</span><span class="sxs-lookup"><span data-stu-id="e3ad3-115">Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</span></span>  
 <span data-ttu-id="e3ad3-116">Po wywołaniu <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> przeciążenia lub <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> wywołaniu przeciążenia z `enableSoftwareFallback` parametrem ustawionym na `false`, system renderowania zwalnia jego odwołanie do buforu zapasowego, gdy bufor przedni jest niedostępny i nic nie jest stawia.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-116">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="e3ad3-117">Po ponownym udostępnieniu buforu przedniego system renderowania zgłasza zdarzenie, <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> aby powiadomić aplikację WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-117">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="e3ad3-118">Można utworzyć procedurę obsługi zdarzeń w celu ponownego <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> uruchomienia renderowania dla zdarzenia z prawidłową powierzchnią Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-118">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="e3ad3-119">Aby ponownie uruchomić Render, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-119">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering"></a><span data-ttu-id="e3ad3-120">Reagowanie na niedostępny bufor przedni, gdy WPF wraca do renderowania oprogramowania</span><span class="sxs-lookup"><span data-stu-id="e3ad3-120">Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</span></span>  
 <span data-ttu-id="e3ad3-121">Gdy wywołujesz <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> Przeciążenie `enableSoftwareFallback` z parametrem ustawionym na `true`, system renderowania zachowuje swoje odwołanie do buforu zapasowego, gdy bufor przedni jest niedostępny, więc nie ma potrzeby wywoływania <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> , gdy przód bufor jest ponownie dostępny.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-121">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="e3ad3-122">Mogą wystąpić sytuacje, w których urządzenie użytkownika staną się niedostępne.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-122">There may be situations where the user's device becomes unavailable.</span></span>  <span data-ttu-id="e3ad3-123">Gdy to nastąpi <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> , wywołaj odwołanie do wersji WPF do buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-123">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF's reference to the back buffer.</span></span>  <span data-ttu-id="e3ad3-124">Jeśli musisz zresetować urządzenie, <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Wywołaj `backBuffer` z parametrem ustawionym na `null`, a następnie ponownie wywołaj <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> polecenie `backBuffer` z ustawioną prawidłową powierzchnią Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-124">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with the `backBuffer` parameter set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3ad3-125">Wydajność zależy znacznie od ustawień powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-125">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="e3ad3-126">Aby uzyskać więcej informacji, zobacz Zagadnienia dotyczące [wydajności dla współdziałania Direct3D9 i WPF](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-126">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3ad3-127">Klasa nie wyświetla zawartości Direct3D, gdy program WPF renderuje w oprogramowaniu, na przykład za pośrednictwem połączenia pulpit zdalny, <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> chyba że `true` wywołasz `enableSoftwareFallback` i określisz dla parametru. <xref:System.Windows.Interop.D3DImage></span><span class="sxs-lookup"><span data-stu-id="e3ad3-127">The <xref:System.Windows.Interop.D3DImage> class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> and specify `true` for the `enableSoftwareFallback` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad3-128">Poniższy przykład kodu pokazuje, <xref:System.Windows.Interop.D3DImage> jak zadeklarować w języku XAML.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-128">The following code example shows how to declare a <xref:System.Windows.Interop.D3DImage> in XAML.</span></span> <span data-ttu-id="e3ad3-129">Należy zmapować <xref:System.Windows.Interop> przestrzeń nazw, ponieważ nie jest ona uwzględniona w domyślnych przestrzeniach nazw XAML.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-129">You must map the <xref:System.Windows.Interop> namespace, because it is not included in the default XAML namespaces.</span></span> <span data-ttu-id="e3ad3-130">Aby uzyskać więcej informacji, [zobacz Przewodnik: Hostowanie zawartości Direct3D9 w](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-130">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-xaml[System.Windows.Interop.D3DImage#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e3ad3-131">w celu uzyskania dostępu do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-131">for access to unmanaged resources.</span></span> <span data-ttu-id="e3ad3-132">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-132">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="e3ad3-133">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e3ad3-134">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Interop.D3DImage" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-134">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad3-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Interop.D3DImage" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-135">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-136">Domyślna rozdzielczość ekranu to 1/1/96 cala.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-136">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e3ad3-137">w celu uzyskania dostępu do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-137">for access to unmanaged resources.</span></span> <span data-ttu-id="e3ad3-138">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-138">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e3ad3-139">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage (double dpiX, double dpiY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 dpiX, float64 dpiY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dpiX As Double, dpiY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage(double dpiX, double dpiY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.D3DImage : double * double -&gt; System.Windows.Interop.D3DImage" Usage="new System.Windows.Interop.D3DImage (dpiX, dpiY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dpiX" Type="System.Double" />
        <Parameter Name="dpiY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dpiX"><span data-ttu-id="e3ad3-140">Rozdzielczość ekranu na osi x.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-140">The display resolution on the x-axis.</span></span></param>
        <param name="dpiY"><span data-ttu-id="e3ad3-141">Rozdzielczość ekranu na osi y.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-141">The display resolution on the y-axis.</span></span></param>
        <summary><span data-ttu-id="e3ad3-142">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Interop.D3DImage" /> klasy z określoną rozdzielczością wyświetlania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-142">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-143">Domyślna rozdzielczość ekranu to 1/1/96 cala.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-143">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3ad3-144"><paramref name="dpiX" />lub <paramref name="dpiY" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-144"><paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e3ad3-145">w celu uzyskania dostępu do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-145">for access to unmanaged resources.</span></span> <span data-ttu-id="e3ad3-146">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-146">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e3ad3-147">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-147">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="AddDirtyRect">
      <MemberSignature Language="C#" Value="public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDirtyRect(valuetype System.Windows.Int32Rect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDirtyRect (dirtyRect As Int32Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDirtyRect(System::Windows::Int32Rect dirtyRect);" />
      <MemberSignature Language="F#" Value="member this.AddDirtyRect : System.Windows.Int32Rect -&gt; unit" Usage="d3DImage.AddDirtyRect dirtyRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="System.Windows.Int32Rect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect"><span data-ttu-id="e3ad3-148"><see cref="T:System.Windows.Int32Rect" /> Reprezentuje obszar, który uległ zmianie.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-148">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</span></span></param>
        <summary><span data-ttu-id="e3ad3-149">Określa obszar buforu zaplecza, który został zmieniony.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-149">Specifies the area of the back buffer that changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-150">Wywołaj <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metodę, aby wskazać zmiany wprowadzone w buforze zapasowym.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-150">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to indicate changes your code has made to the back buffer.</span></span> <span data-ttu-id="e3ad3-151">Aby można było renderować zmieniony obszar w buforze zaplecza, musi on mieć odpowiednio zmieniony obszar w <xref:System.Windows.Interop.D3DImage>.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-151">To be rendered, the changed area on the back buffer must have a corresponding changed area on the <xref:System.Windows.Interop.D3DImage>.</span></span>  
  
 <span data-ttu-id="e3ad3-152">Przed wywołaniem <xref:System.Windows.Interop.D3DImage.Lock%2A> metody<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> wywołaj metody i. <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A></span><span class="sxs-lookup"><span data-stu-id="e3ad3-152">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> and <xref:System.Windows.Interop.D3DImage.Lock%2A> methods before calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="e3ad3-153">Wywołaj <xref:System.Windows.Interop.D3DImage.Unlock%2A> metodę, aby skopiować zmienione obszary do buforu przedniego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-153">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the changed areas to the front buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3ad3-154">Po kilku wywołaniach do <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metody, zmienione obszary są scalane w jeden obszar.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-154">After a few calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method, the changed areas are merged into a single area.</span></span> <span data-ttu-id="e3ad3-155">Oznacza to, że musisz mieć prawidłowe dane poza zmienionymi obszarami.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-155">This means you must have valid data outside of the changed areas.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad3-156">Poniższy przykład kodu pokazuje, jak wywołać metodę, <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> aby określić zmieniony region w buforze zaplecza.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-156">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to specify the changed region in the back buffer.</span></span> <span data-ttu-id="e3ad3-157">Aby uzyskać więcej informacji, [zobacz Przewodnik: Hostowanie zawartości Direct3D9 w](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-157">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e3ad3-158">Mapa bitowa nie została zablokowana przez wywołanie <see cref="M:System.Windows.Interop.D3DImage.Lock" /> metody lub. <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-158">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span>  
  
<span data-ttu-id="e3ad3-159">—lub—</span><span class="sxs-lookup"><span data-stu-id="e3ad3-159">-or-</span></span> 
<span data-ttu-id="e3ad3-160">Bufor do <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> tyłu nie został przypisany przez wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-160">The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3ad3-161">Co najmniej jeden z poniższych warunków ma wartość true.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-161">One or more of the following conditions is true.</span></span>  
  
 <span data-ttu-id="e3ad3-162"><paramref name="dirtyRect.X" /> &lt; 0</span><span class="sxs-lookup"><span data-stu-id="e3ad3-162"><paramref name="dirtyRect.X" /> &lt; 0</span></span> 
 <span data-ttu-id="e3ad3-163"><paramref name="dirtyRect.Y" /> &lt; 0</span><span class="sxs-lookup"><span data-stu-id="e3ad3-163"><paramref name="dirtyRect.Y" /> &lt; 0</span></span> 
 <span data-ttu-id="e3ad3-164"><paramref name="dirtyRect.Width" />&lt; 0 lub <paramref name="dirtyRect.Width" /> 0<paramref name="dirtyRect.Height" /> lub &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /> <paramref name="dirtyRect.Height" /> &lt; &gt;<see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-164"><paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e3ad3-165">w celu uzyskania dostępu do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-165">for access to unmanaged resources.</span></span> <span data-ttu-id="e3ad3-166">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-166">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e3ad3-167">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-167">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad3-168">Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Interop.D3DImage" /> obiektu, tworząc głębokie kopie wartości tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-168">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values.</span></span> <span data-ttu-id="e3ad3-169">Podczas kopiowania właściwości zależności ta metoda kopiuje odwołania do zasobów i powiązania danych (które mogą nie być już rozpoznawane), ale nie ma animacji ani ich bieżących wartości.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-169">When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="e3ad3-170">Modyfikowalny klon bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-170">A modifiable clone of the current object.</span></span> <span data-ttu-id="e3ad3-171"><see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była<see langword="true." /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-171">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-172">Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-172">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="e3ad3-173">Dla wygody ta metoda zaciemnienia dziedziczonej wersji z silnie wpisaną implementacją.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-173">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="e3ad3-174">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-174">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="e3ad3-175">Obiekt, który ma zostać sklonowany.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-175">The object to clone.</span></span></param>
        <summary><span data-ttu-id="e3ad3-176">Sprawia, że wystąpienie jest klonem (głębokiej kopii) <see cref="T:System.Windows.Freezable" /> określonej przy użyciu wartości właściwości Base (Nieanimowane).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-176">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad3-177">Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Interop.D3DImage" /> obiektu, tworząc głębokie kopie bieżących wartości tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-177">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="e3ad3-178">Odwołania do zasobów, powiązania danych i animacje nie są kopiowane, ale ich bieżące wartości są kopiowane.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-178">Resource references, data bindings, and animations are not copied, but their current values are copied.</span></span></summary>
        <returns><span data-ttu-id="e3ad3-179">Modyfikowalny klon bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-179">A modifiable clone of the current object.</span></span> <span data-ttu-id="e3ad3-180"><see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-180">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-181">Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-181">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="e3ad3-182">Dla wygody ta metoda zaciemnienia dziedziczonej wersji z silnie wpisaną implementacją.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-182">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="e3ad3-183">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-183">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="e3ad3-184"><see cref="T:System.Windows.Freezable" /> Do klonowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-184">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="e3ad3-185">Sprawia, że wystąpienie jest modyfikowalne klonowania (głębokiej kopii <see cref="T:System.Windows.Freezable" /> ) określonej przy użyciu bieżących wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-185">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackBuffer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Imaging.BitmapSource CopyBackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CopyBackBuffer () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Imaging::BitmapSource ^ CopyBackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource&#xA;override this.CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource" Usage="d3DImage.CopyBackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad3-186">Tworzy kopię <see cref="T:System.Windows.Interop.D3DImage" />oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-186">Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <returns><span data-ttu-id="e3ad3-187">To jest kopia oprogramowania bieżącego stanu buforu zapasowego; w przeciwnym razie, <see langword="null" /> Jeśli nie można odczytać buforu zapasowego. <see cref="T:System.Windows.Media.Imaging.BitmapSource" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-187">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, <see langword="null" /> if the back buffer cannot be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-188">Metoda jest wywoływana przez klientów, takich jak system drukowania <xref:System.Windows.Media.Imaging.RenderTargetBitmap> i Klasa. <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A></span><span class="sxs-lookup"><span data-stu-id="e3ad3-188">The <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method is called by clients such as the printing system and the <xref:System.Windows.Media.Imaging.RenderTargetBitmap> class.</span></span>  
  
 <span data-ttu-id="e3ad3-189">Opcjonalnie Zastąp <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> metodę, aby zaimplementować logikę niestandardową <xref:System.Windows.Media.Imaging.BitmapSource>i zwrócić inną.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-189">Optionally override the <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method to implement custom logic and return a different <xref:System.Windows.Media.Imaging.BitmapSource>.</span></span> <span data-ttu-id="e3ad3-190">Na przykład, można zwrócić symbol zastępczy <xref:System.Windows.Media.Imaging.BitmapSource> , jeśli domyślna <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementacja zwróci `null`wartość.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-190">For example, you can return a placeholder <xref:System.Windows.Media.Imaging.BitmapSource> if the default <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e3ad3-191">w celu uzyskania dostępu do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-191">for access to unmanaged resources.</span></span> <span data-ttu-id="e3ad3-192">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-192">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e3ad3-193">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-193">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="d3DImage.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad3-194">Po zaimplementowaniu w klasie pochodnej tworzy nowe wystąpienie <see cref="T:System.Windows.Interop.D3DImage" /> klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-194">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class.</span></span></summary>
        <returns><span data-ttu-id="e3ad3-195">Nowe wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-195">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-196">Jeśli pochodzi od <xref:System.Windows.Interop.D3DImage> klasy, należy <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> zastąpić metodę, aby włączyć poprawne klonowanie.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-196">If you derive from the <xref:System.Windows.Interop.D3DImage> class, you must override the <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> method to enable correct cloning.</span></span> <span data-ttu-id="e3ad3-197">Implementacja domyślna wykonuje `return new D3DImage()`, która nie będzie poprawna, jeśli wystąpienie jest inną klasą.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-197">The default implementation performs a `return new D3DImage()`, which will not be correct if the instance is a different class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!D3DImage ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="d3DImage.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad3-198">Zwalnia zasoby i wykonuje inne operacje czyszczenia przed <see cref="T:System.Windows.Interop.D3DImage" /> odzyskiwaniem przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-198">Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-199">Ta metoda przesłania <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-199">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="e3ad3-200">Kod aplikacji nie powinien wywoływać tej metody; `Finalize` metoda obiektu jest automatycznie wywoływana podczas wyrzucania elementów bezużytecznych, chyba że finalizacja przez moduł wyrzucania elementów bezużytecznych została wyłączona przez wywołanie <xref:System.GC.SuppressFinalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-200">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="e3ad3-201">Aby uzyskać więcej informacji, zobacz [finalizowanie metod i destruktorów](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), Oczyszczanie zasobów niezarządzanych i zastępowanie [metody Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)). [](~/docs/standard/garbage-collection/unmanaged.md)</span><span class="sxs-lookup"><span data-stu-id="e3ad3-201">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e3ad3-202">w celu uzyskania dostępu do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-202">for access to unmanaged resources.</span></span> <span data-ttu-id="e3ad3-203">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e3ad3-204">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override sealed bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="d3DImage.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="e3ad3-205">Nie ma żadnego wpływu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-205">Has no effect.</span></span></param>
        <summary><span data-ttu-id="e3ad3-206">Sprawia, <see cref="T:System.Windows.Interop.D3DImage" /> że nie można zmodyfikować lub określić, czy może być niemodyfikowalny.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-206">Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="e3ad3-207"><see langword="false" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-207"><see langword="false" /> in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-208">Klasa <xref:System.Windows.Interop.D3DImage> nie zezwala na zamrażanie, ponieważ zmiany są zawsze możliwe z powodu uzyskania dostępu do buforu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-208">The <xref:System.Windows.Interop.D3DImage> class does not allow freezing because changes are always possible due to front buffer availability.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="e3ad3-209">Wystąpienie, które ma zostać skopiowane.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-209">The instance to copy.</span></span></param>
        <summary><span data-ttu-id="e3ad3-210">Sprawia, że wystąpienie jest zablokowanym klonem <see cref="T:System.Windows.Freezable" /> określonego przy użyciu wartości właściwości Base (Nieanimowane).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-210">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="e3ad3-211"><see cref="T:System.Windows.Freezable" /> Do kopiowania i zablokowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-211">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="e3ad3-212">Sprawia, że bieżące wystąpienie jest zablokowanym klonem <see cref="T:System.Windows.Freezable" />określonego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-212">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="e3ad3-213">Jeśli obiekt ma animowane właściwości zależności, ich bieżące wartości animowane są kopiowane.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-213">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override sealed double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Interop.D3DImage.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3ad3-214">Pobiera wysokość <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-214">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="e3ad3-215">Wysokość <see cref="T:System.Windows.Interop.D3DImage" />, w jednostkach miary.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-215">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="e3ad3-216">Jednostka miary to 1/1/96 cala.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-216">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-217">Wartość <xref:System.Windows.Interop.D3DImage.Height%2A> może ulec zmianie, gdy nowy bufor zapasowy jest przypisywany przez wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-217">The value of <xref:System.Windows.Interop.D3DImage.Height%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailable">
      <MemberSignature Language="C#" Value="public bool IsFrontBufferAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrontBufferAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrontBufferAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrontBufferAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailable : bool" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3ad3-218">Pobiera wartość wskazującą, czy istnieje bufor przedni.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-218">Gets a value that indicates whether a front buffer exists.</span></span></summary>
        <value><span data-ttu-id="e3ad3-219"><see langword="true" />Jeśli istnieje bufor przedni; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-219"><see langword="true" /> if a front buffer exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-220">Czasami bufor przedni jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-220">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="e3ad3-221">Brak dostępności może być spowodowany blokowaniem ekranu, wyłącznym aplikacjom Direct3D w trybie pełnoekranowym, przełączaniem użytkownika lub innymi działaniami systemowymi.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-221">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="e3ad3-222">W takim przypadku aplikacja WPF zostanie powiadomiona o obsłudze <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-222">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="e3ad3-223">Sposób, w jaki aplikacja reaguje na przedni bufor staje się niedostępny, zależy od tego, czy WPF jest włączona, aby wrócić do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-223">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="e3ad3-224"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Metoda ma Przeciążenie, które przyjmuje parametr, który określa, czy WPF powraca do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-224">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="e3ad3-225">Aby uzyskać więcej informacji, zobacz uwagi w <xref:System.Windows.Interop.D3DImage> klasie.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-225">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
<a name="dependencyPropertyInfo_IsFrontBufferAvailable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e3ad3-226">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e3ad3-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e3ad3-227">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e3ad3-227">Identifier field</span></span>|<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty>|  
|<span data-ttu-id="e3ad3-228">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="e3ad3-228">Metadata properties set to `true`</span></span>|<span data-ttu-id="e3ad3-229">Brak</span><span class="sxs-lookup"><span data-stu-id="e3ad3-229">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e3ad3-230">Poniższy przykład kodu pokazuje, <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> jak sprawdzić właściwość podczas renderowania celu kompozycji.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-230">The following code example shows how to check the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> property when rendering the composition target.</span></span> <span data-ttu-id="e3ad3-231">Aby uzyskać więcej informacji, [zobacz Przewodnik: Hostowanie zawartości Direct3D9 w](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-231">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <altmember cref="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsFrontBufferAvailableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3ad3-232">Występuje, gdy <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> właściwość zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-232">Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-233">Obsługuj powiadomienie <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> , gdy zmieni się stan buforu przedniego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-233">Handle the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> to be notified when the status of the front buffer changes.</span></span> <span data-ttu-id="e3ad3-234">Sposób, w jaki aplikacja reaguje na przedni bufor staje się niedostępny, zależy od tego, czy WPF jest włączona, aby wrócić do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-234">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="e3ad3-235"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Metoda ma Przeciążenie, które przyjmuje parametr, który określa, czy WPF powraca do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-235">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="e3ad3-236">Aby uzyskać więcej informacji, zobacz uwagi w <xref:System.Windows.Interop.D3DImage> klasie.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-236">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrontBufferAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFrontBufferAvailableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFrontBufferAvailableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3ad3-237">Identyfikuje właściwość <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-237">Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="d3DImage.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad3-238">Blokuje operacje <see cref="T:System.Windows.Interop.D3DImage" /> i włącza w buforze zapasowym.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-238">Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-239"><xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Wywołaj <xref:System.Windows.Interop.D3DImage.Lock%2A> metodę, aby zmienić bufor zapasowy, wywołując metody i.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-239">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the back buffer by calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> and <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> methods.</span></span> <span data-ttu-id="e3ad3-240"><xref:System.Windows.Interop.D3DImage> Gdy jest zablokowany, aplikacja może również renderować do powierzchni Direct3D przypisanej do buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-240">While the <xref:System.Windows.Interop.D3DImage> is locked, your application can also render to the Direct3D surface assigned to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3ad3-241"><xref:System.Windows.Interop.D3DImage.Lock%2A> Metoda blokuje, gdy system renderowania odczytuje bufor zapasowy w celu zaktualizowania buforu przedniego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-241">The <xref:System.Windows.Interop.D3DImage.Lock%2A> method blocks when the rendering system is reading the back buffer to update the front buffer.</span></span> <span data-ttu-id="e3ad3-242">Użyj metody <xref:System.Windows.Interop.D3DImage.TryLock%2A> , aby zapobiec blokowaniu w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-242">Use the <xref:System.Windows.Interop.D3DImage.TryLock%2A> method to avoid blocking indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad3-243">Poniższy przykład kodu pokazuje, <xref:System.Windows.Interop.D3DImage.Lock%2A> jak wywołać metodę w celu włączenia aktualizacji buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-243">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to enable updates to the back buffer.</span></span> <span data-ttu-id="e3ad3-244">Aby uzyskać więcej informacji, [zobacz Przewodnik: Hostowanie zawartości Direct3D9 w](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-244">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e3ad3-245">Liczba blokad równa <see cref="F:System.UInt32.MaxValue" />się.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-245">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.ImageMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Metadata As ImageMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageMetadata ^ Metadata { System::Windows::Media::ImageMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Windows.Media.ImageMetadata" Usage="System.Windows.Interop.D3DImage.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3ad3-246">Pobiera metadane skojarzone ze źródłem obrazu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-246">Gets the metadata associated with the image source.</span></span></summary>
        <value><span data-ttu-id="e3ad3-247"><see langword="null" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-247"><see langword="null" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public int PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelHeight : int" Usage="System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3ad3-248">Pobiera wysokość <see cref="T:System.Windows.Interop.D3DImage" />(w pikselach).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-248">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="e3ad3-249">Wysokość <see cref="T:System.Windows.Interop.D3DImage" />(w pikselach).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-249">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-250">Wartość <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> może ulec zmianie, gdy nowy bufor zapasowy jest przypisywany przez wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-250">The value of <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad3-251">Poniższy przykład kodu pokazuje, jak użyć właściwości, <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> aby określić zmieniony region w buforze zapasowym.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-251">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="e3ad3-252">Aby uzyskać więcej informacji, [zobacz Przewodnik: Hostowanie zawartości Direct3D9 w](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-252">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public int PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelWidth : int" Usage="System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3ad3-253">Pobiera szerokość <see cref="T:System.Windows.Interop.D3DImage" />(w pikselach).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-253">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="e3ad3-254">Szerokość <see cref="T:System.Windows.Interop.D3DImage" />(w pikselach).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-254">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-255">Wartość <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> może ulec zmianie, gdy nowy bufor zapasowy jest przypisywany przez wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-255">The value of <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad3-256">Poniższy przykład kodu pokazuje, jak użyć właściwości, <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> aby określić zmieniony region w buforze zapasowym.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-256">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="e3ad3-257">Aby uzyskać więcej informacji, [zobacz Przewodnik: Hostowanie zawartości Direct3D9 w](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-257">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBackBuffer">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e3ad3-258">Przypisuje powierzchnię Direct3D jako źródło buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-258">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="e3ad3-259">Typ powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-259">The type of Direct3D surface.</span></span> <span data-ttu-id="e3ad3-260">Musi być prawidłowy <see cref="T:System.Windows.Interop.D3DResourceType" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-260">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="e3ad3-261">Powierzchnia Direct3D, która ma zostać przypisana jako bufor zapasowy.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-261">The Direct3D surface to assign as the back buffer.</span></span></param>
        <summary><span data-ttu-id="e3ad3-262">Przypisuje powierzchnię Direct3D jako źródło buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-262">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-263">Wywołaj <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metodę, aby przypisać powierzchnię Direct3D do buforu zaplecza.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-263">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3ad3-264">Wydajność zależy znacznie od ustawień powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-264">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="e3ad3-265">Aby uzyskać więcej informacji, zobacz Zagadnienia dotyczące [wydajności dla współdziałania Direct3D9 i WPF](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span><span class="sxs-lookup"><span data-stu-id="e3ad3-265">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
 <span data-ttu-id="e3ad3-266">Wywołanie przeciążenia jest identyczne z <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> wywołaniem przeciążenia z `enableSoftwareFallback` parametrem ustawionym na `false`. <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29></span><span class="sxs-lookup"><span data-stu-id="e3ad3-266">Calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload is identical to calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`.</span></span> <span data-ttu-id="e3ad3-267">W przypadku wywołania <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> lub wywołania <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> `enableSoftwareFallback` parametru`false`z ustawioną opcją, system renderowania zwalnia jego odwołanie do buforu zapasowego, gdy przedni bufor przestanie być dostępny i nic nie zostanie wyświetlone.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-267">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> or call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="e3ad3-268">Po ponownym udostępnieniu buforu przedniego system renderowania zgłasza zdarzenie, <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> aby powiadomić aplikację WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-268">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="e3ad3-269">Można utworzyć procedurę obsługi zdarzeń w celu ponownego <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> uruchomienia renderowania dla zdarzenia z prawidłową powierzchnią Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-269">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="e3ad3-270">Aby ponownie uruchomić Render, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-270">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="e3ad3-271">Na poniższej liście przedstawiono wymagane ustawienia buforu wstecznego dla tego `IDirect3DSurface9` typu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-271">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="e3ad3-272">`D3DFMT_A8R8G8B8` lub `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="e3ad3-272">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="e3ad3-273">Wielokrotne próbkowanie jest `IDirect3DSurface9Ex` dozwolone tylko na powierzchniach.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-273">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad3-274">Poniższy przykład kodu pokazuje, jak wywołać metodę, <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> aby przypisać powierzchnię Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-274">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface.</span></span> <span data-ttu-id="e3ad3-275">Aby uzyskać więcej informacji, [zobacz Przewodnik: Hostowanie zawartości Direct3D9 w](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-275">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e3ad3-276">Nie została zablokowana przez wywołanie <see cref="M:System.Windows.Interop.D3DImage.Lock" /> metody lub <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />. <see cref="T:System.Windows.Interop.D3DImage" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-276">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3ad3-277"><paramref name="backBufferType" />jest nieprawidłowy <see cref="T:System.Windows.Interop.D3DResourceType" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-277"><paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e3ad3-278">Parametry tworzenia dla programu <paramref name="backBuffer" /> nie spełniają wymagań <paramref name="backBufferType" />dla-lub- <paramref name="backBuffer" /> urządzenia są nieprawidłowe.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-278">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e3ad3-279">w celu uzyskania dostępu do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-279">for access to unmanaged resources.</span></span> <span data-ttu-id="e3ad3-280">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-280">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="e3ad3-281">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer, bool enableSoftwareFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr, enableSoftwareFallback As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint * bool -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer, enableSoftwareFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="backBuffer" Type="System.IntPtr" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enableSoftwareFallback" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="e3ad3-282">Typ powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-282">The type of Direct3D surface.</span></span> <span data-ttu-id="e3ad3-283">Musi być prawidłowy <see cref="T:System.Windows.Interop.D3DResourceType" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-283">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="e3ad3-284">Powierzchnia Direct3D, która ma zostać przypisana jako bufor zapasowy.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-284">The Direct3D surface to assign as the back buffer.</span></span></param>
        <param name="enableSoftwareFallback"><span data-ttu-id="e3ad3-285"><see langword="true" />Aby wrócić do renderowania oprogramowania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-285"><see langword="true" /> to fall back on software rendering; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e3ad3-286">Przypisuje powierzchnię Direct3D jako źródło buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-286">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-287">Po wywołaniu <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> przeciążenia lub <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> wywołaniu przeciążenia z `enableSoftwareFallback` parametrem ustawionym na `false`, system renderowania zwalnia jego odwołanie do buforu zapasowego, gdy bufor przedni jest niedostępny i nic nie jest stawia.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-287">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="e3ad3-288">Po ponownym udostępnieniu buforu przedniego system renderowania zgłasza zdarzenie, <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> aby powiadomić aplikację WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-288">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="e3ad3-289">Można utworzyć procedurę obsługi zdarzeń w celu ponownego <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> uruchomienia renderowania dla zdarzenia z prawidłową powierzchnią Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-289">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="e3ad3-290">Aby ponownie uruchomić Render, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-290">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="e3ad3-291">W przypadku wywołania <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> `enableSoftwareFallback` z parametrem ustawionym `true`na, system renderowania zachowuje odwołanie do buforu zapasowego, gdy bufor przedni jest niedostępny, więc nie ma potrzeby wywoływania <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> , gdy bufor przedni jest ponownie dostępne.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-291">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="e3ad3-292">Mogą wystąpić sytuacje, w których urządzenie użytkownika staną się niedostępne.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-292">There may be situations where the user's device becomes unavailable.</span></span>  <span data-ttu-id="e3ad3-293">Gdy to nastąpi <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> , wywołaj odwołanie do wersji WPF do buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-293">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF's reference to the back buffer.</span></span>  <span data-ttu-id="e3ad3-294">Jeśli musisz zresetować <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> urządzenie, wywołaj polecenie z `backBuffer` ustawionym na `null`, a następnie Wywołaj <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> ponownie `backBuffer` z ustawioną prawidłową powierzchnią Direct3D.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-294">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with `backBuffer` set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
 <span data-ttu-id="e3ad3-295">Na poniższej liście przedstawiono wymagane ustawienia buforu wstecznego dla tego `IDirect3DSurface9` typu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-295">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="e3ad3-296">`D3DFMT_A8R8G8B8` lub `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="e3ad3-296">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="e3ad3-297">Wielokrotne próbkowanie jest `IDirect3DSurface9Ex` dozwolone tylko na powierzchniach.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-297">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLock">
      <MemberSignature Language="C#" Value="public bool TryLock (System.Windows.Duration timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryLock(valuetype System.Windows.Duration timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryLock (timeout As Duration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryLock(System::Windows::Duration timeout);" />
      <MemberSignature Language="F#" Value="member this.TryLock : System.Windows.Duration -&gt; bool" Usage="d3DImage.TryLock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e3ad3-298">Czas oczekiwania na pozyskanie blokady.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-298">The duration to wait for the lock to be acquired.</span></span></param>
        <summary><span data-ttu-id="e3ad3-299">Próbuje zablokować <see cref="T:System.Windows.Interop.D3DImage" /> i czekać przez określony czas.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-299">Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</span></span></summary>
        <returns><span data-ttu-id="e3ad3-300"><see langword="true" />Jeśli blokada została pobrana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e3ad3-300"><see langword="true" /> if the lock was acquired; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e3ad3-301"><paramref name="timeout" />jest ustawiony na <see cref="P:System.Windows.Duration.Automatic" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-301"><paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e3ad3-302">Liczba blokad równa <see cref="F:System.UInt32.MaxValue" />się.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-302">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unlock();" />
      <MemberSignature Language="F#" Value="member this.Unlock : unit -&gt; unit" Usage="d3DImage.Unlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3ad3-303">Zmniejsza liczbę blokad dla <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-303">Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-304">Gdy liczba blokad dla <xref:System.Windows.Interop.D3DImage> osiągnie wartość zero <xref:System.Windows.Interop.D3DImage> , jest całkowicie odblokowany.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-304">When the lock count for the <xref:System.Windows.Interop.D3DImage> reaches zero, the <xref:System.Windows.Interop.D3DImage> is fully unlocked.</span></span> <span data-ttu-id="e3ad3-305">Jest <xref:System.Windows.Interop.D3DImage> oznaczona do renderowania, jeśli obraz zmienił obszary, które zostały określone przez poprzednie wywołania <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-305">The <xref:System.Windows.Interop.D3DImage> is marked for rendering if the image has changed areas that were specified by previous calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="e3ad3-306">Gdy zmiany zostaną zatwierdzone i wyrenderowanie, dodatkowe wywołania do <xref:System.Windows.Interop.D3DImage.Lock%2A> bloku metody do momentu, gdy wątek renderowania skopiował zawartość buforu zapasowego do buforu z przodu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-306">When the changes are committed and rendering occurs, additional calls to the <xref:System.Windows.Interop.D3DImage.Lock%2A> method block until the render thread has copied the contents of the back buffer to the front buffer.</span></span> <span data-ttu-id="e3ad3-307">Ta synchronizacja pozwala uniknąć wyświetlania artefaktów, takich jak rozerwanie.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-307">This synchronization avoids display artifacts, such as tearing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3ad3-308">Nie Aktualizuj powierzchni Direct3D podczas gdy <xref:System.Windows.Interop.D3DImage> jest odblokowany.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-308">Do not update the Direct3D surface while the <xref:System.Windows.Interop.D3DImage> is unlocked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3ad3-309">Poniższy przykład kodu pokazuje, jak wywołać metodę, <xref:System.Windows.Interop.D3DImage.Unlock%2A> aby skopiować zaktualizowany bufor do buforu z przodu.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-309">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the updated back buffer to the front buffer.</span></span> <span data-ttu-id="e3ad3-310">Aby uzyskać więcej informacji, [zobacz Przewodnik: Hostowanie zawartości Direct3D9 w](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)WPF.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-310">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override sealed double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Interop.D3DImage.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3ad3-311">Pobiera szerokość <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-311">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="e3ad3-312">Szerokość <see cref="T:System.Windows.Interop.D3DImage" />w jednostkach miary.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-312">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="e3ad3-313">Jednostka miary to 1/1/96 cala.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-313">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3ad3-314">Wartość <xref:System.Windows.Interop.D3DImage.Width%2A> może ulec zmianie, gdy nowy bufor zapasowy jest przypisywany przez wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e3ad3-314">The value of <xref:System.Windows.Interop.D3DImage.Width%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
  </Members>
</Type>
