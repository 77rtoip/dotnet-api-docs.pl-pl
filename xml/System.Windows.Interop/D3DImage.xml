<Type Name="D3DImage" FullName="System.Windows.Interop.D3DImage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cc1248aabec29304d60f073fd8a28292df0a374" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53462753" /></Metadata><TypeSignature Language="C#" Value="public class D3DImage : System.Windows.Media.ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi D3DImage extends System.Windows.Media.ImageSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.D3DImage" />
  <TypeSignature Language="VB.NET" Value="Public Class D3DImage&#xA;Inherits ImageSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class D3DImage : System::Windows::Media::ImageSource" />
  <TypeSignature Language="F#" Value="type D3DImage = class&#xA;    inherit ImageSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ImageSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="748be-101"><see cref="T:System.Windows.Media.ImageSource" /> Wyświetlającą powierzchni Direct3D utworzone przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="748be-101">An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-102">Użyj <xref:System.Windows.Interop.D3DImage> klasy, aby hostować zawartość Direct3D w aplikacji Windows Presentation Foundation (WPF).</span><span class="sxs-lookup"><span data-stu-id="748be-102">Use the <xref:System.Windows.Interop.D3DImage> class to host Direct3D content in a Windows Presentation Foundation (WPF) application.</span></span>  
  
 <span data-ttu-id="748be-103">Wywołaj <xref:System.Windows.Interop.D3DImage.Lock%2A> metodę, aby zmienić zawartość Direct3D, wyświetlane przez <xref:System.Windows.Interop.D3DImage>.</span><span class="sxs-lookup"><span data-stu-id="748be-103">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the Direct3D content displayed by the <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="748be-104">Wywołaj <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metodę, aby przypisać powierzchni Direct3D <xref:System.Windows.Interop.D3DImage>.</span><span class="sxs-lookup"><span data-stu-id="748be-104">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to a <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="748be-105">Wywołaj <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metodę śledzenie aktualizacji do powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-105">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to track updates to the Direct3D surface.</span></span> <span data-ttu-id="748be-106">Wywołaj <xref:System.Windows.Interop.D3DImage.Unlock%2A> metodę, aby wyświetlić obszary zmienione.</span><span class="sxs-lookup"><span data-stu-id="748be-106">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to display the changed areas.</span></span>  
  
 <span data-ttu-id="748be-107"><xref:System.Windows.Interop.D3DImage> Klasa zarządza dwóch bufory wyświetlania, które są nazywane *buforu zapasowego* i *frontonu buforu*.</span><span class="sxs-lookup"><span data-stu-id="748be-107">The <xref:System.Windows.Interop.D3DImage> class manages two display buffers, which are called the *back buffer* and the *front buffer*.</span></span> <span data-ttu-id="748be-108">Buforu zapasowego jest Twoja powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-108">The back buffer is your Direct3D surface.</span></span>  <span data-ttu-id="748be-109">Zmiany do buforu zapasowego są kopiowane do przodu w buforze frontonu po wywołaniu <xref:System.Windows.Interop.D3DImage.Unlock%2A> metody, w którym jest wyświetlana na sprzęcie.</span><span class="sxs-lookup"><span data-stu-id="748be-109">Changes to the back buffer are copied forward to the front buffer when you call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method, where it is displayed on the hardware.</span></span> <span data-ttu-id="748be-110">Od czasu do czasu frontonu buforu staje się niedostępny.</span><span class="sxs-lookup"><span data-stu-id="748be-110">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="748be-111">Ten brak dostępności może być spowodowane zablokowaniem ekranu, pełnego ekranu wyłączne Direct3D aplikacji, przełączanie użytkowników lub inne działania systemu.</span><span class="sxs-lookup"><span data-stu-id="748be-111">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="748be-112">W takiej sytuacji aplikacji środowiska WPF jest powiadamiany za pomocą obsługi <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="748be-112">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="748be-113">Jak aplikacja reaguje na przód buforu, staje się niedostępny, zależy od tego, czy WPF jest włączona w celu powrotu do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="748be-113">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="748be-114"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Metoda ma przeciążenia, które przyjmuje parametr, który określa, czy WPF powraca do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="748be-114">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering"></a><span data-ttu-id="748be-115">Odpowiadanie na niedostępne buforu frontonu, gdy WPF nie wrócił do oprogramowania renderowanie</span><span class="sxs-lookup"><span data-stu-id="748be-115">Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</span></span>  
 <span data-ttu-id="748be-116">Gdy wywołujesz <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> przeciążenia, lub zadzwoń <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> przeciążenia z `enableSoftwareFallback` parametr `false`, system renderowania zwalnia swoje odwołanie do buforu zapasowego, gdy front buforu jest niedostępny, a nie oznacza to wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="748be-116">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="748be-117">Podczas pierwszej bufor będzie znowu dostępna, system renderowania zgłosi <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzenia w celu powiadamiania aplikacji środowiska WPF.</span><span class="sxs-lookup"><span data-stu-id="748be-117">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="748be-118">Można utworzyć program obsługi zdarzeń dla <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzenie, aby ponownie uruchomić renderowania ponownie, podając prawidłowy powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-118">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="748be-119">Aby ponownie uruchomić renderowania, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span><span class="sxs-lookup"><span data-stu-id="748be-119">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering"></a><span data-ttu-id="748be-120">Odpowiadanie na niedostępne buforu frontonu, gdy wypada WPF z powrotem do renderowania oprogramowania</span><span class="sxs-lookup"><span data-stu-id="748be-120">Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</span></span>  
 <span data-ttu-id="748be-121">Gdy wywołujesz <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> przeciążenia z `enableSoftwareFallback` parametr `true`, system renderowania zachowuje jego odwołania do buforu zapasowego, gdy front buforu staje się niedostępny, więc nie trzeba wywoływać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> podczas frontonu Bufor jest ponownie dostępny.</span><span class="sxs-lookup"><span data-stu-id="748be-121">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="748be-122">Mogą wystąpić sytuacje, gdy urządzenie użytkownika staje się niedostępny.</span><span class="sxs-lookup"><span data-stu-id="748be-122">There may be situations where the user's device becomes unavailable.</span></span>  <span data-ttu-id="748be-123">Jeśli ma to miejsce, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> do wydania w WPF odwołania do buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-123">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF's reference to the back buffer.</span></span>  <span data-ttu-id="748be-124">Jeśli zajdzie potrzeba zresetowania urządzenia, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> z `backBuffer` parametr `null`, a następnie wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> ponownie, używając `backBuffer` ustawiony na prawidłowy powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-124">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with the `backBuffer` parameter set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="748be-125">Wydajność zależy w dużym stopniu ustawienia powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-125">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="748be-126">Aby uzyskać więcej informacji, zobacz [zagadnienia dotyczące współdziałania Direct3D9 i WPF](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span><span class="sxs-lookup"><span data-stu-id="748be-126">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="748be-127"><xref:System.Windows.Interop.D3DImage> Klasy po nie wyświetla zawartość Direct3D WPF powoduje wyświetlenie w oprogramowaniu, takie jak za pośrednictwem połączenia pulpitu zdalnego, chyba, że należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> i określ `true` dla `enableSoftwareFallback` parametru.</span><span class="sxs-lookup"><span data-stu-id="748be-127">The <xref:System.Windows.Interop.D3DImage> class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> and specify `true` for the `enableSoftwareFallback` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="748be-128">Poniższy przykład kodu pokazuje sposób deklarowania <xref:System.Windows.Interop.D3DImage> w XAML.</span><span class="sxs-lookup"><span data-stu-id="748be-128">The following code example shows how to declare a <xref:System.Windows.Interop.D3DImage> in XAML.</span></span> <span data-ttu-id="748be-129">Musisz dokonać mapowania <xref:System.Windows.Interop> przestrzeni nazw, ponieważ nie znajduje się w domyślnej przestrzeni nazw XAML.</span><span class="sxs-lookup"><span data-stu-id="748be-129">You must map the <xref:System.Windows.Interop> namespace, because it is not included in the default XAML namespaces.</span></span> <span data-ttu-id="748be-130">Aby uzyskać więcej informacji, zobacz [instruktażu: Hosting zawartości Direct3D9 w WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="748be-130">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-xaml[System.Windows.Interop.D3DImage#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="748be-131">Aby uzyskać dostęp do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="748be-131">for access to unmanaged resources.</span></span> <span data-ttu-id="748be-132">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="748be-132">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="748be-133">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="748be-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="748be-134">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Interop.D3DImage" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="748be-134">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="748be-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Interop.D3DImage" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="748be-135">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-136">Domyślnej rozdzielczości jest 1/96 cala.</span><span class="sxs-lookup"><span data-stu-id="748be-136">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="748be-137">Aby uzyskać dostęp do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="748be-137">for access to unmanaged resources.</span></span> <span data-ttu-id="748be-138">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="748be-138">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="748be-139">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="748be-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage (double dpiX, double dpiY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 dpiX, float64 dpiY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dpiX As Double, dpiY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage(double dpiX, double dpiY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.D3DImage : double * double -&gt; System.Windows.Interop.D3DImage" Usage="new System.Windows.Interop.D3DImage (dpiX, dpiY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dpiX" Type="System.Double" />
        <Parameter Name="dpiY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dpiX"><span data-ttu-id="748be-140">Rozdzielczość ekranu na osi x.</span><span class="sxs-lookup"><span data-stu-id="748be-140">The display resolution on the x-axis.</span></span></param>
        <param name="dpiY"><span data-ttu-id="748be-141">Rozdzielczość ekranu na osi y.</span><span class="sxs-lookup"><span data-stu-id="748be-141">The display resolution on the y-axis.</span></span></param>
        <summary><span data-ttu-id="748be-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Interop.D3DImage" /> klasie z atrybutem rozdzielczość ekranu określony.</span><span class="sxs-lookup"><span data-stu-id="748be-142">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-143">Domyślnej rozdzielczości jest 1/96 cala.</span><span class="sxs-lookup"><span data-stu-id="748be-143">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="748be-144"><paramref name="dpiX" /> lub <paramref name="dpiY" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="748be-144"><paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="748be-145">Aby uzyskać dostęp do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="748be-145">for access to unmanaged resources.</span></span> <span data-ttu-id="748be-146">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="748be-146">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="748be-147">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="748be-147">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="AddDirtyRect">
      <MemberSignature Language="C#" Value="public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDirtyRect(valuetype System.Windows.Int32Rect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDirtyRect (dirtyRect As Int32Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDirtyRect(System::Windows::Int32Rect dirtyRect);" />
      <MemberSignature Language="F#" Value="member this.AddDirtyRect : System.Windows.Int32Rect -&gt; unit" Usage="d3DImage.AddDirtyRect dirtyRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="System.Windows.Int32Rect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect"><span data-ttu-id="748be-148"><see cref="T:System.Windows.Int32Rect" /> Reprezentujący obszar, która się zmieniła.</span><span class="sxs-lookup"><span data-stu-id="748be-148">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</span></span></param>
        <summary><span data-ttu-id="748be-149">Określa obszar buforu zapasowego, która się zmieniła.</span><span class="sxs-lookup"><span data-stu-id="748be-149">Specifies the area of the back buffer that changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-150">Wywołaj <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metodę w celu wskazania zmiany kodu ma buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-150">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to indicate changes your code has made to the back buffer.</span></span> <span data-ttu-id="748be-151">Do renderowania, zmienionych obszar na buforu zapasowego musi mieć odpowiadający mu obszar zmienione na <xref:System.Windows.Interop.D3DImage>.</span><span class="sxs-lookup"><span data-stu-id="748be-151">To be rendered, the changed area on the back buffer must have a corresponding changed area on the <xref:System.Windows.Interop.D3DImage>.</span></span>  
  
 <span data-ttu-id="748be-152">Wywołaj <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> i <xref:System.Windows.Interop.D3DImage.Lock%2A> metody przed wywołaniem <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-152">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> and <xref:System.Windows.Interop.D3DImage.Lock%2A> methods before calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="748be-153">Wywołaj <xref:System.Windows.Interop.D3DImage.Unlock%2A> metoda kopiowania zmienione obszary do buforu frontonu.</span><span class="sxs-lookup"><span data-stu-id="748be-153">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the changed areas to the front buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="748be-154">Po kilku wywołania <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metody zmienione obszary są scalane w jednym obszarze.</span><span class="sxs-lookup"><span data-stu-id="748be-154">After a few calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method, the changed areas are merged into a single area.</span></span> <span data-ttu-id="748be-155">Oznacza to, czy masz prawidłowe dane poza zmienione obszary.</span><span class="sxs-lookup"><span data-stu-id="748be-155">This means you must have valid data outside of the changed areas.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="748be-156">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metodę, aby określić region zmienione w buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-156">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to specify the changed region in the back buffer.</span></span> <span data-ttu-id="748be-157">Aby uzyskać więcej informacji, zobacz [instruktażu: Hosting zawartości Direct3D9 w WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="748be-157">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="748be-158">Mapa bitowa nie został zablokowany przez wywołanie <see cref="M:System.Windows.Interop.D3DImage.Lock" /> lub <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-158">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span>  
  
<span data-ttu-id="748be-159">—lub—</span><span class="sxs-lookup"><span data-stu-id="748be-159">-or-</span></span> 
<span data-ttu-id="748be-160">Nie przypisano buforu zapasowego przez wywołanie <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-160">The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="748be-161">Co najmniej jeden z następujących warunków jest spełniony.</span><span class="sxs-lookup"><span data-stu-id="748be-161">One or more of the following conditions is true.</span></span>  
  
 <span data-ttu-id="748be-162"><paramref name="dirtyRect.X" /> &lt; 0</span><span class="sxs-lookup"><span data-stu-id="748be-162"><paramref name="dirtyRect.X" /> &lt; 0</span></span> 
 <span data-ttu-id="748be-163"><paramref name="dirtyRect.Y" /> &lt; 0</span><span class="sxs-lookup"><span data-stu-id="748be-163"><paramref name="dirtyRect.Y" /> &lt; 0</span></span> 
 <span data-ttu-id="748be-164"><paramref name="dirtyRect.Width" /> &lt; 0 lub <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /> <paramref name="dirtyRect.Height" /> &lt; 0 lub <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span><span class="sxs-lookup"><span data-stu-id="748be-164"><paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="748be-165">Aby uzyskać dostęp do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="748be-165">for access to unmanaged resources.</span></span> <span data-ttu-id="748be-166">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="748be-166">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="748be-167">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="748be-167">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="748be-168">Tworzy klon można modyfikować tego <see cref="T:System.Windows.Interop.D3DImage" /> obiektu, tworzenie kopii głębokiego wartości tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="748be-168">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values.</span></span> <span data-ttu-id="748be-169">Kopiowanie właściwości zależności, ta metoda kopiuje zasobów odwołania i powiązania danych (które mogą być już rozpoznawane), ale nie animacji lub ich bieżącymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="748be-169">When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="748be-170">Można modyfikować klonowania bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="748be-170">A modifiable clone of the current object.</span></span> <span data-ttu-id="748be-171">Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość będzie miała <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość <see langword="true." /></span><span class="sxs-lookup"><span data-stu-id="748be-171">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-172">Ta metoda jest używana do tworzenia kopii można modyfikować zamrożone <xref:System.Windows.Freezable> obiektów (lub dowolnego <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="748be-172">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="748be-173">Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.</span><span class="sxs-lookup"><span data-stu-id="748be-173">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="748be-174">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="748be-174">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="748be-175">Obiekt do klonowania.</span><span class="sxs-lookup"><span data-stu-id="748be-175">The object to clone.</span></span></param>
        <summary><span data-ttu-id="748be-176">Sprawia, że wystąpienie klonowania (głęboka kopia) określonego <see cref="T:System.Windows.Freezable" /> przy użyciu wartości podstawowej (bez animowane) właściwości.</span><span class="sxs-lookup"><span data-stu-id="748be-176">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="748be-177">Tworzy klon można modyfikować tego <see cref="T:System.Windows.Interop.D3DImage" /> obiektu, tworzenie kopii głębokiego wartości bieżących tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="748be-177">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="748be-178">Odwołania do zasobów, powiązań danych i animacji nie są kopiowane, ale ich bieżącymi wartościami są kopiowane.</span><span class="sxs-lookup"><span data-stu-id="748be-178">Resource references, data bindings, and animations are not copied, but their current values are copied.</span></span></summary>
        <returns><span data-ttu-id="748be-179">Można modyfikować klonowania bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="748be-179">A modifiable clone of the current object.</span></span> <span data-ttu-id="748be-180">Sklonowany obiekt <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość będzie miała <see langword="false" /> nawet wtedy, gdy źródło <see cref="P:System.Windows.Freezable.IsFrozen" /> właściwość <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="748be-180">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-181">Ta metoda jest używana do tworzenia kopii można modyfikować zamrożone <xref:System.Windows.Freezable> obiektów (lub dowolnego <xref:System.Windows.Freezable> obiektu).</span><span class="sxs-lookup"><span data-stu-id="748be-181">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="748be-182">Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.</span><span class="sxs-lookup"><span data-stu-id="748be-182">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="748be-183">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="748be-183">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="748be-184"><see cref="T:System.Windows.Freezable" /> Można sklonować.</span><span class="sxs-lookup"><span data-stu-id="748be-184">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="748be-185">Sprawia, że wystąpienie można modyfikować klonowania (głęboka kopia) określonego <see cref="T:System.Windows.Freezable" /> przy użyciu bieżącej wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="748be-185">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackBuffer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Imaging.BitmapSource CopyBackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CopyBackBuffer () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Imaging::BitmapSource ^ CopyBackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource&#xA;override this.CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource" Usage="d3DImage.CopyBackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="748be-186">Tworzy kopię oprogramowania <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="748be-186">Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <returns><span data-ttu-id="748be-187">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> czyli kopię oprogramowania bieżący stan buforu zapasowego; w przeciwnym razie <see langword="null" /> Jeśli nie można odczytać buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-187">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, <see langword="null" /> if the back buffer cannot be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-188"><xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> Metoda jest wywoływana przez klientów, takich jak system drukowania i <xref:System.Windows.Media.Imaging.RenderTargetBitmap> klasy.</span><span class="sxs-lookup"><span data-stu-id="748be-188">The <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method is called by clients such as the printing system and the <xref:System.Windows.Media.Imaging.RenderTargetBitmap> class.</span></span>  
  
 <span data-ttu-id="748be-189">Opcjonalnie zastąpić <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> metodę, aby zaimplementować logikę niestandardową i zwracają inną <xref:System.Windows.Media.Imaging.BitmapSource>.</span><span class="sxs-lookup"><span data-stu-id="748be-189">Optionally override the <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method to implement custom logic and return a different <xref:System.Windows.Media.Imaging.BitmapSource>.</span></span> <span data-ttu-id="748be-190">Na przykład, można zwrócić jego symbol zastępczy <xref:System.Windows.Media.Imaging.BitmapSource> Jeśli domyślna <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementacja zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="748be-190">For example, you can return a placeholder <xref:System.Windows.Media.Imaging.BitmapSource> if the default <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="748be-191">Aby uzyskać dostęp do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="748be-191">for access to unmanaged resources.</span></span> <span data-ttu-id="748be-192">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="748be-192">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="748be-193">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="748be-193">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="d3DImage.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="748be-194">Po zaimplementowaniu w klasie pochodnej tworzy nowe wystąpienie klasy <see cref="T:System.Windows.Interop.D3DImage" /> klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="748be-194">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class.</span></span></summary>
        <returns><span data-ttu-id="748be-195">Nowe wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="748be-195">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-196">W przypadku klasy wyprowadzonej z <xref:System.Windows.Interop.D3DImage> klasy, konieczne jest przesłonięcie <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> metodę, aby umożliwić poprawne klonowania.</span><span class="sxs-lookup"><span data-stu-id="748be-196">If you derive from the <xref:System.Windows.Interop.D3DImage> class, you must override the <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> method to enable correct cloning.</span></span> <span data-ttu-id="748be-197">Domyślna implementacja wykonuje `return new D3DImage()`, które nie będą poprawne, jeśli wystąpienie jest innej klasy.</span><span class="sxs-lookup"><span data-stu-id="748be-197">The default implementation performs a `return new D3DImage()`, which will not be correct if the instance is a different class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!D3DImage ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="d3DImage.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="748be-198">Zwalnia zasoby i wykonuje inne operacje oczyszczania przed <see cref="T:System.Windows.Interop.D3DImage" /> jest odzyskiwane przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="748be-198">Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-199">Ta metoda zastępuje <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="748be-199">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="748be-200">Kod aplikacji nie powinna wywołać tę metodę; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacja przez moduł garbage collector została wyłączona przez wywołanie <xref:System.GC.SuppressFinalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-200">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="748be-201">Aby uzyskać więcej informacji, zobacz [Finalize metody i destruktory](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="748be-201">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="748be-202">Aby uzyskać dostęp do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="748be-202">for access to unmanaged resources.</span></span> <span data-ttu-id="748be-203">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="748be-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="748be-204">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="748be-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override sealed bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="d3DImage.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="748be-205">Nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="748be-205">Has no effect.</span></span></param>
        <summary><span data-ttu-id="748be-206">Sprawia, że <see cref="T:System.Windows.Interop.D3DImage" /> niemodyfikowalnych lub określa, czy może on niemodyfikowalnych.</span><span class="sxs-lookup"><span data-stu-id="748be-206">Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="748be-207"><see langword="false" /> we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="748be-207"><see langword="false" /> in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-208"><xref:System.Windows.Interop.D3DImage> Klasy nie zezwala na zawiesza się, ponieważ zmiany są zawsze możliwe z powodu dostępności frontonu buforu.</span><span class="sxs-lookup"><span data-stu-id="748be-208">The <xref:System.Windows.Interop.D3DImage> class does not allow freezing because changes are always possible due to front buffer availability.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="748be-209">Wystąpienie do skopiowania.</span><span class="sxs-lookup"><span data-stu-id="748be-209">The instance to copy.</span></span></param>
        <summary><span data-ttu-id="748be-210">Sprawia, że wystąpienie zamrożone klonowania określonego <see cref="T:System.Windows.Freezable" /> przy użyciu wartości podstawowej (bez animowane) właściwości.</span><span class="sxs-lookup"><span data-stu-id="748be-210">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="748be-211"><see cref="T:System.Windows.Freezable" /> Do skopiowania i blokowanie.</span><span class="sxs-lookup"><span data-stu-id="748be-211">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="748be-212">Sprawia, że bieżące wystąpienie zamrożone klonowania określonego <see cref="T:System.Windows.Freezable" />.</span><span class="sxs-lookup"><span data-stu-id="748be-212">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="748be-213">Jeśli obiekt ma właściwości animowany zależności, są kopiowane ich bieżącymi wartościami animowany.</span><span class="sxs-lookup"><span data-stu-id="748be-213">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override sealed double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Interop.D3DImage.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="748be-214">Pobiera wysokość <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="748be-214">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="748be-215">Wysokość <see cref="T:System.Windows.Interop.D3DImage" />na mierzenie jednostek.</span><span class="sxs-lookup"><span data-stu-id="748be-215">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="748be-216">Jednostka miary jest 1/96 cala.</span><span class="sxs-lookup"><span data-stu-id="748be-216">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-217">Wartość <xref:System.Windows.Interop.D3DImage.Height%2A> można zmienić po przypisaniu nowych buforu zapasowego przez wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-217">The value of <xref:System.Windows.Interop.D3DImage.Height%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailable">
      <MemberSignature Language="C#" Value="public bool IsFrontBufferAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrontBufferAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrontBufferAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrontBufferAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailable : bool" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="748be-218">Pobiera wartość wskazującą, czy istnieje bufor frontonu.</span><span class="sxs-lookup"><span data-stu-id="748be-218">Gets a value that indicates whether a front buffer exists.</span></span></summary>
        <value><span data-ttu-id="748be-219"><see langword="true" /> Jeśli istnieje bufor frontonu w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="748be-219"><see langword="true" /> if a front buffer exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-220">Od czasu do czasu frontonu buforu staje się niedostępny.</span><span class="sxs-lookup"><span data-stu-id="748be-220">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="748be-221">Ten brak dostępności może być spowodowane zablokowaniem ekranu, pełnego ekranu wyłączne Direct3D aplikacji, przełączanie użytkowników lub inne działania systemu.</span><span class="sxs-lookup"><span data-stu-id="748be-221">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="748be-222">W takiej sytuacji aplikacji środowiska WPF jest powiadamiany za pomocą obsługi <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="748be-222">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="748be-223">Jak aplikacja reaguje na przód buforu, staje się niedostępny, zależy od tego, czy WPF jest włączona w celu powrotu do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="748be-223">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="748be-224"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Metoda ma przeciążenia, które przyjmuje parametr, który określa, czy WPF powraca do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="748be-224">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="748be-225">Aby uzyskać więcej informacji, zobacz uwagi w <xref:System.Windows.Interop.D3DImage> klasy.</span><span class="sxs-lookup"><span data-stu-id="748be-225">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
<a name="dependencyPropertyInfo_IsFrontBufferAvailable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="748be-226">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="748be-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="748be-227">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="748be-227">Identifier field</span></span>|<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty>|  
|<span data-ttu-id="748be-228">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="748be-228">Metadata properties set to `true`</span></span>|<span data-ttu-id="748be-229">Brak</span><span class="sxs-lookup"><span data-stu-id="748be-229">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="748be-230">Poniższy przykład kodu pokazuje, jak sprawdzić <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> właściwości podczas renderowania element docelowy kompozycji.</span><span class="sxs-lookup"><span data-stu-id="748be-230">The following code example shows how to check the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> property when rendering the composition target.</span></span> <span data-ttu-id="748be-231">Aby uzyskać więcej informacji, zobacz [instruktażu: Hosting zawartości Direct3D9 w WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="748be-231">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <altmember cref="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsFrontBufferAvailableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="748be-232">Występuje, gdy <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="748be-232">Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-233">Obsługa <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zgłaszane po zmianie stanu bufora frontonu.</span><span class="sxs-lookup"><span data-stu-id="748be-233">Handle the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> to be notified when the status of the front buffer changes.</span></span> <span data-ttu-id="748be-234">Jak aplikacja reaguje na przód buforu, staje się niedostępny, zależy od tego, czy WPF jest włączona w celu powrotu do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="748be-234">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="748be-235"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> Metoda ma przeciążenia, które przyjmuje parametr, który określa, czy WPF powraca do renderowania oprogramowania.</span><span class="sxs-lookup"><span data-stu-id="748be-235">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="748be-236">Aby uzyskać więcej informacji, zobacz uwagi w <xref:System.Windows.Interop.D3DImage> klasy.</span><span class="sxs-lookup"><span data-stu-id="748be-236">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrontBufferAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFrontBufferAvailableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFrontBufferAvailableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="748be-237">Identyfikuje <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="748be-237">Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="d3DImage.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="748be-238">Blokuje <see cref="T:System.Windows.Interop.D3DImage" /> i umożliwia wykonywanie operacji na buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-238">Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-239">Wywołaj <xref:System.Windows.Interop.D3DImage.Lock%2A> metodę, aby zmienić buforu zapasowego przez wywołanie metody <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> i <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-239">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the back buffer by calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> and <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> methods.</span></span> <span data-ttu-id="748be-240">Gdy <xref:System.Windows.Interop.D3DImage> jest zablokowany, aplikacja umożliwia również renderowanie na powierzchnię Direct3D przypisane do buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-240">While the <xref:System.Windows.Interop.D3DImage> is locked, your application can also render to the Direct3D surface assigned to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="748be-241"><xref:System.Windows.Interop.D3DImage.Lock%2A> Metoda zablokuje odczytuje system renderowania buforu zapasowego do zaktualizowania frontonu buforu.</span><span class="sxs-lookup"><span data-stu-id="748be-241">The <xref:System.Windows.Interop.D3DImage.Lock%2A> method blocks when the rendering system is reading the back buffer to update the front buffer.</span></span> <span data-ttu-id="748be-242">Użyj <xref:System.Windows.Interop.D3DImage.TryLock%2A> metodę, aby uniknąć blokowania na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="748be-242">Use the <xref:System.Windows.Interop.D3DImage.TryLock%2A> method to avoid blocking indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="748be-243">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Windows.Interop.D3DImage.Lock%2A> metodę, aby włączyć aktualizacje buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-243">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to enable updates to the back buffer.</span></span> <span data-ttu-id="748be-244">Aby uzyskać więcej informacji, zobacz [instruktażu: Hosting zawartości Direct3D9 w WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="748be-244">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="748be-245">Równa się liczbę blokad <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="748be-245">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.ImageMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Metadata As ImageMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageMetadata ^ Metadata { System::Windows::Media::ImageMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Windows.Media.ImageMetadata" Usage="System.Windows.Interop.D3DImage.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="748be-246">Pobiera metadane skojarzone z źródłem obrazu.</span><span class="sxs-lookup"><span data-stu-id="748be-246">Gets the metadata associated with the image source.</span></span></summary>
        <value><span data-ttu-id="748be-247"><see langword="null" /> we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="748be-247"><see langword="null" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public int PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelHeight : int" Usage="System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="748be-248">Pobiera wysokość <see cref="T:System.Windows.Interop.D3DImage" />, w pikselach.</span><span class="sxs-lookup"><span data-stu-id="748be-248">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="748be-249">Wysokość <see cref="T:System.Windows.Interop.D3DImage" />, w pikselach.</span><span class="sxs-lookup"><span data-stu-id="748be-249">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-250">Wartość <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> można zmienić po przypisaniu nowych buforu zapasowego przez wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-250">The value of <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="748be-251">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> właściwości w celu określenia zmienione regionu w buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-251">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="748be-252">Aby uzyskać więcej informacji, zobacz [instruktażu: Hosting zawartości Direct3D9 w WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="748be-252">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public int PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelWidth : int" Usage="System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="748be-253">Pobiera szerokość <see cref="T:System.Windows.Interop.D3DImage" />, w pikselach.</span><span class="sxs-lookup"><span data-stu-id="748be-253">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="748be-254">Szerokość <see cref="T:System.Windows.Interop.D3DImage" />, w pikselach.</span><span class="sxs-lookup"><span data-stu-id="748be-254">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-255">Wartość <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> można zmienić po przypisaniu nowych buforu zapasowego przez wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-255">The value of <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="748be-256">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> właściwości w celu określenia zmienione regionu w buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-256">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="748be-257">Aby uzyskać więcej informacji, zobacz [instruktażu: Hosting zawartości Direct3D9 w WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="748be-257">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBackBuffer">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="748be-258">Przypisuje powierzchni Direct3D jako źródło buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-258">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="748be-259">Typ powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-259">The type of Direct3D surface.</span></span> <span data-ttu-id="748be-260">Musi być prawidłowym <see cref="T:System.Windows.Interop.D3DResourceType" />.</span><span class="sxs-lookup"><span data-stu-id="748be-260">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="748be-261">Powierzchnia Direct3D zostać przypisana jako buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-261">The Direct3D surface to assign as the back buffer.</span></span></param>
        <summary><span data-ttu-id="748be-262">Przypisuje powierzchni Direct3D jako źródło buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-262">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-263">Wywołaj <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metodę, aby przypisać powierzchni Direct3D do buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-263">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="748be-264">Wydajność zależy w dużym stopniu ustawienia powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-264">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="748be-265">Aby uzyskać więcej informacji, zobacz [zagadnienia dotyczące współdziałania Direct3D9 i WPF](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span><span class="sxs-lookup"><span data-stu-id="748be-265">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
 <span data-ttu-id="748be-266">Wywoływanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> przeciążenie jest taka sama jak wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> przeciążenia z `enableSoftwareFallback` parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="748be-266">Calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload is identical to calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`.</span></span> <span data-ttu-id="748be-267">Gdy wywołujesz <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> lub zadzwoń <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> z `enableSoftwareFallback` parametr `false`, system renderowania zwalnia swoje odwołanie do buforu zapasowego, gdy front buforu staje się niedostępna i będą wyświetlane żadne informacje.</span><span class="sxs-lookup"><span data-stu-id="748be-267">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> or call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="748be-268">Podczas pierwszej bufor będzie znowu dostępna, system renderowania zgłosi <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzenia w celu powiadamiania aplikacji środowiska WPF.</span><span class="sxs-lookup"><span data-stu-id="748be-268">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="748be-269">Można utworzyć program obsługi zdarzeń dla <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzenie, aby ponownie uruchomić renderowania ponownie, podając prawidłowy powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-269">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="748be-270">Aby ponownie uruchomić renderowania, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span><span class="sxs-lookup"><span data-stu-id="748be-270">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="748be-271">Na poniższej liście przedstawiono ustawienia wymagane buforu zapasowego `IDirect3DSurface9` typu.</span><span class="sxs-lookup"><span data-stu-id="748be-271">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="748be-272">`D3DFMT_A8R8G8B8` lub `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="748be-272">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="748be-273">Povolen multisampling `IDirect3DSurface9Ex` wydobywa informacje dotyczące tylko.</span><span class="sxs-lookup"><span data-stu-id="748be-273">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="748be-274">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metodę, aby przypisać powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-274">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface.</span></span> <span data-ttu-id="748be-275">Aby uzyskać więcej informacji, zobacz [instruktażu: Hosting zawartości Direct3D9 w WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="748be-275">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="748be-276"><see cref="T:System.Windows.Interop.D3DImage" /> Nie został zablokowany przez wywołanie <see cref="M:System.Windows.Interop.D3DImage.Lock" /> lub <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-276">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="748be-277"><paramref name="backBufferType" /> nie jest prawidłowym <see cref="T:System.Windows.Interop.D3DResourceType" />.</span><span class="sxs-lookup"><span data-stu-id="748be-277"><paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="748be-278">Parametry tworzenia <paramref name="backBuffer" /> nie spełniają wymagań dotyczących <paramref name="backBufferType" />- lub - <paramref name="backBuffer" /> urządzenie nie jest prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="748be-278">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="748be-279">Aby uzyskać dostęp do zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="748be-279">for access to unmanaged resources.</span></span> <span data-ttu-id="748be-280">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="748be-280">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="748be-281">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="748be-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer, bool enableSoftwareFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr, enableSoftwareFallback As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint * bool -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer, enableSoftwareFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
        <Parameter Name="enableSoftwareFallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="748be-282">Typ powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-282">The type of Direct3D surface.</span></span> <span data-ttu-id="748be-283">Musi być prawidłowym <see cref="T:System.Windows.Interop.D3DResourceType" />.</span><span class="sxs-lookup"><span data-stu-id="748be-283">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="748be-284">Powierzchnia Direct3D zostać przypisana jako buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-284">The Direct3D surface to assign as the back buffer.</span></span></param>
        <param name="enableSoftwareFallback"><span data-ttu-id="748be-285"><see langword="true" /> Aby wrócić na temat renderowania oprogramowania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="748be-285"><see langword="true" /> to fall back on software rendering; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="748be-286">Przypisuje powierzchni Direct3D jako źródło buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-286">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-287">Gdy wywołujesz <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> przeciążenia, lub zadzwoń <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> przeciążenia z `enableSoftwareFallback` parametr `false`, system renderowania zwalnia swoje odwołanie do buforu zapasowego, gdy front buforu jest niedostępny, a nie oznacza to wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="748be-287">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="748be-288">Podczas pierwszej bufor będzie znowu dostępna, system renderowania zgłosi <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzenia w celu powiadamiania aplikacji środowiska WPF.</span><span class="sxs-lookup"><span data-stu-id="748be-288">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="748be-289">Można utworzyć program obsługi zdarzeń dla <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> zdarzenie, aby ponownie uruchomić renderowania ponownie, podając prawidłowy powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-289">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="748be-290">Aby ponownie uruchomić renderowania, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span><span class="sxs-lookup"><span data-stu-id="748be-290">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="748be-291">Podczas wywoływania <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> z `enableSoftwareFallback` parametr `true`, system renderowania zachowuje jego odwołania do buforu zapasowego, gdy front buforu staje się niedostępny, więc nie trzeba wywoływać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> po pierwszej buforu dostępne ponownie.</span><span class="sxs-lookup"><span data-stu-id="748be-291">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="748be-292">Mogą wystąpić sytuacje, gdy urządzenie użytkownika staje się niedostępny.</span><span class="sxs-lookup"><span data-stu-id="748be-292">There may be situations where the user's device becomes unavailable.</span></span>  <span data-ttu-id="748be-293">Jeśli ma to miejsce, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> do wydania w WPF odwołania do buforu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="748be-293">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF's reference to the back buffer.</span></span>  <span data-ttu-id="748be-294">Jeśli zajdzie potrzeba zresetowania urządzenia, należy wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> z `backBuffer` równa `null`, a następnie wywołać <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> ponownie, używając `backBuffer` ustawiony na prawidłowy powierzchni Direct3D.</span><span class="sxs-lookup"><span data-stu-id="748be-294">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with `backBuffer` set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
 <span data-ttu-id="748be-295">Na poniższej liście przedstawiono ustawienia wymagane buforu zapasowego `IDirect3DSurface9` typu.</span><span class="sxs-lookup"><span data-stu-id="748be-295">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="748be-296">`D3DFMT_A8R8G8B8` lub `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="748be-296">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="748be-297">Povolen multisampling `IDirect3DSurface9Ex` wydobywa informacje dotyczące tylko.</span><span class="sxs-lookup"><span data-stu-id="748be-297">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLock">
      <MemberSignature Language="C#" Value="public bool TryLock (System.Windows.Duration timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryLock(valuetype System.Windows.Duration timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryLock (timeout As Duration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryLock(System::Windows::Duration timeout);" />
      <MemberSignature Language="F#" Value="member this.TryLock : System.Windows.Duration -&gt; bool" Usage="d3DImage.TryLock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="748be-298">Czas trwania oczekiwania na blokadę, aby ją pobrać.</span><span class="sxs-lookup"><span data-stu-id="748be-298">The duration to wait for the lock to be acquired.</span></span></param>
        <summary><span data-ttu-id="748be-299">Próbuje zablokować <see cref="T:System.Windows.Interop.D3DImage" /> i czeka na określony czas trwania.</span><span class="sxs-lookup"><span data-stu-id="748be-299">Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</span></span></summary>
        <returns><span data-ttu-id="748be-300"><see langword="true" /> Jeśli blokada została uzyskana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="748be-300"><see langword="true" /> if the lock was acquired; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="748be-301"><paramref name="timeout" /> ustawiono <see cref="P:System.Windows.Duration.Automatic" />.</span><span class="sxs-lookup"><span data-stu-id="748be-301"><paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="748be-302">Równa się liczbę blokad <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="748be-302">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unlock();" />
      <MemberSignature Language="F#" Value="member this.Unlock : unit -&gt; unit" Usage="d3DImage.Unlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="748be-303">Zmniejsza liczbę blokad dla <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="748be-303">Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-304">Gdy blokada jest uznawane za <xref:System.Windows.Interop.D3DImage> osiągnie zero, <xref:System.Windows.Interop.D3DImage> jest w pełni odblokowane.</span><span class="sxs-lookup"><span data-stu-id="748be-304">When the lock count for the <xref:System.Windows.Interop.D3DImage> reaches zero, the <xref:System.Windows.Interop.D3DImage> is fully unlocked.</span></span> <span data-ttu-id="748be-305"><xref:System.Windows.Interop.D3DImage> Jest oznaczony do renderowania, jeśli obraz został zmieniony na obszary, które zostały określone przez poprzednie wywołania <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-305">The <xref:System.Windows.Interop.D3DImage> is marked for rendering if the image has changed areas that were specified by previous calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="748be-306">Gdy zmiany zostaną zatwierdzone i występuje renderowania, dodatkowych połączeń do <xref:System.Windows.Interop.D3DImage.Lock%2A> bloku metody, aż wątek renderowania została skopiowana zawartość buforu zapasowego w buforze frontonu.</span><span class="sxs-lookup"><span data-stu-id="748be-306">When the changes are committed and rendering occurs, additional calls to the <xref:System.Windows.Interop.D3DImage.Lock%2A> method block until the render thread has copied the contents of the back buffer to the front buffer.</span></span> <span data-ttu-id="748be-307">Wykonanie synchronizacji pozwala uniknąć wyświetlania artefaktów, takich jak przerwanie.</span><span class="sxs-lookup"><span data-stu-id="748be-307">This synchronization avoids display artifacts, such as tearing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="748be-308">Nie są uaktualniane powierzchni Direct3D podczas <xref:System.Windows.Interop.D3DImage> jest odblokowane.</span><span class="sxs-lookup"><span data-stu-id="748be-308">Do not update the Direct3D surface while the <xref:System.Windows.Interop.D3DImage> is unlocked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="748be-309">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Windows.Interop.D3DImage.Unlock%2A> metodę, aby skopiować zaktualizowane buforu zapasowego w buforze frontonu.</span><span class="sxs-lookup"><span data-stu-id="748be-309">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the updated back buffer to the front buffer.</span></span> <span data-ttu-id="748be-310">Aby uzyskać więcej informacji, zobacz [instruktażu: Hosting zawartości Direct3D9 w WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="748be-310">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override sealed double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Interop.D3DImage.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="748be-311">Pobiera szerokość <see cref="T:System.Windows.Interop.D3DImage" />.</span><span class="sxs-lookup"><span data-stu-id="748be-311">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="748be-312">Szerokość <see cref="T:System.Windows.Interop.D3DImage" />na mierzenie jednostek.</span><span class="sxs-lookup"><span data-stu-id="748be-312">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="748be-313">Jednostka miary jest 1/96 cala.</span><span class="sxs-lookup"><span data-stu-id="748be-313">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="748be-314">Wartość <xref:System.Windows.Interop.D3DImage.Width%2A> można zmienić po przypisaniu nowych buforu zapasowego przez wywołanie <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="748be-314">The value of <xref:System.Windows.Interop.D3DImage.Width%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
  </Members>
</Type>