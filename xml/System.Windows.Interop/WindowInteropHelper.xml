<Type Name="WindowInteropHelper" FullName="System.Windows.Interop.WindowInteropHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="492213104b0f184cf0ecaffdd93a2b0d6ad1a860" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30708926" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WindowInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.WindowInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowInteropHelper sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8b171-101">Ułatwia współdziałanie między Windows Presentation Foundation (WPF) i systemu Win32.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b171-101">Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b171-102">Elementy członkowskie tej klasy umożliwia obiekt wywołujący, aby korzystać z wewnętrznego [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND i element nadrzędny HWND z [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="8b171-102">Members of this class allows the caller to have internal access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND and the parent HWND of a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span></span>  <span data-ttu-id="8b171-103">Właściwe zabezpieczenia są sprawdzane przez te elementy członkowskie.</span><span class="sxs-lookup"><span data-stu-id="8b171-103">The proper security checks are performed by those members.</span></span>  
  
 <span data-ttu-id="8b171-104">Jeśli potrzebne jest bardziej szczegółowe obiektu, w oparciu o jego właściwości HWND, należy użyć tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8b171-104">Use this class whenever you need a more specific object based on its HWND.</span></span>  
  
 <span data-ttu-id="8b171-105">Przykładowy scenariusz jest muszą obsługiwać [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] okno dialogowe w [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8b171-105">An example scenario is if you need to host a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span> <span data-ttu-id="8b171-106">Inicjowanie <xref:System.Windows.Interop.WindowInteropHelper> z [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] obiektu okna dla okna dialogowego.</span><span class="sxs-lookup"><span data-stu-id="8b171-106">Initialize the <xref:System.Windows.Interop.WindowInteropHelper> with a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object for the dialog box.</span></span> <span data-ttu-id="8b171-107">Następnie można uzyskać [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] uchwyt okna (HWND) z <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> właściwości i określ właściciela dla [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] okna z <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8b171-107">You can then get the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window's handle (HWND) from the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property and specify the owner for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window with the <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> property.</span></span> <span data-ttu-id="8b171-108">Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Windows.Interop.WindowInteropHelper> odnośnie do hostowania [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] okno dialogowe w [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8b171-108">The following code example shows how to use <xref:System.Windows.Interop.WindowInteropHelper> when hosting a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 [!code-csharp[CorePseudocode#WindowInteropHelper](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#windowinterophelper)]
 [!code-vb[CorePseudocode#WindowInteropHelper](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#windowinterophelper)]  
  
 <span data-ttu-id="8b171-109">Innym scenariuszu obsługiwane przez tę klasę jest uzyskanie <xref:System.Windows.Interop.HwndSource> obiekt z [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> obiektu.</span><span class="sxs-lookup"><span data-stu-id="8b171-109">Another scenario supported by this class is to obtain a <xref:System.Windows.Interop.HwndSource> object from a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> object.</span></span> <span data-ttu-id="8b171-110"><xref:System.Windows.Interop.HwndSource> Umożliwia bezpośrednie przetwarzania [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] komunikaty za pośrednictwem <xref:System.Windows.Interop.HwndSource.AddHook%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8b171-110">The <xref:System.Windows.Interop.HwndSource> enables direct processing of [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] messages through the <xref:System.Windows.Interop.HwndSource.AddHook%2A> method.</span></span> <span data-ttu-id="8b171-111">Za pomocą <xref:System.Windows.Interop.HwndSource> i <xref:System.Windows.Interop.HwndSource.AddHook%2A> zamiast <xref:System.Windows.Window> może nadal obsługiwać wiadomości, których nie jest równorzędny lub obsługi w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8b171-111">By using <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndSource.AddHook%2A> in place of a <xref:System.Windows.Window> you can still handle messages that have no equivalent or handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="8b171-112">Utwórz <xref:System.Windows.Interop.WindowInteropHelper> z <xref:System.Windows.Window> źródła, a następnie wywołaj <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> na <xref:System.Windows.Interop.WindowInteropHelper> można pobrać z HWND do <xref:System.Windows.Interop.HwndSource>.</span><span class="sxs-lookup"><span data-stu-id="8b171-112">Create a <xref:System.Windows.Interop.WindowInteropHelper> with the <xref:System.Windows.Window> source, then call <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> on the <xref:System.Windows.Interop.WindowInteropHelper> to get from HWND to <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Window" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowInteropHelper (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowInteropHelper(System::Windows::Window ^ window);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window">
          <span data-ttu-id="8b171-113">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] obiekt window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-113">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b171-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Interop.WindowInteropHelper" /> klasy dla określonej [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] okna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b171-115">Można okna dialogowego lub okna, który nie jest przeznaczony do hostowania w granicach [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8b171-115">The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureHandle">
      <MemberSignature Language="C#" Value="public IntPtr EnsureHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int EnsureHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr EnsureHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b171-116">Tworzy HWND okna, jeśli HWND nie została jeszcze utworzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-116">Creates the HWND of the window if the HWND has not been created yet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b171-117">
            <see cref="T:System.IntPtr" /> Reprezentujący HWND.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-117">An <see cref="T:System.IntPtr" /> that represents the HWND.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b171-118">Użyj <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metody, aby oddzielić okna dojścia (HWND) tworzenia z rzeczywistego przedstawiający zarządzanej <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="8b171-118">Use the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when you want to separate window handle (HWND) creation from the actual showing of the managed <xref:System.Windows.Window>.</span></span> <span data-ttu-id="8b171-119">Jest to przydatne, gdy klient automatyzacji, który można wykonywać zadań bez konieczności przedstawiający okno.</span><span class="sxs-lookup"><span data-stu-id="8b171-119">This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</span></span>  
  
 <span data-ttu-id="8b171-120">Jeśli okno natywnego nie został utworzony, ta metoda tworzy okno natywnych zestawów <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> właściwości i zwraca HWND.</span><span class="sxs-lookup"><span data-stu-id="8b171-120">If the native window has not yet been created, this method creates the native window, sets the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property, and returns the HWND.</span></span> <span data-ttu-id="8b171-121">Jeśli utworzono już natywnego okna, jest zwracana uchwyt okna istniejących natywnych.</span><span class="sxs-lookup"><span data-stu-id="8b171-121">If the native window has been created already, the handle of the existing native window is returned.</span></span>  
  
 <span data-ttu-id="8b171-122">Natywny okna zostanie utworzony w wyniku wywołaniem tej metody <xref:System.Windows.Window.SourceInitialized> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="8b171-122">If the native window is created as a result of calling this method, the <xref:System.Windows.Window.SourceInitialized> event is raised.</span></span>  
  
 <span data-ttu-id="8b171-123">Wykonywanie zapytania <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> właściwości po <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> wywoływana jest metoda zwraca istniejących uchwytu okna.</span><span class="sxs-lookup"><span data-stu-id="8b171-123">Querying the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called returns the existing window handle.</span></span> <span data-ttu-id="8b171-124">Drzewa wizualnego nie jest dołączony do okna dopiero po <xref:System.Windows.Window.Show%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="8b171-124">The visual tree is not attached to the window until after the <xref:System.Windows.Window.Show%2A> method is called.</span></span>  
  
 <span data-ttu-id="8b171-125">Wywoływanie <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metoda więcej niż jeden raz nie powoduje utworzenia nowego dojścia do okna.</span><span class="sxs-lookup"><span data-stu-id="8b171-125">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method more than one time does not create new window handles.</span></span> <span data-ttu-id="8b171-126">Wywoływanie <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metody, gdy uchwyt został już utworzony przez wywołanie do <xref:System.Windows.Window.Show%2A> metoda nie powoduje utworzenia nowego uchwytu okna.</span><span class="sxs-lookup"><span data-stu-id="8b171-126">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when the handle has already been created by a call to the <xref:System.Windows.Window.Show%2A> method does not create a new window handle.</span></span> <span data-ttu-id="8b171-127">Natywny okna jest tworzony tylko, gdy uchwyt nie istnieje podczas <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="8b171-127">A native window is only created when no handle exists when the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called.</span></span>  
  
 <span data-ttu-id="8b171-128">Okno właściwości, które są skonfigurowane przy użyciu okna natywnych interfejsów API za pomocą p/invoke nie może występować w oknie zarządzanych interfejsów API.</span><span class="sxs-lookup"><span data-stu-id="8b171-128">Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</span></span> <span data-ttu-id="8b171-129">Na przykład jeśli ustawisz okna do najwyższego poziomu przy użyciu natywnych flagi MS_EX_TOPMOST po <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> metoda jest wywoływana, <xref:System.Windows.Window.Topmost%2A> właściwości nie jest gwarantowana w celu odzwierciedlenia natywnego ustawienie.</span><span class="sxs-lookup"><span data-stu-id="8b171-129">For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called, the <xref:System.Windows.Window.Topmost%2A> property is not guaranteed to reflect the native setting.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8b171-130">Aby utworzyć i zapisać uchwytu okna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-130">to create and access a window handle.</span>
          </span>
          <span data-ttu-id="8b171-131">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-131">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b171-132">Pobiera uchwytu okna dla [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] okna, który jest używany do tworzenia to <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-132">Gets the window handle for a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b171-133">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Uchwyt okna (HWND).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-133">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window handle (HWND).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8b171-134">Aby uzyskać uchwytu okna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-134">to obtain a window handle.</span>
          </span>
          <span data-ttu-id="8b171-135">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public IntPtr Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Owner { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b171-136">Pobiera lub ustawia dojście [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] okno właściciela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-136">Gets or sets the handle of the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] owner window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b171-137">Uchwyt okna właściciela (HWND).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-137">The owner window handle (HWND).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b171-138">Przez ustawienie dla tej właściwości można zmienić elementu nadrzędnego systemu windows.</span><span class="sxs-lookup"><span data-stu-id="8b171-138">You can reparent windows by setting this property.</span></span> <span data-ttu-id="8b171-139">Jak ma wartość true w przypadku ogólnych [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] programowania, nie nadrzędne systemu windows, które są już używane.</span><span class="sxs-lookup"><span data-stu-id="8b171-139">As is true for general [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] programming, do not reparent windows that are already in use.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="8b171-140">można pobrać lub ustawić wartość tej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-140">to get or set this property value.</span>
          </span>
          <span data-ttu-id="8b171-141">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8b171-141">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
  </Members>
</Type>