<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3120cf880fee3bfbee4ccce673b07364bc06400a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30709139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia zbiornik klawiatury dla składników, które zarządza klawisza TAB, akceleratory i klawiszy skrótu bariery międzyoperacyjnego i od parametrów hWnd. Ten interfejs implementuje zarządzania komunikatów klawiatury w scenariuszach współdziałanie z WPF Win32.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zbiornik klawiatury obsługi danych wejściowych z określonym podzbiór ogólny model wejściowych klawiatury dla [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] i [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]i umożliwia niektóre klawiatury do przetwarzania i Przekierowanie do parametrów hWnd innego niż ten, z bieżącej fokus klawiatury.  
  
 Jeśli składnik zawiera inne składniki, a także obsługuje kolejności tabulacji, składnik musi implementować też <xref:System.Windows.Interop.IKeyboardInputSite> i śledzenie składnika, który ma fokus.  
  
 Omówienie architektury wejściowego w szczególności zaimplementowany dla [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] międzyoperacyjnego, zobacz [architektura wejściowych współdziałanie WPF i formularze systemu Windows](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).  
  
 <xref:System.Windows.Interop.HwndSource> i <xref:System.Windows.Interop.HwndHost> każdej implementacji <xref:System.Windows.Interop.IKeyboardInputSink> interfejs, za pomocą definicji interfejsu jawnego. Jawne definicje podać zachowania domyślnego i są dostępne w razie potrzeby za pośrednictwem <xref:System.Windows.Interop.IKeyboardInputSink> rzutowanie interfejsu <xref:System.Windows.Interop.HwndSource> lub <xref:System.Windows.Interop.HwndHost>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość wskazującą, czy obiekt sink lub jednego z jego składników zawartych w niej ma fokus.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt sink lub jednego z jego składników zawartych w niej ma fokus; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest niezbędne do przekazywania <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> wywołania składników podrzędnych z fokusem za pomocą <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementacji. Wywołanie <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> cyklicznie, aż zostanie wyświetlony poziom szczególny nacisk i do przodu <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> istnieje.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do kontenera składnika <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interfejsu.</summary>
        <value>Odwołanie do kontenera <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interfejsu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowo można ustawić tej właściwości `null`. Wszelkie kontenera, w którym obiekt sink są dodawane do listy składników ustawi <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> przed inne metody są nazywane, a potem można ją ustawić wiele razy. Należy ustawić właściwość `null` ponownie przed usuwania.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Komunikat dla skrótu i skojarzone dane. Nie należy modyfikować tej struktury wiadomości. Jego jest przekazywana przez odwołanie tylko ze względu na wydajność.</param>
        <param name="modifiers">Klawisze modyfikujące.</param>
        <summary>Wywoływane, gdy jeden z mnemonik (klucze dostępu) dla tego obiektu sink jest wywoływany.</summary>
        <returns>
          <see langword="true" /> Jeśli komunikat został obsłużony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] Komunikat musi być WM_CHAR, WM_SYSCHAR, WM_DEADCHAR lub WM_SYSDEADCHAR.  
  
 Jeśli składnik ma składników, wiadomości muszą być przekazywane w składniku implementacji przy każdym wywołaniu zawarte <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> metody.  
  
 Interfejs, który zwraca `true` z <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> nie wywoła <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>. Implementacje możliwość wykonania wszystkich określonych kombinacji klawiszy Obsługa w <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>obejścia .a <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> Zbiornika zawartych części.</param>
        <summary>Rejestruje <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interfejsu zawartych części.</summary>
        <returns>
          <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> Lokacji zawartych części.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składniki ze składnikami podrzędny powinien Obsługa wewnętrznej kolekcji witryn i ta metoda służy do dodawania nowego obiektu sink i zwracać nowej lokacji. Wystarczy Obsługa zbioru witryn, ponieważ obiekt sink można uzyskać z witryny.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">Określa, czy fokus powinien być ustawiony na pierwszym lub ostatnim tabulatora.</param>
        <summary>Ustawia skupić się na tabulator pierwszego lub ostatniego tabulatora dla obiekt sink.</summary>
        <returns>
          <see langword="true" /> Jeśli ustawiono fokus, zgodnie z wymaganiami; <see langword="false" />, jeśli nie ma żadnych tabulatorów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusNavigationDirection.First> i <xref:System.Windows.Input.FocusNavigationDirection.Last> są tylko odpowiednie wartości, które powinny zostać przekazane do tej metody w <xref:System.Windows.Input.TraversalRequest>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Komunikat i skojarzone dane. Nie należy modyfikować tej struktury. Jego jest przekazywana przez odwołanie tylko ze względu na wydajność.</param>
        <param name="modifiers">Klawisze modyfikujące.</param>
        <summary>Przetwarza wprowadzanie z klawiatury na poziomie komunikatu keydown.</summary>
        <returns>
          <see langword="true" /> Jeśli wiadomość była obsługiwana przez implementację metody; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiadomość musi być WM_KEYDOWN lub WM_SYSKEYDOWN.  
  
 Jeśli składnik nie może obsłużyć wejściowych tłumaczenia i składniki podrzędne, które może mieć tłumaczeń, zwykle wywołuje <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> metody dla składnika podrzędnego, który przechowuje bieżący fokus przed zwróceniem wyniku.  
  
 Jeśli wiadomość nie mogą być obsługiwane od razu, możesz go ponowne wysyłanie z poziomu <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> wykonania, jeśli to konieczne, a następnie wróć `false`.  
  
 Scenariusz podstawowy do tłumaczenia klawisze skrótów jest obsługi wiadomości keydown VK_TAB i określające, czy można ustawić fokusu w składniku, aby wywołać <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> do składnika podrzędnego lub wywołać <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> w lokacji nadrzędnej ponieważ sekwencja kartę Osiągnięto początek lub koniec granic. Niektóre składniki mogą wybrać nie obsługują klawisza tab w ten sposób.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Komunikat i skojarzone dane. Nie należy modyfikować tej struktury. Jego jest przekazywana przez odwołanie tylko ze względu na wydajność.</param>
        <param name="modifiers">Klawisze modyfikujące.</param>
        <summary>Przetwarza WM_CHAR, WM_SYSCHAR WM_DEADCHAR i WM_SYSDEADCHAR komunikaty wejściowe przed <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> jest wywoływana.</summary>
        <returns>
          <see langword="true" /> Jeśli komunikat został przetworzony i <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> nie powinien być wywołany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zastosowaniu tej metody, aby zwrócić `true`, architektura wejściowych nie wywoła <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> dla tego klucza komunikatu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>