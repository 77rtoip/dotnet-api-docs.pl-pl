<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bbebaa1ead845294617136125cc87c2b38c32199" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69168239" /></Metadata><TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <TypeSignature Language="F#" Value="type IKeyboardInputSink = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="28d92-101">Zapewnia ujścia klawiatury dla składników, które zarządzają tabulacją, akceleratorami i symboli między granicami międzyoperacyjnymi i między elementami HWND.</span><span class="sxs-lookup"><span data-stu-id="28d92-101">Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.</span></span> <span data-ttu-id="28d92-102">Ten interfejs implementuje zarządzanie komunikatami klawiatury w środowiskach WPF — scenariusze międzyoperacyjności Win32.</span><span class="sxs-lookup"><span data-stu-id="28d92-102">This interface implements keyboard message management in WPF-Win32 interoperation scenarios.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28d92-103">Ujścia klawiatury obsługuje dane wejściowe z określonych podzestawów ogólnego modelu wejścia klawiaturowego dla [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] i [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], i umożliwia przetworzenie danych wejściowych z klawiatury i kierowanie ich do elementów HWND innych niż ten z bieżącym fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="28d92-103">A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.</span></span>  
  
 <span data-ttu-id="28d92-104">Jeśli składnik zawiera inne składniki i utrzymuje kolejność tabulacji, składnik musi również zaimplementować <xref:System.Windows.Interop.IKeyboardInputSite> i śledzić, który składnik ma fokus.</span><span class="sxs-lookup"><span data-stu-id="28d92-104">If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.</span></span>  
  
 <span data-ttu-id="28d92-105">Aby zapoznać się z omówieniem architektury wejściowej, która [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] została zaimplementowana pod kątem współdziałania, zobacz [Windows Forms i architektura danych wejściowych współpracy WPF](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).</span><span class="sxs-lookup"><span data-stu-id="28d92-105">For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).</span></span>  
  
 <span data-ttu-id="28d92-106"><xref:System.Windows.Interop.HwndSource>i <xref:System.Windows.Interop.HwndHost> każdy<xref:System.Windows.Interop.IKeyboardInputSink> implementuje interfejs, za pomocą jawnych definicji interfejsu.</span><span class="sxs-lookup"><span data-stu-id="28d92-106"><xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions.</span></span> <span data-ttu-id="28d92-107">Jawne definicje zapewniają domyślne zachowania i mogą być również dostępne w razie potrzeby przez <xref:System.Windows.Interop.IKeyboardInputSink> <xref:System.Windows.Interop.HwndSource> rzutowanie interfejsu lub <xref:System.Windows.Interop.HwndHost>.</span><span class="sxs-lookup"><span data-stu-id="28d92-107">The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithin : unit -&gt; bool" Usage="iKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28d92-108">Pobiera wartość wskazującą, czy obiekt sink lub jeden z jego składników ma fokus.</span><span class="sxs-lookup"><span data-stu-id="28d92-108">Gets a value that indicates whether the sink or one of its contained components has focus.</span></span></summary>
        <returns><span data-ttu-id="28d92-109"><see langword="true" />Jeśli ujścia lub jeden z jego składników zawiera fokus; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="28d92-109"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28d92-110">Ta metoda jest niezbędna <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> do przekazywania wywołań do składników podrzędnych z fokusem <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> z poziomu implementacji.</span><span class="sxs-lookup"><span data-stu-id="28d92-110">This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation.</span></span> <span data-ttu-id="28d92-111">Wywołaj <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> rekursywnie, dopóki nie osiągniesz poziomu określonego fokusu <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> i w tym miejscu.</span><span class="sxs-lookup"><span data-stu-id="28d92-111">Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28d92-112">Pobiera lub ustawia odwołanie do interfejsu container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> składnika.</span><span class="sxs-lookup"><span data-stu-id="28d92-112">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></summary>
        <value><span data-ttu-id="28d92-113">Odwołanie do <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interfejsu kontenera.</span><span class="sxs-lookup"><span data-stu-id="28d92-113">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28d92-114">Ta właściwość powinna początkowo być ustawiona na `null`wartość.</span><span class="sxs-lookup"><span data-stu-id="28d92-114">This property should initially be set to `null`.</span></span> <span data-ttu-id="28d92-115">Wszystkie kontenery, które dodają ujścia do listy składników, <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> zostaną ustawione przed wywołaniem innych metod i można je ustawić wiele razy po tym.</span><span class="sxs-lookup"><span data-stu-id="28d92-115">Any container that adds the sink to its components list will set <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> before any other methods are called, and it can be set multiple times after that.</span></span> <span data-ttu-id="28d92-116">Przed usunięciem należy ustawić właściwość `null` na ponownie.</span><span class="sxs-lookup"><span data-stu-id="28d92-116">You should set the property to `null` again before disposal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonic :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="28d92-117">Komunikat dla elementu i skojarzonych danych.</span><span class="sxs-lookup"><span data-stu-id="28d92-117">The message for the mnemonic and associated data.</span></span> <span data-ttu-id="28d92-118">Nie należy modyfikować tej struktury wiadomości.</span><span class="sxs-lookup"><span data-stu-id="28d92-118">Do not modify this message structure.</span></span> <span data-ttu-id="28d92-119">Jest ona przesyłana przez odwołanie wyłącznie do powodów związanych z wydajnością.</span><span class="sxs-lookup"><span data-stu-id="28d92-119">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="28d92-120">Klawisze modyfikujące.</span><span class="sxs-lookup"><span data-stu-id="28d92-120">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="28d92-121">Wywołuje się, gdy wywoływana jest jedna z symboli (klawisze dostępu) dla tego ujścia.</span><span class="sxs-lookup"><span data-stu-id="28d92-121">Called when one of the mnemonics (access keys) for this sink is invoked.</span></span></summary>
        <returns><span data-ttu-id="28d92-122"><see langword="true" />Jeśli komunikat został obsłużony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="28d92-122"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28d92-123">Komunikat [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] musi mieć wartość WM_CHAR, WM_SYSCHAR, WM_DEADCHAR lub WM_SYSDEADCHAR.</span><span class="sxs-lookup"><span data-stu-id="28d92-123">The [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.</span></span>  
  
 <span data-ttu-id="28d92-124">Jeśli składnik zawiera składniki, komunikat musi zostać przesłany w implementacji przez wywołanie każdej <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> metody zawartej składnika.</span><span class="sxs-lookup"><span data-stu-id="28d92-124">If the component has contained components, the message must be passed in your implementation by calling each contained component's <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> method.</span></span>  
  
 <span data-ttu-id="28d92-125">Interfejs, który zwraca `true` z <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> , nie wywoła <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>metody.</span><span class="sxs-lookup"><span data-stu-id="28d92-125">An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span></span> <span data-ttu-id="28d92-126">Implementacje mogą zdecydować się na wykonanie wszystkich konkretnych kombinacji klawiszy <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>w. i <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>obejście.</span><span class="sxs-lookup"><span data-stu-id="28d92-126">Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="iKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="28d92-127"><see cref="T:System.Windows.Interop.IKeyboardInputSink" /> Ujścia zawartego składnika.</span><span class="sxs-lookup"><span data-stu-id="28d92-127">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="28d92-128"><see cref="T:System.Windows.Interop.IKeyboardInputSink" /> Rejestruje interfejs zawartego składnika.</span><span class="sxs-lookup"><span data-stu-id="28d92-128">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span></span></summary>
        <returns><span data-ttu-id="28d92-129"><see cref="T:System.Windows.Interop.IKeyboardInputSite" /> Lokacja zawartego składnika.</span><span class="sxs-lookup"><span data-stu-id="28d92-129">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28d92-130">Składniki ze składnikami podrzędnymi powinny obsługiwać wewnętrzne kolekcje lokacji i korzystać z tej metody w celu dodania nowego ujścia i zwrócenia nowej lokacji.</span><span class="sxs-lookup"><span data-stu-id="28d92-130">Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.</span></span> <span data-ttu-id="28d92-131">Musisz zachować tylko zbiór witryn, ponieważ ujścia można pobrać z witryny.</span><span class="sxs-lookup"><span data-stu-id="28d92-131">You only need to maintain the site collection, because the sink can be obtained from the site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="iKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="28d92-132">Określa, czy fokus ma być ustawiony na pierwszy lub ostatni tabulator.</span><span class="sxs-lookup"><span data-stu-id="28d92-132">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="28d92-133">Ustawia fokus na pierwszym tabulatorze lub ostatnim tabulatorem ujścia.</span><span class="sxs-lookup"><span data-stu-id="28d92-133">Sets focus on either the first tab stop or the last tab stop of the sink.</span></span></summary>
        <returns><span data-ttu-id="28d92-134"><see langword="true" />Jeśli fokus został ustawiony zgodnie z żądaniem; <see langword="false" />, jeśli nie ma tabulatorów.</span><span class="sxs-lookup"><span data-stu-id="28d92-134"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28d92-135"><xref:System.Windows.Input.FocusNavigationDirection.First>i <xref:System.Windows.Input.FocusNavigationDirection.Last> są jedynymi odpowiednimi wartościami, które powinny być przesyłane do tej metody <xref:System.Windows.Input.TraversalRequest>w.</span><span class="sxs-lookup"><span data-stu-id="28d92-135"><xref:System.Windows.Input.FocusNavigationDirection.First> and <xref:System.Windows.Input.FocusNavigationDirection.Last> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAccelerator :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="28d92-136">Komunikat i powiązane dane.</span><span class="sxs-lookup"><span data-stu-id="28d92-136">The message and associated data.</span></span> <span data-ttu-id="28d92-137">Nie należy modyfikować tej struktury.</span><span class="sxs-lookup"><span data-stu-id="28d92-137">Do not modify this structure.</span></span> <span data-ttu-id="28d92-138">Jest ona przesyłana przez odwołanie wyłącznie do powodów związanych z wydajnością.</span><span class="sxs-lookup"><span data-stu-id="28d92-138">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="28d92-139">Klawisze modyfikujące.</span><span class="sxs-lookup"><span data-stu-id="28d92-139">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="28d92-140">Przetwarza dane wejściowe z klawiatury na poziomie komunikatu KeyDown.</span><span class="sxs-lookup"><span data-stu-id="28d92-140">Processes keyboard input at the keydown message level.</span></span></summary>
        <returns><span data-ttu-id="28d92-141"><see langword="true" />Jeśli komunikat został obsłużony przez implementację metody; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="28d92-141"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28d92-142">Komunikat musi mieć wartość PRZETŁUMACZYŁA lub WM_SYSKEYDOWN.</span><span class="sxs-lookup"><span data-stu-id="28d92-142">The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.</span></span>  
  
 <span data-ttu-id="28d92-143">Jeśli składnik nie może obsłużyć tłumaczeń wejściowych i ma składniki podrzędne, które mogą mieć tłumaczenia, zazwyczaj wywołuje <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> metodę w składniku podrzędnym, który posiada bieżący fokus przed zwróceniem wyniku.</span><span class="sxs-lookup"><span data-stu-id="28d92-143">If the component is unable to handle the input translations and has child components that might have translations, it typically calls <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> method on the child component that holds the current focus before returning a result.</span></span>  
  
 <span data-ttu-id="28d92-144">Jeśli komunikat nie może być obsłużony natychmiast, można go ponownie wysłać z poziomu <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementacji, jeśli jest to konieczne, a następnie zwrócić. `false`</span><span class="sxs-lookup"><span data-stu-id="28d92-144">If the message cannot be handled immediately, you can re-dispatch it from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation if necessary, and then return `false`.</span></span>  
  
 <span data-ttu-id="28d92-145">Głównym scenariuszem translacji klawiszy skrótów jest obsługa komunikatu VK_TAB KeyDown i określanie, czy ma być ustawiony fokus w składniku, do wywołania <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> składnika podrzędnego, czy do wywołania <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> w lokacji nadrzędnej, ponieważ sekwencja tabulacji osiągnięto początkową lub końcową granicę.</span><span class="sxs-lookup"><span data-stu-id="28d92-145">A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds.</span></span> <span data-ttu-id="28d92-146">Niektóre składniki mogą zrezygnować z obsługi klawisza Tab w ten sposób.</span><span class="sxs-lookup"><span data-stu-id="28d92-146">Certain components may choose to not handle the tab key in this fashion.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateChar :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="28d92-147">Komunikat i powiązane dane.</span><span class="sxs-lookup"><span data-stu-id="28d92-147">The message and associated data.</span></span> <span data-ttu-id="28d92-148">Nie należy modyfikować tej struktury.</span><span class="sxs-lookup"><span data-stu-id="28d92-148">Do not modify this structure.</span></span> <span data-ttu-id="28d92-149">Jest ona przesyłana przez odwołanie wyłącznie do powodów związanych z wydajnością.</span><span class="sxs-lookup"><span data-stu-id="28d92-149">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="28d92-150">Klawisze modyfikujące.</span><span class="sxs-lookup"><span data-stu-id="28d92-150">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="28d92-151">Przetwarza komunikaty wejściowe WM_CHAR, WM_SYSCHAR, WM_DEADCHAR i WM_SYSDEADCHAR przed <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> wywołaniem.</span><span class="sxs-lookup"><span data-stu-id="28d92-151">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> is called.</span></span></summary>
        <returns><span data-ttu-id="28d92-152"><see langword="true" />Jeśli komunikat został przetworzony i <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> nie powinien być wywoływany; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="28d92-152"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28d92-153">W przypadku zaimplementowania tej metody `true`w celu zwrócenia architektura wejściowa <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> nie wywoła tego komunikatu klucza.</span><span class="sxs-lookup"><span data-stu-id="28d92-153">If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
