<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39420a83e1335fa3b704b5d62131927586b80cdb" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48627571" /></Metadata><TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <TypeSignature Language="F#" Value="type IKeyboardInputSink = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Oferuje ujścia klawiatury składników, którymi zarządza tabulacji, akceleratory i mnemonik granice międzyoperacyjności i od parametrów hWnd. Ten interfejs implementuje zarządzania komunikatów klawiatury w scenariuszach współdziałanie WPF i Win32.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt sink klawiatury obsługuje dane wejściowe z określonego podzbiór ogólnym modelu danych wejściowych klawiatury dla [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] i [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]i umożliwia niektóre klawiatury do przetworzenia i Przekierowanie do parametrów hWnd innej niż ta, z bieżącym fokusem klawiatury.  
  
 Jeśli składnik zawiera inne składniki i zachowuje kolejność tabulacji, składnik musi implementować też <xref:System.Windows.Interop.IKeyboardInputSite> i śledzenie składnika, który jest ustawiony fokus.  
  
 Omówienie architektury danych wejściowych, w szczególności zaimplementować dla [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] międzyoperacyjnych, zobacz [Windows Forms i WPF wejścia ze zdolnością](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).  
  
 <xref:System.Windows.Interop.HwndSource> i <xref:System.Windows.Interop.HwndHost> każdej implementacji <xref:System.Windows.Interop.IKeyboardInputSink> interfejs, za pomocą definicji interfejsu jawnego. Wyraźnych definicji dostarczyć domyślne zachowania i są dostępne w razie potrzeby za pośrednictwem <xref:System.Windows.Interop.IKeyboardInputSink> rzutowanie interfejsu <xref:System.Windows.Interop.HwndSource> lub <xref:System.Windows.Interop.HwndHost>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithin : unit -&gt; bool" Usage="iKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość wskazującą, czy obiekt sink lub jednego z jego składników zawartych jest ustawiony fokus.</summary>
        <returns><see langword="true" /> Jeśli obiekt sink lub jednego z jego składników zawartych z fokusem za; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest niezbędna do przekazywania <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> wywołania składnikach podrzędnych fokus z poziomu <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementacji. Wywołaj <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> cyklicznie, aż do poziomu szczególny nacisk i do przodu <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> istnieje.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do składnika kontenera <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interfejsu.</summary>
        <value>Odwołanie do kontenera <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interfejsu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Początkowo można ustawić tej właściwości w `null`. Ustawi dowolnego kontenera, który obiekt sink są dodawane do listy składników <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> zanim inne metody są wywoływane, a po tym może być ustawiona wiele razy. Należy ustawić właściwość `null` ponownie przed usuwania.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonic :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">W komunikacie o mnemoników i skojarzone dane. Nie należy modyfikować tej struktury wiadomości. Jest on przekazywany przez odwołanie, tylko ze względu na wydajność.</param>
        <param name="modifiers">Klawisze modyfikujące.</param>
        <summary>Wywołuje się, gdy jeden z mnemonik (klucze dostępu) dla tego obiektu sink jest wywoływana.</summary>
        <returns><see langword="true" /> Jeśli komunikat został obsłużony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] Wiadomości musi być WM_CHAR, WM_SYSCHAR, WM_DEADCHAR lub WM_SYSDEADCHAR.  
  
 Jeśli składnik jest zawarte składniki, wiadomości muszą być przekazywane w składniku wdrożenia za pośrednictwem wywołania każdej zawarte <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> metody.  
  
 Interfejs, który zwraca `true` z <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> nie wywoła <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>. Możliwość wykonywania wszystkich określonych kombinacji klawiszy, obsługa w implementacji <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>obejścia .a <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="iKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><see cref="T:System.Windows.Interop.IKeyboardInputSink" /> Ujścia zawartej składnika.</param>
        <summary>Rejestruje <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interfejs składnika zawarte.</summary>
        <returns><see cref="T:System.Windows.Interop.IKeyboardInputSite" /> Lokacji zawarte składnika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składników za pomocą składnikach podrzędnych należy Obsługa wewnętrznego kolekcji witryn, a ta metoda służy do dodawania nowego obiektu sink i zwracają nową lokację. Wystarczy do obsługi kolekcji witryny, ponieważ obiekt sink można uzyskać z witryny.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="iKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">Określa, czy zespół powinien być ustawiony na pierwszym lub ostatnim tabulatora.</param>
        <summary>Ustawia skoncentrować się na tabulator pierwszy lub ostatni tabulatora obiektu sink.</summary>
        <returns><see langword="true" /> Jeśli fokus został ustawiony zgodnie z żądaniem; <see langword="false" />, jeśli nie ma żadnych tabulatorów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusNavigationDirection.First> i <xref:System.Windows.Input.FocusNavigationDirection.Last> są tylko odpowiednie wartości, które powinien zostać przekazany do tej metody w <xref:System.Windows.Input.TraversalRequest>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAccelerator :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Wiadomości i powiązane dane. Nie należy modyfikować tej struktury. Jest on przekazywany przez odwołanie, tylko ze względu na wydajność.</param>
        <param name="modifiers">Klawisze modyfikujące.</param>
        <summary>Przetwarza danych wprowadzonych z klawiatury na poziomie komunikatu keydown.</summary>
        <returns><see langword="true" /> Jeśli wiadomość była obsługiwana przez implementację metody; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiadomość musi być przetłumaczyła lub WM_SYSKEYDOWN.  
  
 Jeśli składnik nie może obsłużyć tłumaczenia danych wejściowych i składnikach podrzędnych, które może mieć tłumaczeń, zwykle wywołuje <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> metody składnika podrzędnego, który zawiera bieżący fokus przed zwróceniem wyników.  
  
 Jeśli komunikat nie mogą być obsługiwane natychmiast, możesz go ponownego wysłania z poziomu <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> wdrożenia, jeśli to konieczne, a następnie wróć `false`.  
  
 Podstawowy scenariusz dla tłumaczenia klawiszy skrótów jest obsługi komunikatu keydown VK_TAB i określanie, czy ustawić fokus w składniku, aby wywołać <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> do składnika podrzędnego lub wywołać <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> w lokacji nadrzędnej ponieważ sekwencji kartę został osiągnięty granice początku lub na końcu. Niektóre składniki mogą wybrać obsługuje klawisza tab w ten sposób.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateChar :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Wiadomości i powiązane dane. Nie należy modyfikować tej struktury. Jest on przekazywany przez odwołanie, tylko ze względu na wydajność.</param>
        <param name="modifiers">Klawisze modyfikujące.</param>
        <summary>Przetwarza komunikaty wejściowe WM_CHAR, WM_SYSCHAR, WM_DEADCHAR i WM_SYSDEADCHAR przed <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> jest wywoływana.</summary>
        <returns><see langword="true" /> Jeśli komunikat został przetworzony i <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> nie powinna być wywołana; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zastosowaniu tej metody, aby zwrócić `true`, architektura danych wejściowych nie wywoła <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> dla tego klucza komunikatu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>