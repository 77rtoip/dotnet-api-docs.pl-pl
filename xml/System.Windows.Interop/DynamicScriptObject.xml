<Type Name="DynamicScriptObject" FullName="System.Windows.Interop.DynamicScriptObject">
  <TypeSignature Language="C#" Value="public sealed class DynamicScriptObject : System.Dynamic.DynamicObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicScriptObject extends System.Dynamic.DynamicObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.DynamicScriptObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicScriptObject&#xA;Inherits DynamicObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicScriptObject sealed : System::Dynamic::DynamicObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Dynamic.DynamicObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6cf21-101">Włącza wywołania z aplikacja przeglądarki XAML (XBAP) do okna HTML, która obsługuje aplikację.</span><span class="sxs-lookup"><span data-stu-id="6cf21-101">Enables calls from a XAML browser application (XBAP) to the HTML window that hosts the application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf21-102">Wystąpienia tej klasy są dostępne za pośrednictwem <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> właściwość <xref:System.Windows.Interop.BrowserInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="6cf21-102">Instances of this class are exposed through the <xref:System.Windows.Interop.BrowserInteropHelper.HostScript%2A> property of <xref:System.Windows.Interop.BrowserInteropHelper>.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cf21-103">Próbuje przekonwertować obiektu skryptu do reprezentacji w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-103">Attempts to convert the script object to a string representation.</span></span></summary>
        <returns><span data-ttu-id="6cf21-104">Reprezentacja ciągu obiektu skryptu, jeśli można przekonwertować obiektu; w przeciwnym razie reprezentację ciągu obiektu domyślnej właściwości lub metody.</span><span class="sxs-lookup"><span data-stu-id="6cf21-104">A string representation of the script object, if the object can be converted; otherwise, a string representation of the object's default property or method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf21-105">Jeśli obiekt skryptu nie można przekonwertować na ciąg <xref:System.Windows.Interop.DynamicScriptObject.ToString%2A> metoda zwraca reprezentację ciągu domyślnej właściwości lub metody.</span><span class="sxs-lookup"><span data-stu-id="6cf21-105">If the script object cannot be converted to a string, the <xref:System.Windows.Interop.DynamicScriptObject.ToString%2A> method returns a string representation of the default property or method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryGetIndex">
      <MemberSignature Language="C#" Value="public override bool TryGetIndex (System.Dynamic.GetIndexBinder binder, object[] indexes, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetIndex(class System.Dynamic.GetIndexBinder binder, object[] indexes, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetIndex (binder As GetIndexBinder, indexes As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetIndex(System::Dynamic::GetIndexBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ indexes, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.GetIndexBinder" />
        <Parameter Name="indexes" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="6cf21-106">Obiekt wiążący udostępniane przez miejsce wywołania.</span><span class="sxs-lookup"><span data-stu-id="6cf21-106">The binder provided by the call site.</span></span></param>
        <param name="indexes"><span data-ttu-id="6cf21-107">Indeks, które mają zostać pobrane.</span><span class="sxs-lookup"><span data-stu-id="6cf21-107">The index to be retrieved.</span></span></param>
        <param name="result"><span data-ttu-id="6cf21-108">Wynik metody.</span><span class="sxs-lookup"><span data-stu-id="6cf21-108">The method result.</span></span></param>
        <summary><span data-ttu-id="6cf21-109">Pobiera wartość indeksowaną z obiektu skryptu za pomocą wartości pierwszego indeksu z <paramref name="indexes" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6cf21-109">Gets an indexed value from the script object by using the first index value from the <paramref name="indexes" /> collection.</span></span></summary>
        <returns><span data-ttu-id="6cf21-110">Zawsze zwraca <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-110">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf21-111"><xref:System.Windows.Interop.DynamicScriptObject.TryGetIndex%2A> Metoda zgłasza wyjątek, jeśli nastąpiła nieprawidłowa dostępu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-111">The <xref:System.Windows.Interop.DynamicScriptObject.TryGetIndex%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cf21-112"><paramref name="binder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-112"><paramref name="binder" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="6cf21-113">—lub—</span><span class="sxs-lookup"><span data-stu-id="6cf21-113">-or-</span></span>  
  
 <span data-ttu-id="6cf21-114"><paramref name="indexes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-114"><paramref name="indexes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cf21-115">Długość <paramref name="indexes" /> nie jest równa 1.</span><span class="sxs-lookup"><span data-stu-id="6cf21-115">The length of <paramref name="indexes" /> is not equal to 1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6cf21-116">Pierwszy <paramref name="indexes" /> wartość jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-116">The first <paramref name="indexes" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="6cf21-117">Element członkowski nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="6cf21-117">The member does not exist.</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryGetMember">
      <MemberSignature Language="C#" Value="public override bool TryGetMember (System.Dynamic.GetMemberBinder binder, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetMember(class System.Dynamic.GetMemberBinder binder, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetMember (binder As GetMemberBinder, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetMember(System::Dynamic::GetMemberBinder ^ binder, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.GetMemberBinder" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="6cf21-118">Obiekt wiążący udostępniane przez miejsce wywołania.</span><span class="sxs-lookup"><span data-stu-id="6cf21-118">The binder provided by the call site.</span></span></param>
        <param name="result"><span data-ttu-id="6cf21-119">Wynik metody.</span><span class="sxs-lookup"><span data-stu-id="6cf21-119">The method result.</span></span></param>
        <summary><span data-ttu-id="6cf21-120">Pobiera wartość elementu członkowskiego z obiektu skryptu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-120">Gets an member value from the script object.</span></span></summary>
        <returns><span data-ttu-id="6cf21-121">Zawsze zwraca <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-121">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf21-122"><xref:System.Windows.Interop.DynamicScriptObject.TryGetMember%2A> Metoda zgłasza wyjątek, jeśli nastąpiła nieprawidłowa dostępu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-122">The <xref:System.Windows.Interop.DynamicScriptObject.TryGetMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cf21-123"><paramref name="binder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-123"><paramref name="binder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="6cf21-124">Element członkowski nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="6cf21-124">The member does not exist.</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryInvoke">
      <MemberSignature Language="C#" Value="public override bool TryInvoke (System.Dynamic.InvokeBinder binder, object[] args, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryInvoke(class System.Dynamic.InvokeBinder binder, object[] args, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryInvoke (binder As InvokeBinder, args As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryInvoke(System::Dynamic::InvokeBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.InvokeBinder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="6cf21-125">Obiekt wiążący udostępniane przez miejsce wywołania.</span><span class="sxs-lookup"><span data-stu-id="6cf21-125">The binder provided by the call site.</span></span></param>
        <param name="args"><span data-ttu-id="6cf21-126">Argumenty do przekazania do metody domyślnej.</span><span class="sxs-lookup"><span data-stu-id="6cf21-126">The arguments to pass to the default method.</span></span></param>
        <param name="result"><span data-ttu-id="6cf21-127">Wynik metody.</span><span class="sxs-lookup"><span data-stu-id="6cf21-127">The method result.</span></span></param>
        <summary><span data-ttu-id="6cf21-128">Wywołuje domyślną metodą skryptu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-128">Calls the default script method.</span></span></summary>
        <returns><span data-ttu-id="6cf21-129">Zawsze zwraca <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-129">Always return <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf21-130"><xref:System.Windows.Interop.DynamicScriptObject.TryInvoke%2A> Metoda zgłasza wyjątek, jeśli metoda nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="6cf21-130">The <xref:System.Windows.Interop.DynamicScriptObject.TryInvoke%2A> method throws an exception if the method does not exist.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cf21-131"><paramref name="binder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-131"><paramref name="binder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cf21-132">Metoda nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="6cf21-132">The method does not exist.</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TryInvokeMember">
      <MemberSignature Language="C#" Value="public override bool TryInvokeMember (System.Dynamic.InvokeMemberBinder binder, object[] args, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryInvokeMember(class System.Dynamic.InvokeMemberBinder binder, object[] args, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryInvokeMember (binder As InvokeMemberBinder, args As Object(), ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryInvokeMember(System::Dynamic::InvokeMemberBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.InvokeMemberBinder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="6cf21-133">Obiekt wiążący udostępniane przez miejsce wywołania.</span><span class="sxs-lookup"><span data-stu-id="6cf21-133">The binder provided by the call site.</span></span></param>
        <param name="args"><span data-ttu-id="6cf21-134">Argumenty do przekazania do metody domyślnej.</span><span class="sxs-lookup"><span data-stu-id="6cf21-134">The arguments to pass to the default method.</span></span></param>
        <param name="result"><span data-ttu-id="6cf21-135">Wynik metody.</span><span class="sxs-lookup"><span data-stu-id="6cf21-135">The method result.</span></span></param>
        <summary><span data-ttu-id="6cf21-136">Wywołuje metodę dla obiektu skryptu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-136">Calls a method on the script object.</span></span></summary>
        <returns><span data-ttu-id="6cf21-137">Zawsze zwraca <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-137">Always return <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf21-138"><xref:System.Windows.Interop.DynamicScriptObject.TryInvokeMember%2A> Metoda zgłasza wyjątek, jeśli nastąpiła nieprawidłowa dostępu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-138">The <xref:System.Windows.Interop.DynamicScriptObject.TryInvokeMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cf21-139"><paramref name="binder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-139"><paramref name="binder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cf21-140">Metoda nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="6cf21-140">The method does not exist.</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TrySetIndex">
      <MemberSignature Language="C#" Value="public override bool TrySetIndex (System.Dynamic.SetIndexBinder binder, object[] indexes, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TrySetIndex(class System.Dynamic.SetIndexBinder binder, object[] indexes, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySetIndex (binder As SetIndexBinder, indexes As Object(), value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TrySetIndex(System::Dynamic::SetIndexBinder ^ binder, cli::array &lt;System::Object ^&gt; ^ indexes, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.SetIndexBinder" />
        <Parameter Name="indexes" Type="System.Object[]" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="6cf21-141">Obiekt wiążący udostępniane przez miejsce wywołania.</span><span class="sxs-lookup"><span data-stu-id="6cf21-141">The binder provided by the call site.</span></span></param>
        <param name="indexes"><span data-ttu-id="6cf21-142">Indeks, które mają zostać pobrane.</span><span class="sxs-lookup"><span data-stu-id="6cf21-142">The index to be retrieved.</span></span></param>
        <param name="value"><span data-ttu-id="6cf21-143">Wynik — metoda</span><span class="sxs-lookup"><span data-stu-id="6cf21-143">The method result</span></span></param>
        <summary><span data-ttu-id="6cf21-144">Ustawia element członkowski w obiekcie skryptu za pomocą pierwszego indeksu określonego w <paramref name="indexes" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6cf21-144">Sets a member on the script object by using the first index specified in the <paramref name="indexes" /> collection.</span></span></summary>
        <returns><span data-ttu-id="6cf21-145">Zawsze zwraca <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-145">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf21-146"><xref:System.Windows.Interop.DynamicScriptObject.TrySetIndex%2A> Metoda zgłasza wyjątek, jeśli nastąpiła nieprawidłowa dostępu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-146">The <xref:System.Windows.Interop.DynamicScriptObject.TrySetIndex%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cf21-147"><paramref name="binder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-147"><paramref name="binder" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="6cf21-148">—lub—</span><span class="sxs-lookup"><span data-stu-id="6cf21-148">-or-</span></span>  
  
 <span data-ttu-id="6cf21-149"><paramref name="indexes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-149"><paramref name="indexes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cf21-150">Długość <paramref name="indexes" /> nie jest równa 1.</span><span class="sxs-lookup"><span data-stu-id="6cf21-150">The length of <paramref name="indexes" /> is not equal to 1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6cf21-151">Pierwszy <paramref name="indexes" /> wartość jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-151">The first <paramref name="indexes" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="6cf21-152">Element członkowski nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="6cf21-152">The member does not exist.</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TrySetMember">
      <MemberSignature Language="C#" Value="public override bool TrySetMember (System.Dynamic.SetMemberBinder binder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TrySetMember(class System.Dynamic.SetMemberBinder binder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySetMember (binder As SetMemberBinder, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TrySetMember(System::Dynamic::SetMemberBinder ^ binder, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Dynamic.SetMemberBinder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="6cf21-153">Obiekt wiążący udostępniane przez miejsce wywołania.</span><span class="sxs-lookup"><span data-stu-id="6cf21-153">The binder provided by the call site.</span></span></param>
        <param name="value"><span data-ttu-id="6cf21-154">Wartość do ustawienia dla elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="6cf21-154">The value to set for the member.</span></span></param>
        <summary><span data-ttu-id="6cf21-155">Ustawia element członkowski obiektu skryptu z podaną wartością.</span><span class="sxs-lookup"><span data-stu-id="6cf21-155">Sets a member on the script object to the specified value.</span></span></summary>
        <returns><span data-ttu-id="6cf21-156">Zawsze zwraca <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-156">Always returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cf21-157"><xref:System.Windows.Interop.DynamicScriptObject.TrySetMember%2A> Metoda zgłasza wyjątek, jeśli nastąpiła nieprawidłowa dostępu.</span><span class="sxs-lookup"><span data-stu-id="6cf21-157">The <xref:System.Windows.Interop.DynamicScriptObject.TrySetMember%2A> method throws an exception if an invalid access is attempted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6cf21-158"><paramref name="binder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-158"><paramref name="binder" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="6cf21-159">—lub—</span><span class="sxs-lookup"><span data-stu-id="6cf21-159">-or-</span></span>  
  
 <span data-ttu-id="6cf21-160"><paramref name="indexes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-160"><paramref name="indexes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cf21-161">Długość <paramref name="indexes" /> nie jest równa 1.</span><span class="sxs-lookup"><span data-stu-id="6cf21-161">The length of <paramref name="indexes" /> is not equal to 1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6cf21-162">Pierwszy <paramref name="indexes" /> wartość jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6cf21-162">The first <paramref name="indexes" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="6cf21-163">Element członkowski nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="6cf21-163">The member does not exist.</span></span></exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>