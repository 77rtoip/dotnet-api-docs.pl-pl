<Type Name="ISoapServerVRoot" FullName="System.EnterpriseServices.Internal.ISoapServerVRoot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="917bf2f8d00affbacba7e644c5ec4d822b489198" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69359048" /></Metadata><TypeSignature Language="C#" Value="public interface ISoapServerVRoot" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapServerVRoot" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapServerVRoot" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapServerVRoot" />
  <TypeSignature Language="F#" Value="type ISoapServerVRoot = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("A31B6577-71D2-4344-AEDF-ADC1B0DC5347")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Publikuje uwierzytelnione, zaszyfrowane wirtualne katalogi główne protokołu SOAP na serwerach.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zobacz <xref:System.EnterpriseServices.Internal.SoapServerVRoot> , aby poznać implementację domyślną.  
  
 <xref:System.EnterpriseServices.Internal.ISoapServerVRoot>jest używany wewnętrznie przez .NET Framework. Nie musisz używać go bezpośrednio w kodzie.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateVirtualRootEx">
      <MemberSignature Language="C#" Value="public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, [out] string&amp; baseUrl, [out] string&amp; virtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, homePage As String, discoFile As String, secureSockets As String, authentication As String, operation As String, ByRef baseUrl As String, ByRef virtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, System::String ^ homePage, System::String ^ discoFile, System::String ^ secureSockets, System::String ^ authentication, System::String ^ operation, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRootEx : string * string * string * string * string * string * string * string *  *  *  -&gt; unit" Usage="iSoapServerVRoot.CreateVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot, homePage, discoFile, secureSockets, authentication, operation, baseUrl, virtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="homePage" Type="System.String" />
        <Parameter Name="discoFile" Type="System.String" />
        <Parameter Name="secureSockets" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Główny serwer sieci Web.</param>
        <param name="inBaseUrl">Podstawowy adres URL, który zawiera wirtualny katalog główny.</param>
        <param name="inVirtualRoot">Nazwa wirtualnego katalogu głównego.</param>
        <param name="homePage"><see langword="true" />Jeśli właściwość ma być ustawiona; <see langword="false" />w przeciwnym razie. <see langword="EnableDefaultDoc" /></param>
        <param name="discoFile"><see langword="true" />Jeśli zostanie utworzony domyślny plik odnajdywania; <see langword="false" /> Jeśli nie ma pliku odnajdowania. Jeśli <see langword="false" /> istnieje i domyślny plik. disco, plik zostanie usunięty.</param>
        <param name="secureSockets"><see langword="true" />Jeśli wymagane jest szyfrowanie SSL; w przeciwnym razie. <see langword="false" /></param>
        <param name="authentication">Określ wartość "anonimowe", jeśli nie ma być używane uwierzytelnianie (użytkownik anonimowy). W przeciwnym razie Określ pusty ciąg.</param>
        <param name="operation">Nie używany. Określ <see langword="null" /> dla tego parametru.</param>
        <param name="baseUrl">Gdy ta metoda zwraca, ten parametr zawiera podstawowy adres URL.</param>
        <param name="virtualRoot">Gdy ta metoda zwraca, ten parametr zawiera nazwę wirtualnego katalogu głównego.</param>
        <param name="physicalPath">Gdy ta metoda zwraca, ten parametr zawiera adres dysku wirtualnego katalogu głównego.</param>
        <summary>Tworzy wirtualny element główny protokołu SOAP z opcjami zabezpieczeń.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący w łańcuchu wywołań nie ma uprawnień dostępu do kodu niezarządzanego.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Narzędzie SOAP jest niedostępne.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRootEx">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRootEx (string rootWebServer, string baseUrl, string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRootEx(string rootWebServer, string baseUrl, string virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRootEx (rootWebServer As String, baseUrl As String, virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteVirtualRootEx(System::String ^ rootWebServer, System::String ^ baseUrl, System::String ^ virtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRootEx : string * string * string -&gt; unit" Usage="iSoapServerVRoot.DeleteVirtualRootEx (rootWebServer, baseUrl, virtualRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="virtualRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Główny serwer sieci Web.</param>
        <param name="baseUrl">Podstawowy adres URL, który zawiera wirtualny katalog główny.</param>
        <param name="virtualRoot">Nazwa wirtualnego katalogu głównego.</param>
        <summary>Usuwa wirtualny katalog główny. Nie w pełni zaimplementowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Funkcja usuwania wirtualnego katalogu głównego nie jest obecnie dostępna w implementacji tego interfejsu. Implementacja zwraca bez usuwania elementu głównego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący w łańcuchu wywołań nie ma uprawnień dostępu do kodu niezarządzanego.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Narzędzie SOAP jest niedostępne.</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">Wywołanie identyfikacji katalogu systemowego nie powiodło się.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRootStatus">
      <MemberSignature Language="C#" Value="public void GetVirtualRootStatus (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string exists, out string secureSockets, out string windowsAuth, out string anonymous, out string homePage, out string discoFile, out string physicalPath, out string baseUrl, out string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVirtualRootStatus(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; exists, [out] string&amp; secureSockets, [out] string&amp; windowsAuth, [out] string&amp; anonymous, [out] string&amp; homePage, [out] string&amp; discoFile, [out] string&amp; physicalPath, [out] string&amp; baseUrl, [out] string&amp; virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVirtualRootStatus (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef exists As String, ByRef secureSockets As String, ByRef windowsAuth As String, ByRef anonymous As String, ByRef homePage As String, ByRef discoFile As String, ByRef physicalPath As String, ByRef baseUrl As String, ByRef virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetVirtualRootStatus(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % exists, [Runtime::InteropServices::Out] System::String ^ % secureSockets, [Runtime::InteropServices::Out] System::String ^ % windowsAuth, [Runtime::InteropServices::Out] System::String ^ % anonymous, [Runtime::InteropServices::Out] System::String ^ % homePage, [Runtime::InteropServices::Out] System::String ^ % discoFile, [Runtime::InteropServices::Out] System::String ^ % physicalPath, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRootStatus : string * string * string *  *  *  *  *  *  *  *  *  -&gt; unit" Usage="iSoapServerVRoot.GetVirtualRootStatus (rootWebServer, inBaseUrl, inVirtualRoot, exists, secureSockets, windowsAuth, anonymous, homePage, discoFile, physicalPath, baseUrl, virtualRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="exists" Type="System.String" RefType="out" />
        <Parameter Name="secureSockets" Type="System.String" RefType="out" />
        <Parameter Name="windowsAuth" Type="System.String" RefType="out" />
        <Parameter Name="anonymous" Type="System.String" RefType="out" />
        <Parameter Name="homePage" Type="System.String" RefType="out" />
        <Parameter Name="discoFile" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Główny serwer sieci Web.</param>
        <param name="inBaseUrl">Podstawowy adres URL, który zawiera wirtualny katalog główny.</param>
        <param name="inVirtualRoot">Nazwa wirtualnego katalogu głównego.</param>
        <param name="exists">Gdy ta metoda zwraca, ten parametr zawiera <see langword="true" /> , jeśli katalog wirtualny istnieje; <see langword="false" />w przeciwnym razie.</param>
        <param name="secureSockets">Gdy ta metoda zwraca, ten parametr zawiera <see langword="true" /> , jeśli wymagane jest szyfrowanie SSL; <see langword="false" />w przeciwnym razie.</param>
        <param name="windowsAuth">Gdy ta metoda zwraca, ten parametr zawiera <see langword="true" /> ustawienie uwierzytelnianie systemu Windows, <see langword="false" />w przeciwnym razie.</param>
        <param name="anonymous">Gdy ta metoda zwraca, ten parametr zawiera <see langword="true" /> , jeśli nie ustawiono uwierzytelniania (użytkownik anonimowy); <see langword="false" />w przeciwnym razie.</param>
        <param name="homePage">Gdy ta metoda zwraca, ten parametr zawiera <see langword="true" /> , jeśli <see langword="EnableDefaultDoc" /> Właściwość wirtualnego katalogu głównego <see langword="false" />jest ustawiona; w przeciwnym razie.</param>
        <param name="discoFile">Gdy ta metoda zwraca, ten parametr zawiera <see langword="true" /> , jeśli istnieje plik default. disco; <see langword="false" />w przeciwnym razie.</param>
        <param name="physicalPath">Gdy ta metoda zwraca, ten parametr zawiera adres dysku wirtualnego katalogu głównego.</param>
        <param name="baseUrl">Gdy ta metoda zwraca, ten parametr zawiera podstawowy adres URL.</param>
        <param name="virtualRoot">Gdy ta metoda zwraca, ten parametr zawiera nazwę wirtualnego katalogu głównego.</param>
        <summary>Zwraca stan zabezpieczeń istniejącego wirtualnego katalogu głównego protokołu SOAP.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
