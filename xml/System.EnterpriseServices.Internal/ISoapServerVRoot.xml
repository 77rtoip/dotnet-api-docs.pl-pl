<Type Name="ISoapServerVRoot" FullName="System.EnterpriseServices.Internal.ISoapServerVRoot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="030b4141e98c6b8365d3e7a5f84c6774d91789e6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452316" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISoapServerVRoot" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapServerVRoot" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapServerVRoot" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapServerVRoot" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("A31B6577-71D2-4344-AEDF-ADC1B0DC5347")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Publikuje uwierzytelniony, zaszyfrowane SOAP wirtualnych katalogów głównych na serwerach.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zobacz <xref:System.EnterpriseServices.Internal.SoapServerVRoot> dla implementacji domyślnej.  
  
 <xref:System.EnterpriseServices.Internal.ISoapServerVRoot> jest używana wewnętrznie przez program .NET Framework. Nie trzeba używać go bezpośrednio w kodzie.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateVirtualRootEx">
      <MemberSignature Language="C#" Value="public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, [out] string&amp; baseUrl, [out] string&amp; virtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, homePage As String, discoFile As String, secureSockets As String, authentication As String, operation As String, ByRef baseUrl As String, ByRef virtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, System::String ^ homePage, System::String ^ discoFile, System::String ^ secureSockets, System::String ^ authentication, System::String ^ operation, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="homePage" Type="System.String" />
        <Parameter Name="discoFile" Type="System.String" />
        <Parameter Name="secureSockets" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String&amp;" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String&amp;" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Główny serwer sieci Web.</param>
        <param name="inBaseUrl">Podstawowy adres URL zawierający wirtualnego katalogu głównego.</param>
        <param name="inVirtualRoot">Nazwa wirtualnego katalogu głównego.</param>
        <param name="homePage">
          <see langword="true" /> Jeśli <see langword="EnableDefaultDoc" /> właściwość jest ustawiona, a w przeciwnym razie <see langword="false" />.</param>
        <param name="discoFile">
          <see langword="true" /> Jeśli domyślny plik odnajdywania ma być tworzony; <see langword="false" /> ma być brak pliku odnajdywania. Jeśli <see langword="false" /> i Default.disco plik istnieje, zostanie on usunięty.</param>
        <param name="secureSockets">
          <see langword="true" /> Jeśli szyfrowanie SSL jest wymagana. w przeciwnym razie <see langword="false" />.</param>
        <param name="authentication">Określ "anonymous", jeśli uwierzytelnianie ma być używane (użytkowników anonimowych). W przeciwnym razie Określ pusty ciąg.</param>
        <param name="operation">Nie używany. Określ <see langword="null" /> dla tego parametru.</param>
        <param name="baseUrl">Gdy metoda zwróci wartość, ten parametr zawiera podstawowy adres URL.</param>
        <param name="virtualRoot">Gdy metoda zwróci wartość, ten parametr zawiera nazwę wirtualnego katalogu głównego.</param>
        <param name="physicalPath">Gdy metoda zwróci wartość, ten parametr zawiera adres dysku wirtualnym katalogu głównym.</param>
        <summary>Utworzenie wirtualnego katalogu głównego SOAP opcje zabezpieczeń.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący w łańcuchu wywołań nie ma uprawnień dostępu do kodu niezarządzanego.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Narzędzia protokołu SOAP nie jest dostępna.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRootEx">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRootEx (string rootWebServer, string baseUrl, string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRootEx(string rootWebServer, string baseUrl, string virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRootEx (rootWebServer As String, baseUrl As String, virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteVirtualRootEx(System::String ^ rootWebServer, System::String ^ baseUrl, System::String ^ virtualRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="virtualRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Główny serwer sieci Web.</param>
        <param name="baseUrl">Podstawowy adres URL zawierający wirtualnego katalogu głównego.</param>
        <param name="virtualRoot">Nazwa wirtualnego katalogu głównego.</param>
        <summary>Usuwa wirtualnego katalogu głównego. Nie są w pełni zaimplementowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Funkcje, które można usunąć wirtualnego katalogu głównego nie jest obecnie dostępna w implementację tego interfejsu. Implementacja zwraca bez usuwania katalogu głównego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący w łańcuchu wywołań nie ma uprawnień dostępu do kodu niezarządzanego.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Narzędzia protokołu SOAP nie jest dostępna.</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">Aby zidentyfikować katalogu systemu nie powiodło się.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRootStatus">
      <MemberSignature Language="C#" Value="public void GetVirtualRootStatus (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string exists, out string secureSockets, out string windowsAuth, out string anonymous, out string homePage, out string discoFile, out string physicalPath, out string baseUrl, out string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVirtualRootStatus(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; exists, [out] string&amp; secureSockets, [out] string&amp; windowsAuth, [out] string&amp; anonymous, [out] string&amp; homePage, [out] string&amp; discoFile, [out] string&amp; physicalPath, [out] string&amp; baseUrl, [out] string&amp; virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVirtualRootStatus (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef exists As String, ByRef secureSockets As String, ByRef windowsAuth As String, ByRef anonymous As String, ByRef homePage As String, ByRef discoFile As String, ByRef physicalPath As String, ByRef baseUrl As String, ByRef virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetVirtualRootStatus(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % exists, [Runtime::InteropServices::Out] System::String ^ % secureSockets, [Runtime::InteropServices::Out] System::String ^ % windowsAuth, [Runtime::InteropServices::Out] System::String ^ % anonymous, [Runtime::InteropServices::Out] System::String ^ % homePage, [Runtime::InteropServices::Out] System::String ^ % discoFile, [Runtime::InteropServices::Out] System::String ^ % physicalPath, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="exists" Type="System.String&amp;" RefType="out" />
        <Parameter Name="secureSockets" Type="System.String&amp;" RefType="out" />
        <Parameter Name="windowsAuth" Type="System.String&amp;" RefType="out" />
        <Parameter Name="anonymous" Type="System.String&amp;" RefType="out" />
        <Parameter Name="homePage" Type="System.String&amp;" RefType="out" />
        <Parameter Name="discoFile" Type="System.String&amp;" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="baseUrl" Type="System.String&amp;" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Główny serwer sieci Web.</param>
        <param name="inBaseUrl">Podstawowy adres URL zawierający wirtualnego katalogu głównego.</param>
        <param name="inVirtualRoot">Nazwa wirtualnego katalogu głównego.</param>
        <param name="exists">Gdy metoda zwróci wartość, ten parametr zawiera <see langword="true" /> Jeśli katalog wirtualny istnieje; w przeciwnym razie <see langword="false" />.</param>
        <param name="secureSockets">Gdy metoda zwróci wartość, ten parametr zawiera <see langword="true" /> Jeśli szyfrowania SSL jest wymagany; w przeciwnym razie wartość <see langword="false" />.</param>
        <param name="windowsAuth">Gdy metoda zwróci wartość, ten parametr zawiera <see langword="true" /> Jeśli uwierzytelnianie systemu Windows jest ustawiona, w przeciwnym razie <see langword="false" />.</param>
        <param name="anonymous">Gdy metoda zwróci wartość, ten parametr zawiera <see langword="true" /> Jeśli uwierzytelnianie nie jest ustawiona (użytkowników anonimowych); w przeciwnym razie <see langword="false" />.</param>
        <param name="homePage">Gdy metoda zwróci wartość, ten parametr zawiera <see langword="true" /> Jeśli katalogu wirtualnego katalogu głównego <see langword="EnableDefaultDoc" /> właściwość jest ustawiona, a w przeciwnym razie <see langword="false" />.</param>
        <param name="discoFile">Gdy metoda zwróci wartość, ten parametr zawiera <see langword="true" /> Jeśli istnieje plik Default.disco; w przeciwnym razie <see langword="false" />.</param>
        <param name="physicalPath">Gdy metoda zwróci wartość, ten parametr zawiera adres dysku wirtualnym katalogu głównym.</param>
        <param name="baseUrl">Gdy metoda zwróci wartość, ten parametr zawiera podstawowy adres URL.</param>
        <param name="virtualRoot">Gdy metoda zwróci wartość, ten parametr zawiera nazwę wirtualnego katalogu głównego.</param>
        <summary>Zwraca informacje o stanie zabezpieczeń z istniejącą SOAP wirtualnego katalogu głównego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>