<Type Name="ClrObjectFactory" FullName="System.EnterpriseServices.Internal.ClrObjectFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="723ff2b0aef345260a1c19f8f6a4286d0eaba3da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452223" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClrObjectFactory : System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrObjectFactory extends System.Object implements class System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ClrObjectFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ClrObjectFactory&#xA;Implements IClrObjectFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClrObjectFactory : System::EnterpriseServices::Internal::IClrObjectFactory" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IClrObjectFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("ecabafd1-7f19-11d2-978e-0000f8757e2a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Aktywuje obsługujące protokół SOAP modelu COM + serwer proxy aplikacji od klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory> jest używana wewnętrznie przez program .NET Framework. Nie trzeba użyć klasy bezpośrednio w kodzie.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrObjectFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClrObjectFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.EnterpriseServices.Internal.ClrObjectFactory" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromAssembly">
      <MemberSignature Language="C#" Value="public object CreateFromAssembly (string AssemblyName, string TypeName, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromAssembly(string AssemblyName, string TypeName, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromAssembly (AssemblyName As String, TypeName As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromAssembly(System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ Mode);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyName">Nazwa zestawu, aby aktywować.</param>
        <param name="TypeName">Nazwa typu w celu aktywowania.</param>
        <param name="Mode">Nie używany.</param>
        <summary>Aktywuje zdalnego zestawu za pomocą funkcji zdalnych .NET, przy użyciu pliku konfiguracji zestawu.</summary>
        <returns>Wystąpienie <see cref="T:System.Object" /> reprezentujący typ z kulturą, argumentów i ustawić atrybuty powiązania i aktywacji <see langword="null" />, lub <see langword="null" /> Jeśli <paramref name="TypeName" /> parametr nie zostanie znaleziony.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący w łańcuchu wywołań nie ma uprawnień dostępu do kodu niezarządzanego.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">Klasa nie jest zarejestrowany.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość wywoływania niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFromMailbox">
      <MemberSignature Language="C#" Value="public object CreateFromMailbox (string Mailbox, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromMailbox(string Mailbox, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromMailbox (Mailbox As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromMailbox(System::String ^ Mailbox, System::String ^ Mode);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromMailbox(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mailbox" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Mailbox">Skrzynka pocztowa usługi sieci Web.</param>
        <param name="Mode">Nie używany.</param>
        <summary>Aktywuje zdalnego zestawu za pomocą funkcji zdalnych .NET, przy użyciu zdalnego zestawu skrzynki pocztowej. Nie zaimplementowano obecnie; zgłasza wyjątek <see cref="T:System.Runtime.InteropServices.COMException" /> Jeśli wywołany.</summary>
        <returns>Ta metoda zgłasza wyjątek, jeśli wywołany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zgłasza wyjątek, jeśli wywołany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Simple Mail Transfer Protocol (SMTP) nie jest zaimplementowana.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromVroot">
      <MemberSignature Language="C#" Value="public object CreateFromVroot (string VrootUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromVroot(string VrootUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromVroot (VrootUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromVroot(System::String ^ VrootUrl, System::String ^ Mode);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VrootUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VrootUrl">URL wirtualnego katalogu głównego obiektu aktywacji.</param>
        <param name="Mode">Nie używany.</param>
        <summary>Aktywuje zdalnego zestawu za pomocą funkcji zdalnych .NET, przy użyciu adresu URL wirtualnego katalogu głównego zestawu zdalnego.</summary>
        <returns>Wystąpienie <see cref="T:System.Object" /> reprezentujący typ, kultury, argumentów i powiązania i aktywacji atrybutów ustawioną <see langword="null" />, lub <see langword="null" /> Jeśli zestawu oznaczona <paramref name="VrootUrl" /> parametr nie zostanie znaleziony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> dołącza ciąg "? wsdl" do `VrootUrl` i wywołania <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> do aktywowania obiektu zdalnego.  
  
 Wersja SOAP używana przez .NET remoting jest RPC/encoded, nie literał/dokumentu, co jest niezbędne do współdziałanie protokołu SOAP. W związku z tym <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> nie działają w przypadku większości usług sieci Web ASMX.  
  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> wymaga uprawnień administratora na komputerze lokalnym podczas pierwszego uruchomienia, ponieważ tworzy i instaluje klienta serwera proxy do komunikacji ze zdalnego zestawu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący w łańcuchu wywołań nie ma uprawnień dostępu do kodu niezarządzanego.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można otworzyć tokenu wątku.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość wywoływania niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFromWsdl">
      <MemberSignature Language="C#" Value="public object CreateFromWsdl (string WsdlUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromWsdl(string WsdlUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromWsdl (WsdlUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromWsdl(System::String ^ WsdlUrl, System::String ^ Mode);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromWsdl(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WsdlUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="WsdlUrl">WSDL adres URL usługi sieci Web.</param>
        <param name="Mode">Nie używany.</param>
        <summary>Aktywuje zdalnego zestawu za pomocą funkcji zdalnych .NET, przy użyciu sieci Web Services Description Language (WSDL) usługi XML sieci Web.</summary>
        <returns>Wystąpienie <see cref="T:System.Object" /> reprezentujący typ, kultury, argumentów i powiązania i aktywacji atrybutów ustawioną <see langword="null" />, lub <see langword="null" /> Jeśli zestawu oznaczona <paramref name="WsdlUrl" /> parametr nie zostanie znaleziony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przetwarza WSDL przekazano i, jeśli to konieczne, generuje serwer proxy, a następnie aktywuje obiektu zdalnego.  
  
 Wersja SOAP używana przez .NET remoting jest RPC/encoded, nie literał/dokumentu, co jest niezbędne do współdziałanie protokołu SOAP. W związku z tym <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> nie działają w przypadku większości usług sieci Web ASMX.  
  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> wymaga uprawnień administratora na komputerze lokalnym podczas pierwszego uruchomienia, ponieważ tworzy i instaluje klienta serwera proxy do komunikacji ze zdalnego zestawu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący w łańcuchu wywołań nie ma uprawnień dostępu do kodu niezarządzanego.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">Nie można otworzyć tokenu wątku.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość wywoływania niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>