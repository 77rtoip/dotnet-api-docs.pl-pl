<Type Name="XNodeEqualityComparer" FullName="System.Xml.Linq.XNodeEqualityComparer">
  <TypeSignature Language="C#" Value="public sealed class XNodeEqualityComparer : System.Collections.Generic.IEqualityComparer&lt;System.Xml.Linq.XNode&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XNodeEqualityComparer extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;class System.Xml.Linq.XNode&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XNodeEqualityComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XNodeEqualityComparer&#xA;Implements IEqualityComparer, IEqualityComparer(Of XNode)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XNodeEqualityComparer sealed : System::Collections::Generic::IEqualityComparer&lt;System::Xml::Linq::XNode ^&gt;, System::Collections::IEqualityComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.Xml.Linq.XNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f1483-101">Porównuje węzłów do ustalenia, czy są równe.</span><span class="sxs-lookup"><span data-stu-id="f1483-101">Compares nodes to determine whether they are equal.</span></span> <span data-ttu-id="f1483-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="f1483-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1483-103">Ta klasa służy do implementowania <xref:System.Collections.IEqualityComparer?displayProperty=nameWithType> i <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f1483-103">The purpose of this class is to implement <xref:System.Collections.IEqualityComparer?displayProperty=nameWithType> and <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f1483-104">Klasy, które wymagają tożsamości (takie jak <xref:System.Collections.Generic.Dictionary%602> ) wymagają wystąpienia klasy, która implementuje jednej z tych interfejsów.</span><span class="sxs-lookup"><span data-stu-id="f1483-104">Classes that require identity (such as <xref:System.Collections.Generic.Dictionary%602> ) require an instance of a class that implements one of these interfaces.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XNodeEqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XNodeEqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1483-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f1483-105">Initializes a new instance of the <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1483-106">W poniższym przykładzie użyto tej klasy, aby określić, czy dwa węzły są takie same.</span><span class="sxs-lookup"><span data-stu-id="f1483-106">The following example uses this class to determine whether two nodes are equal.</span></span>  
  
```csharp  
XElement xmlTree1 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XElement xmlTree2 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
xmlTree2.Add(new XElement("NewChild", "new content"));  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
```  
  
 <span data-ttu-id="f1483-107">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="f1483-107">This example produces the following output:</span></span>  
  
```  
True  
False  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xml.Linq.XNode x, System.Xml.Linq.XNode y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xml.Linq.XNode x, class System.Xml.Linq.XNode y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As XNode, y As XNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xml::Linq::XNode ^ x, System::Xml::Linq::XNode ^ y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Xml.Linq.XNode" />
        <Parameter Name="y" Type="System.Xml.Linq.XNode" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f1483-108">Pierwszy <see cref="T:System.Xml.Linq.XNode" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="f1483-108">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="f1483-109">Drugi <see cref="T:System.Xml.Linq.XNode" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="f1483-109">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <summary><span data-ttu-id="f1483-110">Porównuje wartości dwa węzły.</span><span class="sxs-lookup"><span data-stu-id="f1483-110">Compares the values of two nodes.</span></span></summary>
        <returns><span data-ttu-id="f1483-111">A <see cref="T:System.Boolean" /> wskazującą, czy węzły są równe.</span><span class="sxs-lookup"><span data-stu-id="f1483-111">A <see cref="T:System.Boolean" /> indicating if the nodes are equal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1483-112">Czy dwa węzły są takie same należy ustalić następujące kryteria:</span><span class="sxs-lookup"><span data-stu-id="f1483-112">The following criteria determine whether two nodes are equal:</span></span>  
  
-   <span data-ttu-id="f1483-113">A `null` węzeł jest równa innej `null` węzła, ale nierówne niż`null` węzła.</span><span class="sxs-lookup"><span data-stu-id="f1483-113">A `null` node is equal to another `null` node but unequal to a non-`null` node.</span></span>  
  
-   <span data-ttu-id="f1483-114">Dwa <xref:System.Xml.Linq.XNode> obiekty o różnych typach nigdy nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="f1483-114">Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.</span></span>  
  
-   <span data-ttu-id="f1483-115">Dwa <xref:System.Xml.Linq.XText> węzły są takie same, które zawierają ten sam tekst.</span><span class="sxs-lookup"><span data-stu-id="f1483-115">Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.</span></span>  
  
-   <span data-ttu-id="f1483-116">Dwa <xref:System.Xml.Linq.XElement> węzły są takie same, gdy mają one taką samą nazwę tagu, ten sam zestaw atrybutów, które mają takie same wartości, a (Ignorowanie komentarze i instrukcji przetwarzania), zawierają dwie sekwencje równej długości równej parowania zawartości węzłów.</span><span class="sxs-lookup"><span data-stu-id="f1483-116">Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes.</span></span>  
  
-   <span data-ttu-id="f1483-117">Dwa <xref:System.Xml.Linq.XDocument> obiekty są takie same, jeśli ich węzłów głównych są takie same.</span><span class="sxs-lookup"><span data-stu-id="f1483-117">Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.</span></span>  
  
-   <span data-ttu-id="f1483-118">Dwa <xref:System.Xml.Linq.XComment> węzły są takie same, które zawierają ten sam tekst komentarza.</span><span class="sxs-lookup"><span data-stu-id="f1483-118">Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.</span></span>  
  
-   <span data-ttu-id="f1483-119">Dwa <xref:System.Xml.Linq.XProcessingInstruction> węzły są takie same, jeśli mają one taką samą docelowych i danych.</span><span class="sxs-lookup"><span data-stu-id="f1483-119">Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.</span></span>  
  
-   <span data-ttu-id="f1483-120">Dwa <xref:System.Xml.Linq.XDocumentType> węzły są takie same Jeśli mieć tej samej nazwy, identyfikator publiczny, identyfikator systemowy i podzestawu wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="f1483-120">Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1483-121">W poniższym przykładzie użyto tej klasy, aby porównać dwa węzły.</span><span class="sxs-lookup"><span data-stu-id="f1483-121">The following example uses this class to compare two nodes.</span></span>  
  
```csharp  
XElement xmlTree1 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XElement xmlTree2 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
xmlTree2.Add(new XElement("NewChild", "new content"));  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
```  
  
 <span data-ttu-id="f1483-122">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="f1483-122">This example produces the following output:</span></span>  
  
```  
True  
False  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Xml.Linq.XNode obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Xml.Linq.XNode obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As XNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Xml::Linq::XNode ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Xml.Linq.XNode" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f1483-123"><see cref="T:System.Xml.Linq.XNode" /> Do wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f1483-123">The <see cref="T:System.Xml.Linq.XNode" /> to hash.</span></span></param>
        <summary><span data-ttu-id="f1483-124">Zwraca wartość skrótu na podstawie <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="f1483-124">Returns a hash code based on an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <returns><span data-ttu-id="f1483-125">A <see cref="T:System.Int32" /> zawierający na podstawie wartości skrótu dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="f1483-125">A <see cref="T:System.Int32" /> that contains a value-based hash code for the node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1483-126"><xref:System.Xml.Linq.XNode> Implementacja <xref:System.Object.GetHashCode%2A> jest oparta na tożsamości referencyjnej węzła.</span><span class="sxs-lookup"><span data-stu-id="f1483-126">The <xref:System.Xml.Linq.XNode> implementation of  <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node.</span></span> <span data-ttu-id="f1483-127">Ta metoda oblicza głębokie wartość skrótu na podstawie wartości węzła i wszystkie obiekty zależne.</span><span class="sxs-lookup"><span data-stu-id="f1483-127">This method computes a deep hash code based on the value of the node and all descendants.</span></span> <span data-ttu-id="f1483-128">Wartość skrótu odzwierciedla wszystkie atrybuty i wszystkich węzłów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="f1483-128">The hash code reflects all attributes and all descendent nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1483-129">W poniższym przykładzie użyto tej metody można uzyskać dokładnego wartość skrótu dla drzewo XML.</span><span class="sxs-lookup"><span data-stu-id="f1483-129">The following example uses this method to get a deep hash code for an XML tree.</span></span>  
  
```csharp  
XElement xmlTree = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine("HashCode: {0}", equalityComparer.GetHashCode(xmlTree).ToString("X"));  
xmlTree.Add(new XElement("NewChild", "new content"));  
Console.WriteLine("HashCode: {0}", equalityComparer.GetHashCode(xmlTree).ToString("X"));  
```  
  
 <span data-ttu-id="f1483-130">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="f1483-130">This example produces the following output:</span></span>  
  
```  
HashCode: 958CCD0  
HashCode: AD26516B  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f1483-131">Pierwszy <see cref="T:System.Xml.Linq.XNode" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="f1483-131">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="f1483-132">Drugi <see cref="T:System.Xml.Linq.XNode" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="f1483-132">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <summary><span data-ttu-id="f1483-133">Porównuje wartości dwa węzły.</span><span class="sxs-lookup"><span data-stu-id="f1483-133">Compares the values of two nodes.</span></span></summary>
        <returns>
          <span data-ttu-id="f1483-134"><see langword="true" /> Jeśli węzły są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1483-134"><see langword="true" /> if the nodes are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1483-135">Czy dwa węzły są takie same należy ustalić następujące kryteria:</span><span class="sxs-lookup"><span data-stu-id="f1483-135">The following criteria determine whether two nodes are equal:</span></span>  
  
-   <span data-ttu-id="f1483-136">A `null` węzeł jest równa innej `null` węzła, ale nierówne niż`null` węzła.</span><span class="sxs-lookup"><span data-stu-id="f1483-136">A `null` node is equal to another `null` node but unequal to a non-`null` node.</span></span>  
  
-   <span data-ttu-id="f1483-137">Dwa <xref:System.Xml.Linq.XNode> obiekty o różnych typach nigdy nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="f1483-137">Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.</span></span>  
  
-   <span data-ttu-id="f1483-138">Dwa <xref:System.Xml.Linq.XText> węzły są takie same, które zawierają ten sam tekst.</span><span class="sxs-lookup"><span data-stu-id="f1483-138">Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.</span></span>  
  
-   <span data-ttu-id="f1483-139">Dwa <xref:System.Xml.Linq.XElement> węzły są takie same, jeśli mają taką samą nazwę tagu, ten sam zestaw atrybutów, które mają takie same wartości, a (Ignorowanie komentarze i instrukcji przetwarzania), zawierają dwóch sekwencji equa długość parowania równego zawartości węzłów.</span><span class="sxs-lookup"><span data-stu-id="f1483-139">Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equa-length sequences of pairwise equal content nodes.</span></span>  
  
-   <span data-ttu-id="f1483-140">Dwa <xref:System.Xml.Linq.XDocument> obiekty są takie same, jeśli ich węzłów głównych są takie same.</span><span class="sxs-lookup"><span data-stu-id="f1483-140">Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.</span></span>  
  
-   <span data-ttu-id="f1483-141">Dwa <xref:System.Xml.Linq.XComment> węzły są takie same, które zawierają ten sam tekst komentarza.</span><span class="sxs-lookup"><span data-stu-id="f1483-141">Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.</span></span>  
  
-   <span data-ttu-id="f1483-142">Dwa <xref:System.Xml.Linq.XProcessingInstruction> węzły są takie same, jeśli mają one taką samą docelowych i danych.</span><span class="sxs-lookup"><span data-stu-id="f1483-142">Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.</span></span>  
  
-   <span data-ttu-id="f1483-143">Dwa <xref:System.Xml.Linq.XDocumentType> węzły są takie same Jeśli mieć tej samej nazwy, identyfikator publiczny, identyfikator systemowy i podzestawu wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="f1483-143">Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f1483-144">Węzeł do wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f1483-144">The node to hash.</span></span></param>
        <summary><span data-ttu-id="f1483-145">Zwraca wartość skrótu na podstawie wartości węzła.</span><span class="sxs-lookup"><span data-stu-id="f1483-145">Returns a hash code based on the value of a node.</span></span></summary>
        <returns><span data-ttu-id="f1483-146">A <see cref="T:System.Int32" /> zawierający na podstawie wartości skrótu dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="f1483-146">A <see cref="T:System.Int32" /> that contains a value-based hash code for the node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1483-147"><xref:System.Xml.Linq.XNode> Implementacja <xref:System.Object.GetHashCode%2A> jest oparta na tożsamości referencyjnej węzła.</span><span class="sxs-lookup"><span data-stu-id="f1483-147">The <xref:System.Xml.Linq.XNode> implementation of <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node.</span></span> <span data-ttu-id="f1483-148">Ta metoda oblicza głębokie wartość skrótu na podstawie wartości węzła, jego atrybuty i jego obiektów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="f1483-148">This method computes a deep hash code based on the value of the node, its attributes, and its descendants.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>