<Type Name="XNodeDocumentOrderComparer" FullName="System.Xml.Linq.XNodeDocumentOrderComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="493ac654e9f10f51926d596f4b7f2e74f0e95d5c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69415691" /></Metadata><TypeSignature Language="C#" Value="public sealed class XNodeDocumentOrderComparer : System.Collections.Generic.IComparer&lt;System.Xml.Linq.XNode&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XNodeDocumentOrderComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;class System.Xml.Linq.XNode&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XNodeDocumentOrderComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XNodeDocumentOrderComparer&#xA;Implements IComparer, IComparer(Of XNode)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XNodeDocumentOrderComparer sealed : System::Collections::Generic::IComparer&lt;System::Xml::Linq::XNode ^&gt;, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type XNodeDocumentOrderComparer = class&#xA;    interface IComparer&#xA;    interface IComparer&lt;XNode&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.Xml.Linq.XNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1959e-101">Zawiera funkcje do porównywania węzłów dla ich kolejności dokumentów.</span><span class="sxs-lookup"><span data-stu-id="1959e-101">Contains functionality to compare nodes for their document order.</span></span> <span data-ttu-id="1959e-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="1959e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1959e-103">Ta klasa implementuje `IComparer` i `IComparer<XNode>`.</span><span class="sxs-lookup"><span data-stu-id="1959e-103">This class implements `IComparer` and `IComparer<XNode>`.</span></span>  
  
 <span data-ttu-id="1959e-104">Zaleca się, aby zamiast używać tej klasy bezpośrednio, użyć <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1959e-104">We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method.</span></span> <span data-ttu-id="1959e-105">Ta klasa jest używana wewnętrznie przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="1959e-105">This class is used internally by that method.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="1959e-106">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="1959e-106">LINQ to XML</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XNodeDocumentOrderComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XNodeDocumentOrderComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1959e-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="1959e-107">Initializes a new instance of the <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1959e-108">Zaleca się, aby zamiast używać tej klasy bezpośrednio, użyć <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1959e-108">We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method.</span></span> <span data-ttu-id="1959e-109">Ta klasa jest używana wewnętrznie przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="1959e-109">This class is used internally by that method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1959e-110">Poniższy przykład używa tej klasy do porównania kolejności dokumentu dla dwóch węzłów.</span><span class="sxs-lookup"><span data-stu-id="1959e-110">The following example uses of this class to compare the document order for two nodes.</span></span>  
  
```csharp  
XElement xmlTree = new XElement("Root",  
    new XText("Text content."),  
    new XElement("Child1", "child1 content"),  
    new XElement("Child2", "child2 content"),  
    new XElement("Child3", "child3 content"),  
    new XText("More text content."),  
    new XElement("Child4", "child4 content"),  
    new XElement("Child5", "child5 content")  
);  
XElement child3 = xmlTree.Element("Child3");  
XElement child5 = xmlTree.Element("Child5");  
XNodeDocumentOrderComparer documentOrderComparer = new XNodeDocumentOrderComparer();  
int val = documentOrderComparer.Compare(child3, child5);  
if (val == 0)  
    Console.WriteLine("Child3 is same as Child5");  
else if (val < 0)  
    Console.WriteLine("Child3 is before Child5");  
else  
    Console.WriteLine("Child3 is after Child5");  
```  
  
 <span data-ttu-id="1959e-111">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="1959e-111">This example produces the following output:</span></span>  
  
```  
Child3 is before Child5  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="1959e-112">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="1959e-112">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (System.Xml.Linq.XNode x, System.Xml.Linq.XNode y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class System.Xml.Linq.XNode x, class System.Xml.Linq.XNode y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As XNode, y As XNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Xml::Linq::XNode ^ x, System::Xml::Linq::XNode ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Xml.Linq.XNode * System.Xml.Linq.XNode -&gt; int&#xA;override this.Compare : System.Xml.Linq.XNode * System.Xml.Linq.XNode -&gt; int" Usage="xNodeDocumentOrderComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Xml.Linq.XNode" />
        <Parameter Name="y" Type="System.Xml.Linq.XNode" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1959e-113">Pierwszy <see cref="T:System.Xml.Linq.XNode" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="1959e-113">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="1959e-114">Sekunda <see cref="T:System.Xml.Linq.XNode" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="1959e-114">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <summary><span data-ttu-id="1959e-115">Porównuje dwa węzły, aby określić ich względną kolejność dokumentów.</span><span class="sxs-lookup"><span data-stu-id="1959e-115">Compares two nodes to determine their relative document order.</span></span></summary>
        <returns><span data-ttu-id="1959e-116"><paramref name="y" /> <paramref name="x" /> <paramref name="y" /> <paramref name="x" /> Zawiera wartość 0, jeśli węzły są równe;-1 Jeśli jest przed; 1, jeśli jest po. <see cref="T:System.Int32" /></span><span class="sxs-lookup"><span data-stu-id="1959e-116">An <see cref="T:System.Int32" /> that contains 0 if the nodes are equal; -1 if <paramref name="x" /> is before <paramref name="y" />; 1 if <paramref name="x" /> is after <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1959e-117">Zaleca się, aby zamiast używać tej klasy bezpośrednio, użyć <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1959e-117">We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method.</span></span> <span data-ttu-id="1959e-118">Ta klasa jest używana wewnętrznie przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="1959e-118">This class is used internally by that method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1959e-119">Poniższy przykład używa tej klasy do porównywania kolejności dokumentów dla dwóch węzłów.</span><span class="sxs-lookup"><span data-stu-id="1959e-119">The following example uses this class to compare document order for two nodes.</span></span>  
  
```csharp  
XElement xmlTree = new XElement("Root",  
    new XText("Text content."),  
    new XElement("Child1", "child1 content"),  
    new XElement("Child2", "child2 content"),  
    new XElement("Child3", "child3 content"),  
    new XText("More text content."),  
    new XElement("Child4", "child4 content"),  
    new XElement("Child5", "child5 content")  
);  
XElement child3 = xmlTree.Element("Child3");  
XElement child5 = xmlTree.Element("Child5");  
XNodeDocumentOrderComparer documentOrderComparer = new XNodeDocumentOrderComparer();  
int val = documentOrderComparer.Compare(child3, child5);  
if (val == 0)  
    Console.WriteLine("Child3 is same as Child5");  
else if (val < 0)  
    Console.WriteLine("Child3 is before Child5");  
else  
    Console.WriteLine("Child3 is after Child5");  
```  
  
 <span data-ttu-id="1959e-120">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="1959e-120">This example produces the following output:</span></span>  
  
```  
Child3 is before Child5  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1959e-121">Dwa węzły nie mają wspólnego elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="1959e-121">The two nodes do not share a common ancestor.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="1959e-122">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="1959e-122">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1959e-123">Pierwszy <see cref="T:System.Xml.Linq.XNode" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="1959e-123">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="1959e-124">Sekunda <see cref="T:System.Xml.Linq.XNode" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="1959e-124">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <summary><span data-ttu-id="1959e-125">Porównuje dwa węzły, aby określić ich względną kolejność dokumentów.</span><span class="sxs-lookup"><span data-stu-id="1959e-125">Compares two nodes to determine their relative document order.</span></span></summary>
        <returns><span data-ttu-id="1959e-126"><paramref name="y" /> <paramref name="x" /> <paramref name="y" /> <paramref name="x" /> Zawiera wartość 0, jeśli węzły są równe;-1 Jeśli jest przed; 1, jeśli jest po. <see cref="T:System.Int32" /></span><span class="sxs-lookup"><span data-stu-id="1959e-126">An <see cref="T:System.Int32" /> that contains 0 if the nodes are equal; -1 if <paramref name="x" /> is before <paramref name="y" />; 1 if <paramref name="x" /> is after <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1959e-127">Zaleca się, aby zamiast używać tej klasy bezpośrednio, użyć <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1959e-127">We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method.</span></span> <span data-ttu-id="1959e-128">Ta klasa jest używana wewnętrznie przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="1959e-128">This class is used internally by that method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1959e-129">Dwa węzły nie mają wspólnego elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="1959e-129">The two nodes do not share a common ancestor.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1959e-130">Dwa węzły nie pochodzą od <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="1959e-130">The two nodes are not derived from <see cref="T:System.Xml.Linq.XNode" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
