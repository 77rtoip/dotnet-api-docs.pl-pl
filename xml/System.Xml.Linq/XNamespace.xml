<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XNamespace.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f4e6daba021fcb83aea5f304b739a62766ac61e5a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e6daba021fcb83aea5f304b739a62766ac61e5a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XNamespace">
          <source>Represents an XML namespace.</source>
          <target state="translated">Reprezentuje obszar nazw XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XNamespace">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This class represents the XML construct of namespaces.</source>
          <target state="translated">Ta klasa reprezentuje konstrukcję XML w przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Every <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> contains an <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</source>
          <target state="translated">Każdy <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> zawiera <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Even if an element is not in a namespace, the element's <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> still contains a namespace, <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace.None%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Nawet jeśli element nie jest w przestrzeni nazw, element w <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> nadal zawiera obszar nazw <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace.None%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XName.Namespace%2A?displayProperty=nameWithType&gt;</ph> property is guaranteed to not be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XName.Namespace%2A?displayProperty=nameWithType&gt;</ph> Właściwości jest gwarancji nie <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Creating an XNamespace Object</source>
          <target state="translated">Tworzenie obiektu XNamespace</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The most common way to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object is to simply assign a string to it.</source>
          <target state="translated">Typowym sposobem tworzenia <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> obiekt jest po prostu przypisać ciąg do niego.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>You can then combine the namespace with a local name by using the override of the addition operator.</source>
          <target state="translated">Przestrzeń nazw można następnie połączyć o nazwie lokalnej za pomocą zastąpienia operator dodawania.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The following example shows this idiom:</source>
          <target state="translated">W poniższym przykładzie pokazano to idiom:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>However, in Visual Basic, you would typically declare a global default namespace, as follows:</source>
          <target state="translated">Jednak w języku Visual Basic, czy zwykle deklarowaniu domyślnej globalnej przestrzeni nazw, w następujący sposób:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Assigning a string to an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> uses the implicit conversion from <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Przypisywanie ciąg <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> używa niejawna konwersja z <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>See <bpt id="p1">[</bpt>How to: Create a Document with Namespaces (C#) (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/af4a595e-ffb2-4187-a61b-d5ed71642c4c)</ept> for more information and examples.</source>
          <target state="translated">Zobacz <bpt id="p1">[</bpt>porady: Tworzenie dokumentu z przestrzeni nazw (C#) (LINQ do XML)<ept id="p1">](http://msdn.microsoft.com/library/af4a595e-ffb2-4187-a61b-d5ed71642c4c)</ept> dodatkowe informacje i przykłady.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>See <bpt id="p1">[</bpt>Namespaces in Visual Basic (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/10b7ba7b-518c-4f14-899f-892575d14dcc)</ept> for more information on using namespaces in Visual Basic.</source>
          <target state="translated">Zobacz <bpt id="p1">[</bpt>przestrzeni nazw w języku Visual Basic (LINQ do XML)<ept id="p1">](http://msdn.microsoft.com/library/10b7ba7b-518c-4f14-899f-892575d14dcc)</ept> Aby uzyskać więcej informacji na temat używania przestrzeni nazw w języku Visual Basic.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Controlling Namespace Prefixes</source>
          <target state="translated">Kontrolowanie Namespace prefiksy</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>If you create an attribute that declares a namespace, the prefix specified in the attribute will be persisted in the serialized XML.</source>
          <target state="translated">Jeśli tworzysz atrybut, który deklaruje przestrzeni nazw, prefiks określony w atrybucie zostaną utrwalone w serializacji XML.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>To create an attribute that declares a namespace with a prefix, you create an attribute where the namespace of the name of the attribute is <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.Xmlns%2A&gt;</ph>, and the name of the attribute is the namespace prefix.</source>
          <target state="translated">Aby utworzyć atrybutu, który deklaruje przestrzeni nazw z prefiksem, należy utworzyć gdzie przestrzeni nazw nazwa atrybutu jest atrybut <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.Xmlns%2A&gt;</ph>, a nazwa atrybutu to prefiks przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The value of the attribute is the URI of the namespace.</source>
          <target state="translated">Wartość atrybutu jest identyfikatorem URI przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The following example shows this idiom:</source>
          <target state="translated">W poniższym przykładzie pokazano to idiom:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>In Visual Basic, instead of creating a namespace node to control namespace prefixes, you would typically use a global namespace declaration:</source>
          <target state="translated">W języku Visual Basic zamiast tworzyć węzeł przestrzeni nazw, aby kontrolować prefiksy przestrzeni nazw, należy zwykle użyć deklaracji globalnej przestrzeni nazw:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Control Namespace Prefixes (C#) (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/a40d4479-f1b9-4d8b-8623-445648caed28)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>porady: kontrolki prefiksy Namespace (C#) (LINQ do XML)<ept id="p1">](http://msdn.microsoft.com/library/a40d4479-f1b9-4d8b-8623-445648caed28)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Creating a Default Namespace</source>
          <target state="translated">Tworzenie Namespace domyślne</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>When constructing an attribute that will be a namespace, if the attribute name has the special value of "xmlns", then when the XML tree is serialized, the namespace will be declared as the default namespace.</source>
          <target state="translated">Podczas tworzenia atrybutu, który będzie przestrzeni nazw, jeśli nazwa atrybutu zawiera specjalna wartość "xmlns", następnie po drzewie XML jest serializowana, przestrzeni nazw będą deklarowane jako domyślna przestrzeń nazw.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The special attribute with the name of "xmlns" itself is not in any namespace.</source>
          <target state="translated">Specjalne atrybutu o nazwie "xmlns" sam nie jest w przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The value of the attribute is the namespace URI.</source>
          <target state="translated">Wartość atrybutu jest identyfikatorem URI przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The following example creates an XML tree that contains an attribute that is declared in such a way that the namespace will become the default namespace:</source>
          <target state="translated">Poniższy przykład tworzy drzewa XML, który zawiera atrybut, który jest zadeklarowana w taki sposób, że przestrzeń nazw będzie domyślna przestrzeń nazw:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>In Visual Basic, instead of creating a namespace node to create a default namespace, you would typically use a global default namespace declaration:</source>
          <target state="translated">W języku Visual Basic zamiast tworzenia węzła obszaru nazw można utworzyć domyślnej przestrzeni nazw, należy zwykle użyć domyślnej globalnej deklaracji przestrzeni nazw:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>XNamespace Atomization</source>
          <target state="translated">Atomizacja XNamespace</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source><ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> objects are guaranteed to be atomized; that is, if two <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> objects have exactly the same URI, they will share the same instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> obiekty dotrą do atomized; oznacza to, że jeśli dwie <ph id="ph2">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> obiekty mają dokładnie ten sam identyfikator URI, będą miały tego samego wystąpienia.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>The equality and comparison operators are provided explicitly for this purpose.</source>
          <target state="translated">Operatory równości i porównanie jawnie znajdują się w tym celu.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Using Expanded Names</source>
          <target state="translated">Przy użyciu nazw rozszerzonej</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Another way to specify a namespace and a local name is to use an expanded name in the form <ph id="ph1">`{namespace}name`</ph>:</source>
          <target state="translated">Innym sposobem określania przestrzeni nazw i nazwa lokalna jest użycie rozwiniętą nazwą w formie <ph id="ph1">`{namespace}name`</ph>:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This approach has performance implications.</source>
          <target state="translated">Takie podejście ma wpływ na wydajność.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>Each time that you pass a string that contains an expanded name to <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, it must parse the name, find the atomized namespace, and find the atomized name.</source>
          <target state="translated">Zawsze przekazać ciąg, który zawiera rozwiniętą nazwą do <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>, należy przeanalizować nazwy, znaleźć atomized przestrzeni nazw i znaleźć atomized nazwy.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>This process takes CPU time.</source>
          <target state="translated">Ten proces trwa czas procesora CPU.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>If performance is important, you may want to use a different approach.</source>
          <target state="translated">Jeśli wydajności odgrywa ważną rolę, możesz użyć innej metody.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNamespace">
          <source>With Visual Basic, the recommended approach is to use XML literals, which does not involve the use of expanded names.</source>
          <target state="translated">Za pomocą Visual Basic zalecane podejście jest użycie literałów XML, który nie obejmuje Użyj rozwinięte nazw.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare to the current <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> Do porównania z bieżącą <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Określa, czy określony <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> jest taki sam, jak bieżący <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> wskazujące, czy określony <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> jest taki sam, jak bieżący <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>For two <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> objects to be equal, they must have the same URI.</source>
          <target state="translated">Dla dwóch <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> obiektów jako równe, muszą mieć ten sam identyfikator URI.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>The following example compares two namespaces that refer to the same URI.</source>
          <target state="translated">Poniższy przykład porównuje dwie przestrzenie nazw, które odwołują się do tego samego identyfikatora URI.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a namespace URI.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> zawiera identyfikator URI przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> for the specified Uniform Resource Identifier (URI).</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> dla określonego identyfikatora URI (Uniform Resource).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> created from the specified URI.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> Utworzone na podstawie określonego identyfikatora URI.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> object is guaranteed to be atomic (that is, it is the only one in the system for that particular URI).</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> obiektu gwarantuje to niepodzielne (to znaczy jest tylko jeden w systemie dla tego konkretnego identyfikatora URI).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>The following example gets a <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> from a specified URI.</source>
          <target state="translated">Poniższy przykład pobiera <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> z określonego identyfikatora URI.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.Get(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetHashCode">
          <source>Gets a hash code for this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Pobiera wartość skrótu dla tego <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetHashCode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the hash code for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> Zawierający wartość skrótu dla <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetHashCode">
          <source>This method serves as a hash function for <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</source>
          <target state="translated">Ta metoda służy jako funkcji wyznaczania wartości skrótu dla <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetHashCode">
          <source>You can use <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.GetHashCode%2A&gt;</ph> in hashing algorithms and data structures like a hash table.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace.GetHashCode%2A&gt;</ph> w mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a local name.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> zawierający nazwę lokalną.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> object created from this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> and the specified local name.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> utworzone na podstawie tego obiektu <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> i określonej nazwy lokalnej.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> created from this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> and the specified local name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> Utworzone na podstawie to <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> i określonej nazwy lokalnej.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> object is guaranteed to be atomic (that is, it is the only one in the system for a specific expanded name).</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph> obiektu gwarantuje to niepodzielne (oznacza to, że jest tylko jeden w systemie określonej nazwy rozszerzonej).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>The following example uses this property to retrieve an <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie użyto tej właściwości można pobrać <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.GetName(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XNamespace.NamespaceName">
          <source>Gets the Uniform Resource Identifier (URI) of this namespace.</source>
          <target state="translated">Pobiera jednolity identyfikator zasobów (URI) tego obszaru nazw.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.NamespaceName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the URI of the namespace.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> zawiera identyfikator URI przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.NamespaceName">
          <source>The following example shows how to use this property:</source>
          <target state="translated">Poniższy przykład przedstawia użycie tej właściwości:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.NamespaceName">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XNamespace.None">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> object that corresponds to no namespace.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> obiekt, który odpowiada bez przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.None">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that corresponds to no namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> Odpowiadający bez przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.None">
          <source>If an element or attribute is in no namespace, its namespace will be set to the namespace returned by this property.</source>
          <target state="translated">Jeśli element lub atrybut jest bez przestrzeni nazw, jego przestrzeni nazw zostanie ustawiona do przestrzeni nazw zwracane przez tę właściwość.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.None">
          <source>The following example shows uses this property to determine which elements are in no namespace.</source>
          <target state="translated">W poniższym przykładzie przedstawiono używa tej właściwości, aby określić, które elementy znajdują się w bez przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.None">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that contains the namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> Zawierającą przestrzeń nazw.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the local name.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> zawierający nazwę lokalną.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>Combines an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> object with a local name to create an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</source>
          <target state="translated">Łączy <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> obiektu o nazwie lokalnej można utworzyć <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> constructed from the namespace and local name.</source>
          <target state="translated">Nowe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> utworzone na podstawie przestrzeń nazw i nazwę lokalnego.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>This operator enables the common idiom of combining a namespace and a local name in the construction of an element or attribute.</source>
          <target state="translated">Ten operator umożliwia wspólnej idiom łączenia przestrzeni nazw i nazwę lokalnego do budowy elementu lub atrybutu.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>This idiom provides some of the benefits of having namespace prefixes, in that you can refer to a namespace using a variable that is short.</source>
          <target state="translated">To idiom zawiera niektóre korzyści prefiksy przestrzeni nazw, w tym można odwołać się do przestrzeni nazw przy użyciu zmiennej, która jest krótka.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>This eliminates syntactic noise in the code that creates XML trees.</source>
          <target state="translated">Eliminuje to składni szumu w kodzie, który tworzy drzew XML.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>The following example shows the use of the <ph id="ph1">`+`</ph> operator to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph> from an <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a local name.</source>
          <target state="translated">W poniższym przykładzie przedstawiono użycie <ph id="ph1">`+`</ph> operatora do utworzenia <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph> z <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> i nazwa lokalna.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>In Visual Basic, this is the preferred idiom:</source>
          <target state="translated">W języku Visual Basic jest to preferowany idiom:</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare.</source>
          <target state="translated">Pierwszy <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> do porównania.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare.</source>
          <target state="translated">Drugi <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> do porównania.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> are equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dwa wystąpienia elementu <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> są takie same.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> wskazujące, czy <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> są takie same.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The operator overloads <ph id="ph1">`==`</ph> and <ph id="ph2">`!=`</ph> are provided to enable comparisons between <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and string (for example, <ph id="ph4">`element.Name.Namespace == "http://www.adventure-works.com"`</ph>).</source>
          <target state="translated">Przeciążenia operatorów <ph id="ph1">`==`</ph> i <ph id="ph2">`!=`</ph> umożliwiają porównanie <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> i ciąg (na przykład <ph id="ph4">`element.Name.Namespace == "http://www.adventure-works.com"`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The predefined reference equality operators in C# require one operand to be convertible to the type of the other through reference conversions only, and do not consider the implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</source>
          <target state="translated">Operatory porównania wstępnie zdefiniowanych odwołanie w C# wymaga jednego argumentu możliwa do przekonwertowania na typ innych za pomocą tylko konwersje odwołań, a nie należy traktować niejawna konwersja z ciągu na <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The following example shows the comparison of an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string.</source>
          <target state="translated">W poniższym przykładzie przedstawiono porównanie <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> i ciąg.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the namespace URI.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> zawiera identyfikator URI przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>Converts a string containing a Uniform Resource Identifier (URI) to an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Konwertuje ciąg zawierający zasobów identyfikator URI (Uniform) do <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> constructed from the URI string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> Utworzone na podstawie ciągu identyfikatora URI.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>The following example shows the initialization of an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> variable by assigning a string to it.</source>
          <target state="translated">W poniższym przykładzie przedstawiono inicjowanie <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> zmiennej przez przypisanie ciąg.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare.</source>
          <target state="translated">Pierwszy <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> do porównania.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> to compare.</source>
          <target state="translated">Drugi <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> do porównania.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> are not equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dwa wystąpienia elementu <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> nie są takie same.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that indicates whether <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> wskazujące, czy <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> nie są takie same.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The operator overloads <ph id="ph1">`==`</ph> and <ph id="ph2">`!=`</ph> are provided to enable comparisons between <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and string (for example, <ph id="ph4">`element.Name.Namespace == "http://www.adventure-works.com"`</ph>).</source>
          <target state="translated">Przeciążenia operatorów <ph id="ph1">`==`</ph> i <ph id="ph2">`!=`</ph> umożliwiają porównanie <ph id="ph3">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> i ciąg (na przykład <ph id="ph4">`element.Name.Namespace == "http://www.adventure-works.com"`</ph>).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The predefined reference equality operators in C# require one operand to be convertible to the type of the other through reference conversions only, and do not consider the implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</source>
          <target state="translated">Operatory porównania wstępnie zdefiniowanych odwołanie w C# wymaga jednego argumentu możliwa do przekonwertowania na typ innych za pomocą tylko konwersje odwołań, a nie należy traktować niejawna konwersja z ciągu na <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>The following example shows a comparison of a <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> to a string.</source>
          <target state="translated">W poniższym przykładzie przedstawiono porównanie <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> na ciąg.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.ToString">
          <source>Returns the URI of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Zwraca identyfikator URI to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNamespace.ToString">
          <source>The URI of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</source>
          <target state="translated">Identyfikator URI to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.ToString">
          <source>The following example uses this method to print a namespace on the console.</source>
          <target state="translated">W poniższym przykładzie użyto tej metody, aby wydrukować przestrzeni nazw do konsoli.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNamespace.ToString">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> object that corresponds to the XML URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/XML/1998/namespace</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> obiekt, który odpowiada identyfikatora XML URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/XML/1998/namespace</ph><ept id="p1">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that corresponds to the XML URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/XML/1998/namespace</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> Odpowiadający identyfikatora XML URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/XML/1998/namespace</ph><ept id="p1">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>Certain standardized attributes, such as <ph id="ph1">`space`</ph>, are in the <ph id="ph2">`http://www.w3.org/XML/1998/namespace`</ph> namespace.</source>
          <target state="translated">Niektóre standardowe atrybuty, takie jak <ph id="ph1">`space`</ph>, znajdują się w <ph id="ph2">`http://www.w3.org/XML/1998/namespace`</ph> przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>The W3C standard specifies that this namespace does not have to be declared as an attribute in the XML tree.</source>
          <target state="translated">W3C standard określa tej przestrzeni nazw nie musi być zadeklarowany jako atrybut w drzewie XML.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>It is a reserved namespace that is always automatically available in the XML parser.</source>
          <target state="translated">Jest to Zarezerwowana przestrzeń nazw, który jest zawsze automatycznie dostępny w analizatorze składni XML.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>The following example shows how to create an <ph id="ph1">`xml:space="preserve"`</ph> attribute in an XML tree:</source>
          <target state="translated">Poniższy przykład przedstawia sposób tworzenia <ph id="ph1">`xml:space="preserve"`</ph> atrybutu w drzewie XML:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xml">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> object that corresponds to the xmlns URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/2000/xmlns/</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> obiekt, który odpowiada xmlns identyfikatora URI (<bpt id="p1">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/2000/xmlns/</ph><ept id="p1">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> that corresponds to the <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> URI (<bpt id="p2">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/2000/xmlns/</ph><ept id="p2">&lt;/c&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNamespace" /&gt;</ph> Odpowiadający <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> identyfikatora URI (<bpt id="p2">&lt;c&gt;</bpt><ph id="ph2">http://www.w3.org/2000/xmlns/</ph><ept id="p2">&lt;/c&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>When you declare namespaces, the namespace attributes themselves are in the <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> namespace.</source>
          <target state="translated">Deklaracja przestrzeni nazw, same atrybuty przestrzeni nazw znajdują się w <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>The W3C standard specifies that this namespace does not have to be declared as an attribute in the XML tree.</source>
          <target state="translated">W3C standard określa tej przestrzeni nazw nie musi być zadeklarowany jako atrybut w drzewie XML.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>It is a reserved namespace that is always automatically available in the XML parser.</source>
          <target state="translated">Jest to Zarezerwowana przestrzeń nazw, który jest zawsze automatycznie dostępny w analizatorze składni XML.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>The following example shows how to add a namespace to an XML tree.</source>
          <target state="translated">Poniższy przykład przedstawia sposób dodawania przestrzeni nazw na drzewo XML.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>The namespace for the attribute that declares the namespace is the namespace returned by this property.</source>
          <target state="translated">Przestrzeń nazw dla atrybutu, który deklaruje przestrzeni nazw jest zwracane przez tę właściwość przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>In Visual Basic, the preferred idiom is:</source>
          <target state="translated">W języku Visual Basic idiom preferowany jest:</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XNamespace.Xmlns">
          <source>This example produces the following output:</source>
          <target state="translated">Ten przykład generuje następujące wyniki:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>