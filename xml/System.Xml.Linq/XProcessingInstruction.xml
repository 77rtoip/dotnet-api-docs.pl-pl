<Type Name="XProcessingInstruction" FullName="System.Xml.Linq.XProcessingInstruction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da0fa01ac50a0cee89938578af14f547dd9d5d7a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69426635" /></Metadata><TypeSignature Language="C#" Value="public class XProcessingInstruction : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XProcessingInstruction extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XProcessingInstruction" />
  <TypeSignature Language="VB.NET" Value="Public Class XProcessingInstruction&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XProcessingInstruction : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XProcessingInstruction = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="81eff-101">Reprezentuje instrukcję przetwarzania XML.</span><span class="sxs-lookup"><span data-stu-id="81eff-101">Represents an XML processing instruction.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81eff-102">Możesz użyć instrukcji przetwarzania w kodzie XML, aby wskazać, że dokument XML może być przetwarzany przez jakiś procesor, taki jak XSLT.</span><span class="sxs-lookup"><span data-stu-id="81eff-102">You can use processing instructions in XML to indicate that an XML document can be processed by some processor, such as XSLT.</span></span>  
  
 <span data-ttu-id="81eff-103">Przetwarzanie instrukcji są węzłami w drzewie XML.</span><span class="sxs-lookup"><span data-stu-id="81eff-103">Processing instructions are nodes in the XML tree.</span></span> <span data-ttu-id="81eff-104">W przypadku znalezienia instrukcji przetwarzania w analizowanym kodzie XML, program [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] <xref:System.Xml.Linq.XProcessingInstruction> tworzy węzeł.</span><span class="sxs-lookup"><span data-stu-id="81eff-104">When a processing instruction is found in the XML being parsed, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] creates an <xref:System.Xml.Linq.XProcessingInstruction> node.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="81eff-105">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="81eff-105">LINQ to XML</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81eff-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Linq.XProcessingInstruction" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="81eff-106">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="81eff-107">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="81eff-107">LINQ to XML</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XProcessingInstruction (System.Xml.Linq.XProcessingInstruction other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XProcessingInstruction other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XProcessingInstruction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XProcessingInstruction(System::Xml::Linq::XProcessingInstruction ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XProcessingInstruction : System.Xml.Linq.XProcessingInstruction -&gt; System.Xml.Linq.XProcessingInstruction" Usage="new System.Xml.Linq.XProcessingInstruction other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XProcessingInstruction" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="81eff-108">Węzeł <see cref="T:System.Xml.Linq.XProcessingInstruction" /> , z którego ma zostać skopiowane.</span><span class="sxs-lookup"><span data-stu-id="81eff-108">The <see cref="T:System.Xml.Linq.XProcessingInstruction" /> node to copy from.</span></span></param>
        <summary><span data-ttu-id="81eff-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Linq.XProcessingInstruction" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="81eff-109">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81eff-110">Ten konstruktor jest używany głównie do wewnętrznego kopiowania drzewa XML.</span><span class="sxs-lookup"><span data-stu-id="81eff-110">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="81eff-111">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="81eff-111">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XProcessingInstruction : string * string -&gt; System.Xml.Linq.XProcessingInstruction" Usage="new System.Xml.Linq.XProcessingInstruction (target, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="81eff-112">Zawierający aplikację docelową <see cref="T:System.Xml.Linq.XProcessingInstruction" />. <see cref="T:System.String" /></span><span class="sxs-lookup"><span data-stu-id="81eff-112">A <see cref="T:System.String" /> containing the target application for this <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</span></span></param>
        <param name="data"><span data-ttu-id="81eff-113">Dane ciągu dla tego <see cref="T:System.Xml.Linq.XProcessingInstruction" />elementu.</span><span class="sxs-lookup"><span data-stu-id="81eff-113">The string data for this <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="81eff-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Linq.XProcessingInstruction" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="81eff-114">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81eff-115">Poniższy przykład tworzy <xref:System.Xml.Linq.XProcessingInstruction>i określa obiekt docelowy oraz dane ciągu dla instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="81eff-115">The following example creates an <xref:System.Xml.Linq.XProcessingInstruction>, and specifies a target and the string data for the processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi = new XProcessingInstruction("xml-stylesheet", "type='text/xsl' href='hello.xsl'");  
Console.WriteLine(pi);  
```  
  
```vb  
Dim pi As XProcessingInstruction = <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
Console.WriteLine(pi)  
```  
  
 <span data-ttu-id="81eff-116">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="81eff-116">This example produces the following output:</span></span>  
  
```  
<?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81eff-117">Parametr <paramref name="target" /> lub <paramref name="data" /> jest .<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="81eff-117">The <paramref name="target" /> or <paramref name="data" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81eff-118"><paramref name="target" /> Nie przestrzega ograniczeń nazwy XML.</span><span class="sxs-lookup"><span data-stu-id="81eff-118">The <paramref name="target" /> does not follow the constraints of an XML name.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="81eff-119">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="81eff-119">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : string with get, set" Usage="System.Xml.Linq.XProcessingInstruction.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81eff-120">Pobiera lub ustawia wartość ciągu tej instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="81eff-120">Gets or sets the string value of this processing instruction.</span></span></summary>
        <value><span data-ttu-id="81eff-121">A <see cref="T:System.String" /> , który zawiera wartość ciągu tej instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="81eff-121">A <see cref="T:System.String" /> that contains the string value of this processing instruction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81eff-122">Ta właściwość służy do modyfikowania drzewa XML.</span><span class="sxs-lookup"><span data-stu-id="81eff-122">You can use this property to modify an XML tree.</span></span> <span data-ttu-id="81eff-123">Ta właściwość spowoduje wystąpienie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="81eff-123">This property will cause events to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81eff-124">Poniższy przykład używa właściwości, <xref:System.Xml.Linq.XProcessingInstruction.Data%2A> aby pobrać wartość ciągu instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="81eff-124">The following example uses the <xref:System.Xml.Linq.XProcessingInstruction.Data%2A> property to retrieve the string value of a processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type='text/xsl' href='hello.xsl'");  
Console.WriteLine(pi.Data);  
pi.Data = "type='text/xsl' href='xform.xsl'";  
Console.WriteLine(pi.Data);  
```  
  
```vb  
Dim pi As XProcessingInstruction = <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
Console.WriteLine(pi.Data)  
pi.Data = "type='text/xsl' href='xform.xsl'"  
Console.WriteLine(pi.Data)  
```  
  
 <span data-ttu-id="81eff-125">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="81eff-125">This example produces the following output:</span></span>  
  
```  
type='text/xsl' href='hello.xsl'  
type='text/xsl' href='xform.xsl'  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81eff-126">Ciąg znaków <paramref name="value" /> to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81eff-126">The string <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="81eff-127">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="81eff-127">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XProcessingInstruction.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81eff-128">Pobiera typ węzła dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="81eff-128">Gets the node type for this node.</span></span></summary>
        <value><span data-ttu-id="81eff-129">Typ węzła.</span><span class="sxs-lookup"><span data-stu-id="81eff-129">The node type.</span></span> <span data-ttu-id="81eff-130">W <see cref="T:System.Xml.Linq.XProcessingInstruction" /> przypadku obiektów ta <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />wartość to.</span><span class="sxs-lookup"><span data-stu-id="81eff-130">For <see cref="T:System.Xml.Linq.XProcessingInstruction" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81eff-131">Ponieważ wszystkie klasy, które pochodzą <xref:System.Xml.Linq.XObject> od <xref:System.Xml.Linq.XObject.NodeType%2A> zawierają właściwość, można napisać kod, który działa na <xref:System.Xml.Linq.XObject>kolekcjach konkretnej podklasy.</span><span class="sxs-lookup"><span data-stu-id="81eff-131">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="81eff-132">Kod można następnie przetestować dla typu węzła w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="81eff-132">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81eff-133">Poniższy przykład tworzy instrukcję przetwarzania, a następnie drukuje jej typ węzła.</span><span class="sxs-lookup"><span data-stu-id="81eff-133">The following example creates a processing instruction, and then prints its node type.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\"");  
Console.WriteLine(pi.NodeType);  
```  
  
```vb  
Dim pi As XProcessingInstruction = _  
    <?xml-stylesheet type="text/xsl" href="hello.xsl"?>  
Console.WriteLine(pi.NodeType.ToString)  
```  
  
 <span data-ttu-id="81eff-134">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="81eff-134">This example produces the following output:</span></span>  
  
```  
ProcessingInstruction  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="81eff-135">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="81eff-135">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Xml.Linq.XProcessingInstruction.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81eff-136">Pobiera lub ustawia ciąg zawierający aplikację docelową dla tej instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="81eff-136">Gets or sets a string containing the target application for this processing instruction.</span></span></summary>
        <value><span data-ttu-id="81eff-137"><see cref="T:System.String" /> Zawierający aplikację docelową dla tej instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="81eff-137">A <see cref="T:System.String" /> containing the target application for this processing instruction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81eff-138">Poniższy przykład używa <xref:System.Xml.Linq.XProcessingInstruction.Target%2A> właściwości, aby pobrać aplikację docelową dla instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="81eff-138">The following example uses the <xref:System.Xml.Linq.XProcessingInstruction.Target%2A> property to retrieve the target application for a processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\"");  
Console.WriteLine(pi.Target);  
```  
  
```vb  
Dim pi As XProcessingInstruction = _  
    <?xml-stylesheet type="text/xsl" href="hello.xsl"?>  
Console.WriteLine(pi.Target)  
```  
  
 <span data-ttu-id="81eff-139">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="81eff-139">This example produces the following output:</span></span>  
  
```  
xml-stylesheet  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81eff-140">Ciąg znaków <paramref name="value" /> to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81eff-140">The string <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81eff-141"><paramref name="target" /> Nie przestrzega ograniczeń nazwy XML.</span><span class="sxs-lookup"><span data-stu-id="81eff-141">The <paramref name="target" /> does not follow the constraints of an XML name.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="81eff-142">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="81eff-142">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xProcessingInstruction.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="81eff-143">, <see cref="T:System.Xml.XmlWriter" /> Aby zapisać tę instrukcję przetwarzania do.</span><span class="sxs-lookup"><span data-stu-id="81eff-143">The <see cref="T:System.Xml.XmlWriter" /> to write this processing instruction to.</span></span></param>
        <summary><span data-ttu-id="81eff-144">Zapisuje tę instrukcję przetwarzania do <see cref="T:System.Xml.XmlWriter" />.</span><span class="sxs-lookup"><span data-stu-id="81eff-144">Writes this processing instruction to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81eff-145">Ta metoda jest używana głównie wewnętrznie przez metody, które piszą drzewo XML do obiektu <xref:System.Xml.XmlWriter>.</span><span class="sxs-lookup"><span data-stu-id="81eff-145">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="81eff-146">LINQ do XML</span><span class="sxs-lookup"><span data-stu-id="81eff-146">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xProcessingInstruction.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
