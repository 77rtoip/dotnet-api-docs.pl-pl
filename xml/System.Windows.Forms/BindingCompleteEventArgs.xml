<Type Name="BindingCompleteEventArgs" FullName="System.Windows.Forms.BindingCompleteEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe89a85a677cd3980d0edb450d8991be05f4fe1f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703622" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingCompleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingCompleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingCompleteEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingCompleteEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingCompleteEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingCompleteEventArgs> Zawiera informacje dotyczące wyjątków lub błędy, które wystąpiły podczas wiązania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje Obsługa <xref:System.Windows.Forms.Binding.BindingComplete> zdarzeń. Aby uruchomić ten kod, wklej go do pliku kodu puste.  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingCompleteEventArgs (System.Windows.Forms.Binding binding, System.Windows.Forms.BindingCompleteState state, System.Windows.Forms.BindingCompleteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Binding binding, valuetype System.Windows.Forms.BindingCompleteState state, valuetype System.Windows.Forms.BindingCompleteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingCompleteEventArgs(System::Windows::Forms::Binding ^ binding, System::Windows::Forms::BindingCompleteState state, System::Windows::Forms::BindingCompleteContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
        <Parameter Name="state" Type="System.Windows.Forms.BindingCompleteState" />
        <Parameter Name="context" Type="System.Windows.Forms.BindingCompleteContext" />
      </Parameters>
      <Docs>
        <param name="binding">Powiązanie skojarzone z tym wystąpieniem <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> zdarzeń.</param>
        <param name="state">Jeden z <see cref="T:System.Windows.Forms.BindingCompleteState" /> wartości.</param>
        <param name="context">Jeden z <see cref="T:System.Windows.Forms.BindingCompleteContext" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> z określone powiązanie, stanu błędu i kontekstu powiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state` Wskazuje, czy Proces wiązania zakończyła się pomyślnie, lub wystąpił błąd lub wyjątek. `context` Wskazuje, czy błąd wystąpił podczas aktualizowania powiązanej kontrolki ani źródła danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingCompleteEventArgs (System.Windows.Forms.Binding binding, System.Windows.Forms.BindingCompleteState state, System.Windows.Forms.BindingCompleteContext context, string errorText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Binding binding, valuetype System.Windows.Forms.BindingCompleteState state, valuetype System.Windows.Forms.BindingCompleteContext context, string errorText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingCompleteEventArgs(System::Windows::Forms::Binding ^ binding, System::Windows::Forms::BindingCompleteState state, System::Windows::Forms::BindingCompleteContext context, System::String ^ errorText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
        <Parameter Name="state" Type="System.Windows.Forms.BindingCompleteState" />
        <Parameter Name="context" Type="System.Windows.Forms.BindingCompleteContext" />
        <Parameter Name="errorText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="binding">Powiązanie skojarzone z tym wystąpieniem <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> zdarzeń.</param>
        <param name="state">Jeden z <see cref="T:System.Windows.Forms.BindingCompleteState" /> wartości.</param>
        <param name="context">Jeden z <see cref="T:System.Windows.Forms.BindingCompleteContext" /> wartości.</param>
        <param name="errorText">Tekst lub wyjątek komunikacie o błędzie błędy, które wystąpiły podczas wiązania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> z określone powiązanie, stanu błędu i tekst i kontekstu powiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state` Wskazuje, czy Proces wiązania zakończyła się pomyślnie, lub wystąpił błąd lub wyjątek. `context` Wskazuje, czy błąd wystąpił podczas aktualizowania powiązanej kontrolki ani źródła danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingCompleteEventArgs (System.Windows.Forms.Binding binding, System.Windows.Forms.BindingCompleteState state, System.Windows.Forms.BindingCompleteContext context, string errorText, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Binding binding, valuetype System.Windows.Forms.BindingCompleteState state, valuetype System.Windows.Forms.BindingCompleteContext context, string errorText, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingCompleteEventArgs(System::Windows::Forms::Binding ^ binding, System::Windows::Forms::BindingCompleteState state, System::Windows::Forms::BindingCompleteContext context, System::String ^ errorText, Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
        <Parameter Name="state" Type="System.Windows.Forms.BindingCompleteState" />
        <Parameter Name="context" Type="System.Windows.Forms.BindingCompleteContext" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="binding">Powiązanie skojarzone z tym wystąpieniem <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> zdarzeń.</param>
        <param name="state">Jeden z <see cref="T:System.Windows.Forms.BindingCompleteState" /> wartości.</param>
        <param name="context">Jeden z <see cref="T:System.Windows.Forms.BindingCompleteContext" /> wartości.</param>
        <param name="errorText">Tekst lub wyjątek komunikacie o błędzie błędy, które wystąpiły podczas wiązania.</param>
        <param name="exception">
          <see cref="T:System.Exception" /> Które wystąpiły podczas wiązania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> klasy określone powiązanie, stanu błędu i tekst, kontekst powiązania i wyjątków.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state` Wskazuje, czy Proces wiązania zakończyła się pomyślnie, lub wystąpił błąd lub wyjątek. `context` Wskazuje, czy błąd wystąpił podczas aktualizowania powiązanej kontrolki ani źródła danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingCompleteEventArgs (System.Windows.Forms.Binding binding, System.Windows.Forms.BindingCompleteState state, System.Windows.Forms.BindingCompleteContext context, string errorText, Exception exception, bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Binding binding, valuetype System.Windows.Forms.BindingCompleteState state, valuetype System.Windows.Forms.BindingCompleteContext context, string errorText, class System.Exception exception, bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String,System.Exception,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingCompleteEventArgs(System::Windows::Forms::Binding ^ binding, System::Windows::Forms::BindingCompleteState state, System::Windows::Forms::BindingCompleteContext context, System::String ^ errorText, Exception ^ exception, bool cancel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
        <Parameter Name="state" Type="System.Windows.Forms.BindingCompleteState" />
        <Parameter Name="context" Type="System.Windows.Forms.BindingCompleteContext" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="binding">Powiązanie skojarzone z tym wystąpieniem <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> zdarzeń.</param>
        <param name="state">Jeden z <see cref="T:System.Windows.Forms.BindingCompleteState" /> wartości.</param>
        <param name="context">Jeden z <see cref="T:System.Windows.Forms.BindingCompleteContext" /> wartości.</param>
        <param name="errorText">Tekst lub wyjątek komunikacie o błędzie błędy, które wystąpiły podczas wiązania.</param>
        <param name="exception">
          <see cref="T:System.Exception" /> Które wystąpiły podczas wiązania.</param>
        <param name="cancel">
          <see langword="true" /> Aby anulować powiązania i skup się na bieżącym kontroli; <see langword="false" /> umożliwia fokus do innego formantu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> klasy określone powiązanie, stanu błędu i tekst, kontekst powiązania, wyjątku i określa, czy powiązanie powinien zostać anulowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state` Wskazuje, czy Proces wiązania zakończyła się pomyślnie, lub wystąpił błąd lub wyjątek. `context` Wskazuje, czy błąd wystąpił podczas aktualizowania powiązanej kontrolki ani źródła danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Binding Binding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Binding Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.Binding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Binding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Binding ^ Binding { System::Windows::Forms::Binding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wiązanie skojarzone z tym wystąpieniem <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> zdarzeń.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Binding" /> Skojarzony z tym <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingCompleteEventArgs.Binding%2A> Również mogą być skojarzone z <xref:System.Windows.Forms.BindingSource.BindingComplete> zdarzenie <xref:System.Windows.Forms.BindingSource> lub klasy, która dziedziczy <xref:System.Windows.Forms.BindingManagerBase>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób obsługi <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> zdarzeń i użyj <xref:System.Windows.Forms.BindingCompleteEventArgs> zapewniające wielu formantów związanych z tym samym źródle danych pozostają zsynchronizowane, gdy jedna z wartości formantu zostanie zmieniona. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `InitializeControlsAndData` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="E:System.Windows.Forms.BindingSource.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="BindingCompleteContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingCompleteContext BindingCompleteContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingCompleteContext BindingCompleteContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingCompleteContext As BindingCompleteContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingCompleteContext BindingCompleteContext { System::Windows::Forms::BindingCompleteContext get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kierunek operacji wiązania.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.BindingCompleteContext" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób obsługi <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> zdarzeń i użyj <xref:System.Windows.Forms.BindingCompleteEventArgs> zapewniające wielu formantów związanych z tym samym źródle danych pozostają zsynchronizowane, gdy jedna z wartości formantu zostanie zmieniona. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `InitializeControlsAndData` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingCompleteState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingCompleteState BindingCompleteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingCompleteState BindingCompleteState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingCompleteState As BindingCompleteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingCompleteState BindingCompleteState { System::Windows::Forms::BindingCompleteState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan ukończenia operacji wiązania.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.BindingCompleteState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> do określenia, czy wiązanie powiodło się i wystąpił błąd lub wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.Binding> o nazwie `Binding1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#77](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#77)]
 [!code-vb[System.Windows.Forms.EventExamples#77](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#77)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tekst opisu błędu, który wystąpił podczas operacji wiązania.</summary>
        <value>Opis błędu, który wystąpił podczas operacji wiązania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca pusty ciąg, jeśli nie wystąpił błąd podczas operacji wiązania. Zwraca wartość <xref:System.Exception.Message%2A?displayProperty=nameWithType> właściwości po wystąpieniu wyjątku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.Binding> o nazwie `Binding1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#77](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#77)]
 [!code-vb[System.Windows.Forms.EventExamples#77](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#77)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek, który wystąpił podczas operacji wiązania.</summary>
        <value>
          <see cref="T:System.Exception" /> Który wystąpił podczas operacji wiązania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca `null` czy nie wystąpił wyjątek podczas operacji wiązania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób obsługi <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> zdarzeń i użyj <xref:System.Windows.Forms.BindingCompleteEventArgs> zapewniające wielu formantów związanych z tym samym źródle danych pozostają zsynchronizowane, gdy jedna z wartości formantu zostanie zmieniona. Aby uruchomić ten przykład, Wklej kod do formularza systemu Windows i wywołanie `InitializeControlsAndData` metody z Konstruktor elementu form lub <xref:System.Windows.Forms.Form.Load> metoda obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>