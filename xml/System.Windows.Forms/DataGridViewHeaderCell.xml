<Type Name="DataGridViewHeaderCell" FullName="System.Windows.Forms.DataGridViewHeaderCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="888aeaa4d66787770247fd5ad9cf526a3a7ca3d4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewHeaderCell : System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewHeaderCell extends System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewHeaderCell" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewHeaderCell&#xA;Inherits DataGridViewCell" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewHeaderCell : System::Windows::Forms::DataGridViewCell" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCell</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="758bf-101">Zawiera funkcje, które są wspólne dla komórek nagłówka wiersza i komórki nagłówka kolumny.</span>
      <span class="sxs-lookup">
        <span data-stu-id="758bf-101">Contains functionality common to row header cells and column header cells.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-102">Ta klasa jest klasą bazową dla innych klas komórki nagłówka <xref:System.Windows.Forms.DataGridViewRowHeaderCell> i <xref:System.Windows.Forms.DataGridViewColumnHeaderCell>.</span><span class="sxs-lookup"><span data-stu-id="758bf-102">This class is a base class for other header cell classes, such as <xref:System.Windows.Forms.DataGridViewRowHeaderCell> and <xref:System.Windows.Forms.DataGridViewColumnHeaderCell>.</span></span> <span data-ttu-id="758bf-103">Aby utworzyć niestandardowe wiersz nagłówka ikony lub symbole nagłówek kolumny, dziedziczą z <xref:System.Windows.Forms.DataGridViewHeaderCell> klasy oraz dodawać funkcje do malowania własne ikony lub symbolu.</span><span class="sxs-lookup"><span data-stu-id="758bf-103">To create custom row header icons or column header glyphs, inherit from the <xref:System.Windows.Forms.DataGridViewHeaderCell> class and add functionality to paint your own icon or glyph.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="758bf-104">Jeśli pochodzi od <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> i dodać nowe właściwości do klasy pochodnej, należy zastąpić <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> metodę, aby skopiować nowe właściwości podczas operacji klonowania.</span>
        <span class="sxs-lookup">
          <span data-stu-id="758bf-104">When you derive from <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> and add new properties to the derived class, be sure to override the <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> method to copy the new properties during cloning operations.</span>
        </span>
        <span data-ttu-id="758bf-105">Należy także wywołać klasy podstawowej <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> metody, aby właściwości klasy podstawowej są kopiowane do nowych komórek.</span>
        <span class="sxs-lookup">
          <span data-stu-id="758bf-105">You should also call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> method so that the properties of the base class are copied to the new cell.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
    <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewHeaderCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewHeaderCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758bf-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="ButtonState">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ButtonState ButtonState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ButtonState ButtonState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.ButtonState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ButtonState As ButtonState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ButtonState ButtonState { System::Windows::Forms::ButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-107">Pobiera zachowuje stan wizualny komórka nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-107">Gets the buttonlike visual state of the header cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-108">Jeden z <see cref="T:System.Windows.Forms.ButtonState" /> wartości; wartość domyślna jest <see cref="F:System.Windows.Forms.ButtonState.Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-108">One of the <see cref="T:System.Windows.Forms.ButtonState" /> values; the default is <see cref="F:System.Windows.Forms.ButtonState.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-109">A <xref:System.Windows.Forms.DataGridViewHeaderCell> jest jak przycisk, w którym można można kliknąć, aby ustawić stany, takie jak sortowania lub wykonywania zaznaczenie na poziomie wiersza.</span><span class="sxs-lookup"><span data-stu-id="758bf-109">A <xref:System.Windows.Forms.DataGridViewHeaderCell> is like a button in that it can be clicked to set states, such as sorting or performing row-level selection.</span></span> <span data-ttu-id="758bf-110"><xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> Używa właściwości <xref:System.Windows.Forms.ButtonState?displayProperty=nameWithType> wartości w celu zapewnienia zachowuje stany wizualne.</span><span class="sxs-lookup"><span data-stu-id="758bf-110">The <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> property uses <xref:System.Windows.Forms.ButtonState?displayProperty=nameWithType> values to provide buttonlike visual states.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758bf-111">Tworzy dokładną kopię tej komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-111">Creates an exact copy of this cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-112">
            <see cref="T:System.Object" /> Reprezentujący sklonowany <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-112">An <see cref="T:System.Object" /> that represents the cloned <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-113">Zastąpienie <xref:System.Windows.Forms.DataGridViewHeaderCell.Clone%2A> zawsze, gdy jest pochodzi z <xref:System.Windows.Forms.DataGridViewHeaderCell> i dodać nowe właściwości do klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="758bf-113">Override the <xref:System.Windows.Forms.DataGridViewHeaderCell.Clone%2A> method whenever you derive from <xref:System.Windows.Forms.DataGridViewHeaderCell> and add new properties to the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="758bf-114">W przypadku przesłaniania <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> w klasie pochodnej, wywołaj klasę podstawową <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> metody właściwości klasy podstawowej są kopiowane do nowej komórki, a następnie należy także skopiować wartości wszystkich właściwości, które zostały dodane do klasy pochodnej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="758bf-114">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> in a derived class, call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> method so that the properties of the base class are copied to the new cell, and be sure to also copy the values of any properties that were added to the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public override bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-115">Pobiera wartość wskazującą, czy komórki są obecnie wyświetlane na ekranie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-115">Gets a value that indicates whether the cell is currently displayed on-screen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-116">
            <see langword="true" /> Jeśli komórka jest wyświetlane na ekranie lub częściowo na ekranie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-116">
              <see langword="true" /> if the cell is on-screen or partially on-screen; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Displayed" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="758bf-117">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-117">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-118">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-118">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public override Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-119">Pobiera typ sformatowana wartość komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-119">Gets the type of the formatted value of the cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-120">A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.String" /> typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-120">A <see cref="T:System.Type" /> object representing the <see cref="T:System.String" /> type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-121"><xref:System.Windows.Forms.DataGridViewCell.Value%2A> Właściwość jest obiekt danych rzeczywistych zawarty w komórce, podczas gdy <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> właściwość jest sformatowany reprezentację danych.</span><span class="sxs-lookup"><span data-stu-id="758bf-121">The <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property is the actual data object contained by the cell, whereas the <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> property is the formatted representation of the data.</span></span> <span data-ttu-id="758bf-122"><xref:System.Windows.Forms.DataGridViewHeaderCell.ValueType%2A> i <xref:System.Windows.Forms.DataGridViewHeaderCell.FormattedValueType%2A> właściwości odpowiadają odpowiednio do typów danych z tych wartości.</span><span class="sxs-lookup"><span data-stu-id="758bf-122">The <xref:System.Windows.Forms.DataGridViewHeaderCell.ValueType%2A> and <xref:System.Windows.Forms.DataGridViewHeaderCell.FormattedValueType%2A> properties correspond to the data types of these values, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewHeaderCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public override bool Frozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-123">Pobiera wartość wskazującą, czy komórki jest zablokowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-123">Gets a value indicating whether the cell is frozen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-124">
            <see langword="true" /> Jeśli komórka jest zablokowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-124">
              <see langword="true" /> if the cell is frozen; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="758bf-125">Wartość domyślna to <see langword="false" /> Jeśli komórka jest odłączony od <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-125">The default is <see langword="false" /> if the cell is detached from a <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-126"><xref:System.Windows.Forms.DataGridViewHeaderCell.Frozen%2A> Właściwość jest `true` Jeśli komórka należy do zablokowanej wiersz lub kolumnę lub jeśli komórka jest komórka nagłówka lewego górnego.</span><span class="sxs-lookup"><span data-stu-id="758bf-126">The <xref:System.Windows.Forms.DataGridViewHeaderCell.Frozen%2A> property is `true` if the cell belongs to a frozen row or column, or if the cell is the top-left header cell.</span></span> <span data-ttu-id="758bf-127">Komórkę, wiersz lub kolumnę jest zablokowane podczas jej <xref:System.Windows.Forms.DataGridViewElement.State%2A> właściwość ma wartość <xref:System.Windows.Forms.DataGridViewElementStates.Frozen?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="758bf-127">A cell, row, or column is frozen when its <xref:System.Windows.Forms.DataGridViewElement.State%2A> property has a value of <xref:System.Windows.Forms.DataGridViewElementStates.Frozen?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewElement.State" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedContextMenuStrip">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.GetInheritedContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInheritedContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Forms::ContextMenuStrip ^ GetInheritedContextMenuStrip(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="758bf-128">Ignorowana przez tę implementację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-128">Ignored by this implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-129">Pobiera menu skrótów komórki nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-129">Gets the shortcut menu of the header cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-130">A <see cref="T:System.Windows.Forms.ContextMenuStrip" /> Jeśli <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> lub <see cref="T:System.Windows.Forms.DataGridView" /> ma menu skrótów przypisane; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-130">A <see cref="T:System.Windows.Forms.ContextMenuStrip" /> if the <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> or <see cref="T:System.Windows.Forms.DataGridView" /> has a shortcut menu assigned; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-131">Jeśli <xref:System.Windows.Forms.DataGridViewHeaderCell> nie ma menu skrótów, <xref:System.Windows.Forms.DataGridViewHeaderCell> będzie dziedziczyć z menu skrótów <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="758bf-131">If the <xref:System.Windows.Forms.DataGridViewHeaderCell> does not have a shortcut menu, the <xref:System.Windows.Forms.DataGridViewHeaderCell> will inherit the shortcut menu from the <xref:System.Windows.Forms.DataGridView>.</span></span> <span data-ttu-id="758bf-132">Jeśli <xref:System.Windows.Forms.DataGridView> również nie ma menu skrótów, a następnie <xref:System.Windows.Forms.DataGridViewHeaderCell.GetInheritedContextMenuStrip%2A> metoda zwróci `null`.</span><span class="sxs-lookup"><span data-stu-id="758bf-132">If the <xref:System.Windows.Forms.DataGridView> also does not have a shortcut menu, then the <xref:System.Windows.Forms.DataGridViewHeaderCell.GetInheritedContextMenuStrip%2A> method will return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedState">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewElementStates GetInheritedState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetInheritedState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.GetInheritedState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInheritedState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Forms::DataGridViewElementStates GetInheritedState(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="758bf-133">Indeks wiersza zawierającego komórki lub wartość -1, jeśli komórka nie jest komórki nagłówka wiersza lub nie jest zawarty w <see cref="T:System.Windows.Forms.DataGridView" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-133">The index of the row containing the cell or -1 if the cell is not a row header cell or is not contained within a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-134">Zwraca wartość wskazująca bieżący stan komórki jako odziedziczone z stanu jego wierszy lub kolumn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-134">Returns a value indicating the current state of the cell as inherited from the state of its row or column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-135">Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości reprezentujący stan bieżącej komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-135">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values representing the current state of the cell.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="758bf-136">Komórka jest komórki nagłówka wiersza, komórki nie jest zawarty w <see cref="T:System.Windows.Forms.DataGridView" /> kontroli, a <paramref name="rowIndex" /> nie jest wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-136">The cell is a row header cell, the cell is not contained within a <see cref="T:System.Windows.Forms.DataGridView" /> control, and <paramref name="rowIndex" /> is not -1.</span>
          </span>
          <span data-ttu-id="758bf-137">\- lub -</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-137">\- or -</span>
          </span>
          <span data-ttu-id="758bf-138">Komórka jest komórki nagłówka wiersza, komórki jest przechowywana w <see cref="T:System.Windows.Forms.DataGridView" /> kontroli, a <paramref name="rowIndex" /> jest poza prawidłowym zakresem 0, aby liczba wierszy w formancie pomniejszonej o 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-138">The cell is a row header cell, the cell is contained within a <see cref="T:System.Windows.Forms.DataGridView" /> control, and <paramref name="rowIndex" /> is outside the valid range of 0 to the number of rows in the control minus 1.</span>
          </span>
          <span data-ttu-id="758bf-139">\- lub -</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-139">\- or -</span>
          </span>
          <span data-ttu-id="758bf-140">Komórka jest komórki nagłówka wiersza i <paramref name="rowIndex" /> nie jest indeks wiersza zawierającego tej komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-140">The cell is a row header cell and <paramref name="rowIndex" /> is not the index of the row containing this cell.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="758bf-141">Komórka jest komórki nagłówka kolumny lub formantu <see cref="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell" /> i <paramref name="rowIndex" /> nie jest wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-141">The cell is a column header cell or the control's <see cref="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell" /> and <paramref name="rowIndex" /> is not -1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size GetSize (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size GetSize(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.GetSize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSize (rowIndex As Integer) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size GetSize(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="758bf-142">Indeks wiersza komórki nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-142">The row index of the header cell.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-143">Pobiera rozmiar komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-143">Gets the size of the cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-144">A <see cref="T:System.Drawing.Size" /> reprezentujący rozmiar komórki nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-144">A <see cref="T:System.Drawing.Size" /> that represents the size of the header cell.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-145"><xref:System.Windows.Forms.DataGridViewHeaderCell.GetSize%2A> Metoda zwraca rozmiar wymagany do mieści się w wiersza nagłówków kolumn, jeśli komórka nagłówka jest nagłówek kolumny, rozmiar wymagany do mieści się w kolumnie nagłówki wierszy, jeśli komórka nagłówka jest nagłówkiem wiersza lub rozmiar jest <xref:System.Windows.Forms.DataGridViewTopLeftHeaderCell> Jeśli komórka jest Górna lewa komórka nagłówka.</span><span class="sxs-lookup"><span data-stu-id="758bf-145">The <xref:System.Windows.Forms.DataGridViewHeaderCell.GetSize%2A> method returns the size necessary to fit in a row of column headers if the header cell is a column header, the size necessary to fit in a column of row headers if the header cell is a row header, or the size necessary to be a <xref:System.Windows.Forms.DataGridViewTopLeftHeaderCell> if the cell is a top left header cell.</span></span>  
  
 <span data-ttu-id="758bf-146">Jeśli komórka nie jest dołączony do <xref:System.Windows.Forms.DataGridView>, <xref:System.Windows.Forms.DataGridViewCell.Size%2A> właściwość <xref:System.Windows.Forms.DataGridViewHeaderCell> zwraca wartość (-1, -1).</span><span class="sxs-lookup"><span data-stu-id="758bf-146">If the cell is not attached to a <xref:System.Windows.Forms.DataGridView>, the <xref:System.Windows.Forms.DataGridViewCell.Size%2A> property of the <xref:System.Windows.Forms.DataGridViewHeaderCell> returns the value (-1,-1).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="758bf-147">Wartość <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> właściwość ta komórka jest <see langword="null" /> i <paramref name="rowIndex" /> nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-147">The value of the <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property for this cell is <see langword="null" /> and <paramref name="rowIndex" /> does not equal -1.</span>
          </span>
          <span data-ttu-id="758bf-148">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-148">-or-</span>
          </span>
          <span data-ttu-id="758bf-149">Wartość <see cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" /> właściwość ta komórka nie jest <see langword="null" /> i <paramref name="rowIndex" /> nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-149">The value of the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" /> property for this cell is not <see langword="null" /> and <paramref name="rowIndex" /> does not equal -1.</span>
          </span>
          <span data-ttu-id="758bf-150">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-150">-or-</span>
          </span>
          <span data-ttu-id="758bf-151">Wartość <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> właściwość ta komórka nie jest <see langword="null" /> i <paramref name="rowIndex" /> jest większa niż zero lub większa niż liczba wierszy w formancie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-151">The value of the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> property for this cell is not <see langword="null" /> and <paramref name="rowIndex" /> is less than zero or greater than or equal to the number of rows in the control.</span>
          </span>
          <span data-ttu-id="758bf-152">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-152">-or-</span>
          </span>
          <span data-ttu-id="758bf-153">Wartości <see cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" /> i <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> właściwości tej komórki są <see langword="null" /> i <paramref name="rowIndex" /> nie jest równa -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-153">The values of the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" /> and <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> properties of this cell are both <see langword="null" /> and <paramref name="rowIndex" /> does not equal -1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="758bf-154">Wartość <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> właściwość ta komórka nie jest <see langword="null" /> i <paramref name="rowIndex" /> innych niż wskazuje wiersz <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-154">The value of the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> property for this cell is not <see langword="null" /> and <paramref name="rowIndex" /> indicates a row other than the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected override object GetValue (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetValue(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetValue (rowIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetValue(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="758bf-155">Indeks wiersza nadrzędnego komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-155">The index of the cell's parent row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-156">Pobiera wartość komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-156">Gets the value of the cell.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-157">Wartość bieżącej klasy <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-157">The value of the current <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="758bf-158">
            <paramref name="rowIndex" /> nie jest wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-158">
              <paramref name="rowIndex" /> is not -1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="MouseDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseDownUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseDownUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseDownUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="758bf-159">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający informacje dotyczące pozycji myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-159">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-160">Wskazuje, czy wiersz będzie nieudostępnionych przycisk myszy jest wciśnięty, gdy wskaźnik znajduje się w komórce w wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-160">Indicates whether a row will be unshared when the mouse button is held down while the pointer is on a cell in the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-161">
            <see langword="true" /> gdy użytkownik kliknie z lewego przycisku myszy, style wizualne są włączone, a <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> właściwość jest <see langword="true" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-161">
              <see langword="true" /> if the user clicks with the left mouse button, visual styles are enabled, and the <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> property is <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-162">Aby uzyskać informacje na temat włączania stylów wizualnych, zobacz <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="758bf-162">For information about enabling visual styles, see the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="758bf-163"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseDownUnsharesRow%2A> jest wywoływana tuż przed <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="758bf-163"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseDownUnsharesRow%2A> is called just before <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A>.</span></span> <span data-ttu-id="758bf-164">Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> powoduje zatrzymywania udostępniania wiersza `rowIndex`.</span><span class="sxs-lookup"><span data-stu-id="758bf-164">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="758bf-165">Powinien on zwrócić `false` inaczej.</span><span class="sxs-lookup"><span data-stu-id="758bf-165">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="758bf-166">Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span><span class="sxs-lookup"><span data-stu-id="758bf-166">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseEnterUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseEnterUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseEnterUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseEnterUnsharesRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="758bf-167">Indeks wiersza, który wprowadzono wskaźnik myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-167">The index of the row that the mouse pointer entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-168">Wskazuje, czy wiersz będzie nieudostępnionych, gdy wskaźnik myszy porusza się nad komórką w wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-168">Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-169">
            <see langword="true" /> Jeżeli style wizualne są włączone, a <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> właściwość jest <see langword="true" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-169">
              <see langword="true" /> if visual styles are enabled, and the <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> property is <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-170">Aby uzyskać informacje na temat włączania stylów wizualnych, zobacz <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="758bf-170">For information about enabling visual styles, see the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="758bf-171"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow%2A> jest wywoływana tuż przed <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A>.</span><span class="sxs-lookup"><span data-stu-id="758bf-171"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow%2A> is called just before <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A>.</span></span> <span data-ttu-id="758bf-172">Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> powoduje zatrzymywania udostępniania wiersza `rowIndex`.</span><span class="sxs-lookup"><span data-stu-id="758bf-172">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="758bf-173">Powinien on zwrócić `false` inaczej.</span><span class="sxs-lookup"><span data-stu-id="758bf-173">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="758bf-174">Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span><span class="sxs-lookup"><span data-stu-id="758bf-174">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="758bf-175">W przypadku przesłaniania <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="758bf-175">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseLeaveUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseLeaveUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.MouseLeaveUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseLeaveUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseLeaveUnsharesRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="758bf-176">Indeks wiersza, który wskaźnik myszy w lewo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-176">The index of the row that the mouse pointer left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-177">Wskazuje, czy wiersz będzie nieudostępnionych, gdy wskaźnik myszy opuści wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-177">Indicates whether a row will be unshared when the mouse pointer leaves the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-178">
            <see langword="true" /> Jeśli <see cref="P:System.Windows.Forms.DataGridViewHeaderCell.ButtonState" /> wartość właściwości jest <see cref="F:System.Windows.Forms.ButtonState.Normal" />, style wizualne są włączone, a <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> właściwość jest <see langword="true" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-178">
              <see langword="true" /> if the <see cref="P:System.Windows.Forms.DataGridViewHeaderCell.ButtonState" /> property value is not <see cref="F:System.Windows.Forms.ButtonState.Normal" />, visual styles are enabled, and the <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> property is <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-179">Aby uzyskać informacje na temat włączania stylów wizualnych, zobacz <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="758bf-179">For information about enabling visual styles, see the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="758bf-180"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseLeaveUnsharesRow%2A> jest wywoływana tuż przed <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A>.</span><span class="sxs-lookup"><span data-stu-id="758bf-180"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseLeaveUnsharesRow%2A> is called just before <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A>.</span></span> <span data-ttu-id="758bf-181">Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> powoduje zatrzymywania udostępniania wiersza `rowIndex`.</span><span class="sxs-lookup"><span data-stu-id="758bf-181">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="758bf-182">Powinien on zwrócić `false` inaczej.</span><span class="sxs-lookup"><span data-stu-id="758bf-182">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="758bf-183">Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span><span class="sxs-lookup"><span data-stu-id="758bf-183">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MouseUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseUpUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseUpUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseUpUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="758bf-184">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający informacje dotyczące pozycji myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-184">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-185">Wskazuje, czy wiersz będzie nieudostępnionych po zwolnieniu przycisku myszy, gdy wskaźnik znajduje się w komórce w wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-185">Indicates whether a row will be unshared when the mouse button is released while the pointer is on a cell in the row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-186">
            <see langword="true" /> Jeśli został wydany lewego przycisku myszy, style wizualne są włączone i <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> właściwość jest <see langword="true" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-186">
              <see langword="true" /> if the left mouse button was released, visual styles are enabled, and the <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> property is <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-187">Aby uzyskać informacje na temat włączania stylów wizualnych, zobacz <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="758bf-187">For information about enabling visual styles, see the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="758bf-188"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseUpUnsharesRow%2A> jest wywoływana tuż przed <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="758bf-188"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseUpUnsharesRow%2A> is called just before <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A>.</span></span> <span data-ttu-id="758bf-189">Aplikacja musi zwracać `true` Jeśli wywołanie <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> powoduje zatrzymywania udostępniania wiersza `rowIndex`.</span><span class="sxs-lookup"><span data-stu-id="758bf-189">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="758bf-190">Powinien on zwrócić `false` inaczej.</span><span class="sxs-lookup"><span data-stu-id="758bf-190">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="758bf-191">Aby uzyskać więcej informacji o udostępnianiu wiersza, zobacz [najlepsze praktyki dotyczące skalowania formantu DataGridView formularzy systemu Windows](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span><span class="sxs-lookup"><span data-stu-id="758bf-191">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="758bf-192">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający informacje dotyczące pozycji myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-192">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-193">Wywoływane, gdy przycisk myszy jest wciśnięty, gdy wskaźnik znajduje się w komórce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-193">Called when the mouse button is held down while the pointer is on a cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-194"><xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> Zestawy metody <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> do <xref:System.Windows.Forms.ButtonState.Pushed> Jeśli komórki zostanie kliknięty przy lewego przycisku myszy, a style wizualne są włączone dla nagłówków.</span><span class="sxs-lookup"><span data-stu-id="758bf-194">The <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> method sets the <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> to <xref:System.Windows.Forms.ButtonState.Pushed> if the cell is clicked with the left mouse button and visual styles are enabled for headers.</span></span> <span data-ttu-id="758bf-195">Aby uzyskać więcej informacji na temat style wizualne dla nagłówków, zobacz <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="758bf-195">For more information about visual styles for headers, see the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="758bf-196">Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="758bf-196">This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="758bf-197">Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="758bf-197">It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="758bf-198">W przypadku przesłaniania <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="758bf-198">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseDown" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="758bf-199">Indeks wiersza zawierającego komórkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-199">The index of the row containing the cell.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-200">Wywoływane, gdy wskaźnik myszy zostanie umieszczony komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-200">Called when the mouse pointer enters the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-201"><xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> Zestawy metody <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> do <xref:System.Windows.Forms.ButtonState.Pushed> Jeśli lewy przycisk myszy jest wciśnięty, gdy wskaźnik myszy jest przesuwany komórki i style wizualne są włączone dla nagłówków.</span><span class="sxs-lookup"><span data-stu-id="758bf-201">The <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> method sets the <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> to <xref:System.Windows.Forms.ButtonState.Pushed> if the left mouse button is pressed when the pointer enters the cell and visual styles are enabled for headers.</span></span> <span data-ttu-id="758bf-202">Aby uzyskać więcej informacji na temat style wizualne dla nagłówków, zobacz <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="758bf-202">For more information about visual styles for headers, see the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="758bf-203">Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="758bf-203">This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="758bf-204">Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="758bf-204">It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="758bf-205">W przypadku przesłaniania <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="758bf-205">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">
          <span data-ttu-id="758bf-206">Indeks wiersza zawierającego komórkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-206">The index of the row containing the cell.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-207">Wywoływane, gdy wskaźnik myszy opuści komórkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-207">Called when the mouse pointer leaves the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-208"><xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> Zestawy metody <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> do <xref:System.Windows.Forms.ButtonState.Normal> Jeśli był w stanie inny oraz style wizualne są włączone dla nagłówków.</span><span class="sxs-lookup"><span data-stu-id="758bf-208">The <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> method sets the <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> to <xref:System.Windows.Forms.ButtonState.Normal> if it was in another state and visual styles are enabled for headers.</span></span> <span data-ttu-id="758bf-209">Aby uzyskać więcej informacji na temat style wizualne dla nagłówków, zobacz <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="758bf-209">For more information about visual styles for headers, see the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="758bf-210">Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="758bf-210">This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="758bf-211">Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="758bf-211">It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="758bf-212">W przypadku przesłaniania <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="758bf-212">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="758bf-213">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> zawierający informacje dotyczące pozycji myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-213">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-214">Wywołuje się po zwolnieniu przycisku myszy, gdy wskaźnik znajduje się nad komórką.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-214">Called when the mouse button is released while the pointer is over the cell.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-215"><xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> Zestawy metody <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> do <xref:System.Windows.Forms.ButtonState.Normal> style wizualne są włączone dla nagłówków, jeśli został wydany lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="758bf-215">The <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> method sets the <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> to <xref:System.Windows.Forms.ButtonState.Normal> if the left mouse button was released and visual styles are enabled for headers.</span></span> <span data-ttu-id="758bf-216">Aby uzyskać więcej informacji na temat style wizualne dla nagłówków, zobacz <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="758bf-216">For more information about visual styles for headers, see the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="758bf-217">Ta metoda jest podobna do <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="758bf-217">This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="758bf-218">Jest to w tym samym okoliczności, w których <xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=nameWithType> zdarzenie jest zgłaszane, ale nie faktycznie wygenerował zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="758bf-218">It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="758bf-219">W przypadku przesłaniania <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="758bf-219">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseUp" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected override void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates dataGridViewElementState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates dataGridViewElementState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates dataGridViewElementState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataGridViewElementState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <span data-ttu-id="758bf-220">
            <see cref="T:System.Drawing.Graphics" /> Używana do malowania komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-220">The <see cref="T:System.Drawing.Graphics" /> used to paint the cell.</span>
          </span>
        </param>
        <param name="clipBounds">
          <span data-ttu-id="758bf-221">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący obszaru <see cref="T:System.Windows.Forms.DataGridView" /> który musi być wyświetlony ponownie, tak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-221">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be repainted.</span>
          </span>
        </param>
        <param name="cellBounds">
          <span data-ttu-id="758bf-222">A <see cref="T:System.Drawing.Rectangle" /> zawierający granice komórki, która jest jest rysowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-222">A <see cref="T:System.Drawing.Rectangle" /> that contains the bounds of the cell that is being painted.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="758bf-223">Indeks wiersza jest są rysowane komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-223">The row index of the cell that is being painted.</span>
          </span>
        </param>
        <param name="dataGridViewElementState">
          <span data-ttu-id="758bf-224">Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> wartości, które określa stan komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-224">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that specifies the state of the cell.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="758bf-225">Dane komórki, która jest jest rysowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-225">The data of the cell that is being painted.</span>
          </span>
        </param>
        <param name="formattedValue">
          <span data-ttu-id="758bf-226">Sformatowane dane komórki, która jest jest rysowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-226">The formatted data of the cell that is being painted.</span>
          </span>
        </param>
        <param name="errorText">
          <span data-ttu-id="758bf-227">Komunikat o błędzie, który jest skojarzony z komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-227">An error message that is associated with the cell.</span>
          </span>
        </param>
        <param name="cellStyle">
          <span data-ttu-id="758bf-228">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> zawierający informacje o komórki formatowanie i style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-228">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that contains formatting and style information about the cell.</span>
          </span>
        </param>
        <param name="advancedBorderStyle">
          <span data-ttu-id="758bf-229">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> zawiera styl obramowania komórki jest są rysowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-229">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that contains border styles for the cell that is being painted.</span>
          </span>
        </param>
        <param name="paintParts">
          <span data-ttu-id="758bf-230">Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> wartości, które określa części komórki, które mają być rysowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-230">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> values that specifies which parts of the cell need to be painted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="758bf-231">Umożliwia malowanie bieżącego <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-231">Paints the current <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public override bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-232">Pobiera wartość wskazującą, czy komórki nagłówka jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-232">Gets a value indicating whether the header cell is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-233">
            <see langword="true" /> we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-233">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="758bf-234">Operacja próbuje ustawić tę właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-234">An operation tries to set this property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public override bool Resizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Resizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Resizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-235">Pobiera wartość wskazującą, czy komórki jest zmieniana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-235">Gets a value indicating whether the cell is resizable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-236">
            <see langword="true" /> Jeśli można zmieniać w tej komórce; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-236">
              <see langword="true" /> if this cell can be resized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="758bf-237">Wartość domyślna to <see langword="false" /> Jeśli komórka nie jest dołączony do <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-237">The default is <see langword="false" /> if the cell is not attached to a <see cref="T:System.Windows.Forms.DataGridView" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-238">Komórki nagłówka wiersza jest o zmiennych rozmiarach, jeśli wiersz jest o zmiennym rozmiarze lub <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing>.</span><span class="sxs-lookup"><span data-stu-id="758bf-238">A row header cell is resizable if the row is resizable or the <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> property is set to <xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing>.</span></span> <span data-ttu-id="758bf-239">Komórki nagłówka kolumny jest o zmiennych rozmiarach, jeśli kolumna jest o zmiennym rozmiarze lub <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> właściwość jest ustawiona na <xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing>.</span><span class="sxs-lookup"><span data-stu-id="758bf-239">A column header cell is resizable if the column is resizable or the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> property is set to <xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-240">Pobiera lub ustawia wartość wskazującą, czy jest zaznaczone komórki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-240">Gets or sets a value indicating whether the cell is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-241">
            <see langword="false" /> we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-241">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-242">Ta właściwość nie jest zrozumiały dla komórek nagłówka.</span><span class="sxs-lookup"><span data-stu-id="758bf-242">This property is not meaningful for header cells.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="758bf-243">Ta właściwość jest ustawiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-243">This property is being set.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="758bf-244">Zwraca ciąg opisujący bieżący obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-244">Returns a string that describes the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="758bf-245">Ciąg, który reprezentuje bieżący obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-245">A string that represents the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-246">Pobiera typ wartości przechowywanych w komórce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-246">Gets the type of the value stored in the cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-247">A <see cref="T:System.Type" /> reprezentujący obiekt <see cref="T:System.String" /> typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-247">A <see cref="T:System.Type" /> object representing the <see cref="T:System.String" /> type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="758bf-248">Pobiera wartość wskazującą, czy komórki jest widoczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-248">Gets a value indicating whether or not the cell is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="758bf-249">
            <see langword="true" /> Jeśli komórka jest widoczna; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-249">
              <see langword="true" /> if the cell is visible; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="758bf-250">Wartość domyślna to <see langword="false" /> Jeśli komórka jest odłączony od <see cref="T:System.Windows.Forms.DataGridView" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="758bf-250">The default is <see langword="false" /> if the cell is detached from a <see cref="T:System.Windows.Forms.DataGridView" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758bf-251">Jeśli komórka jest komórki nagłówka wiersza, a następnie jest widoczny, jeśli jego wiersz jest widoczna i <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="758bf-251">If the cell is a row header cell, then it is visible if its row is visible and the <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> property is `true`.</span></span> <span data-ttu-id="758bf-252">Jeśli komórka jest komórki nagłówka kolumny, a następnie jest widoczny, jeśli jej kolumna jest widoczna i <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="758bf-252">If the cell is a column header cell, then it is visible if its column is visible and the <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> property is `true`.</span></span> <span data-ttu-id="758bf-253">Jeśli komórka jest górna lewa komórka nagłówka, nie jest widoczna, jeśli obie <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> i <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> mają wartość true.</span><span class="sxs-lookup"><span data-stu-id="758bf-253">If the cell is the top left header cell, it is visible if both <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> and <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> are true.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      </Docs>
    </Member>
  </Members>
</Type>