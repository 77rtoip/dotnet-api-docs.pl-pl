<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36617700af2104e254aac0c99fbca2f634f0d425" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703613" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, lub <see cref="E:System.Windows.Forms.Control.DragOver" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.DragDrop> Zdarzenie wystąpi, gdy użytkownik kończy operację przeciągania i upuszczania, przeciągając obiekt nad formantem i upuszczanie go w formancie przez zwolnieniem przycisku myszy. <xref:System.Windows.Forms.Control.DragEnter> Zdarzenie wystąpi, gdy użytkownik przesuwa wskaźnik myszy w formancie podczas przeciągania obiektu przy użyciu myszy. <xref:System.Windows.Forms.Control.DragOver> Zdarzenie wystąpi, gdy użytkownik przesuwa wskaźnik myszy nad formantem podczas przeciągania obiektu przy użyciu myszy.  
  
 A <xref:System.Windows.Forms.DragEventArgs> obiektu określa wszelkie dane skojarzone z tym zdarzeniem; bieżący stan klawiszy SHIFT, CTRL i ALT; położenia wskaźnika myszy; i efekty przeciągania i upuszczania dozwolone przez źródło i cel zdarzenie przeciągania.  
  
 Aby uzyskać informacje na temat modelu zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania między dwiema <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołania <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli została przeniesiona myszy rozpoczyna się akcja przeciągania więcej niż <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda jest używana do określenia indeksu elementu przeciągnij podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano także przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursora `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji dla niestandardowych przeciągania i nie upuść kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczony. Niestandardowych kursorów są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> obsługi zdarzeń.  
  
 Stan klawiatury są oceniane w <xref:System.Windows.Forms.Control.DragOver> programu obsługi zdarzeń dla prawej `ListBox`, aby ustalić, jakie będą operacji przeciągania oparte na stanie klawiszy SHIFT CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` będzie mieć miejsce spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ma ustawioną wartość <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` jest określana w <xref:System.Windows.Forms.Control.DragDrop> obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania są przenoszone poza granicami formularza, a następnie operacji przeciągania i upuszczania jest anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsługi zdarzeń.  
  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 Poniższy przykład przedstawia sposób <xref:System.Windows.Forms.DragEventArgs> są przekazywane między źródłowy i docelowy operacji przeciągania i upuszczania. W tym przykładzie <xref:System.Windows.Forms.ListBox> formant jest źródło danych i <xref:System.Windows.Forms.RichTextBox> kontroli jest elementem docelowym. W przykładzie założono, że <xref:System.Windows.Forms.ListBox> formant został wypełniony listę prawidłowe nazwy plików. Gdy użytkownik przeciąga jedną wyświetlane nazwy plików z <xref:System.Windows.Forms.ListBox> kontrolować na <xref:System.Windows.Forms.RichTextBox> kontroli, pliku, do którego odwołuje się nazwa pliku jest otwarty.  
  
 Działanie jest inicjowane w <xref:System.Windows.Forms.ListBox> formantu MouseDown — zdarzenie. W <xref:System.Windows.Forms.RichTextBox.DragEnter> obsługi zdarzeń w przykładzie użyto <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> metody do sprawdzenia, czy dane są w formacie który <xref:System.Windows.Forms.RichTextBox> formantu można wyświetlić, a następnie ustawia <xref:System.Windows.Forms.DragDropEffects> właściwości w celu określenia te dane powinny zostać skopiowane z kontroli źródła do formantu docelowego. Na koniec <xref:System.Windows.Forms.RichTextBox> korzysta z programu obsługi zdarzeń DragDrop formantu <xref:System.Windows.Forms.IDataObject.GetData%2A> metody można pobrać nazwy pliku, aby otworzyć.  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">Dane skojarzone z tym zdarzeniem.</param>
        <param name="keyState">Bieżący stan klawiszy SHIFT, CTRL i ALT.</param>
        <param name="x">Współrzędna x kursora myszy w pikselach.</param>
        <param name="y">Współrzędna y kursora myszy w pikselach.</param>
        <param name="allowedEffect">Jeden z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</param>
        <param name="effect">Jeden z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DragEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera operacje przeciągania i upuszczania dozwolone przez autora (lub źródła) zdarzenie przeciągania.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy formant inicjuje operację przeciągania i upuszczania przez wywołanie metody <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> metody określa dopuszczalne skutków operacji. Na przykład podczas przeciągania pliku ze źródła, jeśli plik jest tylko do odczytu (lub z nośnika magazynu tylko do odczytu, takich jak dysk CD), źródło wskaże, czy plik może być kopiowane, ale nie przeniesione do obiektu docelowego.  
  
 Przed podjęciem próby wykonania operacji na danych przeciąganego, należy sprawdzić tę właściwość, aby upewnić się, że operacja jest dozwolona.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania między dwiema <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołania <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli została przeniesiona myszy rozpoczyna się akcja przeciągania więcej niż <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda jest używana do określenia indeksu elementu przeciągnij podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano także przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursora `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji dla niestandardowych przeciągania i nie upuść kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczony. Niestandardowych kursorów są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> obsługi zdarzeń.  
  
 Stan klawiatury są oceniane w <xref:System.Windows.Forms.Control.DragOver> programu obsługi zdarzeń dla prawej `ListBox`, aby ustalić, jakie będą operacji przeciągania oparte na stanie klawiszy SHIFT CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` będzie mieć miejsce spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ma ustawioną wartość <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` jest określana w <xref:System.Windows.Forms.Control.DragDrop> obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania są przenoszone poza granicami formularza, a następnie operacji przeciągania i upuszczania jest anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsługi zdarzeń.  
  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.IDataObject" /> zawierający dane skojarzone z tym zdarzeniem.</summary>
        <value>Dane skojarzone z tym zdarzeniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W treści procedury obsługi zdarzenia, można użyć <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> metodę, aby określić, czy dane spełniają wymagania kontrolki, na którym zostanie przeciągnięty danych. Możesz również można określić, czy próbuje przekonwertować danych zgodnie z wymaganiami formatu. Jeśli przeciąganego danych nie spełnia wymagań formatu, użyj <xref:System.Windows.Forms.IDataObject.GetData%2A> metody do pobierania danych.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania między dwiema <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołania <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli została przeniesiona myszy rozpoczyna się akcja przeciągania więcej niż <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda jest używana do określenia indeksu elementu przeciągnij podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano także przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursora `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji dla niestandardowych przeciągania i nie upuść kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczony. Niestandardowych kursorów są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> obsługi zdarzeń.  
  
 Stan klawiatury są oceniane w <xref:System.Windows.Forms.Control.DragOver> programu obsługi zdarzeń dla prawej `ListBox`, aby ustalić, jakie będą operacji przeciągania oparte na stanie klawiszy SHIFT CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` będzie mieć miejsce spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ma ustawioną wartość <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` jest określana w <xref:System.Windows.Forms.Control.DragDrop> obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania są przenoszone poza granicami formularza, a następnie operacji przeciągania i upuszczania jest anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsługi zdarzeń.  
  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia efekt listy docelowej przy użyciu operacji przeciągania i upuszczania.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie stosowany efekt określa wyświetlany kursor myszy dla obiekt docelowy operacji przeciągania i upuszczania. Jest to przydatne w celu otrzymania opinii dla użytkownika na operację, która zostanie przeprowadzona. Na przykład, jeśli naciśniesz klawisz CTRL podczas przeciągania pliku ze źródła, określ <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> aby wskazać cel podejmie próbę wykonania operacji kopiowania.  
  
 Aby użyć niestandardowych kursorów na potrzeby operacji przeciągania, zobacz <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania między dwiema <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołania <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli została przeniesiona myszy rozpoczyna się akcja przeciągania więcej niż <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda jest używana do określenia indeksu elementu przeciągnij podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano także przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursora `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji dla niestandardowych przeciągania i nie upuść kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczony. Niestandardowych kursorów są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> obsługi zdarzeń.  
  
 Stan klawiatury są oceniane w <xref:System.Windows.Forms.Control.DragOver> programu obsługi zdarzeń dla prawej `ListBox`, aby ustalić, jakie będą operacji przeciągania oparte na stanie klawiszy SHIFT CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` będzie mieć miejsce spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ma ustawioną wartość <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` jest określana w <xref:System.Windows.Forms.Control.DragDrop> obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania są przenoszone poza granicami formularza, a następnie operacji przeciągania i upuszczania jest anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsługi zdarzeń.  
  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan SHIFT, CTRL i ALT — klawisze, a także stan przycisku myszy.</summary>
        <value>Bieżący stan klawiszy SHIFT, CTRL i ALT i przycisku myszy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz wprowadzić wpływu na operacji przeciągania i upuszczania są zależne od stanu określonego klucza. Na przykład może podjąć decyzję o kopiowanie lub przenoszenie danych w zależności od tego, czy naciśnięty klawisz CTRL lub SHIFT podczas operacji przeciągania i upuszczania.  
  
 Usługi bits, które są ustawiane w <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> właściwości zidentyfikować kluczy lub przycisku myszy, które zostały naciśnięte podczas operacji. Na przykład, jeśli lewy przycisk myszy jest wciśnięty, bit pierwszy w <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> właściwość jest ustawiona. Bitowy operator AND służy do testowania dla danego stanu klucza.  
  
 W poniższej tabeli wymieniono wartości, które są używane dla określonego zdarzenia.  
  
|Wartość|Key|  
|-----------|---------|  
|1 (bit 0)|Lewy przycisk myszy.|  
|2 (bit 1)|Prawy przycisk myszy.|  
|4 (bit 2)|Klawisz SHIFT.|  
|8 (bit 3)|Klawisz CTRL.|  
|16 (bit 4)|Środkowy przycisk myszy.|  
|32 (bity. 5)|Klawisz ALT.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania między dwiema <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołania <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli została przeniesiona myszy rozpoczyna się akcja przeciągania więcej niż <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda jest używana do określenia indeksu elementu przeciągnij podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano także przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursora `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji dla niestandardowych przeciągania i nie upuść kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczony. Niestandardowych kursorów są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> obsługi zdarzeń.  
  
 Stan klawiatury są oceniane w <xref:System.Windows.Forms.Control.DragOver> programu obsługi zdarzeń dla prawej `ListBox`, aby ustalić, jakie będą operacji przeciągania oparte na stanie klawiszy SHIFT CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` będzie mieć miejsce spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ma ustawioną wartość <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` jest określana w <xref:System.Windows.Forms.Control.DragDrop> obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania są przenoszone poza granicami formularza, a następnie operacji przeciągania i upuszczania jest anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsługi zdarzeń.  
  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędną x wskaźnik myszy w współrzędne ekranu.</summary>
        <value>Współrzędna x wskaźnik myszy w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania między dwiema <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołania <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli została przeniesiona myszy rozpoczyna się akcja przeciągania więcej niż <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda jest używana do określenia indeksu elementu przeciągnij podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano także przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursora `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji dla niestandardowych przeciągania i nie upuść kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczony. Niestandardowych kursorów są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> obsługi zdarzeń.  
  
 Stan klawiatury są oceniane w <xref:System.Windows.Forms.Control.DragOver> programu obsługi zdarzeń dla prawej `ListBox`, aby ustalić, jakie będą operacji przeciągania oparte na stanie klawiszy SHIFT CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` będzie mieć miejsce spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ma ustawioną wartość <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` jest określana w <xref:System.Windows.Forms.Control.DragDrop> obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania są przenoszone poza granicami formularza, a następnie operacji przeciągania i upuszczania jest anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsługi zdarzeń.  
  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędną y wskaźnik myszy w współrzędne ekranu.</summary>
        <value>Współrzędna y wskaźnik myszy w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania między dwiema <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołania <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli została przeniesiona myszy rozpoczyna się akcja przeciągania więcej niż <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda jest używana do określenia indeksu elementu przeciągnij podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano także przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursora `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji dla niestandardowych przeciągania i nie upuść kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczony. Niestandardowych kursorów są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> obsługi zdarzeń.  
  
 Stan klawiatury są oceniane w <xref:System.Windows.Forms.Control.DragOver> programu obsługi zdarzeń dla prawej `ListBox`, aby ustalić, jakie będą operacji przeciągania oparte na stanie klawiszy SHIFT CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` będzie mieć miejsce spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ma ustawioną wartość <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` jest określana w <xref:System.Windows.Forms.Control.DragDrop> obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania są przenoszone poza granicami formularza, a następnie operacji przeciągania i upuszczania jest anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsługi zdarzeń.  
  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>