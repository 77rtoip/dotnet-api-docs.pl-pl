<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1bd409b05771970d9f3ff1200efd246535ae371" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48652856" /></Metadata><TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, lub <see cref="E:System.Windows.Forms.Control.DragOver" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.DragDrop> Zdarzenie występuje, gdy użytkownik wykona operację przeciągania i upuszczania, przeciągając obiekt nad formantem i upuść je na kontrolkę, zwolnij przycisk myszy. <xref:System.Windows.Forms.Control.DragEnter> Zdarzenie występuje, gdy użytkownik przesuwa wskaźnik myszy na formant podczas przeciągania obiektu za pomocą myszy. <xref:System.Windows.Forms.Control.DragOver> Zdarzenie występuje, gdy użytkownik przesuwa wskaźnik myszy nad formant podczas przeciągania obiektu za pomocą myszy.  
  
 Element <xref:System.Windows.Forms.DragEventArgs> obiektu określa wszelkie dane skojarzone z tym zdarzeniem; bieżący stan klawiszy SHIFT, CTRL i ALT położenia wskaźnika myszy; i efekty przeciągnij i upuść dozwolone przez źródło i cel zdarzenie przeciągania.  
  
 Aby uzyskać informacje na temat modelu zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania pomiędzy dwoma <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołuje <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli przeniesiono myszy rozpoczyna się akcja przeciągania ponad <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda służy do określania indeks elementu, aby przeciągnąć podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano również przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursorów `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji, przeciągnij niestandardowych, jak i nieupuszczalny kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programu obsługi zdarzeń.  
  
 Stan klawiatury jest oceniany w <xref:System.Windows.Forms.Control.DragOver> program obsługi zdarzeń dla po prawej stronie `ListBox`, aby ustalić, jaka będzie operacji przeciągania oparte na stanie klawiszy SHIFT, CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` gdzie może wystąpić spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ustawiono <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` , jest określana w <xref:System.Windows.Forms.Control.DragDrop> programu obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania przenosi poza granicami formularza, a następnie operację przeciągania i upuszczania zostało anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> programu obsługi zdarzeń.  
  
 Ten fragment kodu demonstruje sposób użycia <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 Poniższy przykład ilustruje sposób <xref:System.Windows.Forms.DragEventArgs> są przekazywane między miejscem źródłowym i docelowym operacji przeciągania i upuszczania. W tym przykładzie <xref:System.Windows.Forms.ListBox> formant jest źródło danych, a <xref:System.Windows.Forms.RichTextBox> formant jest elementem docelowym. W przykładzie założono, że <xref:System.Windows.Forms.ListBox> kontrolka została wypełniona listę prawidłowe nazwy plików. Gdy użytkownik przeciągnie jednego z wyświetlonej nazwy plików z <xref:System.Windows.Forms.ListBox> kontrolować na <xref:System.Windows.Forms.RichTextBox> kontroli, plików, do którego odwołuje się nazwa pliku jest otwarty.  
  
 Operacja jest inicjowana w <xref:System.Windows.Forms.ListBox> kontrolki MouseDown — zdarzenie. W <xref:System.Windows.Forms.RichTextBox.DragEnter> programu obsługi zdarzeń w przykładzie użyto <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> metodę, aby sprawdzić, czy dane są w formacie, <xref:System.Windows.Forms.RichTextBox> kontroli można wyświetlić, a następnie ustawia <xref:System.Windows.Forms.DragDropEffects> właściwość, aby określić, że dane powinny zostać skopiowane z kontroli źródła do formantu docelowego. Na koniec <xref:System.Windows.Forms.RichTextBox> korzysta z programu obsługi zdarzeń DragDrop kontrolki <xref:System.Windows.Forms.IDataObject.GetData%2A> metodę, aby pobrać nazwę pliku, aby otworzyć.  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">Dane skojarzone z tym zdarzeniem.</param>
        <param name="keyState">Bieżący stan klawiszy SHIFT, CTRL i ALT.</param>
        <param name="x">Współrzędna x kursora myszy w pikselach.</param>
        <param name="y">Współrzędna y kursora myszy w pikselach.</param>
        <param name="allowedEffect">Jedną z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</param>
        <param name="effect">Jedną z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DragEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera operacje przeciągania i upuszczania dozwolone przez inicjatora (lub źródła) zdarzenie przeciągania.</summary>
        <value>Jedną z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy formant inicjuje operację przeciągania i upuszczania przez wywołanie metody <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> metody określa dopuszczalne skutków operacji. Na przykład przeciągnięcie pliku ze źródła, jeśli plik jest tylko do odczytu (lub z nośnika magazynowania tylko do odczytu, takich jak dysk CD), źródło wskaże, czy plik może być kopiowany, ale nie przeniesione do obiektu docelowego.  
  
 Przed próbą wykonania operacji na danych przeciąganego, należy sprawdzić tę właściwość, aby upewnić się, że ta operacja jest dozwolona.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania pomiędzy dwoma <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołuje <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli przeniesiono myszy rozpoczyna się akcja przeciągania ponad <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda służy do określania indeks elementu, aby przeciągnąć podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano również przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursorów `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji, przeciągnij niestandardowych, jak i nieupuszczalny kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programu obsługi zdarzeń.  
  
 Stan klawiatury jest oceniany w <xref:System.Windows.Forms.Control.DragOver> program obsługi zdarzeń dla po prawej stronie `ListBox`, aby ustalić, jaka będzie operacji przeciągania oparte na stanie klawiszy SHIFT, CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` gdzie może wystąpić spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ustawiono <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` , jest określana w <xref:System.Windows.Forms.Control.DragDrop> programu obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania przenosi poza granicami formularza, a następnie operację przeciągania i upuszczania zostało anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> programu obsługi zdarzeń.  
  
 Ten fragment kodu demonstruje sposób użycia <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.IDataObject" /> zawierający dane skojarzone z tym zdarzeniem.</summary>
        <value>Dane skojarzone z tym zdarzeniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W treści procedury obsługi zdarzenia, można użyć <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> metodę pozwala ustalić, czy dane spełniają wymagań formatu kontrolki, na którym jest przeciągany danych. Możesz również określić czy chcesz spróbować wykonać przeprowadzenie konwersji danych zgodnie z wymaganiami formatu. Jeśli przeciąganego danych spełnia wymagania format, należy użyć <xref:System.Windows.Forms.IDataObject.GetData%2A> metody do pobierania danych.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania pomiędzy dwoma <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołuje <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli przeniesiono myszy rozpoczyna się akcja przeciągania ponad <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda służy do określania indeks elementu, aby przeciągnąć podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano również przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursorów `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji, przeciągnij niestandardowych, jak i nieupuszczalny kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programu obsługi zdarzeń.  
  
 Stan klawiatury jest oceniany w <xref:System.Windows.Forms.Control.DragOver> program obsługi zdarzeń dla po prawej stronie `ListBox`, aby ustalić, jaka będzie operacji przeciągania oparte na stanie klawiszy SHIFT, CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` gdzie może wystąpić spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ustawiono <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` , jest określana w <xref:System.Windows.Forms.Control.DragDrop> programu obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania przenosi poza granicami formularza, a następnie operację przeciągania i upuszczania zostało anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> programu obsługi zdarzeń.  
  
 Ten fragment kodu demonstruje sposób użycia <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia efekt listy docelowej przy użyciu operacji przeciągania i upuszczania.</summary>
        <value>Jedną z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zastosowano efekt Określa kursor myszy na obiekt docelowy operacji przeciągania i upuszczania. Jest to przydatne przekazać opinię do użytkownika o nieudanej operacji, które będzie wysyłane. Na przykład, jeśli naciśniesz klawisz CTRL podczas przeciągania pliku z lokalizacji źródłowej, określ <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> do wskazania, element docelowy podejmie próbę wykonania operacji kopiowania.  
  
 Aby użyć niestandardowych kursorów dla operacji przeciągania, zobacz <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania pomiędzy dwoma <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołuje <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli przeniesiono myszy rozpoczyna się akcja przeciągania ponad <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda służy do określania indeks elementu, aby przeciągnąć podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano również przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursorów `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji, przeciągnij niestandardowych, jak i nieupuszczalny kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programu obsługi zdarzeń.  
  
 Stan klawiatury jest oceniany w <xref:System.Windows.Forms.Control.DragOver> program obsługi zdarzeń dla po prawej stronie `ListBox`, aby ustalić, jaka będzie operacji przeciągania oparte na stanie klawiszy SHIFT, CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` gdzie może wystąpić spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ustawiono <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` , jest określana w <xref:System.Windows.Forms.Control.DragDrop> programu obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania przenosi poza granicami formularza, a następnie operację przeciągania i upuszczania zostało anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> programu obsługi zdarzeń.  
  
 Ten fragment kodu demonstruje sposób użycia <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan SHIFT, CTRL i ALT — klawisze, a także stan przycisku myszy.</summary>
        <value>Bieżący stan klawiszy SHIFT, CTRL i ALT i przycisków myszy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieje możliwość wpływ operacji przeciągania i upuszczania, aby była zależna od określonego klucza stanu. Na przykład zdecydujesz się kopiowania lub przenoszenia danych w zależności od tego, czy po naciśnięciu klawiszy CTRL lub SHIFT podczas operacji przeciągania i upuszczania.  
  
 Bity, które są ustawiane w <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> właściwość zidentyfikować kluczy lub przycisku myszy, które zostały naciśnięte podczas operacji. Na przykład, jeśli lewy przycisk myszy jest wciśnięty, bit pierwszy w <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> właściwość jest ustawiona. Bitowy operator AND służy do testowania dla danego stanu klucza.  
  
 W poniższej tabeli wymieniono wartości, które są używane dla określonego zdarzenia.  
  
|Wartość|Key|  
|-----------|---------|  
|1 (bit 0)|Lewy przycisk myszy.|  
|2 (bit 1)|Prawy przycisk myszy.|  
|4 (bit 2)|Klawisz SHIFT.|  
|8 (bit 3)|Klawisz CTRL.|  
|16 (bit 4)|Środkowego przycisku myszy.|  
|32 (bit 5).|Klawisz ALT.|  
  
   
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania pomiędzy dwoma <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołuje <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli przeniesiono myszy rozpoczyna się akcja przeciągania ponad <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda służy do określania indeks elementu, aby przeciągnąć podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano również przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursorów `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji, przeciągnij niestandardowych, jak i nieupuszczalny kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programu obsługi zdarzeń.  
  
 Stan klawiatury jest oceniany w <xref:System.Windows.Forms.Control.DragOver> program obsługi zdarzeń dla po prawej stronie `ListBox`, aby ustalić, jaka będzie operacji przeciągania oparte na stanie klawiszy SHIFT, CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` gdzie może wystąpić spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ustawiono <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` , jest określana w <xref:System.Windows.Forms.Control.DragDrop> programu obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania przenosi poza granicami formularza, a następnie operację przeciągania i upuszczania zostało anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> programu obsługi zdarzeń.  
  
 Ten fragment kodu demonstruje sposób użycia <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędną x kursora myszy, a współrzędne ekranu.</summary>
        <value>Współrzędna x wskaźnik myszy w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania pomiędzy dwoma <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołuje <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli przeniesiono myszy rozpoczyna się akcja przeciągania ponad <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda służy do określania indeks elementu, aby przeciągnąć podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano również przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursorów `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji, przeciągnij niestandardowych, jak i nieupuszczalny kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programu obsługi zdarzeń.  
  
 Stan klawiatury jest oceniany w <xref:System.Windows.Forms.Control.DragOver> program obsługi zdarzeń dla po prawej stronie `ListBox`, aby ustalić, jaka będzie operacji przeciągania oparte na stanie klawiszy SHIFT, CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` gdzie może wystąpić spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ustawiono <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` , jest określana w <xref:System.Windows.Forms.Control.DragDrop> programu obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania przenosi poza granicami formularza, a następnie operację przeciągania i upuszczania zostało anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> programu obsługi zdarzeń.  
  
 Ten fragment kodu demonstruje sposób użycia <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędną y kursora myszy, a współrzędne ekranu.</summary>
        <value>Współrzędna y wskaźnik myszy w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano operację przeciągania i upuszczania pomiędzy dwoma <xref:System.Windows.Forms.ListBox> kontrolki. Przykład wywołuje <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, gdy rozpoczyna się akcja przeciągania. Jeśli przeniesiono myszy rozpoczyna się akcja przeciągania ponad <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> z lokalizacji myszy podczas <xref:System.Windows.Forms.Control.MouseDown> zdarzeń. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Metoda służy do określania indeks elementu, aby przeciągnąć podczas `MouseDown` zdarzeń.  
  
 W przykładzie pokazano również przy użyciu niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie założono, że dwa pliki kursorów `3dwarro.cur` i `3dwno.cur`, istnieje w katalogu aplikacji, przeciągnij niestandardowych, jak i nieupuszczalny kursorów, odpowiednio. Kursory niestandardowe zostaną użyte, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programu obsługi zdarzeń.  
  
 Stan klawiatury jest oceniany w <xref:System.Windows.Forms.Control.DragOver> program obsługi zdarzeń dla po prawej stronie `ListBox`, aby ustalić, jaka będzie operacji przeciągania oparte na stanie klawiszy SHIFT, CTRL, ALT i CTRL + ALT. Lokalizacja w `ListBox` gdzie może wystąpić spadek jest również określany podczas `DragOver` zdarzeń. Jeśli nie jest danych można usunąć `String`, a następnie <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> ustawiono <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec, wyświetlany jest stan listy w `DropLocationLabel` <xref:System.Windows.Forms.Label>.  
  
 Dane można usunąć prawo `ListBox` , jest określana w <xref:System.Windows.Forms.Control.DragDrop> programu obsługi zdarzeń i `String` wartość jest dodawana w odpowiednim miejscu w `ListBox`. Jeśli operacja przeciągania przenosi poza granicami formularza, a następnie operację przeciągania i upuszczania zostało anulowane w <xref:System.Windows.Forms.Control.QueryContinueDrag> programu obsługi zdarzeń.  
  
 Ten fragment kodu demonstruje sposób użycia <xref:System.Windows.Forms.DragEventArgs> klasy. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>