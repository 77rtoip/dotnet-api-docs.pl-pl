<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fdb1590bb2a538ce927d45c5f0c2a1e2e5ece9a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69189667" /></Metadata><TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.Control.DragDrop" />zdarzenia, <see cref="E:System.Windows.Forms.Control.DragEnter" />lub. <see cref="E:System.Windows.Forms.Control.DragOver" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.DragDrop> Zdarzenie występuje, gdy użytkownik ukończy operację przeciągania i upuszczania przez przeciąganie obiektu nad formantem, a następnie upuszczenie go do kontrolki przez zwolnienie przycisku myszy. <xref:System.Windows.Forms.Control.DragEnter> Zdarzenie występuje, gdy użytkownik przesuwa wskaźnik myszy na kontrolkę podczas przeciągania obiektu za pomocą myszy. <xref:System.Windows.Forms.Control.DragOver> Zdarzenie występuje, gdy użytkownik przesuwa wskaźnik myszy nad formantem, przeciągając obiekt z myszą.  
  
 <xref:System.Windows.Forms.DragEventArgs> Obiekt określa wszystkie dane skojarzone z tym zdarzeniem, bieżący stan klawiszy Shift, Ctrl i Alt, lokalizację wskaźnika myszy oraz efekty przeciągania i upuszczania dozwolone przez źródło i cel zdarzenia przeciągania.  
  
 Informacje o modelu zdarzenia można znaleźć w temacie [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.DragEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 Poniższy przykład ilustruje sposób <xref:System.Windows.Forms.DragEventArgs> przekazywania między źródłem a celem operacji przeciągania i upuszczania. W tym przykładzie <xref:System.Windows.Forms.ListBox> formant jest źródłem danych, <xref:System.Windows.Forms.RichTextBox> a formant jest obiektem docelowym. W przykładzie przyjęto założenie, że <xref:System.Windows.Forms.ListBox> formant został wypełniony listą prawidłowych nazw plików. Gdy użytkownik przeciągnie jedną z wyświetlanych nazw plików z <xref:System.Windows.Forms.ListBox> formantu <xref:System.Windows.Forms.RichTextBox> na kontrolkę, plik, do którego odwołuje się nazwa pliku, jest otwierany.  
  
 Operacja została zainicjowana w <xref:System.Windows.Forms.ListBox> zdarzeniu MouseDown kontrolki. W programie obsługi <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> <xref:System.Windows.Forms.RichTextBox> <xref:System.Windows.Forms.DragDropEffects> zdarzeń, w przykładzie używa metody, aby sprawdzić, czy dane są w formacie, który może być wyświetlany przez kontrolkę, a następnie ustawia właściwość, aby określić, że dane mają być kopiowane z kontroli źródła <xref:System.Windows.Forms.RichTextBox.DragEnter> do kontrolki docelowej. Na koniec procedura obsługi zdarzeń DragDrop <xref:System.Windows.Forms.IDataObject.GetData%2A> kontrolkiużywametodydopobranianazwyplikudootwarcia.<xref:System.Windows.Forms.RichTextBox>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">Dane skojarzone z tym zdarzeniem.</param>
        <param name="keyState">Bieżący stan klawiszy SHIFT, CTRL i ALT.</param>
        <param name="x">Współrzędna x kursora myszy w pikselach.</param>
        <param name="y">Współrzędna y kursora myszy w pikselach.</param>
        <param name="allowedEffect">Jedna z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</param>
        <param name="effect">Jedna z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DragEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera operacje przeciągania i upuszczania, które są dozwolone przez inicjator (lub źródło) zdarzenia przeciągania.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy kontrolka Inicjuje operację przeciągania i upuszczania przez wywołanie <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> metody, określa dozwolony efekt operacji. Na przykład, gdy przeciągniesz plik ze źródła, jeśli plik jest tylko do odczytu (lub z nośnika magazynu tylko do odczytu, takiego jak dysk CD), Źródło będzie wskazywać, że plik może być skopiowany, ale nie transferowany do obiektu docelowego.  
  
 Przed podjęciem próby wykonania operacji na przeciąganych danych należy sprawdzić tę właściwość, aby upewnić się, że operacja jest dozwolona.  
  
   
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.DragEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, <see cref="T:System.Windows.Forms.IDataObject" /> który zawiera dane skojarzone z tym zdarzeniem.</summary>
        <value>Dane skojarzone z tym zdarzeniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W treści programu obsługi zdarzeń można użyć <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> metody, aby określić, czy dane są zgodne z wymaganiami formatu kontrolki, na których dane są przeciągane. Możesz również określić, czy chcesz próbować skonwertować dane, aby spełniały wymagania formatu. Jeśli przeciągane dane spełniają wymagania dotyczące formatu, użyj <xref:System.Windows.Forms.IDataObject.GetData%2A> metody, aby pobrać dane.  
  
   
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.DragEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia docelowy efekt upuszczania w operacji przeciągania i upuszczania.</summary>
        <value>Jedna z <see cref="T:System.Windows.Forms.DragDropEffects" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie stosowany efekt określa kursor myszy dla elementu docelowego operacji przeciągania i upuszczania. Jest to przydatne w celu przekazywania użytkownikowi informacji zwrotnych na temat operacji, która się pojawi. Na przykład, jeśli naciśniesz klawisz CTRL podczas przeciągania pliku ze źródła, wskaż, <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> aby wskazać, że obiekt docelowy spróbuje wykonać operację kopiowania.  
  
 Aby użyć niestandardowych kursorów dla operacji przeciągania, zobacz <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.DragEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan klawiszy SHIFT, CTRL i ALT, a także stan przycisków myszy.</summary>
        <value>Bieżący stan klawiszy SHIFT, CTRL i ALT oraz przycisków myszy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można sprawić, aby efekt operacji przeciągania i upuszczania zależał od stanu określonego klucza. Na przykład, możesz zdecydować się na skopiowanie lub przeniesienie danych w zależności od tego, czy klawisze CTRL i SHIFT są naciśnięte podczas operacji przeciągania i upuszczania.  
  
 Bity ustawione we <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> właściwości identyfikują klawisze lub przyciski myszy, które zostały naciśnięte podczas operacji. Na przykład po naciśnięciu lewego przycisku myszy jest ustawiany pierwszy bit we <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> właściwości. Za pomocą operatora bitowego można testować dla danego stanu klucza.  
  
 W poniższej tabeli wymieniono wartości, które są używane dla określonego zdarzenia.  
  
|Wartość|Key|  
|-----------|---------|  
|1 (bit 0)|Lewym przyciskiem myszy.|  
|2 (bit 1)|Prawy przycisk myszy.|  
|4 (bit 2)|Klawisz SHIFT.|  
|8 (bit 3)|Klawisz CTRL.|  
|16 (bit 4)|Środkowy przycisk myszy.|  
|32 (bit 5)|Klawisz ALT.|  
  
   
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.DragEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędną x wskaźnika myszy, we współrzędnych ekranu.</summary>
        <value>Współrzędna x wskaźnika myszy (w pikselach).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.DragEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędną y wskaźnika myszy, we współrzędnych ekranu.</summary>
        <value>Współrzędna y wskaźnika myszy (w pikselach).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie zademonstrowano operację przeciągania i upuszczania między dwoma <xref:System.Windows.Forms.ListBox> kontrolkami. Przykład wywołuje metodę, <xref:System.Windows.Forms.Control.DoDragDrop%2A> gdy rozpocznie się akcja przeciągania. Akcja przeciągania rozpocznie się, jeśli mysz została przeniesiona <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> więcej niż z lokalizacji myszy <xref:System.Windows.Forms.Control.MouseDown> podczas zdarzenia. Metoda jest używana do określenia indeksu elementu do przeciągnięcia `MouseDown` podczas zdarzenia. <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 W przykładzie pokazano również, jak używać niestandardowych kursorów dla operacji przeciągania i upuszczania. W przykładzie przyjęto założenie, że `3dwarro.cur` dwa `3dwno.cur`pliki kursora i, istnieją w katalogu aplikacji, odpowiednio dla kursorów niestandardowych przeciągnij i nie upuszczaj. Kursory niestandardowe będą używane, jeśli `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> jest zaznaczone. Kursory niestandardowe są ustawiane w <xref:System.Windows.Forms.Control.GiveFeedback> programie obsługi zdarzeń.  
  
 Stan klawiatury jest obliczany w <xref:System.Windows.Forms.Control.DragOver> procedurze obsługi zdarzeń po prawej stronie `ListBox`, aby określić, jaka operacja przeciągania będzie oparta na stanie klawiszy Shift, Ctrl, Alt lub Ctrl + Alt. Lokalizacja w `ListBox` miejscu, w którym występuje porzucanie, jest również określana `DragOver` podczas zdarzenia. Jeśli dane do porzucenia nie `String`są, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wówczas jest ustawione na <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Na koniec stan upuszczenia jest wyświetlany w `DropLocationLabel`. <xref:System.Windows.Forms.Label>  
  
 Dane do porzucenia po prawej stronie `ListBox` są określane <xref:System.Windows.Forms.Control.DragDrop> w programie obsługi zdarzeń, a `String` wartość `ListBox`jest dodawana w odpowiednim miejscu w. Jeśli operacja przeciągania przesunie się poza granice formularza, operacja przeciągania i upuszczania zostanie anulowana w <xref:System.Windows.Forms.Control.QueryContinueDrag> obsłudze zdarzeń.  
  
 Ten fragment kodu ilustruje użycie <xref:System.Windows.Forms.DragEventArgs> klasy. <xref:System.Windows.Forms.Control.DoDragDrop%2A> Zobacz metodę pełnego przykładu kodu.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>
