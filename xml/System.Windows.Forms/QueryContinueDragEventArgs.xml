<Type Name="QueryContinueDragEventArgs" FullName="System.Windows.Forms.QueryContinueDragEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31d090e3b75bb537f491ecdc87495fa9495bc140" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36516011" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class QueryContinueDragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryContinueDragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.QueryContinueDragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryContinueDragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryContinueDragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type QueryContinueDragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.QueryContinueDrag> Zdarzenie występuje podczas operacji przeciągania i upuszczania oraz umożliwia ustalenie, czy można anulować operację przeciągania i upuszczania źródła przeciągania. A <xref:System.Windows.Forms.QueryContinueDragEventArgs> Określa czy i jak należy kontynuować operację przeciągania i upuszczania, czy wszystkie klawisze modyfikujące naciśnięciu i czy użytkownik nacisnął klawisz ESC.  
  
 Domyślnie <xref:System.Windows.Forms.Control.QueryContinueDrag> zestawów zdarzeń <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> do <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> Jeśli został naciśnięty klawisz ESC i ustawia `Action` do <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> Jeśli zostanie naciśnięty przycisk myszy po lewej stronie, środka lub prawej.  
  
 Aby uzyskać informacje na temat modelu zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.QueryContinueDragEventArgs> klasy z <xref:System.Windows.Forms.Control.QueryContinueDrag> zdarzeń. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragAction" />
    <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keyState, bool escapePressed, valuetype System.Windows.Forms.DragAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyState As Integer, escapePressed As Boolean, action As DragAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContinueDragEventArgs(int keyState, bool escapePressed, System::Windows::Forms::DragAction action);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.QueryContinueDragEventArgs : int * bool * System.Windows.Forms.DragAction -&gt; System.Windows.Forms.QueryContinueDragEventArgs" Usage="new System.Windows.Forms.QueryContinueDragEventArgs (keyState, escapePressed, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="escapePressed" Type="System.Boolean" />
        <Parameter Name="action" Type="System.Windows.Forms.DragAction" />
      </Parameters>
      <Docs>
        <param name="keyState">Bieżący stan klawiszy SHIFT, CTRL i ALT.</param>
        <param name="escapePressed">
          <see langword="true" /> Jeśli został naciśnięty klawisz ESC; w przeciwnym razie <see langword="false" />.</param>
        <param name="action">A <see cref="T:System.Windows.Forms.DragAction" /> wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragAction Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As DragAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragAction Action { System::Windows::Forms::DragAction get(); void set(System::Windows::Forms::DragAction value); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Windows.Forms.DragAction with get, set" Usage="System.Windows.Forms.QueryContinueDragEventArgs.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia stan operacji przeciągania i upuszczania.</summary>
        <value>A <see cref="T:System.Windows.Forms.DragAction" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.Forms.Control.QueryContinueDrag> zestawów zdarzeń <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> do <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> Jeśli został naciśnięty klawisz ESC i ustawia `Action` do <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> Jeśli zostanie naciśnięty przycisk myszy po lewej stronie, środka lub prawej.  
  
   
  
## Examples  
 Tym fragmencie kodu pokazano przy użyciu <xref:System.Windows.Forms.QueryContinueDragEventArgs> klasy z <xref:System.Windows.Forms.Control.QueryContinueDrag> zdarzeń. Zobacz <xref:System.Windows.Forms.Control.DoDragDrop%2A> metody, na przykład kompletny kod.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="EscapePressed">
      <MemberSignature Language="C#" Value="public bool EscapePressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EscapePressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapePressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EscapePressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapePressed : bool" Usage="System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje, czy użytkownik naciśnięcia klawisza ESC.</summary>
        <value>
          <see langword="true" /> Jeśli został naciśnięty klawisz ESC; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.Forms.Control.QueryContinueDrag> zestawów zdarzeń <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> do <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> Jeśli <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> ma wartość true.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> . W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu, która dziedziczy po <xref:System.Windows.Forms.Control>, takich jak <xref:System.Windows.Forms.Button> lub <xref:System.Windows.Forms.ComboBox>. Następnie nazwą wystąpienia `Control1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.QueryContinueDragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan SHIFT, CTRL i ALT — klawisze.</summary>
        <value>Bieżący stan klawiszy SHIFT, CTRL i ALT.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługi bits, które są ustawiane w <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> właściwości zidentyfikować kluczy lub przycisku myszy, które zostały naciśnięte podczas operacji. Na przykład, jeśli lewy przycisk myszy jest wciśnięty, bit pierwszy w <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> właściwość jest ustawiona. Korzystając z bitowego `AND` operatora, aby sprawdzić dla danego stanu klucza.  
  
 W poniższej tabeli wymieniono bitów, które są ustawione dla określonego zdarzenia.  
  
|bitowe|Key|  
|---------|---------|  
|1|Lewy przycisk myszy.|  
|2|Prawy przycisk myszy.|  
|4|Klawisz SHIFT.|  
|8|Klucz listy CTL.|  
|16|Środkowy przycisk myszy.|  
|32|Klawisz ALT.|  
  
 Domyślnie <xref:System.Windows.Forms.Control.QueryContinueDrag> zestawów zdarzeń <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> do <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> Jeśli <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> wskazuje naciśnięciu przycisku myszy po lewej stronie, środkowej lub w prawo.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu, która dziedziczy po <xref:System.Windows.Forms.Control>, takich jak <xref:System.Windows.Forms.Button> lub <xref:System.Windows.Forms.ComboBox>. Następnie nazwą wystąpienia `Control1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
  </Members>
</Type>