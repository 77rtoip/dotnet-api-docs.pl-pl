<Type Name="ContextMenu" FullName="System.Windows.Forms.ContextMenu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe2cf057631a1298ec0800a4b11c6a22e626bd52" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659633" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Forms::Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Popup")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje menu skrótów. Mimo że <see cref="T:System.Windows.Forms.ContextMenuStrip" /> zastępuje i dodaje funkcje do <see cref="T:System.Windows.Forms.ContextMenu" /> kontrolę nad poprzednie wersje <see cref="T:System.Windows.Forms.ContextMenu" /> są przechowywane dla zgodności z poprzednimi wersjami i użycia w przyszłości, jeśli zostanie wybrana.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ContextMenu> Klasa reprezentuje menu skrótów, które mogą być wyświetlane po kliknięciu prawym przyciskiem myszy przez formant lub części formularza. Menu skrótów są zazwyczaj używane połączyć elementy menu różnych z <xref:System.Windows.Forms.MainMenu> formularza, które są przydatne dla użytkownika, w danym kontekście aplikacji. Na przykład można użyć menu skrótów, przypisane do <xref:System.Windows.Forms.TextBox> kontroli w celu zapewnienia zmiana czcionki tekstu, znajdowanie tekstu wewnątrz formantu lub funkcji Schowka do kopiowania i wklejania tekstu elementów menu. Można również wyświetlić nowy <xref:System.Windows.Forms.MenuItem> obiektów w menu skrótów, które nie są umieszczone wewnątrz <xref:System.Windows.Forms.MainMenu> zapewnienie sytuacji określonych poleceń, które nie są odpowiednie dla <xref:System.Windows.Forms.MainMenu> do wyświetlenia.  
  
 Menu skrótów jest zwykle wyświetlany po kliknięciu prawym przyciskiem myszy nad kontrolką lub samego formularza. Formanty widoczne i <xref:System.Windows.Forms.Form> ma <xref:System.Windows.Forms.Control.ContextMenu%2A> właściwość, która jest powiązywana <xref:System.Windows.Forms.ContextMenu> klasy do formantu, który wyświetla menu skrótów. Można użyć więcej niż jeden formant <xref:System.Windows.Forms.ContextMenu>. Można użyć <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> właściwości w celu określenia kontroli ostatnio wyświetlane menu skrótów w celu wykonywania zadania specyficzne dla formantu lub zmodyfikować menu skrótów wyświetlane dla formantu.  
  
 Warto wiedzieć, aby ustawić znaczniki wyboru, Wyłącz elementy i wykonywać inne zadania menu, przed wyświetleniem menu dla użytkownika jest wyświetlany w menu skrótów. Może obsłużyć <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenia w celu określenia, kiedy jest wyświetlany w menu skrótów.  
  
> [!NOTE]
>  Aby można było użyć ponownie <xref:System.Windows.Forms.MenuItem> obiektów, które są wyświetlane w <xref:System.Windows.Forms.MainMenu> do użycia w <xref:System.Windows.Forms.ContextMenu>, należy utworzyć kopię przy użyciu menu <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> metody <xref:System.Windows.Forms.MenuItem> klasy. Można również scalić elementów menu i podmenu ich pojedynczy <xref:System.Windows.Forms.MenuItem> przy użyciu <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> metody <xref:System.Windows.Forms.MenuItem> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenie <xref:System.Windows.Forms.ContextMenu>. Określa kod do obsługi zdarzeń, który dwóch formantów <xref:System.Windows.Forms.PictureBox> o nazwie `pictureBox1` i <xref:System.Windows.Forms.TextBox> o nazwie `textBox1` kontrolka wyświetlanie menu skrótów. W zależności od kontroli spowodował <xref:System.Windows.Forms.ContextMenu> Aby wyświetlić menu skrótów, dodaje odpowiednie kontrolki <xref:System.Windows.Forms.MenuItem> obiekty do <xref:System.Windows.Forms.ContextMenu>. W tym przykładzie wymaga wystąpienia <xref:System.Windows.Forms.ContextMenu> klasę o nazwie `contextMenu1`, zdefiniowany w formularzu. W tym przykładzie wymaga również, że masz <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.PictureBox> dodany do formularza i że <xref:System.Windows.Forms.Control.ContextMenu%2A> ma ustawioną właściwość formanty `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.MainMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ContextMenu" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ContextMenu" /> klasy z określonych elementów menu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zastosowaniu ta wersja konstruktora, można dodać elementy menu do <xref:System.Windows.Forms.ContextMenu> za pomocą <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> metody <xref:System.Windows.Forms.Menu.MenuItemCollection> klasy. Dostęp można uzyskać <xref:System.Windows.Forms.Menu.MenuItemCollection> za pośrednictwem <xref:System.Windows.Forms.Menu.MenuItems%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Menu.MenuItemCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu (System.Windows.Forms.MenuItem[] menuItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] menuItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (menuItems As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ menuItems);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="menuItems" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="menuItems">Tablica <see cref="T:System.Windows.Forms.MenuItem" /> obiektów, które reprezentują elementy menu do dodania do menu skrótów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ContextMenu" /> klasy z określonego zestawu <see cref="T:System.Windows.Forms.MenuItem" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja Konstruktora służy do tworzenia <xref:System.Windows.Forms.ContextMenu> zawierającej elementy jego menu określony w momencie jego tworzenia. Po zastosowaniu ta wersja konstruktora, możesz dodać menu dodatkowe elementy do <xref:System.Windows.Forms.ContextMenu> za pomocą <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> metody <xref:System.Windows.Forms.Menu.MenuItemCollection> klasy. Dostęp można uzyskać <xref:System.Windows.Forms.Menu.MenuItemCollection> za pośrednictwem <xref:System.Windows.Forms.Menu.MenuItems%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje konstruowanie menu skrótów i przy użyciu <xref:System.Windows.Forms.ContextMenu.Show%2A> metody. Aby uruchomić przykład, wklej następujący kod w postaci zawierające przycisk o nazwie Button1. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public event EventHandler Collapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Collapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Collapse As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Collapse;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwinięciu menu skrótów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.ContextMenu.Collapse> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ContextMenu> o nazwie `ContextMenu1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ContextMenu.Collapse> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#170)]
 [!code-vb[System.Windows.Forms.EventExamples#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCollapse (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollapse(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCollapse (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCollapse(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ContextMenu.Collapse" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.ContextMenu.Popup" /> zdarzeń</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wyświetleniem menu skrótów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie służy do inicjowania <xref:System.Windows.Forms.MenuItem> obiektów, zanim zostaną one wyświetlone. Na przykład, jeśli używasz <xref:System.Windows.Forms.ContextMenu> trzy <xref:System.Windows.Forms.TextBox> formantów i chcesz wyłączyć niektórych elementów menu w <xref:System.Windows.Forms.ContextMenu> w zależności od tego, który <xref:System.Windows.Forms.TextBox> jest wyświetlanie menu skrótów, można utworzyć program obsługi zdarzeń dla tego zdarzenia. Można użyć <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> właściwość umożliwia określenie, które <xref:System.Windows.Forms.TextBox> wyświetli <xref:System.Windows.Forms.ContextMenu> i wyłącz odpowiednie <xref:System.Windows.Forms.MenuItem> obiektów.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenie <xref:System.Windows.Forms.ContextMenu>. Określa kod do obsługi zdarzeń, który dwóch formantów <xref:System.Windows.Forms.PictureBox> o nazwie `pictureBox1` i <xref:System.Windows.Forms.TextBox> o nazwie `textBox1` kontrolka wyświetlanie menu skrótów. W zależności od kontroli spowodował <xref:System.Windows.Forms.ContextMenu> Aby wyświetlić menu skrótów, dodaje odpowiednie kontrolki <xref:System.Windows.Forms.MenuItem> obiekty do <xref:System.Windows.Forms.ContextMenu>. W tym przykładzie wymaga wystąpienia <xref:System.Windows.Forms.ContextMenu> klasę o nazwie `contextMenu1`, zdefiniowany w formularzu. W tym przykładzie wymaga również, że masz <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.PictureBox> dodany do formularza i że <xref:System.Windows.Forms.Control.ContextMenu%2A> ma ustawioną właściwość formanty `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData, System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData, class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData, System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, przekazywane przez odwołanie, reprezentujący komunikat okna do przetworzenia.</param>
        <param name="keyData">Jeden z <see cref="T:System.Windows.Forms.Keys" /> wartości, które reprezentuje klucz używany do przetworzenia.</param>
        <param name="control">Formant, do którego jest stosowany klucz polecenia.</param>
        <summary>Przetwarza polecenia klucza.</summary>
        <returns>
          <see langword="true" /> Jeśli znak został przetworzony przez formant; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana podczas obsługi polecenia klucze przetwarzania wstępnego wiadomości. Polecenie klucze są klucze, które zawsze mają pierwszeństwo względem regularne klucze wejściowego. Przykładami polecenia klucze akceleratorów i menu skrótów. Metoda musi zwracać `true` aby wskazać, że został on przetworzony klucza polecenia lub `false` aby wskazać, że klucz nie jest kluczem polecenia. Ta metoda jest wywoływana tylko wtedy, gdy kontrolka jest hostowana w aplikacji formularzy systemu Windows lub jako formant ActiveX.  
  
 <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> Metody najpierw określi, czy formant ma <xref:System.Windows.Forms.ContextMenu>, a jeśli tak, umożliwia <xref:System.Windows.Forms.ContextMenu> do przetworzenia polecenia klucza. Jeśli polecenie nie jest skrót menu i formantu ma element nadrzędny, klucz jest przekazywany do elementu nadrzędnego <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> metody. Net efekt jest polecenie klucze są "przepuszcza" w hierarchii formantu. Oprócz klucza użytkownik nacisnął klawisz, dane klucza również wskazuje, które, jeśli w zostały naciśnięte klawisze modyfikujące jednocześnie jako klucz. Klawisze modyfikujące obejmują klawiszy SHIFT, CTRL i ALT.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do obiektu wywołującego bezpośrednio wywoływać kodu niezarządzanego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> metody w klasie pochodnej, powinien zwrócić kontrolkę <see langword="true" /> aby wskazać, że został on przetworzony klucza. Dla kluczy, które nie są przetwarzane przez formant wynikiem wywołania klasy podstawowej <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> metoda powinna zostać zwrócona. Formanty rzadko, jeśli w ogóle, należy przesłonić tę metodę.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy od prawej do lewej strony jest wyświetlany tekst wyświetlany przez formant.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.RightToLeft" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia menu do włączenia obsługi języków, które są zapisywane od prawej do lewej. Jeśli ta właściwość jest skonfigurowana `RightToLeft.Yes`, od prawej do lewej strony zamiast domyślnej od lewej do prawej — metoda wyświetlany jest tekst elementu menu.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat włączania od prawej do lewej Wyrównanie wpływ formanty formularzy systemu Windows, temacie <xref:System.Windows.Forms.Control.RightToLeft%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość przypisana do właściwości nie jest prawidłowym elementem członkowskim <see cref="T:System.Windows.Forms.RightToLeft" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla menu skrótów w określonej pozycji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::Control ^ control, System::Drawing::Point pos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Windows.Forms.Control" /> , który określa formantu, z którym jest skojarzona tego menu skrótów.</param>
        <param name="pos">A <see cref="T:System.Drawing.Point" /> określający współrzędne, w którym należy wyświetlić menu. Tych współrzędnych są określane względem współrzędne klienta formantu określony w <c>kontroli</c> parametru.</param>
        <summary>Wyświetla menu skrótów w określonej pozycji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Windows.Forms.ContextMenu> jest wyświetlany po kliknięciu prawym przyciskiem myszy na formant lub obszar formularza który <xref:System.Windows.Forms.ContextMenu> jest powiązany. Ta metoda służy do ręcznego wyświetlić menu skrótów w określonym miejscu i powiązać ją z określonego formantu. Ta metoda nie zwraca aż do menu jest odrzucane.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje konstruowanie menu skrótów i przy użyciu <xref:System.Windows.Forms.ContextMenu.Show%2A> metody. Aby uruchomić przykład, wklej następujący kod w postaci zawierające przycisk o nazwie Button1. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uchwyt formantu nie istnieje lub formant nie jest widoczny.</exception>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos, System.Windows.Forms.LeftRightAlignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos, valuetype System.Windows.Forms.LeftRightAlignment alignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::Control ^ control, System::Drawing::Point pos, System::Windows::Forms::LeftRightAlignment alignment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
        <Parameter Name="alignment" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Windows.Forms.Control" /> , który określa formantu, z którym jest skojarzona tego menu skrótów.</param>
        <param name="pos">A <see cref="T:System.Drawing.Point" /> określający współrzędne, w którym należy wyświetlić menu. Tych współrzędnych są określane względem współrzędne klienta formantu określony w <c>kontroli</c> parametru.</param>
        <param name="alignment">A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> , który określa wyrównanie formantu względem <c>pos</c> parametru.</param>
        <summary>Wyświetla menu skrótów w określonej pozycji, a określone wyrównanie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control SourceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control SourceControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.SourceControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ SourceControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera formant, który wyświetla menu skrótów.</summary>
        <value>A <see cref="T:System.Windows.Forms.Control" /> reprezentujący kontrolkę, która jest wyświetlana w menu skrótów. Jeśli formant nie ma wyświetlane menu skrótów, właściwość zwraca <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia ustalenie, który obecnie kontrolować Wyświetla menu skrótów zdefiniowane w <xref:System.Windows.Forms.ContextMenu>. Jeśli obecnie nie jest wyświetlany w menu skrótów, służy tej właściwości do określenia kontroli ostatnio wyświetlanych w menu skrótów. Można użyć tej właściwości w <xref:System.Windows.Forms.ContextMenu.Popup> zdarzeń, aby upewnić się, że kontrolka Wyświetla elementy menu prawidłowego. Ta właściwość umożliwia również przekazać do metody, która wykonuje zadania związane z polecenia menu wyświetlane w menu skrótów odwołanie do formantu. Ponieważ <xref:System.Windows.Forms.Form> klasa dziedziczy <xref:System.Windows.Forms.Control>, tej właściwości można również użyć, jeśli <xref:System.Windows.Forms.ContextMenu> jest skojarzony z formularza.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenie <xref:System.Windows.Forms.ContextMenu>. Określa kod do obsługi zdarzeń, który dwóch formantów <xref:System.Windows.Forms.PictureBox> o nazwie `pictureBox1` i <xref:System.Windows.Forms.TextBox> o nazwie `textBox1` kontrolka wyświetlanie menu skrótów. W zależności od kontroli spowodował <xref:System.Windows.Forms.ContextMenu> Aby wyświetlić menu skrótów, dodaje odpowiednie kontrolki <xref:System.Windows.Forms.MenuItem> obiekty do <xref:System.Windows.Forms.ContextMenu>. W tym przykładzie wymaga wystąpienia <xref:System.Windows.Forms.ContextMenu> klasę o nazwie `contextMenu1`, zdefiniowany w formularzu. W tym przykładzie wymaga również, że masz <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.PictureBox> dodany do formularza i że <xref:System.Windows.Forms.Control.ContextMenu%2A> ma ustawioną właściwość formanty `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>