<Type Name="ContextMenu" FullName="System.Windows.Forms.ContextMenu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a56d5751a95e9e1c114a51eda871941f7c11682" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39940209" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Forms::Menu" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("Popup")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje menu skrótów. Mimo że <see cref="T:System.Windows.Forms.ContextMenuStrip" /> zastępuje i dodaje funkcjonalność do <see cref="T:System.Windows.Forms.ContextMenu" /> kontrolki z poprzednich wersji <see cref="T:System.Windows.Forms.ContextMenu" /> został zachowany na potrzeby zgodności z poprzednimi wersjami i użycia w przyszłości wybranie opcji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ContextMenu> Klasa reprezentuje menu skrótów, które mogą być wyświetlane, gdy użytkownik kliknie prawym przyciskiem myszy nad formant lub obszaru formularza. Menu skrótów są zazwyczaj używane do łączenia różnych menu elementów z <xref:System.Windows.Forms.MainMenu> formularza, które są przydatne w przypadku użytkowników, biorąc pod uwagę w kontekście aplikacji. Na przykład, możesz użyć menu skrótów przypisane do <xref:System.Windows.Forms.TextBox> kontroli w celu zapewnienia zmiana czcionki tekstu, wyszukiwanie tekstu w ramach sterowania lub funkcji Schowka do kopiowania i wklejania tekstu elementów menu. Można również wyświetlić nowe <xref:System.Windows.Forms.MenuItem> obiektów w menu skrótów, które nie są umieszczone wewnątrz <xref:System.Windows.Forms.MainMenu> zapewnienie sytuacji określonych poleceń, które nie są odpowiednie dla <xref:System.Windows.Forms.MainMenu> do wyświetlenia.  
  
 Zwykle zostanie wyświetlone menu skrótów, gdy użytkownik kliknie prawym przyciskiem myszy nad formant lub samego formularza. Widocznych kontrolek i <xref:System.Windows.Forms.Form> mają <xref:System.Windows.Forms.Control.ContextMenu%2A> właściwość, która jest powiązywana <xref:System.Windows.Forms.ContextMenu> klasy formant, który wyświetla menu skrótów. Można użyć więcej niż jeden formant <xref:System.Windows.Forms.ContextMenu>. Możesz użyć <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> właściwości w celu określenia, które określają ostatnio wyświetlane menu skrótów w celu wykonywania zadań specyficznych dla formantu lub zmodyfikować menu skrótów dla formantu.  
  
 Warto wiedzieć, aby można było ustawić znaczniki wyboru, Wyłącz elementy i wykonywać inne zadania menu, zanim użytkownik zostanie wyświetlone menu są wyświetlane w menu skrótów. Może obsługiwać <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenia w celu określenia, kiedy są wyświetlane w menu skrótów.  
  
> [!NOTE]
>  Aby ponownie użyć <xref:System.Windows.Forms.MenuItem> obiekty, które są wyświetlane w <xref:System.Windows.Forms.MainMenu> do użycia w <xref:System.Windows.Forms.ContextMenu>, należy utworzyć kopię używając menu <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> metody <xref:System.Windows.Forms.MenuItem> klasy. Można również scalić elementy menu i podmenu elementów w jednym <xref:System.Windows.Forms.MenuItem> przy użyciu <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> metody <xref:System.Windows.Forms.MenuItem> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenia <xref:System.Windows.Forms.ContextMenu>. Określa kod w obsłudze zdarzeń, który dwóch formantów <xref:System.Windows.Forms.PictureBox> o nazwie `pictureBox1` i <xref:System.Windows.Forms.TextBox> o nazwie `textBox1` jest formantem wyświetlanie menu skrótów. W zależności od kontroli, który spowodował <xref:System.Windows.Forms.ContextMenu> Aby wyświetlić jego menu skrótów, dodaje odpowiedni formant <xref:System.Windows.Forms.MenuItem> obiekty do <xref:System.Windows.Forms.ContextMenu>. W tym przykładzie wymaga, że masz wystąpienie <xref:System.Windows.Forms.ContextMenu> klasę o nazwie `contextMenu1`zdefiniowaną w formularzu. W tym przykładzie wymaga również, że masz <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.PictureBox> dodany do formularza i że <xref:System.Windows.Forms.Control.ContextMenu%2A> tych formantów jest właściwością `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.MainMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ContextMenu" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ContextMenu" /> klasie z atrybutem nie określonych elementów menu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zastosowaniu ta wersja konstruktora, można dodać elementów menu <xref:System.Windows.Forms.ContextMenu> przy użyciu <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> metody <xref:System.Windows.Forms.Menu.MenuItemCollection> klasy. Możesz uzyskać dostęp <xref:System.Windows.Forms.Menu.MenuItemCollection> za pośrednictwem <xref:System.Windows.Forms.Menu.MenuItems%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Menu.MenuItemCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu (System.Windows.Forms.MenuItem[] menuItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] menuItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (menuItems As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ menuItems);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ContextMenu : System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.ContextMenu" Usage="new System.Windows.Forms.ContextMenu menuItems" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="menuItems" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="menuItems">Tablica <see cref="T:System.Windows.Forms.MenuItem" /> obiektami, które reprezentują elementy menu, aby dodać do menu skrótów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ContextMenu" /> klasy przy użyciu określonego zestawu <see cref="T:System.Windows.Forms.MenuItem" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja Konstruktora służy do tworzenia <xref:System.Windows.Forms.ContextMenu> zawierający jego menu określonych elementów w czasie jego tworzenia. Po zastosowaniu ta wersja konstruktora, możesz dodać dodatkowe elementy menu do <xref:System.Windows.Forms.ContextMenu> przy użyciu <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> metody <xref:System.Windows.Forms.Menu.MenuItemCollection> klasy. Możesz uzyskać dostęp <xref:System.Windows.Forms.Menu.MenuItemCollection> za pośrednictwem <xref:System.Windows.Forms.Menu.MenuItems%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje konstruowanie menu skrótów i przy użyciu <xref:System.Windows.Forms.ContextMenu.Show%2A> metody. Aby uruchomić przykład, wklej następujący kod w postaci zawierający przycisk o nazwie Button1. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public event EventHandler Collapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Collapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Collapse As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Collapse;" />
      <MemberSignature Language="F#" Value="member this.Collapse : EventHandler " Usage="member this.Collapse : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zwija menu skrótów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raporty w momencie wystąpienia <xref:System.Windows.Forms.ContextMenu.Collapse> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby zgłosić na wiele zdarzeń lub zdarzeń, które często występują, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączane wiadomość w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wkleić go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.ContextMenu> o nazwie `ContextMenu1`. Upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.ContextMenu.Collapse> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#170)]
 [!code-vb[System.Windows.Forms.EventExamples#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCollapse (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollapse(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCollapse (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCollapse(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCollapse : EventArgs -&gt; unit&#xA;override this.OnCollapse : EventArgs -&gt; unit" Usage="contextMenu.OnCollapse e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Windows.Forms.ContextMenu.Collapse" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPopup : EventArgs -&gt; unit&#xA;override this.OnPopup : EventArgs -&gt; unit" Usage="contextMenu.OnPopup e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Windows.Forms.ContextMenu.Popup" /> zdarzeń</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberSignature Language="F#" Value="member this.Popup : EventHandler " Usage="member this.Popup : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, zanim zostanie wyświetlone menu skrótów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie można użyć do zainicjowania <xref:System.Windows.Forms.MenuItem> obiektów, zanim zostaną one wyświetlone. Na przykład, jeśli używasz <xref:System.Windows.Forms.ContextMenu> dla trzech <xref:System.Windows.Forms.TextBox> kontrolek i chcesz wyłączyć niektórych elementów menu w <xref:System.Windows.Forms.ContextMenu> zależności od tego, który <xref:System.Windows.Forms.TextBox> jest wyświetlane w menu skrótów, można utworzyć program obsługi zdarzeń dla tego zdarzenia. Można użyć <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> właściwości, aby określić, które <xref:System.Windows.Forms.TextBox> wyświetli <xref:System.Windows.Forms.ContextMenu> i wyłączenie odpowiedniego <xref:System.Windows.Forms.MenuItem> obiektów.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenia <xref:System.Windows.Forms.ContextMenu>. Określa kod w obsłudze zdarzeń, który dwóch formantów <xref:System.Windows.Forms.PictureBox> o nazwie `pictureBox1` i <xref:System.Windows.Forms.TextBox> o nazwie `textBox1` jest formantem wyświetlanie menu skrótów. W zależności od kontroli, który spowodował <xref:System.Windows.Forms.ContextMenu> Aby wyświetlić jego menu skrótów, dodaje odpowiedni formant <xref:System.Windows.Forms.MenuItem> obiekty do <xref:System.Windows.Forms.ContextMenu>. W tym przykładzie wymaga, że masz wystąpienie <xref:System.Windows.Forms.ContextMenu> klasę o nazwie `contextMenu1`zdefiniowaną w formularzu. W tym przykładzie wymaga również, że masz <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.PictureBox> dodany do formularza i że <xref:System.Windows.Forms.Control.ContextMenu%2A> tych formantów jest właściwością `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData, System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData, class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData, System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys * System.Windows.Forms.Control -&gt; bool" Usage="contextMenu.ProcessCmdKey (msg, keyData, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, przekazywany przez odwołanie, reprezentujący komunikat okna do przetworzenia.</param>
        <param name="keyData">Jedną z <see cref="T:System.Windows.Forms.Keys" /> wartości, które reprezentuje klucz używany do przetwarzania.</param>
        <param name="control">Kontrolka, do której stosują się klucz polecenia.</param>
        <summary>Przetwarza klucz polecenia.</summary>
        <returns>
          <see langword="true" /> Jeśli znak został przetworzony podczas kontroli. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana podczas komunikat przetwarzania wstępnego do obsługi kluczy polecenia. Polecenie klucze są klucze, które zawsze mają pierwszeństwo względem regularne klucze danych wejściowych. Przykładami polecenie klawisze akceleratorów i menu skrótów. Metoda musi zwracać `true` do wskazania, że przetworzyły klucz polecenia lub `false` do wskazania, że klucz jest kluczem polecenia. Ta metoda jest wywoływana tylko wtedy, gdy kontrolka znajduje się w aplikacji Windows Forms lub kontrolkę ActiveX.  
  
 <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> Metoda najpierw określi, czy kontrolka ma <xref:System.Windows.Forms.ContextMenu>i jeśli tak, umożliwia <xref:System.Windows.Forms.ContextMenu> do przetworzenia klucz polecenia. Jeśli polecenie nie jest skrót menu i ma okno nadrzędne kontrolki, klucz jest przekazywany do obiektu nadrzędnego <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> metody. Efektem sieciowym jest polecenie klucze są "przepuszcza" w hierarchii kontroli. Oprócz klucza użytkownik nacisnął klawisz, danych klucza, który wskazuje także który ewentualne klawisze modyfikujące zostały naciśnięte w tym samym czasie jako klucz. Klawisze modyfikujące obejmują klawiszy SHIFT, CTRL i ALT.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do bezpośredniego obiektu wywołującego można wywoływać kod niezarządzany. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> metody w klasie pochodnej, powinien zwrócić kontrolkę <see langword="true" /> do wskazania, że klucz został przetworzony. Aby uzyskać klucze, które nie zostały przetworzone przez kontrolkę, wynikiem wywołanie klasy bazowej <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> metoda powinna zostać zwrócona. Formanty rzadko, jeśli w ogóle, należy przesłonić tę metodę.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.ContextMenu.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy tekstu wyświetlanego przez formant jest wyświetlany od prawej do lewej.</summary>
        <value>Jedną z <see cref="T:System.Windows.Forms.RightToLeft" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia menu do włączenia obsługi języków zapisywanych od prawej do lewej. Jeśli ta właściwość jest równa `RightToLeft.Yes`, jest wyświetlany tekst elementu menu, od prawej do lewej zamiast domyślnej od lewej do prawej metody.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji na temat włączania wyrównanie od prawej do lewej wpływ kontrolek formularzy Windows Forms, zobacz <xref:System.Windows.Forms.Control.RightToLeft%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość przypisana do właściwości nie jest prawidłowym elementem <see cref="T:System.Windows.Forms.RightToLeft" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla menu skrótów w określonej pozycji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::Control ^ control, System::Drawing::Point pos);" />
      <MemberSignature Language="F#" Value="member this.Show : System.Windows.Forms.Control * System.Drawing.Point -&gt; unit" Usage="contextMenu.Show (control, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="control">Element <see cref="T:System.Windows.Forms.Control" /> , który określa formant, z którą jest skojarzone to menu skrótów.</param>
        <param name="pos">A <see cref="T:System.Drawing.Point" /> określający współrzędne, od którego należy wyświetlić menu. Te współrzędne są określane względem współrzędne klienta kontroli określone w <c>kontroli</c> parametru.</param>
        <summary>Wyświetla menu skrótów w określonej pozycji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Windows.Forms.ContextMenu> jest wyświetlane, gdy użytkownik kliknie prawym przyciskiem myszy na kontrolce lub obszaru formularza, <xref:System.Windows.Forms.ContextMenu> jest powiązana. Ta metoda umożliwia ręcznie wyświetlić menu skrótów z określonej lokalizacji i powiąż go z określonej kontrolki. Ta metoda nie zwraca do momentu menu jest odrzucane.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje konstruowanie menu skrótów i przy użyciu <xref:System.Windows.Forms.ContextMenu.Show%2A> metody. Aby uruchomić przykład, wklej następujący kod w postaci zawierający przycisk o nazwie Button1. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Uchwyt formantu nie istnieje lub kontrolka nie jest widoczna.</exception>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos, System.Windows.Forms.LeftRightAlignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos, valuetype System.Windows.Forms.LeftRightAlignment alignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::Control ^ control, System::Drawing::Point pos, System::Windows::Forms::LeftRightAlignment alignment);" />
      <MemberSignature Language="F#" Value="member this.Show : System.Windows.Forms.Control * System.Drawing.Point * System.Windows.Forms.LeftRightAlignment -&gt; unit" Usage="contextMenu.Show (control, pos, alignment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
        <Parameter Name="alignment" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="control">Element <see cref="T:System.Windows.Forms.Control" /> , który określa formant, z którą jest skojarzone to menu skrótów.</param>
        <param name="pos">A <see cref="T:System.Drawing.Point" /> określający współrzędne, od którego należy wyświetlić menu. Te współrzędne są określane względem współrzędne klienta kontroli określone w <c>kontroli</c> parametru.</param>
        <param name="alignment">A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> , który określa wyrównanie formantu względem <c>pos</c> parametru.</param>
        <summary>Wyświetla menu skrótów w określonej pozycji i przy użyciu określonego wyrównania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control SourceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control SourceControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.SourceControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ SourceControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.ContextMenu.SourceControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera formant, który jest wyświetlany w menu skrótów.</summary>
        <value>A <see cref="T:System.Windows.Forms.Control" /> reprezentujący kontrolkę która jest wyświetlana w menu skrótów. Jeśli nie może kontrolować wyświetli menu skrótów, właściwość ta zwraca <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie które kontrolki obecnie zdefiniowane w menu skrótów <xref:System.Windows.Forms.ContextMenu>. Jeśli obecnie nie jest wyświetlany w menu skrótów, służy tej właściwości można określić, które określają ostatnio wyświetlane menu skrótów. Można użyć tej właściwości w <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenie, aby upewnić się, że kontrolka Wyświetla elementy menu właściwe. Ta właściwość umożliwia również przekazać odwołanie do formantu do metody, która wykonuje zadania związane z polecenia menu wyświetlane w menu skrótów. Ponieważ <xref:System.Windows.Forms.Form> klasa dziedziczy <xref:System.Windows.Forms.Control>, można również użyć tej właściwości, jeśli <xref:System.Windows.Forms.ContextMenu> jest skojarzony z formularzem.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Windows.Forms.ContextMenu.Popup> zdarzenia <xref:System.Windows.Forms.ContextMenu>. Określa kod w obsłudze zdarzeń, który dwóch formantów <xref:System.Windows.Forms.PictureBox> o nazwie `pictureBox1` i <xref:System.Windows.Forms.TextBox> o nazwie `textBox1` jest formantem wyświetlanie menu skrótów. W zależności od kontroli, który spowodował <xref:System.Windows.Forms.ContextMenu> Aby wyświetlić jego menu skrótów, dodaje odpowiedni formant <xref:System.Windows.Forms.MenuItem> obiekty do <xref:System.Windows.Forms.ContextMenu>. W tym przykładzie wymaga, że masz wystąpienie <xref:System.Windows.Forms.ContextMenu> klasę o nazwie `contextMenu1`zdefiniowaną w formularzu. W tym przykładzie wymaga również, że masz <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.PictureBox> dodany do formularza i że <xref:System.Windows.Forms.Control.ContextMenu%2A> tych formantów jest właściwością `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>