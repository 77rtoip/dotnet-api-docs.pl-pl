<Type Name="OpacityConverter" FullName="System.Windows.Forms.OpacityConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf65e5bdd01289adebbc37efc93c81decf3ed3e6" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53525114" /></Metadata><TypeSignature Language="C#" Value="public class OpacityConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpacityConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpacityConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class OpacityConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpacityConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type OpacityConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia konwertera typów można przekonwertować wartości nieprzezroczystość do i z ciągu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj użytkownik nie bezpośrednio utworzyć wystąpienia <xref:System.Windows.Forms.OpacityConverter>. Zamiast tego należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji na temat typy konwerterów i wyświetlić przykłady kodu, zobacz <xref:System.ComponentModel.TypeConverter> klasy bazowej i [jak: Implementowanie konwertera typów](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpacityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpacityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie <see cref="T:System.Windows.Forms.OpacityConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To jest dostarczane przez kompilator domyślnego konstruktora.  
  
 Zazwyczaj użytkownik nie bezpośrednio utworzyć wystąpienia <xref:System.Windows.Forms.OpacityConverter>. Zamiast tego należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady kodu w <xref:System.ComponentModel.TypeConverter> klasy bazowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="opacityConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zawierające informacje o kontekście konwertera typów.</param>
        <param name="sourceType"><see cref="T:System.Type" /> Reprezentujący typ, który chcesz przekonwertować.</param>
        <summary>Zwraca wartość wskazującą, czy ten konwerter można przekonwertować obiektu typu określonego źródła do natywnego typu konwertera, który używa określonego kontekstu.</summary>
        <returns><see langword="true" /> w przypadku tego konwertera można wykonać konwersji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sourceType` Powinien być <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zastępuje tę metodę, aby zapewnić wymagań konwersji.  
  
Możesz użyć <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje na temat środowiska tego konwertera jest wywoływana z. Wartość parametru może być <see langword="null" />, więc należy zawsze sprawdzić zawartość. Ponadto we właściwościach <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> może również zwracać <see langword="null" />.</para></block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="opacityConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zawierające informacje o kontekście konwertera typów.</param>
        <param name="culture">Informacje o ustawieniach regionalnych dla konwersji.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje określony obiekt konwertera typu natywnego.</summary>
        <returns><see cref="T:System.Object" /> Reprezentujący skonwertowany <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.OpacityConverter.ConvertFrom%2A> Metody jest przeznaczone do przekonwertowania <xref:System.String> wartości, które reprezentują na odpowiadające im wartości procentowych lub ułamków dziesiętny <xref:System.Double> wartości, które reprezentują nieprzezroczystości jako wartość procentowa. Typy inne niż <xref:System.String> są przekazywane do implementacji klasy podstawowej tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Obiekt nie jest obsługiwanym typem dla konwersji.</exception>
        <exception cref="T:System.FormatException"><paramref name="value" /> Nie można prawidłowo przekonwertować na typ <see cref="T:System.Double" />.  
  
—lub— 
Wartość wynikowa przekonwertować <paramref name="value" /> była mniejsza od zera. procent lub większą niż 100 procent.</exception>
        <block subset="none" type="overrides"><para>Zastępuje tę metodę, aby zapewnić wymagań konwersji.  
  
Możesz użyć <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje na temat środowiska tego konwertera jest wywoływana z. Wartość parametru może być <see langword="null" />, więc należy zawsze sprawdzić zawartość. Ponadto we właściwościach <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> może również zwracać <see langword="null" />.</para></block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="opacityConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> zawierające informacje o kontekście konwertera typów.</param>
        <param name="culture">Informacje o ustawieniach regionalnych dla konwersji.</param>
        <param name="value">Wartość do konwersji.</param>
        <param name="destinationType">Typ, który można przekonwertować obiekt na potrzeby.</param>
        <summary>Konwertuje z typem natywnym konwertera wartości typu miejsca docelowego.</summary>
        <returns><see cref="T:System.Object" /> Reprezentujący skonwertowany <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.OpacityConverter.ConvertTo%2A> Metody jest przeznaczone do konwersji wartości całkowitych, aby ich <xref:System.String> reprezentacji wartości procentowej. Inne typy są przekazywane do implementacji klasy podstawowej tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="value" /> Nie można przekonwertować na <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides"><para>Zastępuje tę metodę, aby zapewnić wymagań konwersji.  
  
Możesz użyć <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje na temat środowiska tego konwertera jest wywoływana z. Wartość parametru może być <see langword="null" />, więc należy zawsze sprawdzić zawartość. Ponadto we właściwościach <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> może również zwracać <see langword="null" />.  
  
Wynikowy obiekt jest <see cref="T:System.String" /> reprezentujący procent krycia.</para></block>
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
  </Members>
</Type>