<Type Name="OpacityConverter" FullName="System.Windows.Forms.OpacityConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ea33b1eb1e0b2b0d26e69b0ac4b1ceea55b018b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30705890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OpacityConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpacityConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpacityConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class OpacityConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpacityConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia konwertera typów można przekonwertować wartości nieprzezroczystość do i z ciągu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie bezpośrednio utworzysz wystąpienia <xref:System.Windows.Forms.OpacityConverter>. Zamiast tego należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji o typy konwerterów i wyświetlić przykłady kodu, zobacz <xref:System.ComponentModel.TypeConverter> klasa podstawowa i [porady: Implementowanie konwertera typów](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpacityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpacityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Windows.Forms.OpacityConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To jest dostarczane przez kompilator domyślnego konstruktora.  
  
 Zazwyczaj nie bezpośrednio utworzysz wystąpienia <xref:System.Windows.Forms.OpacityConverter>. Zamiast tego wywołać <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody <xref:System.ComponentModel.TypeDescriptor> klasy. Aby uzyskać więcej informacji, zobacz przykłady kodu w <xref:System.ComponentModel.TypeConverter> klasy podstawowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> udostępniająca informacje o kontekście konwertera typów.</param>
        <param name="sourceType">
          <see cref="T:System.Type" /> Reprezentujący chcesz konwertować z typu.</param>
        <summary>Zwraca wartość wskazującą, czy ten konwerter można przekonwertować obiektu typu określonego źródła na typ macierzysty konwerter, który korzysta z określonego kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli ten konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sourceType` Powinien być <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 Można użyć <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić zawartość. Ponadto we właściwościach <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> może też zwracać <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> udostępniająca informacje o kontekście konwertera typów.</param>
        <param name="culture">Informacji o ustawieniach regionalnych do konwersji.</param>
        <param name="value">Obiekt do przekonwertowania.</param>
        <summary>Konwertuje określony obiekt konwertera typu macierzystego.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący skonwertowany <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.OpacityConverter.ConvertFrom%2A> Metody jest przeznaczone do przekonwertowania <xref:System.String> wartości, które reprezentują wartości procentowe lub ułamków dziesiętnych odpowiednie <xref:System.Double> wartości, które reprezentują nieprzezroczystość w procentach. Typów innych niż <xref:System.String> są przekazywane do implementacji klasy podstawowej tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Obiekt nie jest obsługiwanym typem dla konwersji.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="value" /> Nie można poprawnie przekonwertować na typ <see cref="T:System.Double" />.  
  
 —lub—  
  
 Powstałe w ten sposób przekonwertować <paramref name="value" /> został, mniejsza od zera procent lub większą niż 100 procent.</exception>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 Można użyć <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić zawartość. Ponadto we właściwościach <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> może też zwracać <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> udostępniająca informacje o kontekście konwertera typów.</param>
        <param name="culture">Informacji o ustawieniach regionalnych do konwersji.</param>
        <param name="value">Wartość do konwersji.</param>
        <param name="destinationType">Typ docelowy konwersji obiektu do.</param>
        <summary>Konwertuje z macierzystego typu konwertera wartości typu docelowego.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący skonwertowany <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.OpacityConverter.ConvertTo%2A> Metody jest przeznaczone do konwersji wartości całkowite na ich <xref:System.String> reprezentacje procent. Inne typy są przekazywane do implementacji klasy podstawowej tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> Nie można przekonwertować na <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides">
          <para>Przesłonić tę metodę w celu zapewnienia wymagań konwersji.  
  
 Można użyć <paramref name="context" /> parametr, aby wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z. Parametr może być <see langword="null" />, dlatego należy zawsze sprawdzić zawartość. Ponadto we właściwościach <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> może też zwracać <see langword="null" />.  
  
 Obiekt wynikowy <see cref="T:System.String" /> reprezentujący stopień nieprzezroczystości.</para>
        </block>
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
  </Members>
</Type>