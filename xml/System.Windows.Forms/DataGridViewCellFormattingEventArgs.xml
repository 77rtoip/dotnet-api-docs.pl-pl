<Type Name="DataGridViewCellFormattingEventArgs" FullName="System.Windows.Forms.DataGridViewCellFormattingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec69552484999504fe0bc017b2dea2f392ee5b7a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69192952" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewCellFormattingEventArgs : System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellFormattingEventArgs extends System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellFormattingEventArgs&#xA;Inherits ConvertEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellFormattingEventArgs : System::Windows::Forms::ConvertEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewCellFormattingEventArgs = class&#xA;    inherit ConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ConvertEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.DataGridView.CellFormatting" /> zdarzenia <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsłuż <xref:System.Windows.Forms.DataGridView.CellFormatting> zdarzenie, aby dostosować konwersję wartości komórki do formatu odpowiedniego do wyświetlania lub aby dostosować wygląd komórki w zależności od jej stanu lub wartości.  
  
 <xref:System.Windows.Forms.DataGridView.CellFormatting> Zdarzenie występuje każdorazowo po narysowaniu każdej komórki, dlatego należy unikać długotrwałego przetwarzania podczas obsługi tego zdarzenia. To zdarzenie występuje również wtedy, gdy <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> komórka zostanie pobrana lub jej <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> Metoda jest wywoływana.  
  
 Podczas obsługi <xref:System.Windows.Forms.DataGridView.CellFormatting> zdarzenia <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> właściwość jest inicjowana przy użyciu wartości komórki. Jeśli podano konwersję niestandardową z wartości komórki do wartości wyświetlanej, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> należy ustawić właściwość na wartość przekonwertowaną, upewniając się, że nowa wartość jest typu określonego przez <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> właściwość komórka. Aby wskazać, że nie jest wymagane dalsze formatowanie wartości, ustaw <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> właściwość na `true`.  
  
 Po zakończeniu obsługi zdarzeń, jeśli <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> ma `null` lub nie jest <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> prawidłowym typem lub <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>właściwość jest `false`, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> jest formatowana przy użyciu, <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, i właściwości stylu komórki zwracanego <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> przez właściwość, która jest inicjowana przy użyciu właściwości komórki <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>. <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>  
  
 Niezależnie od wartości <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> właściwości, właściwości wyświetlania obiektu zwróconego <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> przez właściwość są używane do renderowania komórki.  
  
 Aby uzyskać więcej informacji o formatowaniu niestandardowym za [pomocą <xref:System.Windows.Forms.DataGridView.CellFormatting> zdarzenia, zobacz How to: Dostosuj formatowanie danych w kontrolce](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)DataGridView Windows Forms.  
  
 Aby uniknąć spadku wydajności podczas obsługi tego zdarzenia, należy uzyskać dostęp do komórki za pomocą parametrów programu obsługi zdarzeń zamiast bezpośrednio uzyskać dostęp do komórki.  
  
 Aby dostosować konwersję sformatowanej wartości określonej przez użytkownika do rzeczywistej wartości komórki, należy obsłużyć <xref:System.Windows.Forms.DataGridView.CellParsing> zdarzenie.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak obsłużyć <xref:System.Windows.Forms.DataGridView.CellFormatting>.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
    <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
    <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventHandler" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
    <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
    <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Style komórki w formancie DataGridView formularzy systemu Windows</related>
    <related type="Article" href="~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md">Instrukcje: dostosowywanie formatowania danych w kontrolce DataGridView formularzy systemu Windows</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellFormattingEventArgs (int columnIndex, int rowIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle cellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 columnIndex, int32 rowIndex, object value, class System.Type desiredType, class System.Windows.Forms.DataGridViewCellStyle cellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellFormattingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnIndex As Integer, rowIndex As Integer, value As Object, desiredType As Type, cellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellFormattingEventArgs(int columnIndex, int rowIndex, System::Object ^ value, Type ^ desiredType, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewCellFormattingEventArgs : int * int * obj * Type * System.Windows.Forms.DataGridViewCellStyle -&gt; System.Windows.Forms.DataGridViewCellFormattingEventArgs" Usage="new System.Windows.Forms.DataGridViewCellFormattingEventArgs (columnIndex, rowIndex, value, desiredType, cellStyle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indeks kolumny komórki, która spowodowała zdarzenie.</param>
        <param name="rowIndex">Indeks wiersza komórki, która spowodowała zdarzenie.</param>
        <param name="value">Zawartość komórki.</param>
        <param name="desiredType">Typ do przekonwertowania <paramref name="value" /> .</param>
        <param name="cellStyle">Styl komórki, która spowodowała zdarzenie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr reprezentuje typ, do `value` którego ma zostać przekonwertowany parametr, i `desiredType` ma przypisaną <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> Właściwość komórki. `desiredType` Na przykład `value` Jeśli komórka formatuje nazwy obrazów jako mapy bitowe, <xref:System.String> to zawiera <xref:System.Type> nazwę obrazu <xref:System.Drawing.Bitmap> i `desiredType` reprezentuje typ.  
  
 <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>Jeśli program obsługi <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> zdarzeń nie ustawi właściwości na typ, który może być wyświetlany przez komórkę, zawartość komórki zostanie sformatowana przy użyciu właściwości, i. <xref:System.Windows.Forms.DataGridView.CellFormatting>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs>jak używać.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />jest mniejsza niż-1 
—lub— 
 <paramref name="rowIndex" />jest mniejsza niż-1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Style komórki w formancie DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle CellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle CellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ CellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl sformatowanej komórki.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> Reprezentujący styl wyświetlania sformatowanej komórki. Wartością domyślną jest wartość <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> właściwości komórki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie właściwości obiektu zwróconego przez <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> Właściwość spowoduje zmianę sposobu wyświetlania komórki i jego zawartości. Aby uniknąć kar za wydajność, Użyj tej właściwości, aby zmienić style komórek zamiast bezpośrednio uzyskać dostęp do komórki.  
  
 Aby uzyskać więcej informacji na temat stylów komórek, zobacz [style komórek w kontrolce DataGridView Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użyć <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> właściwości, aby kolorować tło komórek zawierających ciąg "różowy" do. <xref:System.Drawing.Color.Pink%2A>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Style komórki w formancie DataGridView formularzy systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks kolumny, która jest formatowana.</summary>
        <value>Indeks kolumny, która jest formatowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex%2A> , aby uzyskać indeks <xref:System.Windows.Forms.DataGridView.Columns%2A> we właściwości <xref:System.Windows.Forms.DataGridView>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex%2A> jak używać właściwości do pobierania właściwości kolumn.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Columns" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
    <Member MemberName="FormattingApplied">
      <MemberSignature Language="C#" Value="public bool FormattingApplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingApplied" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingApplied As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingApplied { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingApplied : bool with get, set" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wartość komórki została pomyślnie sformatowana.</summary>
        <value><see langword="true" />Jeśli formatowanie wartości komórki zostało obsłużone; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas obsługi <xref:System.Windows.Forms.DataGridView.CellFormatting> zdarzenia <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> `true` Ustaw<xref:System.Windows.Forms.ConvertEventArgs.Value%2A> właściwość na wartość po ustawieniu właściwości, jeśli nie jest wymagane dalsze formatowanie wartości. <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> <xref:System.Windows.Forms.DataGridViewCellStyle> <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A> <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>Jeśli wartość właściwościjestwykończeniaobsługizdarzeń,formatowaniezostaniezastosowanedowartościwskazanejprzez,,,iwłaściwości<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> `false` Obiekt zwrócony przez <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> właściwość na `true` , aby sygnalizować, że formatowanie dla tej komórki zostało zakończone.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera indeks wiersza sformatowanej komórki.</summary>
        <value>Indeks wiersza komórki, która jest formatowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex%2A> , aby uzyskać indeks <xref:System.Windows.Forms.DataGridView.Rows%2A> we właściwości <xref:System.Windows.Forms.DataGridView>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex%2A> właściwości do pobierania sformatowanej komórki. Odwołanie do komórki służy następnie do ustawiania tekstu etykietki narzędzia komórki.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
  </Members>
</Type>
