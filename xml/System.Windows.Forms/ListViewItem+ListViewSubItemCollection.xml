<Type Name="ListViewItem+ListViewSubItemCollection" FullName="System.Windows.Forms.ListViewItem+ListViewSubItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2fa7d644d2a267ea7db4bd8aa7c2c1b2e58f0296" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51318142" /></Metadata><TypeSignature Language="C#" Value="public class ListViewItem.ListViewSubItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListViewItem/ListViewSubItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem.ListViewSubItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListViewItem::ListViewSubItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewItem.ListViewSubItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> obiektów przechowywanych w <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> przechowuje <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektami, które reprezentują elementy podrzędne elementu nadrzędnego <xref:System.Windows.Forms.ListViewItem> w <xref:System.Windows.Forms.ListView> kontroli. Elementy podrzędne są wyświetlane tylko w <xref:System.Windows.Forms.ListView> kontroli, gdy określono kolumn w <xref:System.Windows.Forms.ListView.Columns%2A> właściwość <xref:System.Windows.Forms.ListView> kontroli i kiedy <xref:System.Windows.Forms.ListView.View%2A> właściwość <xref:System.Windows.Forms.ListView> kontrolki jest ustawiona na <xref:System.Windows.Forms.View.Details>. Kolejność elementów podrzędnych w <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> Określa kolumny elementy podrzędne są wyświetlane w <xref:System.Windows.Forms.ListView> kontroli.  
  
 Istnieje szereg sposobów, aby dodać elementy podrzędne do kolekcji. <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> Metoda dodaje jeden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> do kolekcji. Aby dodać numer elementów podrzędnych do kolekcji, należy utworzyć tablicę <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów i przekazać ją do <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metody. Jeśli chcesz wstawić podelement z określonej lokalizacji, w kolekcji, możesz użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metody. Aby usunąć elementy podrzędne, można użyć albo <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> metody lub <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> metodę, jeśli wiesz, gdzie podelement znajduje się w kolekcji. <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A> Metoda umożliwia usunięcie wszystkich podrzędnych z kolekcji zamiast <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> metodę, aby usunąć pojedynczy podelement w danym momencie.  
  
 Oprócz metod i właściwości do dodawania i usuwania podrzędne <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> zapewnia także metody, aby znaleźć elementy podrzędne w kolekcji. <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> Metody umożliwia określenie czy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> jest elementem członkowskim kolekcji. Gdy wiesz, że podelement znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> metodę, aby określić, gdzie podelement znajduje się w kolekcji.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItemCollection (System.Windows.Forms.ListViewItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.#ctor(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItemCollection(System::Windows::Forms::ListViewItem ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListViewItem.ListViewSubItemCollection : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem.ListViewSubItemCollection" Usage="new System.Windows.Forms.ListViewItem.ListViewSubItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ListViewItem" /> , Który jest właścicielem kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można utworzyć wystąpienia tej klasy, bez skojarzenia z <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje podelement kolekcję elementów podrzędnych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (text As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w przypadku podelement.</param>
        <summary>Podelement są dodawane do kolekcji z określonym tekstem.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metoda pozwala na dodawanie podelement do kolekcji, określając tekst podelement. Gdy ta metoda jest wywoływana, nową <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> jest tworzona przy użyciu podanego tekstu. Następnie można użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> zwracanym przez tę metodę, aby ustawić właściwości oraz wywoływać metody do manipulowania podelement. Jeśli masz już istniejące <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> , które chcesz dodać do kolekcji, można użyć wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodę akceptującą <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> jako parametr lub użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metody, jeśli chcesz dodać podelement na konkretnym Umieść w tej kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Windows.Forms.ListView> kontrolki z trzema <xref:System.Windows.Forms.ListViewItem> obiekty określone i trzy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiekty określone dla każdego elementu. W przykładzie jest tworzony również <xref:System.Windows.Forms.ColumnHeader> obiektów do wyświetlenia elementy podrzędne w widoku szczegółów. Dwa <xref:System.Windows.Forms.ImageList> obiekty są również tworzone w przykładzie kodu, aby zapewnić obrazów <xref:System.Windows.Forms.ListViewItem> obiektów. Te <xref:System.Windows.Forms.ImageList> obiekty są dodawane do <xref:System.Windows.Forms.ListView.LargeImageList%2A> i <xref:System.Windows.Forms.ListView.SmallImageList%2A> właściwości. W przykładzie użyto następujących właściwości w tworzeniu <xref:System.Windows.Forms.ListView> sterowania:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 W tym przykładzie wymaga, że dodano kod, aby <xref:System.Windows.Forms.Form> i wywołać metodę utworzony w przykładzie z konstruktora lub innej metody w formularzu. Przykład wymaga także, że obrazy o nazwie `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, i `MyLargeImage2` znajdują się w katalogu głównym dysku C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As ListViewItem.ListViewSubItem) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> Do dodania do kolekcji.</param>
        <summary>Dodaje istniejący <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do kolekcji.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć tej wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodę, aby dodać istniejące <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> do kolekcji. Ta metoda jest zwykle używana do ponownego użycia istniejącej podrzędnych z innych <xref:System.Windows.Forms.ListViewItem> obiektów. Elementy, które są dodawane do kolekcji są wstawiane na końcu listy. Aby wstawić element do kolekcji w określonej pozycji, użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metody. Jeśli chcesz dodać tablicę istniejących <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów, można użyć wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodę akceptującą tablicę <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów jako parametr.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="listViewSubItemCollection.Add (text, foreColor, backColor, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do wyświetlenia w przypadku podelement.</param>
        <param name="foreColor">A <see cref="T:System.Drawing.Color" /> reprezentujący podelement kolor pierwszego planu.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor tła podelement.</param>
        <param name="font">A <see cref="T:System.Drawing.Font" /> reprezentujący krój czcionki do wyświetlania tekstu podelement w.</param>
        <summary>Podelement są dodawane do kolekcji przy użyciu określonego tekstu, kolor pierwszego planu, kolor tła i ustawienia czcionki.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> Który został dodany do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metoda pozwala na dodawanie podelement do kolekcji, określając tekst podelement. Ponadto ta wersja <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metoda pozwala określić kolor początkowy narzędzia, kolor tła i czcionkę tekstu podelementu. Gdy ta metoda jest wywoływana, nową <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> jest tworzona przy użyciu podanego tekstu. Następnie można użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> zwracanym przez tę metodę, aby ustawić właściwości oraz wywoływać metody do manipulowania podelement. Jeśli masz już istniejące <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> , które chcesz dodać do kolekcji, można użyć wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metodę akceptującą <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> jako parametr lub użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metody, jeśli chcesz dodać podelement na konkretnym Umieść w kolekcji.  
  
> [!NOTE]
>  Domyślnie podelementy używają kolor pierwszego planu, kolor tła i czcionki określona dla elementu nadrzędnego. Ustaw <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType> właściwość `false` aby uniemożliwić przesłanianie style podelement Style elementu nadrzędnego.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tablica elementów podrzędnych są dodawane do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] -&gt; unit" Usage="listViewSubItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących tekst każdej podpozycji do dodania do kolekcji.</param>
        <summary>Tworzy nowe elementy podrzędne na podstawie tablicy i dodaje je do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć tej wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodę, aby dodać tablicę ciągów do kolekcji, gdzie każdego ciągu w kolekcji reprezentuje tekst podelement nowe. Można użyć innych wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodę akceptującą tablicę ciągów, jako parametr, aby określić kolor pierwszego planu, kolor tła i czcionkę dla każdego dodawanego elementu. Jeśli chcesz ponownie użyć istniejącej <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów i dodać je do kolekcji, można użyć wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodę akceptującą tablicę <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów jako parametr.  
  
 Jeśli chcesz dodać jeden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>, użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metody. Można również użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metody, jeśli chcesz dodać jeden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> na określonej pozycji w kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem.ListViewSubItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem/ListViewSubItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem.ListViewSubItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem.ListViewSubItem[] -&gt; unit" Usage="listViewSubItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
      </Parameters>
      <Docs>
        <param name="items">Tablica <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> obiekty do dodania do kolekcji.</param>
        <summary>Dodaje tablicę <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> obiekty do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do ponownego użycia podelementy przechowywane w innej <xref:System.Windows.Forms.ListViewItem>. Jeśli chcesz dodać jeden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektu, należy użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metody. Można również użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metody, jeśli chcesz dodać jeden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> na określonej pozycji w kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[],System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string[] * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; unit" Usage="listViewSubItemCollection.AddRange (items, foreColor, backColor, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">Tablica ciągów reprezentujących tekst każdej podpozycji do dodania do kolekcji.</param>
        <param name="foreColor">A <see cref="T:System.Drawing.Color" /> reprezentujący podelement kolor pierwszego planu.</param>
        <param name="backColor">A <see cref="T:System.Drawing.Color" /> reprezentujący kolor tła podelement.</param>
        <param name="font">A <see cref="T:System.Drawing.Font" /> reprezentujący krój czcionki do wyświetlania tekstu podelement w.</param>
        <summary>Tworzy nowe elementy podrzędne na podstawie tablicy i dodaje je do kolekcji z określonym kolorem, kolor tła i czcionki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć tej wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodę, aby dodać tablicę ciągów do kolekcji, gdzie każdego ciągu w kolekcji reprezentuje tekst podelement nowe. Ponadto ta wersja <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metoda pozwala określić kolor pierwszego planu, kolor tła i czcionkę dla każdej podpozycji. Można użyć innych wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodę akceptującą tablicę ciągów jako parametru, jeśli chcesz określić kolor pierwszego planu, kolor tła i ustawienia czcionki każdej podpozycji. Jeśli chcesz ponownie użyć istniejącej <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów i dodać je do kolekcji, można użyć wersji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metodę akceptującą tablicę <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> obiektów jako parametr.  
  
 Jeśli chcesz dodać jeden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>, użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metody. Można również użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> metody, jeśli chcesz dodać jeden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> na określonej pozycji w kolekcji.  
  
> [!NOTE]
>  Domyślnie podelementy używają kolor pierwszego planu, kolor tła i czcionki określona dla elementu nadrzędnego. Ustaw <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType> właściwość `false` aby uniemożliwić przesłanianie style podelement Style elementu nadrzędnego.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewSubItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy podrzędne i element nadrzędny <see cref="T:System.Windows.Forms.ListViewItem" /> z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po usunięciu podrzędnych z kolekcji wszystkie informacje o usunięte elementy podrzędne zostaną utracone. Aby usunąć pojedynczy podelement przed użyciem kolekcji <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> lub <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (subItem As ListViewItem.ListViewSubItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; bool" Usage="listViewSubItemCollection.Contains subItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">A <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> reprezentujący podelement do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określony podelement znajduje się w kolekcji.</summary>
        <returns><see langword="true" /> Jeśli podelement znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> Metody umożliwia określenie czy <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> jest elementem członkowskim kolekcji. Gdy wiesz, że podelement znajduje się w kolekcji, możesz użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> metodę, aby określały położenie podelement w kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="listViewSubItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do wyszukania.</param>
        <summary>Określa, czy kolekcja zawiera element z określonym kluczem.</summary>
        <returns><see langword="true" /> Aby wskazać, Kolekcja zawiera element z określonym kluczem; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> w <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 Porównanie klucza nie jest rozróżniana wielkość liter. Jeśli `key` parametr jest `null` ani być pustym ciągiem <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey%2A> zwraca `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów podrzędnych w kolekcji.</summary>
        <value>Liczba elementów podrzędnych w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby elementów podrzędnych, które są zdefiniowane dla <xref:System.Windows.Forms.ListViewItem>. Następnie można użyć tej wartości, gdy są pętli wartości kolekcji należy podać liczbę iteracji do wykonania pętli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewSubItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający na potrzeby zbierania podelement wykonać iterację.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> Reprezentujący zbierania podelement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (subItem As ListViewItem.ListViewSubItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; int" Usage="listViewSubItemCollection.IndexOf subItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">A <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> reprezentujący podelement do zlokalizowania w kolekcji.</param>
        <summary>Zwraca indeks w zbierania podelement określony.</summary>
        <returns>Liczony od zera indeks lokalizacji podelement w kolekcji. Jeśli podelement nie znajduje się w kolekcji, wartość zwracana jest ujemna jeden (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> Metody pozwalają na określenie pozycji podelement w kolekcji. Aby określić, czy podelement znajduje się w kolekcji przed wywołaniem tej metody, należy użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="listViewSubItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do pobrania indeks.</param>
        <summary>Zwraca indeks pierwszego wystąpienia elementu z określonym kluczem z kolekcji.</summary>
        <returns>Liczony od zera indeks pierwszego wystąpienia elementu z określonym kluczem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A> nazywa się kolejno, ostatni zwrócony indeksu będą sprawdzane pod kątem dopasowania klucza najpierw, a jeśli nie zostanie odnaleziony odpowiednik, wyszukiwanie rozpoczyna się na początku kolekcji.  
  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> w <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 Porównanie klucza nie jest rozróżniana wielkość liter. Jeśli `key` parametr jest `null` ani być pustym ciągiem <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A> zwraca wartość -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; unit" Usage="listViewSubItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</param>
        <param name="item">A <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> reprezentujący podelement do wstawienia do kolekcji.</param>
        <summary>Wstawia podelement do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia wstawianie podelement na określonej pozycji w <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>. Aby dodać podelement bez określenia na określonej pozycji, użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> metody. Aby dodać tablicę elementów podrzędnych do kolekcji, należy użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> metody. Można użyć tej metody, aby wstawić nowy podelement do istniejącej kolekcji elementów podrzędnych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> Parametru jest mniejsza od zera lub większa niż wartość <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
        <value><see langword="true" /> Jeśli kolekcja jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zawsze `false` dla tej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera element z kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[int] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem.ListViewSubItem with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu w kolekcji do pobrania.</param>
        <summary>Pobiera lub ustawia podelement w określonym indeksie kolekcji.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> reprezentujący podelement znajduje się w określonym indeksie kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do uzyskiwania <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> przechowywaną w określonej lokalizacji w kolekcji. Aby określić indeks konkretny element w kolekcji, użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> Parametru jest mniejsza od zera i mniejszy niż wartość <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem.ListViewSubItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do pobrania.</param>
        <summary>Pobiera element z określonym kluczem z kolekcji.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> z określonym kluczem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> w <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 Porównanie klucza nie jest rozróżniana wielkość liter. Jeśli `key` parametr jest `null` ani być pustym ciągiem <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item%2A> zwraca `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewItem.ListViewSubItem -&gt; unit" Usage="listViewSubItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">Element do usunięcia z kolekcji.</param>
        <summary>Usuwa określony element z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby usunąć element z określonym indeksem lub z określonym kluczem, należy użyć <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> metody lub <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey%2A> metody, odpowiednio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewSubItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks podelement do usunięcia.</param>
        <summary>Usuwa podelement w określonym indeksie kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po usunięciu podelement z kolekcji, indeksy zmienić w przypadku kolejnych podelementów w kolekcji. Wszystkie informacje o podelement usunięte zostaną usunięte. Ta metoda służy do usuwania określonych podelement z kolekcji, określając indeks podelement do usunięcia z kolekcji. Aby określić podelement, aby usunąć zamiast indeks podelement, użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> metody. Aby usunąć wszystkie elementy podrzędne z kolekcji, użyj <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> Parametru jest mniejsza od zera i mniejszy niż wartość <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> właściwość <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="listViewSubItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa elementu do usunięcia z kolekcji.</param>
        <summary>Usuwa element z określonym kluczem z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Właściwość odnosi się do klucza dla <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> w <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 Porównanie klucza nie jest rozróżniana wielkość liter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Tablica <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</param>
        <param name="index">Rozpoczyna się od zera indeks w tablicy, od których kopiowanie.</param>
        <summary>Kopiuje element i kolekcję elementów podrzędnych do tablicy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Typ tablicy nie jest zgodny z <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest zsynchronizowany dostęp do kolekcji (wątkowo).</summary>
        <value><see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizowania dostępu do kolekcji.</summary>
        <value>Obiekt używany do synchronizowania kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> Do dodania do kolekcji.</param>
        <summary>Dodaje istniejący <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> do kolekcji.</summary>
        <returns>Liczony od zera indeks, która wskazuje lokalizację obiektu, który został dodany do kolekcji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="item" /> nie jest <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (subItem As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ subItem) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">Obiekt, który reprezentuje podelement do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określony podelement znajduje się w kolekcji.</summary>
        <returns><see langword="true" /> Jeśli podelement znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (subItem As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ subItem) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">Obiekt, który reprezentuje podelement do zlokalizowania w kolekcji.</param>
        <summary>Zwraca indeks w zbierania podelement określony.</summary>
        <returns>Liczony od zera indeks podelement, jeśli znajduje się w kolekcji; w przeciwnym razie, wartość -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja liczony od zera indeks polegający na wstawieniu elementu.</param>
        <param name="item">Obiekt, który reprezentuje podelement do wstawienia do kolekcji.</param>
        <summary>Wstawia podelement do kolekcji pod określonym indeksem.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="item" /> nie jest <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr indeksu jest mniejszy niż 0 lub większa niż lub równa wartości właściwości liczba <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja o stałym rozmiarze.</summary>
        <value><see langword="false" /> we wszystkich przypadkach.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> w określonym indeksie kolekcji.</summary>
        <value>A <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> reprezentujący element znajdujący się w określonym indeksie kolekcji.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr indeksu jest mniejszy niż 0 lub większa niż lub równa wartości właściwości liczba <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <exception cref="T:System.ArgumentException">Obiekt nie jest <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Element do usunięcia z kolekcji.</param>
        <summary>Usuwa określony element z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> wystąpienia jest rzutowany na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>