<Type Name="CommonDialog" FullName="System.Windows.Forms.CommonDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32a425f593cc37801383a089f4b5b8e53978e846" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39991110" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CommonDialog : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonDialog extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonDialog&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonDialog abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CommonDialog = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa klasę bazową, służący do wyświetlania okien dialogowych na ekranie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dziedziczonych klas są wymagane do zaimplementowania <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> wywołując <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> do tworzenia określonych wspólne okno dialogowe. Opcjonalnie zastąpić dziedziczonych klas <xref:System.Windows.Forms.CommonDialog.HookProc%2A> do implementacji funkcji punktów zaczepienia okno dialogowe określonych.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.ColorDialog> implementacji <xref:System.Windows.Forms.CommonDialog> i przedstawia tworzenie i wyświetlane okno dialogowe. W tym przykładzie wymaga, że metoda jest wywoływana z w ramach istniejącego formularza, który ma <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.Button> dla niej.  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommonDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.CommonDialog" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CommonDialog.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie przycisk Pomoc na wspólne okno dialogowe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać informacje na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, inicjowanie <xref:System.Windows.Forms.ColorDialog> ustawienia obiektu <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> właściwości. <xref:System.Windows.Forms.ColorDialog> Obiektu nie zezwala użytkownikowi na ustawianie koloru niestandardowego, ale daje pełny zestaw kolorów podstawowych, które mają być wyświetlane. Ustawiając <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> wartość false dla właściwości, umożliwia wyświetlanie kolorów, które są kombinacje innych kolorów w systemach z 256 lub mniej kolorów. W przykładzie pokazano również ustawienie <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> właściwości i obsługa <xref:System.Windows.Forms.CommonDialog.HelpRequest> zdarzenia dla okna dialogowego. Aby uruchomić przykład, wklej następujący kod w postaci i wywołania `InitializeColorDialog` metody w Konstruktorze formularza lub `Load` metody. W tym przykładzie wymaga, aby `Click` zdarzenia przycisku jest podłączony do obsługi zdarzeń zdefiniowanych w przykładzie.  
  
 [!code-cpp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HookProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="abstract member HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint&#xA;override this.HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="commonDialog.HookProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">Dojście do okno dialogowe.</param>
        <param name="msg">Trwa odebrany komunikat.</param>
        <param name="wparam">Dodatkowe informacje na temat wiadomości.</param>
        <param name="lparam">Dodatkowe informacje na temat wiadomości.</param>
        <summary>Definiuje typowe okna dialogowego pole hook procedurę, która zostanie zastąpiona, aby dodać funkcje do wspólne okno dialogowe.</summary>
        <returns>Wartość zero, jeśli procedury okna dialogowego domyślne przetwarza wiadomości; wartość różną od zera jeśli procedury okna dialogowego domyślne ignoruje komunikat.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Procedura haka to mechanizm, za pomocą którego funkcja pozwala przechwytywać zdarzenia, zanim osiągną one aplikację. Gdy zastąpisz <xref:System.Windows.Forms.CommonDialog.HookProc%2A> metodę <xref:System.Windows.Forms.CommonDialog> klasy, system operacyjny wywołuje przesłonięcia funkcji publikować wiadomości systemu operacyjnego do okna.  
  
 Domyślnie procedura haka Wyśrodkowuje okno dialogowe na ekranie w odpowiedzi na wiadomość / / Złap.  
  
> [!NOTE]
>  Ta metoda używa <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> aby zapobiec jest wywoływana z niezaufanego kodu; tylko bezpośredniego wywołującego jest wymagane do <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> uprawnień. Jeśli Twój kod może być wywoływana z częściowo zaufanego kodu, nie przekazuj dane wejściowe użytkownika do <xref:System.Runtime.InteropServices.Marshal> klasy metody bez sprawdzania poprawności. Aby uzyskać ważne ograniczenia dotyczące używania `LinkDemand` elementu członkowskiego, zobacz [popytu programu vs. Żądanie LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).  
  
 Ta właściwość używa również <xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType> atrybutu zabezpieczeń; Aby zastąpić ten element członkowski klasy pochodnej musi mieć `CustomPermission` uprawnień.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób zastąpienia <xref:System.Windows.Forms.CommonDialog.HookProc%2A> metody. Przykład zawiera klasę, która dziedziczy <xref:System.Windows.Forms.CommonDialog> klasy. W tej klasie <xref:System.Windows.Forms.CommonDialog.HookProc%2A> zastąpienia, w tym przykładzie daje w wyniku metody `msg` parametru w odniesieniu do wartości stałej dla konkretnego komunikatów Windows. Jeśli `msg` parametru jest równa określonej stałej, przykład zapisuje dane wyjściowe śledzenia komunikatów Windows, który został przekazany do identyfikowania <xref:System.Windows.Forms.CommonDialog.HookProc%2A> metody. W tym przykładzie założono, że klasy, w której <xref:System.Windows.Forms.CommonDialog.HookProc%2A> metoda jest zadeklarowana, dziedziczy <xref:System.Windows.Forms.CommonDialog> klasy.  
  
 [!code-cpp[HookProc Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HookProc Example/CPP/fontdialogoverride.cpp#1)]
 [!code-csharp[HookProc Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HookProc Example/CS/fontdialogoverride.cs#1)]
 [!code-vb[HookProc Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HookProc Example/VB/fontdialogoverride.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do bezpośredniego obiektu wywołującego można wywoływać kod niezarządzany. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>Dziedziczenie klas mogą przesłaniać tę metodę, aby dodać funkcje do wspólne okno dialogowe. Podczas zastępowania <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> metody.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpRequest (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpRequest(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpRequest (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpRequest(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpRequest : EventArgs -&gt; unit&#xA;override this.OnHelpRequest : EventArgs -&gt; unit" Usage="commonDialog.OnHelpRequest e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.HelpEventArgs" /> Udostępniające dane zdarzenie.</param>
        <summary>Wywołuje <see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy kliknięto przycisk pomocy. Dziedziczenie klas mogą przesłaniać tę metodę, aby obsłużyć zdarzenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerWndProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr OwnerWndProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int OwnerWndProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OwnerWndProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr OwnerWndProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="abstract member OwnerWndProc : nativeint * int * nativeint * nativeint -&gt; nativeint&#xA;override this.OwnerWndProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="commonDialog.OwnerWndProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">Uchwyt okna wiadomości do wysłania.</param>
        <param name="msg">Komunikat Win32 do wysłania.</param>
        <param name="wparam">
          <c>Wparam</c> do wysyłania wiadomości.</param>
        <param name="lparam">
          <c>Lparam</c> do wysyłania wiadomości.</param>
        <summary>Definiuje procedurę okna właściciela, która została zastąpiona, aby dodać funkcje do wspólne okno dialogowe.</summary>
        <returns>Wynik przetwarzanie komunikatów, który jest zależny od wiadomość została wysłana.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrola jest przekazywana w tym miejscu podczas wysyłania wiadomości do okna właściciela wspólne okno dialogowe. Dziedziczenie klas mogą przesłaniać tę metodę, aby dodać funkcje do wspólne okno dialogowe.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do bezpośredniego obiektu wywołującego można wywoływać kod niezarządzany. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public abstract void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="commonDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, przywrócenie wartości domyślnych właściwości wspólne okno dialogowe.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla niezarządzanego kodu wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>Dziedziczenie klas mogą przesłaniać tę metodę, aby zresetować ich właściwości.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected abstract bool RunDialog (IntPtr hwndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool RunDialog(native int hwndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function RunDialog (hwndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool RunDialog(IntPtr hwndOwner);" />
      <MemberSignature Language="F#" Value="abstract member RunDialog : nativeint -&gt; bool" Usage="commonDialog.RunDialog hwndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwndOwner">Wartość, która reprezentuje uchwyt okna okna właściciela dla wspólne okno dialogowe.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, określa wspólne okno dialogowe.</summary>
        <returns>
          <see langword="true" /> Jeśli okno dialogowe zostało pomyślnie uruchomione; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy użytkownik wspólne okno dialogowe wywołuje <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, i musi zostać zastąpiona przez klasy dziedziczone z <xref:System.Windows.Forms.CommonDialog> do implementowania określonego wspólne okno dialogowe.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla niezarządzanego kodu wywołać tę metodę. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:System.Windows.Forms.CommonDialog.ShowDialog" />
        <altmember cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Uruchamia wspólne okno dialogowe.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; System.Windows.Forms.DialogResult" Usage="commonDialog.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia wspólne okno dialogowe z domyślnym właścicielem.</summary>
        <returns>
          <see cref="F:System.Windows.Forms.DialogResult.OK" /> Jeśli użytkownik kliknie przycisk OK w oknie dialogowym. w przeciwnym razie <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda implementuje <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.ColorDialog> implementacji <xref:System.Windows.Forms.CommonDialog> i przedstawia tworzenie i wyświetlane okno dialogowe. W tym przykładzie wymaga, że metoda jest wywoływana z w ramach istniejącego formularza, który ma <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.Button> dla niej.  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Aby wydrukować <see cref="T:System.Windows.Forms.PrintDialog" />. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznych okien podrzędnych w celu wywołania tej metody. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
        <altmember cref="T:System.Windows.Forms.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : System.Windows.Forms.IWin32Window -&gt; System.Windows.Forms.DialogResult" Usage="commonDialog.ShowDialog owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">Dowolny obiekt, który implementuje <see cref="T:System.Windows.Forms.IWin32Window" /> reprezentująca oknie najwyższego poziomu, które będą właścicielami modalne okno dialogowe.</param>
        <summary>Uruchamia określony właściciel wspólne okno dialogowe.</summary>
        <returns>
          <see cref="F:System.Windows.Forms.DialogResult.OK" /> Jeśli użytkownik kliknie **OK** w oknie dialogowym; w przeciwnym razie <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> metody umożliwia określenie konkretnego formularza lub formantu, który będą właścicielami okno dialogowe, która jest wyświetlana. Jeśli używasz wersji tej metody, która nie ma parametrów, okno dialogowe, są wyświetlane może być własnością automatycznie aktualnie aktywnego okna aplikacji.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Aby wydrukować <see cref="T:System.Windows.Forms.PrintDialog" />. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">dla bezpiecznych okien podrzędnych w celu wywołania tej metody. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CommonDialog.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.CommonDialog.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera dane o kontrolce.</summary>
        <value>Obiekt, który zawiera dane o <see cref="T:System.Windows.Forms.CommonDialog" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do przechowywania dowolnego informacji na temat kontroli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>