<Type Name="IDataObject" FullName="System.Windows.Forms.IDataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5abc2b039389d79c9a7337771dae53202d6337a9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69187741" /></Metadata><TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <TypeSignature Language="F#" Value="type IDataObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="55081-101">Zapewnia mechanizm niezależny od formatu do transferowania danych.</span><span class="sxs-lookup"><span data-stu-id="55081-101">Provides a format-independent mechanism for transferring data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-102">Interfejs jest używany <xref:System.Windows.Forms.Clipboard> przez klasę i podczas operacji przeciągania i upuszczania. `IDataObject`</span><span class="sxs-lookup"><span data-stu-id="55081-102">The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="55081-103">W przypadku implementacji w klasie <xref:System.Windows.Forms.IDataObject> metody zezwalają użytkownikowi na przechowywanie danych w wielu formatach w wystąpieniu klasy.</span><span class="sxs-lookup"><span data-stu-id="55081-103">When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class.</span></span> <span data-ttu-id="55081-104">Przechowywanie danych w więcej niż jednym formacie zwiększa szansę, że aplikacja docelowa, której wymagania dotyczące formatu mogą nie być znane, może pobrać przechowywane dane.</span><span class="sxs-lookup"><span data-stu-id="55081-104">Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</span></span> <span data-ttu-id="55081-105">Aby przechowywać dane w wystąpieniu <xref:System.Windows.Forms.IDataObject>, należy <xref:System.Windows.Forms.IDataObject.SetData%2A> wywołać metodę i określić format danych w `format` parametrze.</span><span class="sxs-lookup"><span data-stu-id="55081-105">To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter.</span></span> <span data-ttu-id="55081-106">Ustaw parametr na `false` , jeśli nie chcesz, aby przechowywane dane były konwertowane na inny format podczas pobierania. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="55081-106">Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved.</span></span> <span data-ttu-id="55081-107">Wywołaj <xref:System.Windows.Forms.IDataObject.SetData%2A> wiele razy w jednym <xref:System.Windows.Forms.IDataObject> wystąpieniu do przechowywania danych w więcej niż jednym formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-107">Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.</span></span>  
  
 <span data-ttu-id="55081-108">Dane przechowywane są <xref:System.Windows.Forms.IDataObject.GetData%2A> pobierane z obiektu <xref:System.Windows.Forms.IDataObject> przez wywołanie metody i określenie formatu danych w `format` parametrze.</span><span class="sxs-lookup"><span data-stu-id="55081-108">You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter.</span></span> <span data-ttu-id="55081-109">`autoConvert` Ustaw`false` parametr na, aby pobierać tylko dane zapisane w określonym formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-109">Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format.</span></span> <span data-ttu-id="55081-110">Aby przekonwertować przechowywane dane w określonym formacie, ustaw wartość `autoConvert` `true`lub nie używaj `autoConvert`.</span><span class="sxs-lookup"><span data-stu-id="55081-110">To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.</span></span>  
  
 <span data-ttu-id="55081-111">Aby określić formaty danych przechowywanych w <xref:System.Windows.Forms.IDataObject>, użyj następujących <xref:System.Windows.Forms.IDataObject> metod.</span><span class="sxs-lookup"><span data-stu-id="55081-111">To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.</span></span>  
  
-   <span data-ttu-id="55081-112">Wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A> metodę, aby pobrać tablicę wszystkich formatów, w których dane są dostępne.</span><span class="sxs-lookup"><span data-stu-id="55081-112">Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available.</span></span> <span data-ttu-id="55081-113">Ustaw parametr na `false` , aby uzyskać tylko formaty, w których są przechowywane dane. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="55081-113">Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored.</span></span> <span data-ttu-id="55081-114">Aby uzyskać wszystkie formaty, w których dane są dostępne, ustaw wartość `autoConvert` `true`lub nie używaj tego parametru.</span><span class="sxs-lookup"><span data-stu-id="55081-114">To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.</span></span>  
  
-   <span data-ttu-id="55081-115">Wywołaj <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> metodę, aby określić, czy przechowywane dane są dostępne w określonym formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-115">Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format.</span></span> <span data-ttu-id="55081-116">Jeśli nie chcesz, aby przechowywane dane były konwertowane do określonego formatu, ustaw `autoConvert` parametr na. `false`</span><span class="sxs-lookup"><span data-stu-id="55081-116">If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.</span></span>  
  
 <span data-ttu-id="55081-117">Zapoznaj <xref:System.Windows.Forms.DataObject> się z klasą implementacji tego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="55081-117">See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface.</span></span> <span data-ttu-id="55081-118">Zapoznaj <xref:System.Windows.Forms.DataFormats> się z klasą <xref:System.Windows.Forms.Clipboard> wstępnie zdefiniowanych formatów danych.</span><span class="sxs-lookup"><span data-stu-id="55081-118">See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55081-119">Pobiera dane skojarzone z określonym formatem danych.</span><span class="sxs-lookup"><span data-stu-id="55081-119">Retrieves the data associated with the specified data format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-120">Format danych do pobrania.</span><span class="sxs-lookup"><span data-stu-id="55081-120">The format of the data to retrieve.</span></span> <span data-ttu-id="55081-121">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-121">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="55081-122">Pobiera dane skojarzone z określonym formatem danych.</span><span class="sxs-lookup"><span data-stu-id="55081-122">Retrieves the data associated with the specified data format.</span></span></summary>
        <returns><span data-ttu-id="55081-123">Dane skojarzone z określonym formatem lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55081-123">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-124">Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować dane do formatu.</span><span class="sxs-lookup"><span data-stu-id="55081-124">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="55081-125">Jeśli dane nie mogą zostać skonwertowane do określonego formatu, ta metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="55081-125">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="55081-126">Aby określić, czy dane są skojarzone z lub można je przekonwertować na format <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> , przed wywołaniem. <xref:System.Windows.Forms.IDataObject.GetData%2A></span><span class="sxs-lookup"><span data-stu-id="55081-126">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="55081-127">Wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A> listę prawidłowych formatów dla danych przechowywanych w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-127">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55081-128">Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-128">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="55081-129">Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.</span><span class="sxs-lookup"><span data-stu-id="55081-129">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="55081-130">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-130">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-131">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject,` , aby `GetData` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-131">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="55081-132">Metoda jest używana do pobierania danych przechowywanych w `myDataObject`, które są skojarzone `Text` z formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-132">The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format.</span></span> <span data-ttu-id="55081-133">W <xref:System.Windows.Forms.Form> przykładzie założono, że utworzono już nazwę `Form1` i <xref:System.Windows.Forms.TextBox> nazwę `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="55081-133">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]
 [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]
 [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-134"><see cref="T:System.Type" /> Reprezentujący format danych do pobrania.</span><span class="sxs-lookup"><span data-stu-id="55081-134">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span></span> <span data-ttu-id="55081-135">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-135">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="55081-136">Pobiera dane skojarzone z określonym formatem typu klasy.</span><span class="sxs-lookup"><span data-stu-id="55081-136">Retrieves the data associated with the specified class type format.</span></span></summary>
        <returns><span data-ttu-id="55081-137">Dane skojarzone z określonym formatem lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55081-137">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-138">Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować dane do formatu.</span><span class="sxs-lookup"><span data-stu-id="55081-138">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="55081-139">Jeśli dane nie mogą zostać skonwertowane do określonego formatu, ta metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="55081-139">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="55081-140">Aby określić, czy dane są skojarzone z lub można je przekonwertować na format <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> , przed wywołaniem. <xref:System.Windows.Forms.IDataObject.GetData%2A></span><span class="sxs-lookup"><span data-stu-id="55081-140">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="55081-141">Wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A> listę prawidłowych formatów dla danych przechowywanych w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-141">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55081-142">Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-142">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="55081-143">Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.</span><span class="sxs-lookup"><span data-stu-id="55081-143">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="55081-144">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-144">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-145">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `GetData` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-145">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="55081-146">Metoda jest używana do pobierania danych przechowywanych w `myObject`, które są skojarzone z określonym typem,. `myType`</span><span class="sxs-lookup"><span data-stu-id="55081-146">The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`.</span></span> <span data-ttu-id="55081-147">Typ pobranych danych jest wyświetlany w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="55081-147">The type of the retrieved data is displayed in a message box.</span></span> <span data-ttu-id="55081-148">W przykładzie założono, że utworzono <xref:System.Windows.Forms.Form> już nazwę. `Form1`</span><span class="sxs-lookup"><span data-stu-id="55081-148">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]
 [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]
 [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj" Usage="iDataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-149">Format danych do pobrania.</span><span class="sxs-lookup"><span data-stu-id="55081-149">The format of the data to retrieve.</span></span> <span data-ttu-id="55081-150">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-150">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="55081-151"><see langword="true" />Aby przekonwertować dane do określonego formatu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="55081-151"><see langword="true" /> to convert the data to the specified format; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="55081-152">Pobiera dane skojarzone z określonym formatem danych przy użyciu wartości logicznej, aby określić, czy dane mają być konwertowane w formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-152">Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="55081-153">Dane skojarzone z określonym formatem lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55081-153">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-154">Jeśli parametr jest `true` i ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować dane w formacie. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="55081-154">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="55081-155">Jeśli dane nie mogą zostać skonwertowane do określonego formatu lub jeśli dane były przechowywane z `autoConvert` parametrem ustawionym na `false`, ta metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="55081-155">If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="55081-156">Jeśli parametr jest `false`, Metoda ta zwraca dane w określonym formacie lub `null` Jeśli nie można znaleźć danych w tym formacie. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="55081-156">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="55081-157">Aby określić, czy dane są skojarzone z lub można je przekonwertować na format <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> , przed wywołaniem. <xref:System.Windows.Forms.IDataObject.GetData%2A></span><span class="sxs-lookup"><span data-stu-id="55081-157">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="55081-158">Wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A> listę prawidłowych formatów dla danych przechowywanych w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-158">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55081-159">Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-159">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="55081-160">Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.</span><span class="sxs-lookup"><span data-stu-id="55081-160">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="55081-161">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-161">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-162">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `GetData` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-162">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="55081-163">Przykład pobiera dane przechowywane w `DataObject`, `autoConvert` przy użyciu parametru, aby określić, czy format danych ma być konwertowany.</span><span class="sxs-lookup"><span data-stu-id="55081-163">The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format.</span></span> <span data-ttu-id="55081-164">Po pierwsze `myDataObject` , jest tworzony przy użyciu danych tekstowych.</span><span class="sxs-lookup"><span data-stu-id="55081-164">First, `myDataObject` is created with text data.</span></span> <span data-ttu-id="55081-165">Następnie przykład próbuje pobrać dane.</span><span class="sxs-lookup"><span data-stu-id="55081-165">Then the example tries twice to retrieve the data.</span></span> <span data-ttu-id="55081-166">W pierwszej wersji próbnej określa ona format jako ciąg i ustawia `autoConvert` parametr na. `false`</span><span class="sxs-lookup"><span data-stu-id="55081-166">In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`.</span></span> <span data-ttu-id="55081-167">Ta wersja próbna kończy się niepowodzeniem, a wynik jest wyświetlany w oknie komunikatu o nazwie "komunikat #1".</span><span class="sxs-lookup"><span data-stu-id="55081-167">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="55081-168">W drugiej wersji próbnej przykład pobiera te same dane z `autoConvert` parametrem ustawionym na. `true`</span><span class="sxs-lookup"><span data-stu-id="55081-168">In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="55081-169">Ta wersja próbna powiedzie się, a w oknie komunikatu zatytułowanym "komunikat #2" zostanie wyświetlony wynik.</span><span class="sxs-lookup"><span data-stu-id="55081-169">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="55081-170">W przykładzie przyjęto założenie, że <xref:System.Windows.Forms.Form> utworzono `Form1`nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-170">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]
 [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]
 [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55081-171">Określa, czy dane przechowywane w tym wystąpieniu są skojarzone z określonym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-171">Determines whether data stored in this instance is associated with the specified format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-172">Format, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="55081-172">The format for which to check.</span></span> <span data-ttu-id="55081-173">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-173">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="55081-174">Określa, czy dane przechowywane w tym wystąpieniu są skojarzone z lub można je przekonwertować na format w określonym formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-174">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="55081-175"><see langword="true" />Jeśli dane przechowywane w tym wystąpieniu są skojarzone z lub mogą być konwertowane na, w określonym formacie; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="55081-175"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-176">Wywołaj tę metodę, aby określić, czy w tym <xref:System.Windows.Forms.DataObject> formacie istnieje <xref:System.Windows.Forms.IDataObject.GetData%2A>przed wywołaniem.</span><span class="sxs-lookup"><span data-stu-id="55081-176">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="55081-177">Wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A> formaty, które są dostępne w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-177">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55081-178">Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-178">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="55081-179">Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.</span><span class="sxs-lookup"><span data-stu-id="55081-179">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="55081-180">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-180">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-181">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `GetDataPresent` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-181">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="55081-182">Po pierwsze tworzy obiekt danych przy użyciu ciągu i `Text` formatu.</span><span class="sxs-lookup"><span data-stu-id="55081-182">First, it creates a data object using a string and the `Text` format.</span></span> <span data-ttu-id="55081-183">Następnie sprawdza, czy dane są obecne w `Text` formacie i wyświetla wyniki w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="55081-183">Then it verifies that the data is present in the `Text` format and displays the results in a message box.</span></span> <span data-ttu-id="55081-184">W przykładzie przyjęto założenie, że <xref:System.Windows.Forms.Form> utworzono `Form1`nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-184">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]
 [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]
 [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-185"><see cref="T:System.Type" /> Reprezentujący format do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="55081-185">A <see cref="T:System.Type" /> representing the format for which to check.</span></span> <span data-ttu-id="55081-186">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-186">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="55081-187">Określa, czy dane przechowywane w tym wystąpieniu są skojarzone z lub można je przekonwertować na format w określonym formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-187">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="55081-188"><see langword="true" />Jeśli dane przechowywane w tym wystąpieniu są skojarzone z lub mogą być konwertowane na, w określonym formacie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="55081-188"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-189">Wywołaj tę metodę, aby określić, czy w tym <xref:System.Windows.Forms.DataObject> formacie istnieje <xref:System.Windows.Forms.IDataObject.GetData%2A>przed wywołaniem.</span><span class="sxs-lookup"><span data-stu-id="55081-189">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="55081-190">Wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A> formaty, które są dostępne w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-190">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55081-191">Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-191">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="55081-192">Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.</span><span class="sxs-lookup"><span data-stu-id="55081-192">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="55081-193">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-193">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-194">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `GetDataPresent` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-194">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="55081-195">Najpierw tworzy składnik (`myComponent`) i zapisuje go w obiekcie danych (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="55081-195">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="55081-196">Następnie sprawdza, czy określone dane są przechowywane w `myDataObject`.</span><span class="sxs-lookup"><span data-stu-id="55081-196">Then it checks whether the specified data is stored in `myDataObject`.</span></span> <span data-ttu-id="55081-197">Jeśli test szacuje `true`się, wyświetla wynik w oknie komunikatu i wyświetla typ danych w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="55081-197">If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box.</span></span> <span data-ttu-id="55081-198">W tym przykładzie przyjęto założenie, że <xref:System.Windows.Forms.Form> utworzono `Form1` już nazwę <xref:System.Windows.Forms.TextBox> i `textBox1`nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-198">This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]
 [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]
 [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool" Usage="iDataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-199">Format, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="55081-199">The format for which to check.</span></span> <span data-ttu-id="55081-200">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-200">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="55081-201"><see langword="true" />Aby określić, czy dane przechowywane w tym wystąpieniu mogą być konwertowane do określonego formatu; <see langword="false" /> , aby sprawdzić, czy dane są w określonym formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-201"><see langword="true" /> to determine whether data stored in this instance can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span></span></param>
        <summary><span data-ttu-id="55081-202">Określa, czy dane przechowywane w tym wystąpieniu są skojarzone z określonym formatem, przy użyciu wartości logicznej, aby określić, czy dane mają być konwertowane w formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-202">Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="55081-203"><see langword="true" />Jeśli dane są w lub mogą być konwertowane na, w określonym formacie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="55081-203"><see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-204">Wywołaj tę metodę, aby określić, czy w tym <xref:System.Windows.Forms.DataObject> formacie istnieje <xref:System.Windows.Forms.IDataObject.GetData%2A>przed wywołaniem.</span><span class="sxs-lookup"><span data-stu-id="55081-204">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="55081-205">Wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A> formaty, które są dostępne w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-205">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
 <span data-ttu-id="55081-206">Ta metoda zwraca `true` :</span><span class="sxs-lookup"><span data-stu-id="55081-206">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="55081-207">`autoConvert` Parametr jest`true` i dane są w formacie, który można przekonwertować na odpowiedni format.</span><span class="sxs-lookup"><span data-stu-id="55081-207">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="55081-208">`autoConvert` Parametr jest`false` i dane są w odpowiednim formacie.</span><span class="sxs-lookup"><span data-stu-id="55081-208">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="55081-209">Ta metoda zwraca `false` :</span><span class="sxs-lookup"><span data-stu-id="55081-209">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="55081-210">Parametr jest `true` i ta metoda nie może znaleźć danych w określonym formacie i nie może przekonwertować danych do określonego formatu lub dane były przechowywane z `autoConvert` ustawioną na `false`. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="55081-210">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.</span></span>  
  
-   <span data-ttu-id="55081-211">Parametr ma wartość `false`, a dane nie istnieją w tym wystąpieniu w określonym formacie. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="55081-211">The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55081-212">Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-212">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="55081-213">Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.</span><span class="sxs-lookup"><span data-stu-id="55081-213">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="55081-214">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-214">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-215">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `GetDataPresent` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-215">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="55081-216">Najpierw tworzy obiekt danych (`myDataObject`) przy użyciu ciągu `Text` i formatu.</span><span class="sxs-lookup"><span data-stu-id="55081-216">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="55081-217">Następnie wysyła zapytanie do obiektu dla danych skojarzonych z `Text` formatem, `autoConvert` z parametrem ustawionym na `false`.</span><span class="sxs-lookup"><span data-stu-id="55081-217">Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="55081-218">Ta wersja próbna kończy się niepowodzeniem, a wynik jest wyświetlany w oknie komunikatu o nazwie "komunikat #1".</span><span class="sxs-lookup"><span data-stu-id="55081-218">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="55081-219">W drugiej wersji próbnej ustawia `autoConvert` parametr na. `true`</span><span class="sxs-lookup"><span data-stu-id="55081-219">In the second trial, it sets the `autoConvert` parameter to `true`.</span></span> <span data-ttu-id="55081-220">Ta wersja próbna powiedzie się, a w oknie komunikatu zatytułowanym "komunikat #2" zostanie wyświetlony wynik.</span><span class="sxs-lookup"><span data-stu-id="55081-220">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="55081-221">W przykładzie przyjęto założenie, że <xref:System.Windows.Forms.Form> utworzono `Form1`nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-221">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]
 [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]
 [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55081-222">Zwraca listę wszystkich formatów, do których są skojarzone dane przechowywane w tym wystąpieniu lub które można przekonwertować na.</span><span class="sxs-lookup"><span data-stu-id="55081-222">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]" Usage="iDataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55081-223">Zwraca listę wszystkich formatów, do których są skojarzone dane przechowywane w tym wystąpieniu lub które można przekonwertować na.</span><span class="sxs-lookup"><span data-stu-id="55081-223">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
        <returns><span data-ttu-id="55081-224">Tablica nazw reprezentująca listę wszystkich formatów, które są obsługiwane przez dane przechowywane w tym obiekcie.</span><span class="sxs-lookup"><span data-stu-id="55081-224">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-225">Wywołaj tę metodę, aby pobrać obsługiwane formaty danych przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="55081-225">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="55081-226">Zapoznaj <xref:System.Windows.Forms.DataFormats> się z klasą wstępnie zdefiniowanych formatów.</span><span class="sxs-lookup"><span data-stu-id="55081-226">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55081-227">Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-227">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="55081-228">Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.</span><span class="sxs-lookup"><span data-stu-id="55081-228">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="55081-229">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-229">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-230">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `GetFormats` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-230">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="55081-231">Najpierw tworzy obiekt danych (`myDataObject`) przy użyciu ciągu `Text` i formatu.</span><span class="sxs-lookup"><span data-stu-id="55081-231">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="55081-232">Następnie pobiera wszystkie formaty danych i formaty konwersji danych w obiekcie danych, a następnie wyświetla listę wyników w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="55081-232">Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</span></span> <span data-ttu-id="55081-233">W <xref:System.Windows.Forms.Form> tym przykładzie przyjęto założenie, że `Form1`utworzono nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-233">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]
 [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]
 [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]" Usage="iDataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><span data-ttu-id="55081-234"><see langword="true" />Aby pobrać wszystkie formaty, do których są skojarzone dane przechowywane w tym wystąpieniu lub które mogą być konwertowane na; <see langword="false" /> aby pobrać tylko natywne formaty danych.</span><span class="sxs-lookup"><span data-stu-id="55081-234"><see langword="true" /> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false" /> to retrieve only native data formats.</span></span></param>
        <summary><span data-ttu-id="55081-235">Pobiera listę wszystkich formatów, do których są skojarzone dane przechowywane w tym wystąpieniu lub które mogą być konwertowane na, przy użyciu wartości logicznej, aby określić, czy mają być pobierane wszystkie formaty, do których dane mogą być konwertowane lub tylko natywne formaty danych.</span><span class="sxs-lookup"><span data-stu-id="55081-235">Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</span></span></summary>
        <returns><span data-ttu-id="55081-236">Tablica nazw reprezentująca listę wszystkich formatów, które są obsługiwane przez dane przechowywane w tym obiekcie.</span><span class="sxs-lookup"><span data-stu-id="55081-236">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-237">Wywołaj tę metodę, aby pobrać obsługiwane formaty danych przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="55081-237">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="55081-238">Zapoznaj <xref:System.Windows.Forms.DataFormats> się z klasą wstępnie zdefiniowanych formatów.</span><span class="sxs-lookup"><span data-stu-id="55081-238">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55081-239">Dane można przekonwertować na inny format, jeśli został on zapisany, określając, że konwersja jest dozwolona, i jeśli żądany format jest zgodny z zapisanym formatem.</span><span class="sxs-lookup"><span data-stu-id="55081-239">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="55081-240">Na przykład dane przechowywane w formacie Unicode można przekonwertować na tekst.</span><span class="sxs-lookup"><span data-stu-id="55081-240">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="55081-241">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-241">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-242">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `GetFormats` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-242">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="55081-243">Najpierw tworzy obiekt danych (`myDataObject`) przy użyciu ciągu `UnicodeText` i formatu.</span><span class="sxs-lookup"><span data-stu-id="55081-243">First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format.</span></span> <span data-ttu-id="55081-244">Następnie tworzy dwa zapytania, aby pobrać formaty skojarzone z danymi.</span><span class="sxs-lookup"><span data-stu-id="55081-244">Then it makes two queries to get the formats associated with the data.</span></span> <span data-ttu-id="55081-245">W pierwszej kwerendzie ustawia `autoConvert` parametr na `false` : w tym przypadku zwracany jest tylko format natywny danych.</span><span class="sxs-lookup"><span data-stu-id="55081-245">In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned.</span></span> <span data-ttu-id="55081-246">W drugim zapytaniu ustawia `autoConvert` parametr na `true`, tak aby pobiera listę formatów, włącznie z formatami, do których dane mogą być konwertowane.</span><span class="sxs-lookup"><span data-stu-id="55081-246">In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to.</span></span> <span data-ttu-id="55081-247">W każdym przypadku lista wyników zostanie wyświetlona w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="55081-247">In each case, the resulting list is displayed in a message box.</span></span> <span data-ttu-id="55081-248">W <xref:System.Windows.Forms.Form> tym przykładzie przyjęto założenie, że `Form1`utworzono nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-248">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]
 [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]
 [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55081-249">Przechowuje określone dane i powiązane z nim formatowanie w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-249">Stores the specified data and its associated format in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit" Usage="iDataObject.SetData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="55081-250">Dane do zapisania.</span><span class="sxs-lookup"><span data-stu-id="55081-250">The data to store.</span></span></param>
        <summary><span data-ttu-id="55081-251">Przechowuje określone dane w tym wystąpieniu przy użyciu klasy danych formatu.</span><span class="sxs-lookup"><span data-stu-id="55081-251">Stores the specified data in this instance, using the class of the data for the format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-252">Format pochodzi od klasy danych.</span><span class="sxs-lookup"><span data-stu-id="55081-252">The format is derived from the data class.</span></span>  
  
 <span data-ttu-id="55081-253">Dane przechowywane przy użyciu tej metody można przekonwertować na format zgodny podczas pobierania.</span><span class="sxs-lookup"><span data-stu-id="55081-253">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="55081-254">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-254">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-255">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `SetData` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-255">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="55081-256">Najpierw tworzy składnik (`myComponent`) i zapisuje go w obiekcie danych (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="55081-256">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="55081-257">Następnie sprawdza, czy określone dane są przechowywane w obiekcie danych, i wyświetla wyniki w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="55081-257">Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</span></span> <span data-ttu-id="55081-258">W przykładzie przyjęto założenie, że <xref:System.Windows.Forms.Form> utworzono `Form1`nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-258">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]
 [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]
 [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-259">Format skojarzony z danymi.</span><span class="sxs-lookup"><span data-stu-id="55081-259">The format associated with the data.</span></span> <span data-ttu-id="55081-260">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-260">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="55081-261">Dane do zapisania.</span><span class="sxs-lookup"><span data-stu-id="55081-261">The data to store.</span></span></param>
        <summary><span data-ttu-id="55081-262">Przechowuje określone dane i powiązane z nim formatowanie w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-262">Stores the specified data and its associated format in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-263">Jeśli nie znasz formatu aplikacji docelowej, możesz przechowywać dane w wielu formatach za pomocą tej metody.</span><span class="sxs-lookup"><span data-stu-id="55081-263">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="55081-264">Dane przechowywane przy użyciu tej metody można przekonwertować na format zgodny podczas pobierania.</span><span class="sxs-lookup"><span data-stu-id="55081-264">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="55081-265">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-265">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-266">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `SetData` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-266">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="55081-267">Najpierw tworzy obiekt danych (`myDataObject`) i przechowuje ciąg w obiekcie, `UnicodeText` określając format.</span><span class="sxs-lookup"><span data-stu-id="55081-267">First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format.</span></span> <span data-ttu-id="55081-268">Następnie pobiera te dane przechowywane w obiekcie, określając `Text` format, tak aby dane były konwertowane `Text` na format.</span><span class="sxs-lookup"><span data-stu-id="55081-268">Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format.</span></span> <span data-ttu-id="55081-269">Wynik jest wyświetlany w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="55081-269">The result is displayed in a message box.</span></span> <span data-ttu-id="55081-270">W <xref:System.Windows.Forms.Form> tym przykładzie przyjęto założenie, że `Form1`utworzono nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-270">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]
 [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]
 [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-271"><see cref="T:System.Type" /> Reprezentujący format skojarzony z danymi.</span><span class="sxs-lookup"><span data-stu-id="55081-271">A <see cref="T:System.Type" /> representing the format associated with the data.</span></span> <span data-ttu-id="55081-272">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-272">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="55081-273">Dane do zapisania.</span><span class="sxs-lookup"><span data-stu-id="55081-273">The data to store.</span></span></param>
        <summary><span data-ttu-id="55081-274">Przechowuje określone dane i powiązane z nimi typy klas w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="55081-274">Stores the specified data and its associated class type in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-275">Jeśli nie znasz formatu aplikacji docelowej, możesz przechowywać dane w wielu formatach za pomocą tej metody.</span><span class="sxs-lookup"><span data-stu-id="55081-275">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="55081-276">Dane przechowywane przy użyciu tej metody można przekonwertować na format zgodny podczas pobierania.</span><span class="sxs-lookup"><span data-stu-id="55081-276">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="55081-277">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-277">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-278">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `SetData` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-278">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="55081-279">Najpierw tworzy składnik (`myComponent`) i zapisuje go w obiekcie danych (`myDataObject`) przy użyciu `myType` , aby określić format danych.</span><span class="sxs-lookup"><span data-stu-id="55081-279">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format.</span></span> <span data-ttu-id="55081-280">Następnie sprawdza, czy dane określonego typu są przechowywane w obiekcie, i wyświetla wyniki w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="55081-280">Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</span></span> <span data-ttu-id="55081-281">W przykładzie przyjęto założenie, że <xref:System.Windows.Forms.Form> utworzono `Form1`nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-281">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]
 [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]
 [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit" Usage="iDataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="55081-282">Format skojarzony z danymi.</span><span class="sxs-lookup"><span data-stu-id="55081-282">The format associated with the data.</span></span> <span data-ttu-id="55081-283">Zobacz <see cref="T:System.Windows.Forms.DataFormats" /> , aby uzyskać wstępnie zdefiniowane formaty.</span><span class="sxs-lookup"><span data-stu-id="55081-283">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="55081-284"><see langword="true" />Aby umożliwić konwersję danych do innego formatu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="55081-284"><see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span></span></param>
        <param name="data"><span data-ttu-id="55081-285">Dane do zapisania.</span><span class="sxs-lookup"><span data-stu-id="55081-285">The data to store.</span></span></param>
        <summary><span data-ttu-id="55081-286">Przechowuje określone dane i powiązane z nim formatowanie w tym wystąpieniu przy użyciu wartości logicznej, aby określić, czy dane mogą być konwertowane na inny format.</span><span class="sxs-lookup"><span data-stu-id="55081-286">Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55081-287">Jeśli nie znasz formatu aplikacji docelowej, możesz przechowywać dane w wielu formatach za pomocą tej metody.</span><span class="sxs-lookup"><span data-stu-id="55081-287">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="55081-288">Aby uzyskać implementację tej metody, zobacz <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="55081-288">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55081-289">W tym przykładzie użyto <xref:System.Windows.Forms.DataObject> klasy, która implementuje `IDataObject`, aby `SetData` pokazać użycie metody.</span><span class="sxs-lookup"><span data-stu-id="55081-289">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="55081-290">Najpierw tworzy`myDataObject`obiekt danych () i `UnicodeText` zapisuje `autoConvert` w nim ciąg, z parametrem ustawionym na `false`.</span><span class="sxs-lookup"><span data-stu-id="55081-290">First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="55081-291">Następnie pobiera formaty skojarzone z danymi przechowywanymi w obiekcie i wyświetla wynik w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="55081-291">Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</span></span> <span data-ttu-id="55081-292">Jedynym formatem skojarzonym z danymi jest `UnicodeText` format.</span><span class="sxs-lookup"><span data-stu-id="55081-292">The only format associated with the data is the `UnicodeText` format.</span></span> <span data-ttu-id="55081-293">W <xref:System.Windows.Forms.Form> tym przykładzie przyjęto założenie, że `Form1`utworzono nazwę.</span><span class="sxs-lookup"><span data-stu-id="55081-293">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]
 [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]
 [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>
