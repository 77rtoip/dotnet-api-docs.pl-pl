<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="acebb-101">Określa styl i zachowanie formantu.</span><span class="sxs-lookup"><span data-stu-id="acebb-101">Specifies the style and behavior of a control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acebb-102">Formanty Użyj tego wyliczenia w różnych właściwości i metody, aby określić funkcje.</span><span class="sxs-lookup"><span data-stu-id="acebb-102">Controls use this enumeration in various properties and methods to specify functionality.</span></span> <span data-ttu-id="acebb-103">Formant można włączyć stylu przez wywołanie metody <xref:System.Windows.Forms.Control.SetStyle%2A> — metoda i przekazywanie w odpowiedniej <xref:System.Windows.Forms.ControlStyles> bitowe (lub bity) i wartość logiczną, aby ustawić bity.</span><span class="sxs-lookup"><span data-stu-id="acebb-103">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="acebb-104">Na przykład następujący wiersz kodu języka Visual Basic umożliwiłyby podwójnego buforowania.</span><span class="sxs-lookup"><span data-stu-id="acebb-104">For example, the following line of Visual Basic code would enable double-buffering.</span></span>  
  
```  
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 <span data-ttu-id="acebb-105">Jeśli ustawiono AllPaintingInWmPaint bit `true`, komunikatów okien WM_ERASEBKGND jest ignorowana, a jednocześnie <xref:System.Windows.Forms.Control.OnPaintBackground%2A> i <xref:System.Windows.Forms.Control.OnPaint%2A> metody są wywoływane bezpośrednio z okna komunikat WM_PAINT.</span><span class="sxs-lookup"><span data-stu-id="acebb-105">If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT.</span></span> <span data-ttu-id="acebb-106">Zazwyczaj zmniejsza migotanie, chyba że inne formanty wysyłania komunikatów okien WM_ERASEBKGND do formantu.</span><span class="sxs-lookup"><span data-stu-id="acebb-106">This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</span></span> <span data-ttu-id="acebb-107">Może wysyłać komunikatów okien WM_ERASEBKGRND do osiągnięcia efektu artykule przezroczysty, podobnie jak SupportsTransparentBackColor; na przykład <xref:System.Windows.Forms.ToolBar> z wygląd płaski robi to.</span><span class="sxs-lookup"><span data-stu-id="acebb-107">You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.</span></span>  
  
 <span data-ttu-id="acebb-108">Aby w pełni włączyć podwójnego buforowania, można ustawić bitów OptimizedDoubleBuffer i AllPaintingInWmPaint `true`.</span><span class="sxs-lookup"><span data-stu-id="acebb-108">To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`.</span></span> <span data-ttu-id="acebb-109">Jednak preferowaną metodą włączenie podwójnego buforowania, która daje w wyniku takiego samego wyniku, jest skonfigurowanie <xref:System.Windows.Forms.Control.DoubleBuffered%2A> właściwości formantu do `true`.</span><span class="sxs-lookup"><span data-stu-id="acebb-109">However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.</span></span>  
  
 <span data-ttu-id="acebb-110">Jeśli ustawiono SupportsTransparentBackColor bit `true`i <xref:System.Windows.Forms.Control.BackColor%2A> jest ustawiona na kolor, którego składnika alfa jest mniejszy niż 255 <xref:System.Windows.Forms.Control.OnPaintBackground%2A> przeprowadzić symulację przezroczystość pytając kontrolki nadrzędnej do rysowania tła.</span><span class="sxs-lookup"><span data-stu-id="acebb-110">If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background.</span></span> <span data-ttu-id="acebb-111">To nie jest spełniony przezroczystość.</span><span class="sxs-lookup"><span data-stu-id="acebb-111">This is not true transparency.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="acebb-112">Jeśli istnieje inny formant między formantem a jego elementu nadrzędnego, bieżąca kontrolka nie będzie wyświetlać formantu w środku.</span><span class="sxs-lookup"><span data-stu-id="acebb-112">If there is another control between the control and its parent, the current control will not show the control in the middle.</span></span>  
  
 <span data-ttu-id="acebb-113">Jeśli ustawiono UserMouse bit `true`, nadal nazywane są następujące metody: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="acebb-113">When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="acebb-114">Po kliknięciu formantu, jeśli ustawiono StandardClick bit `true` <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> metoda jest wywoływana i zgłasza <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="acebb-114">When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="acebb-115">Gdy formantu zostanie dwukrotnie kliknięty, a StandardClick i StandardDoubleClick bity są ustawione na `true`, następnie kliknij pozycję jest przekazywany do <xref:System.Windows.Forms.Control.DoubleClick> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="acebb-115">When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event.</span></span> <span data-ttu-id="acebb-116">Następnie przy użyciu <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> metoda jest wywoływana i zgłasza <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="acebb-116">Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="acebb-117">Jednak można wywołać formantu <xref:System.Windows.Forms.Control.OnClick%2A> lub <xref:System.Windows.Forms.Control.OnDoubleClick%2A> bezpośrednio niezależnie od tego, czy StandardClick i StandardDoubleClick bit wartości.</span><span class="sxs-lookup"><span data-stu-id="acebb-117">However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values.</span></span> <span data-ttu-id="acebb-118">Aby uzyskać więcej informacji na temat sterowania kliknij pozycję i kliknij dwukrotnie zachowania, zobacz <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> i <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> tematów.</span><span class="sxs-lookup"><span data-stu-id="acebb-118">For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> topics.</span></span>  
  
 <span data-ttu-id="acebb-119">Jeśli ustawiono UseTextForAccessibility bit i istnieje wartość w formancie `Text` właściwości, wartość tego formantu `Text` właściwość określa formantu domyślne Active Accessibility nazwy i skrótu klucza.</span><span class="sxs-lookup"><span data-stu-id="acebb-119">When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key.</span></span> <span data-ttu-id="acebb-120">W przeciwnym razie tekst poprzedniego <xref:System.Windows.Forms.Label> formantu zostanie użyty.</span><span class="sxs-lookup"><span data-stu-id="acebb-120">Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead.</span></span> <span data-ttu-id="acebb-121">Ten styl jest ustawieniem domyślnym.</span><span class="sxs-lookup"><span data-stu-id="acebb-121">This style is set by default.</span></span> <span data-ttu-id="acebb-122">Typy wbudowane formantu, takich jak <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.ComboBox>, tego stylu, aby `Text` właściwości tych kontrolek nie będą używane przez Active Accessibility.</span><span class="sxs-lookup"><span data-stu-id="acebb-122">Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acebb-123">W poniższym przykładzie pokazano korzystanie z <xref:System.Windows.Forms.ControlStyles> z <xref:System.Windows.Forms.Control.StyleChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="acebb-123">The following example demonstrates a use of <xref:System.Windows.Forms.ControlStyles> with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="acebb-124">Dziedziczenie z formantu standardowego formularzy systemu Windows i zmianę <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> lub <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit wartości <see langword="true" /> może spowodować nieoczekiwane zachowanie lub może nie obowiązują w ogóle Jeśli formant nie obsługuje <see cref="E:System.Windows.Forms.Control.Click" /> lub <see cref="E:System.Windows.Forms.Control.DoubleClick" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="acebb-124">Inheriting from a standard Windows Forms control and changing the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> or <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit values to <see langword="true" /> can cause unexpected behavior or can have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span></span></para>
    </block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-125">Jeśli <see langword="true" />, komunikatów okien WM_ERASEBKGND w celu zmniejszenia migotania ignoruje formantu.</span><span class="sxs-lookup"><span data-stu-id="acebb-125">If <see langword="true" />, the control ignores the window message WM_ERASEBKGND to reduce flicker.</span></span> <span data-ttu-id="acebb-126">Ten styl powinny być stosowane tylko, jeśli <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit jest ustawiony na wartość <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-126">This style should only be applied if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-127">Jeśli <see langword="true" />, formant zachowuje kopię tekstu, a nie pobierania z poziomu <see cref="P:System.Windows.Forms.Control.Handle" /> zawsze jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="acebb-127">If <see langword="true" />, the control keeps a copy of the text rather than getting it from the <see cref="P:System.Windows.Forms.Control.Handle" /> each time it is needed.</span></span> <span data-ttu-id="acebb-128">Domyślnie ten styl <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-128">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="acebb-129">To zachowanie zwiększa wydajność, ale utrudnia Synchronizuj tekst.</span><span class="sxs-lookup"><span data-stu-id="acebb-129">This behavior improves performance, but makes it difficult to keep the text synchronized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-130">Jeśli <see langword="true" />, kontrolka jest formantem przypominającej kontenera.</span><span class="sxs-lookup"><span data-stu-id="acebb-130">If <see langword="true" />, the control is a container-like control.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-131">Jeśli <see langword="true" />rysunku odbywa się w buforze i po jej zakończeniu, wynik przekazywane są do ekranu.</span><span class="sxs-lookup"><span data-stu-id="acebb-131">If <see langword="true" />, drawing is performed in a buffer, and after it completes, the result is output to the screen.</span></span> <span data-ttu-id="acebb-132">Podwójne buforowanie uniemożliwia migotania spowodowane ponownego narysowania formantu.</span><span class="sxs-lookup"><span data-stu-id="acebb-132">Double-buffering prevents flicker caused by the redrawing of the control.</span></span> <span data-ttu-id="acebb-133">Jeśli ustawisz <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> do <see langword="true" />, należy także ustawić <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> i <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> do <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-133">If you set <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> to <see langword="true" />, you should also set <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> and <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-134">Jeśli <see langword="true" />, <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> metoda jest wywoływana dla każdej wiadomości wysyłane do formantu <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-134">If <see langword="true" />, the <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is called for every message sent to the control's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</span></span> <span data-ttu-id="acebb-135">Domyślnie ten styl <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-135">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="acebb-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> nie działa w częściowej relacji zaufania.</span><span class="sxs-lookup"><span data-stu-id="acebb-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> does not work in partial trust.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-137">Jeśli <see langword="true" />, kontrolka ma stałą wysokość podczas skalowania automatycznego.</span><span class="sxs-lookup"><span data-stu-id="acebb-137">If <see langword="true" />, the control has a fixed height when auto-scaled.</span></span> <span data-ttu-id="acebb-138">Na przykład, jeśli operacja układu próbuje ponowne skalowanie kontroli w celu uwzględnienia nowej <see cref="T:System.Drawing.Font" />, formantu <see cref="P:System.Windows.Forms.Control.Height" /> pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="acebb-138">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Height" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-139">Jeśli <see langword="true" />, kontrolka ma stałą szerokość podczas skalowania automatycznego.</span><span class="sxs-lookup"><span data-stu-id="acebb-139">If <see langword="true" />, the control has a fixed width when auto-scaled.</span></span> <span data-ttu-id="acebb-140">Na przykład, jeśli operacja układu próbuje ponowne skalowanie kontroli w celu uwzględnienia nowej <see cref="T:System.Drawing.Font" />, formantu <see cref="P:System.Windows.Forms.Control.Width" /> pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="acebb-140">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Width" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-141">Jeśli <see langword="true" />, kontrolka zostanie narysowana nieprzezroczystych i tło nie jest rysowane.</span><span class="sxs-lookup"><span data-stu-id="acebb-141">If <see langword="true" />, the control is drawn opaque and the background is not painted.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-142">Jeśli <see langword="true" />, formantu najpierw jest rysowana w buforze, a nie bezpośrednio na ekranie, co może zmniejszyć migotania.</span><span class="sxs-lookup"><span data-stu-id="acebb-142">If <see langword="true" />, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</span></span> <span data-ttu-id="acebb-143">Jeśli ta właściwość jest ustawiona na <see langword="true" />, należy także ustawić <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> do <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-143">If you set this property to <see langword="true" />, you should also set the <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-144">Jeśli <see langword="true" />, formantu zostanie narysowany ponownie po zmianie jego rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="acebb-144">If <see langword="true" />, the control is redrawn when it is resized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-145">Jeśli <see langword="true" />, formantu można ustawić fokusu.</span><span class="sxs-lookup"><span data-stu-id="acebb-145">If <see langword="true" />, the control can receive focus.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-146">Jeśli <see langword="true" />, formantu implementuje standardowe <see cref="E:System.Windows.Forms.Control.Click" /> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="acebb-146">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.Click" /> behavior.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-147">Jeśli <see langword="true" />, formantu implementuje standardowe <see cref="E:System.Windows.Forms.Control.DoubleClick" /> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="acebb-147">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.DoubleClick" /> behavior.</span></span> <span data-ttu-id="acebb-148">Ten styl jest ignorowana, jeśli <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> nie ustawiono bitu <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-148">This style is ignored if the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> bit is not set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-149">Jeśli <see langword="true" />, akceptuje formantu <see cref="P:System.Windows.Forms.Control.BackColor" /> za pomocą składnika alfa mniej niż 255 do symulowania przezroczystość.</span><span class="sxs-lookup"><span data-stu-id="acebb-149">If <see langword="true" />, the control accepts a <see cref="P:System.Windows.Forms.Control.BackColor" /> with an alpha component of less than 255 to simulate transparency.</span></span> <span data-ttu-id="acebb-150">Przezroczystość będzie symulowane, tylko wtedy, gdy <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit jest ustawiony na wartość <see langword="true" /> i formantu nadrzędnego jest pochodną <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-150">Transparency will be simulated only if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" /> and the parent control is derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-151">Jeśli <see langword="true" />, formantu nie przetwarzania myszy, a zdarzenia myszy nie są obsługiwane przez system operacyjny.</span><span class="sxs-lookup"><span data-stu-id="acebb-151">If <see langword="true" />, the control does its own mouse processing, and mouse events are not handled by the operating system.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-152">Jeśli <see langword="true" />, malowanie formantu sam zamiast w ten sposób systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="acebb-152">If <see langword="true" />, the control paints itself rather than the operating system doing so.</span></span> <span data-ttu-id="acebb-153">Jeśli <see langword="false" />, <see cref="E:System.Windows.Forms.Control.Paint" /> nie zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="acebb-153">If <see langword="false" />, the <see cref="E:System.Windows.Forms.Control.Paint" /> event is not raised.</span></span> <span data-ttu-id="acebb-154">Ten styl jest stosowana tylko do klasy pochodzące od <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="acebb-154">This style only applies to classes derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="acebb-155">Określa, że wartość formantu <c>tekst</c> właściwości, jeśli ustawiona, określa formantu domyślne Active Accessibility nazwy i skrótu klucza.</span><span class="sxs-lookup"><span data-stu-id="acebb-155">Specifies that the value of the control's <c>Text</c> property, if set, determines the control's default Active Accessibility name and shortcut key.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>