<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="83ce647c53e31628be0de9d0dc4cbd4cf5547886" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36346894" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <TypeSignature Language="F#" Value="type ControlStyles = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa styl i zachowanie formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty Użyj tego wyliczenia w różnych właściwości i metody, aby określić funkcje. Formant można włączyć stylu przez wywołanie metody <xref:System.Windows.Forms.Control.SetStyle%2A> — metoda i przekazywanie w odpowiedniej <xref:System.Windows.Forms.ControlStyles> bitowe (lub bity) i wartość logiczną, aby ustawić bity. Na przykład następujący wiersz kodu języka Visual Basic umożliwiłyby podwójnego buforowania.  
  
```  
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 Jeśli ustawiono AllPaintingInWmPaint bit `true`, komunikatów okien WM_ERASEBKGND jest ignorowana, a jednocześnie <xref:System.Windows.Forms.Control.OnPaintBackground%2A> i <xref:System.Windows.Forms.Control.OnPaint%2A> metody są wywoływane bezpośrednio z okna komunikat WM_PAINT. Zazwyczaj zmniejsza migotanie, chyba że inne formanty wysyłania komunikatów okien WM_ERASEBKGND do formantu. Może wysyłać komunikatów okien WM_ERASEBKGRND do osiągnięcia efektu artykule przezroczysty, podobnie jak SupportsTransparentBackColor; na przykład <xref:System.Windows.Forms.ToolBar> z wygląd płaski robi to.  
  
 Aby w pełni włączyć podwójnego buforowania, można ustawić bitów OptimizedDoubleBuffer i AllPaintingInWmPaint `true`. Jednak preferowaną metodą włączenie podwójnego buforowania, która daje w wyniku takiego samego wyniku, jest skonfigurowanie <xref:System.Windows.Forms.Control.DoubleBuffered%2A> właściwości formantu do `true`.  
  
 Jeśli ustawiono SupportsTransparentBackColor bit `true`i <xref:System.Windows.Forms.Control.BackColor%2A> jest ustawiona na kolor, którego składnika alfa jest mniejszy niż 255 <xref:System.Windows.Forms.Control.OnPaintBackground%2A> przeprowadzić symulację przezroczystość pytając kontrolki nadrzędnej do rysowania tła. To nie jest spełniony przezroczystość.  
  
> [!NOTE]
>  Jeśli istnieje inny formant między formantem a jego elementu nadrzędnego, bieżąca kontrolka nie będzie wyświetlać formantu w środku.  
  
 Jeśli ustawiono UserMouse bit `true`, nadal nazywane są następujące metody: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, i <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.  
  
 Po kliknięciu formantu, jeśli ustawiono StandardClick bit `true` <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> metoda jest wywoływana i zgłasza <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> zdarzeń. Gdy formantu zostanie dwukrotnie kliknięty, a StandardClick i StandardDoubleClick bity są ustawione na `true`, następnie kliknij pozycję jest przekazywany do <xref:System.Windows.Forms.Control.DoubleClick> zdarzeń. Następnie przy użyciu <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> metoda jest wywoływana i zgłasza <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> zdarzeń. Jednak można wywołać formantu <xref:System.Windows.Forms.Control.OnClick%2A> lub <xref:System.Windows.Forms.Control.OnDoubleClick%2A> bezpośrednio niezależnie od tego, czy StandardClick i StandardDoubleClick bit wartości. Aby uzyskać więcej informacji na temat sterowania kliknij pozycję i kliknij dwukrotnie zachowania, zobacz <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> i <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> tematów.  
  
 Jeśli ustawiono UseTextForAccessibility bit i istnieje wartość w formancie `Text` właściwości, wartość tego formantu `Text` właściwość określa formantu domyślne Active Accessibility nazwy i skrótu klucza. W przeciwnym razie tekst poprzedniego <xref:System.Windows.Forms.Label> formantu zostanie użyty. Ten styl jest ustawieniem domyślnym. Typy wbudowane formantu, takich jak <xref:System.Windows.Forms.TextBox> i <xref:System.Windows.Forms.ComboBox>, tego stylu, aby `Text` właściwości tych kontrolek nie będą używane przez Active Accessibility.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano korzystanie z <xref:System.Windows.Forms.ControlStyles> z <xref:System.Windows.Forms.Control.StyleChanged> zdarzeń.  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Dziedziczenie z formantu standardowego formularzy systemu Windows i zmianę <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> lub <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit wartości <see langword="true" /> może spowodować nieoczekiwane zachowanie lub może nie obowiązują w ogóle Jeśli formant nie obsługuje <see cref="E:System.Windows.Forms.Control.Click" /> lub <see cref="E:System.Windows.Forms.Control.DoubleClick" /> zdarzenia.</para>
    </block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="F#" Value="AllPaintingInWmPaint = 8192" Usage="System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, komunikatów okien WM_ERASEBKGND w celu zmniejszenia migotania ignoruje formantu. Ten styl powinny być stosowane tylko, jeśli <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit jest ustawiony na wartość <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberSignature Language="F#" Value="CacheText = 16384" Usage="System.Windows.Forms.ControlStyles.CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, formant zachowuje kopię tekstu, a nie pobierania z poziomu <see cref="P:System.Windows.Forms.Control.Handle" /> zawsze jest wymagana. Domyślnie ten styl <see langword="false" />. To zachowanie zwiększa wydajność, ale utrudnia Synchronizuj tekst.</summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberSignature Language="F#" Value="ContainerControl = 1" Usage="System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, kontrolka jest formantem przypominającej kontenera.</summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberSignature Language="F#" Value="DoubleBuffer = 65536" Usage="System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />rysunku odbywa się w buforze i po jej zakończeniu, wynik przekazywane są do ekranu. Podwójne buforowanie uniemożliwia migotania spowodowane ponownego narysowania formantu. Jeśli ustawisz <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> do <see langword="true" />, należy także ustawić <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> i <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> do <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberSignature Language="F#" Value="EnableNotifyMessage = 32768" Usage="System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> metoda jest wywoływana dla każdej wiadomości wysyłane do formantu <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />. Domyślnie ten styl <see langword="false" />. <see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> nie działa w częściowej relacji zaufania.</summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberSignature Language="F#" Value="FixedHeight = 64" Usage="System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, kontrolka ma stałą wysokość podczas skalowania automatycznego. Na przykład, jeśli operacja układu próbuje ponowne skalowanie kontroli w celu uwzględnienia nowej <see cref="T:System.Drawing.Font" />, formantu <see cref="P:System.Windows.Forms.Control.Height" /> pozostaje niezmieniona.</summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberSignature Language="F#" Value="FixedWidth = 32" Usage="System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, kontrolka ma stałą szerokość podczas skalowania automatycznego. Na przykład, jeśli operacja układu próbuje ponowne skalowanie kontroli w celu uwzględnienia nowej <see cref="T:System.Drawing.Font" />, formantu <see cref="P:System.Windows.Forms.Control.Width" /> pozostaje niezmieniona.</summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberSignature Language="F#" Value="Opaque = 4" Usage="System.Windows.Forms.ControlStyles.Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, kontrolka zostanie narysowana nieprzezroczystych i tło nie jest rysowane.</summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="F#" Value="OptimizedDoubleBuffer = 131072" Usage="System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, formantu najpierw jest rysowana w buforze, a nie bezpośrednio na ekranie, co może zmniejszyć migotania. Jeśli ta właściwość jest ustawiona na <see langword="true" />, należy także ustawić <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> do <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberSignature Language="F#" Value="ResizeRedraw = 16" Usage="System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, formantu zostanie narysowany ponownie po zmianie jego rozmiaru.</summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberSignature Language="F#" Value="Selectable = 512" Usage="System.Windows.Forms.ControlStyles.Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, formantu można ustawić fokusu.</summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberSignature Language="F#" Value="StandardClick = 256" Usage="System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, formantu implementuje standardowe <see cref="E:System.Windows.Forms.Control.Click" /> zachowanie.</summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberSignature Language="F#" Value="StandardDoubleClick = 4096" Usage="System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, formantu implementuje standardowe <see cref="E:System.Windows.Forms.Control.DoubleClick" /> zachowanie. Ten styl jest ignorowana, jeśli <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> nie ustawiono bitu <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="F#" Value="SupportsTransparentBackColor = 2048" Usage="System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, akceptuje formantu <see cref="P:System.Windows.Forms.Control.BackColor" /> za pomocą składnika alfa mniej niż 255 do symulowania przezroczystość. Przezroczystość będzie symulowane, tylko wtedy, gdy <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit jest ustawiony na wartość <see langword="true" /> i formantu nadrzędnego jest pochodną <see cref="T:System.Windows.Forms.Control" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberSignature Language="F#" Value="UserMouse = 1024" Usage="System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, formantu nie przetwarzania myszy, a zdarzenia myszy nie są obsługiwane przez system operacyjny.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberSignature Language="F#" Value="UserPaint = 2" Usage="System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Jeśli <see langword="true" />, malowanie formantu sam zamiast w ten sposób systemu operacyjnego. Jeśli <see langword="false" />, <see cref="E:System.Windows.Forms.Control.Paint" /> nie zdarzenia. Ten styl jest stosowana tylko do klasy pochodzące od <see cref="T:System.Windows.Forms.Control" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberSignature Language="F#" Value="UseTextForAccessibility = 262144" Usage="System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>Określa, że wartość formantu <c>tekst</c> właściwości, jeśli ustawiona, określa formantu domyślne Active Accessibility nazwy i skrótu klucza.</summary>
      </Docs>
    </Member>
  </Members>
</Type>