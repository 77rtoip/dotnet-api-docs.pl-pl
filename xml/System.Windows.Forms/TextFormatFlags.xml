<Type Name="TextFormatFlags" FullName="System.Windows.Forms.TextFormatFlags">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a4257ead0a7237560187983e638aeb6d621b383" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36513125" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TextFormatFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TextFormatFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextFormatFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum TextFormatFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class TextFormatFlags" />
  <TypeSignature Language="F#" Value="type TextFormatFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="df6a8-101">Określa informacje wyświetlania i układu dla ciągów tekstowych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="df6a8-101">Specifies the display and layout information for text strings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df6a8-102"><xref:System.Windows.Forms.TextFormatFlags> Wyliczenie jest używany przez <xref:System.Windows.Forms.TextRenderer> podczas rysowania i zmierzenie tekstu.</span><span class="sxs-lookup"><span data-stu-id="df6a8-102">The <xref:System.Windows.Forms.TextFormatFlags> enumeration is used by the <xref:System.Windows.Forms.TextRenderer> when drawing and measuring text.</span></span> <span data-ttu-id="df6a8-103"><xref:System.Windows.Forms.TextRenderer> Ma obsługuje dodawanie punktów tabulacji narysowanego tekstu, mimo że można rozszerzyć istniejącą kartę zatrzymuje przy użyciu flagi ExpandTabs.</span><span class="sxs-lookup"><span data-stu-id="df6a8-103">The <xref:System.Windows.Forms.TextRenderer> does not support adding tab stops to drawn text, although you can expand existing tab stops using the ExpandTabs flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df6a8-104">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="df6a8-104">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> enumeration.</span></span> <span data-ttu-id="df6a8-105">Do uruchomienia tego przykładu, wklej następujący kod do formularza systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="df6a8-105">To run this example, paste the following code into a Windows Form.</span></span> <span data-ttu-id="df6a8-106">Wywołanie `RenderText6` z formularza <xref:System.Windows.Forms.Control.Paint> program obsługi zdarzeń, przekazywanie `e` jako <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="df6a8-106">Call `RenderText6` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="Bottom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Bottom = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Bottom" />
      <MemberSignature Language="VB.NET" Value="Bottom" />
      <MemberSignature Language="C++ CLI" Value="Bottom" />
      <MemberSignature Language="F#" Value="Bottom = 8" Usage="System.Windows.Forms.TextFormatFlags.Bottom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-107">Wyrównanie tekstu w dolnej części prostokątem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-107">Aligns the text on the bottom of the bounding rectangle.</span>
          </span>
          <span data-ttu-id="df6a8-108">Stosowane tylko wtedy, gdy tekst jest jednym wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-108">Applied only when the text is a single line.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Windows.Forms.TextFormatFlags.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-109">Stosuje domyślne formatowania, który jest wyrównany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-109">Applies the default formatting, which is left-aligned.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="EndEllipsis">
      <MemberSignature Language="C#" Value="EndEllipsis" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags EndEllipsis = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.EndEllipsis" />
      <MemberSignature Language="VB.NET" Value="EndEllipsis" />
      <MemberSignature Language="C++ CLI" Value="EndEllipsis" />
      <MemberSignature Language="F#" Value="EndEllipsis = 32768" Usage="System.Windows.Forms.TextFormatFlags.EndEllipsis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-110">Usuwa koniec przycięte wierszy i zastępuje je z wielokropkiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-110">Removes the end of trimmed lines, and replaces them with an ellipsis.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ExpandTabs">
      <MemberSignature Language="C#" Value="ExpandTabs" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags ExpandTabs = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.ExpandTabs" />
      <MemberSignature Language="VB.NET" Value="ExpandTabs" />
      <MemberSignature Language="C++ CLI" Value="ExpandTabs" />
      <MemberSignature Language="F#" Value="ExpandTabs = 64" Usage="System.Windows.Forms.TextFormatFlags.ExpandTabs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-111">Rozwija znaki tabulacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-111">Expands tab characters.</span>
          </span>
          <span data-ttu-id="df6a8-112">Domyślna liczba znaków na karcie jest 8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-112">The default number of characters per tab is eight.</span>
          </span>
          <span data-ttu-id="df6a8-113">
            <see cref="F:System.Windows.Forms.TextFormatFlags.WordEllipsis" />, <see cref="F:System.Windows.Forms.TextFormatFlags.PathEllipsis" />, I <see cref="F:System.Windows.Forms.TextFormatFlags.EndEllipsis" /> wartości nie można używać z <see cref="F:System.Windows.Forms.TextFormatFlags.ExpandTabs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-113">The <see cref="F:System.Windows.Forms.TextFormatFlags.WordEllipsis" />, <see cref="F:System.Windows.Forms.TextFormatFlags.PathEllipsis" />, and <see cref="F:System.Windows.Forms.TextFormatFlags.EndEllipsis" /> values cannot be used with <see cref="F:System.Windows.Forms.TextFormatFlags.ExpandTabs" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ExternalLeading">
      <MemberSignature Language="C#" Value="ExternalLeading" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags ExternalLeading = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.ExternalLeading" />
      <MemberSignature Language="VB.NET" Value="ExternalLeading" />
      <MemberSignature Language="C++ CLI" Value="ExternalLeading" />
      <MemberSignature Language="F#" Value="ExternalLeading = 512" Usage="System.Windows.Forms.TextFormatFlags.ExternalLeading" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-114">Obejmuje początku zewnętrznych czcionki w wysokości wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-114">Includes the font external leading in line height.</span>
          </span>
          <span data-ttu-id="df6a8-115">Zazwyczaj wiodące zewnętrznych nie jest uwzględniony w wysokość wiersza tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-115">Typically, external leading is not included in the height of a line of text.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GlyphOverhangPadding">
      <MemberSignature Language="C#" Value="GlyphOverhangPadding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags GlyphOverhangPadding = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.GlyphOverhangPadding" />
      <MemberSignature Language="VB.NET" Value="GlyphOverhangPadding" />
      <MemberSignature Language="C++ CLI" Value="GlyphOverhangPadding" />
      <MemberSignature Language="F#" Value="GlyphOverhangPadding = 0" Usage="System.Windows.Forms.TextFormatFlags.GlyphOverhangPadding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-116">Dodaje dopełnienie prostokątem, aby zmieścił się w ich symboli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-116">Adds padding to the bounding rectangle to accommodate overhanging glyphs.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="HidePrefix">
      <MemberSignature Language="C#" Value="HidePrefix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags HidePrefix = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.HidePrefix" />
      <MemberSignature Language="VB.NET" Value="HidePrefix" />
      <MemberSignature Language="C++ CLI" Value="HidePrefix" />
      <MemberSignature Language="F#" Value="HidePrefix = 1048576" Usage="System.Windows.Forms.TextFormatFlags.HidePrefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-117">Dotyczy tylko systemu Windows 2000 i Windows XP:</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-117">Applies to Windows 2000 and Windows XP only:</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df6a8-118">Ignoruje znaku handlowego "i" (&) prefiksu w tekście.</span><span class="sxs-lookup"><span data-stu-id="df6a8-118">Ignores the ampersand (&) prefix character in the text.</span></span> <span data-ttu-id="df6a8-119">Litera, który następuje nie zostaną podkreślone, ale inne znaki prefiksu skrót klawiszowy są nadal przetwarzane.</span><span class="sxs-lookup"><span data-stu-id="df6a8-119">The letter that follows will not be underlined, but other mnemonic-prefix characters are still processed.</span></span> <span data-ttu-id="df6a8-120">Na przykład wejściowy ciąg "A & bc & & d" spowoduje z HidePrefix stosowane w danych wyjściowych "Abc & d".</span><span class="sxs-lookup"><span data-stu-id="df6a8-120">For example, an input string of "A&bc&&d" with HidePrefix applied would result in output of "Abc&d".</span></span>  
  
 <span data-ttu-id="df6a8-121">Porównaj z NoPrefix i PrefixOnly.</span><span class="sxs-lookup"><span data-stu-id="df6a8-121">Compare with NoPrefix and PrefixOnly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalCenter">
      <MemberSignature Language="C#" Value="HorizontalCenter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags HorizontalCenter = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.HorizontalCenter" />
      <MemberSignature Language="VB.NET" Value="HorizontalCenter" />
      <MemberSignature Language="C++ CLI" Value="HorizontalCenter" />
      <MemberSignature Language="F#" Value="HorizontalCenter = 1" Usage="System.Windows.Forms.TextFormatFlags.HorizontalCenter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-122">Wyśrodkowuje tekst w poziomie w obrębie prostokątem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-122">Centers the text horizontally within the bounding rectangle.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Internal">
      <MemberSignature Language="C#" Value="Internal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Internal = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Internal" />
      <MemberSignature Language="VB.NET" Value="Internal" />
      <MemberSignature Language="C++ CLI" Value="Internal" />
      <MemberSignature Language="F#" Value="Internal = 4096" Usage="System.Windows.Forms.TextFormatFlags.Internal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-123">Używa czcionki systemowej do obliczenia metryk tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-123">Uses the system font to calculate text metrics.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="Left" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Left = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Left" />
      <MemberSignature Language="VB.NET" Value="Left" />
      <MemberSignature Language="C++ CLI" Value="Left" />
      <MemberSignature Language="F#" Value="Left = 0" Usage="System.Windows.Forms.TextFormatFlags.Left" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-124">Wyrównanie tekstu po lewej stronie obszaru przycinania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-124">Aligns the text on the left side of the clipping area.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LeftAndRightPadding">
      <MemberSignature Language="C#" Value="LeftAndRightPadding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags LeftAndRightPadding = int32(536870912)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding" />
      <MemberSignature Language="VB.NET" Value="LeftAndRightPadding" />
      <MemberSignature Language="C++ CLI" Value="LeftAndRightPadding" />
      <MemberSignature Language="F#" Value="LeftAndRightPadding = 536870912" Usage="System.Windows.Forms.TextFormatFlags.LeftAndRightPadding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>536870912</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-125">Dodaje uzupełnienie do obu stronach prostokątem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-125">Adds padding to both sides of the bounding rectangle.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ModifyString">
      <MemberSignature Language="C#" Value="ModifyString" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags ModifyString = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.ModifyString" />
      <MemberSignature Language="VB.NET" Value="ModifyString" />
      <MemberSignature Language="C++ CLI" Value="ModifyString" />
      <MemberSignature Language="F#" Value="ModifyString = 65536" Usage="System.Windows.Forms.TextFormatFlags.ModifyString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-126">Nie ma wpływu na narysowanego tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-126">Has no effect on the drawn text.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NoClipping">
      <MemberSignature Language="C#" Value="NoClipping" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags NoClipping = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.NoClipping" />
      <MemberSignature Language="VB.NET" Value="NoClipping" />
      <MemberSignature Language="C++ CLI" Value="NoClipping" />
      <MemberSignature Language="F#" Value="NoClipping = 256" Usage="System.Windows.Forms.TextFormatFlags.NoClipping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-127">Umożliwia ich części symboli i tekstu bez otoki osiągnięcia poza prostokątem formatowania do wyświetlenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-127">Allows the overhanging parts of glyphs and unwrapped text reaching outside the formatting rectangle to show.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NoFullWidthCharacterBreak">
      <MemberSignature Language="C#" Value="NoFullWidthCharacterBreak" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags NoFullWidthCharacterBreak = int32(524288)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.NoFullWidthCharacterBreak" />
      <MemberSignature Language="VB.NET" Value="NoFullWidthCharacterBreak" />
      <MemberSignature Language="C++ CLI" Value="NoFullWidthCharacterBreak" />
      <MemberSignature Language="F#" Value="NoFullWidthCharacterBreak = 524288" Usage="System.Windows.Forms.TextFormatFlags.NoFullWidthCharacterBreak" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-128">Ma zastosowanie do systemu Windows 98, Windows Me, Windows 2000 lub Windows XP tylko:</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-128">Applies to Windows 98, Windows Me, Windows 2000, or Windows XP only:</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df6a8-129">Zapobiega podział wiersza na ciąg znaków podwójnej szerokości, aby reguł podziału wierszy jest odpowiednikiem ciągi znaków jednym poziomie.</span><span class="sxs-lookup"><span data-stu-id="df6a8-129">Prevents a line break at a double-wide character string, so that the line-breaking rule is equivalent to single-wide character strings.</span></span> <span data-ttu-id="df6a8-130">Na przykład NoFullWidthCharacterBreak zwiększa czytelność etykietach ikon koreański systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="df6a8-130">For example, NoFullWidthCharacterBreak increases the readability of icon labels in Korean windows.</span></span> <span data-ttu-id="df6a8-131">Ta wartość nie ma znaczenia, chyba że określono również WordBreak.</span><span class="sxs-lookup"><span data-stu-id="df6a8-131">This value has no effect unless WordBreak is also specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoPadding">
      <MemberSignature Language="C#" Value="NoPadding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags NoPadding = int32(268435456)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.NoPadding" />
      <MemberSignature Language="VB.NET" Value="NoPadding" />
      <MemberSignature Language="C++ CLI" Value="NoPadding" />
      <MemberSignature Language="F#" Value="NoPadding = 268435456" Usage="System.Windows.Forms.TextFormatFlags.NoPadding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>268435456</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-132">Nie dodaje do prostokątem dopełnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-132">Does not add padding to the bounding rectangle.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NoPrefix">
      <MemberSignature Language="C#" Value="NoPrefix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags NoPrefix = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.NoPrefix" />
      <MemberSignature Language="VB.NET" Value="NoPrefix" />
      <MemberSignature Language="C++ CLI" Value="NoPrefix" />
      <MemberSignature Language="F#" Value="NoPrefix = 2048" Usage="System.Windows.Forms.TextFormatFlags.NoPrefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-133">Wyłącza przetwarzanie znaków prefiksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-133">Turns off processing of prefix characters.</span>
          </span>
          <span data-ttu-id="df6a8-134">Zazwyczaj handlowego "i" (&amp;) znaków prefiksu wartość jest interpretowana jako dyrektywy do znaku podkreślenia znak znajdujący się i znak o podwójnej precyzji (&amp;&amp;) znaki prefiksu skrót klawiszowy jako dyrektywy do drukowania pojedynczy znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-134">Typically, the ampersand (&amp;) mnemonic-prefix character is interpreted as a directive to underscore the character that follows, and the double-ampersand (&amp;&amp;) mnemonic-prefix characters as a directive to print a single ampersand.</span>
          </span>
          <span data-ttu-id="df6a8-135">Określając <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" />, to przetwarzanie jest wyłączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-135">By specifying <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" />, this processing is turned off.</span>
          </span>
          <span data-ttu-id="df6a8-136">Na przykład wejściowy ciąg "A&amp;bc&amp;&amp;d" z <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" /> stosowane spowodowałoby dane wyjściowe "A&amp;bc&amp;&amp;d".</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-136">For example, an input string of "A&amp;bc&amp;&amp;d" with <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" /> applied would result in output of "A&amp;bc&amp;&amp;d".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df6a8-137">Porównaj z HidePrefix i PrefixOnly.</span><span class="sxs-lookup"><span data-stu-id="df6a8-137">Compare with HidePrefix and PrefixOnly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathEllipsis">
      <MemberSignature Language="C#" Value="PathEllipsis" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags PathEllipsis = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.PathEllipsis" />
      <MemberSignature Language="VB.NET" Value="PathEllipsis" />
      <MemberSignature Language="C++ CLI" Value="PathEllipsis" />
      <MemberSignature Language="F#" Value="PathEllipsis = 16384" Usage="System.Windows.Forms.TextFormatFlags.PathEllipsis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-138">Usuwa Centrum przycięte wierszy i zastępuje go z wielokropkiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-138">Removes the center of trimmed lines and replaces it with an ellipsis.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="PrefixOnly">
      <MemberSignature Language="C#" Value="PrefixOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags PrefixOnly = int32(2097152)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.PrefixOnly" />
      <MemberSignature Language="VB.NET" Value="PrefixOnly" />
      <MemberSignature Language="C++ CLI" Value="PrefixOnly" />
      <MemberSignature Language="F#" Value="PrefixOnly = 2097152" Usage="System.Windows.Forms.TextFormatFlags.PrefixOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2097152</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-139">Dotyczy tylko systemu Windows 2000 lub Windows XP:</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-139">Applies to Windows 2000 or Windows XP only:</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df6a8-140">Rysuje tylko podkreślenia w pozycji znaku po znaku handlowego "i" (&) prefiks.</span><span class="sxs-lookup"><span data-stu-id="df6a8-140">Draws only an underline at the position of the character following the ampersand (&) prefix character.</span></span> <span data-ttu-id="df6a8-141">Pobiera wszystkie inne znaki w ciągu.</span><span class="sxs-lookup"><span data-stu-id="df6a8-141">Does not draw any other characters in the string.</span></span> <span data-ttu-id="df6a8-142">Na przykład wejściowy ciąg "A & bc & & d" spowoduje powstanie dane wyjściowe "_".</span><span class="sxs-lookup"><span data-stu-id="df6a8-142">For example, an input string of "A&bc&&d" would result in output of " _   ".</span></span>  
  
 <span data-ttu-id="df6a8-143">Porównaj z HidePrefix i NoPrefix.</span><span class="sxs-lookup"><span data-stu-id="df6a8-143">Compare with HidePrefix and NoPrefix.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveGraphicsClipping">
      <MemberSignature Language="C#" Value="PreserveGraphicsClipping" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags PreserveGraphicsClipping = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.PreserveGraphicsClipping" />
      <MemberSignature Language="VB.NET" Value="PreserveGraphicsClipping" />
      <MemberSignature Language="C++ CLI" Value="PreserveGraphicsClipping" />
      <MemberSignature Language="F#" Value="PreserveGraphicsClipping = 16777216" Usage="System.Windows.Forms.TextFormatFlags.PreserveGraphicsClipping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-144">Zachowuje wycinka określony przez <see cref="T:System.Drawing.Graphics" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-144">Preserves the clipping specified by a <see cref="T:System.Drawing.Graphics" /> object.</span>
          </span>
          <span data-ttu-id="df6a8-145">Ma zastosowanie tylko do metod odbieranie <see cref="T:System.Drawing.IDeviceContext" /> czyli <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-145">Applies only to methods receiving an <see cref="T:System.Drawing.IDeviceContext" /> that is a <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveGraphicsTranslateTransform">
      <MemberSignature Language="C#" Value="PreserveGraphicsTranslateTransform" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags PreserveGraphicsTranslateTransform = int32(33554432)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.PreserveGraphicsTranslateTransform" />
      <MemberSignature Language="VB.NET" Value="PreserveGraphicsTranslateTransform" />
      <MemberSignature Language="C++ CLI" Value="PreserveGraphicsTranslateTransform" />
      <MemberSignature Language="F#" Value="PreserveGraphicsTranslateTransform = 33554432" Usage="System.Windows.Forms.TextFormatFlags.PreserveGraphicsTranslateTransform" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>33554432</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-146">Zachowuje przekształcania określonej przez <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-146">Preserves the transformation specified by a <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
          <span data-ttu-id="df6a8-147">Ma zastosowanie tylko do metod odbieranie <see cref="T:System.Drawing.IDeviceContext" /> czyli <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-147">Applies only to methods receiving an <see cref="T:System.Drawing.IDeviceContext" /> that is a <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="Right" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Right = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Right" />
      <MemberSignature Language="VB.NET" Value="Right" />
      <MemberSignature Language="C++ CLI" Value="Right" />
      <MemberSignature Language="F#" Value="Right = 2" Usage="System.Windows.Forms.TextFormatFlags.Right" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-148">Wyrównanie tekstu po prawej stronie obszaru przycinania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-148">Aligns the text on the right side of the clipping area.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="RightToLeft" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags RightToLeft = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="RightToLeft" />
      <MemberSignature Language="F#" Value="RightToLeft = 131072" Usage="System.Windows.Forms.TextFormatFlags.RightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-149">Wyświetla tekst od prawej do lewej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-149">Displays the text from right to left.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SingleLine">
      <MemberSignature Language="C#" Value="SingleLine" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags SingleLine = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.SingleLine" />
      <MemberSignature Language="VB.NET" Value="SingleLine" />
      <MemberSignature Language="C++ CLI" Value="SingleLine" />
      <MemberSignature Language="F#" Value="SingleLine = 32" Usage="System.Windows.Forms.TextFormatFlags.SingleLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-150">Wyświetla tekst w jednym wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-150">Displays the text in a single line.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TextBoxControl">
      <MemberSignature Language="C#" Value="TextBoxControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags TextBoxControl = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.TextBoxControl" />
      <MemberSignature Language="VB.NET" Value="TextBoxControl" />
      <MemberSignature Language="C++ CLI" Value="TextBoxControl" />
      <MemberSignature Language="F#" Value="TextBoxControl = 8192" Usage="System.Windows.Forms.TextFormatFlags.TextBoxControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-151">Określa tekst powinien być sformatowana do wyświetlenia na <see cref="T:System.Windows.Forms.TextBox" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-151">Specifies the text should be formatted for display on a <see cref="T:System.Windows.Forms.TextBox" /> control.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="Top" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Top = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Top" />
      <MemberSignature Language="VB.NET" Value="Top" />
      <MemberSignature Language="C++ CLI" Value="Top" />
      <MemberSignature Language="F#" Value="Top = 0" Usage="System.Windows.Forms.TextFormatFlags.Top" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-152">Wyrównanie tekstu w górnej części prostokątem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-152">Aligns the text on the top of the bounding rectangle.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="VerticalCenter">
      <MemberSignature Language="C#" Value="VerticalCenter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags VerticalCenter = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.VerticalCenter" />
      <MemberSignature Language="VB.NET" Value="VerticalCenter" />
      <MemberSignature Language="C++ CLI" Value="VerticalCenter" />
      <MemberSignature Language="F#" Value="VerticalCenter = 4" Usage="System.Windows.Forms.TextFormatFlags.VerticalCenter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-153">Wyśrodkowuje tekst w pionie, w ramach prostokątem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-153">Centers the text vertically, within the bounding rectangle.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WordBreak">
      <MemberSignature Language="C#" Value="WordBreak" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags WordBreak = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.WordBreak" />
      <MemberSignature Language="VB.NET" Value="WordBreak" />
      <MemberSignature Language="C++ CLI" Value="WordBreak" />
      <MemberSignature Language="F#" Value="WordBreak = 16" Usage="System.Windows.Forms.TextFormatFlags.WordBreak" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-154">Dzieli tekst na końcu wyrazu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-154">Breaks the text at the end of a word.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WordEllipsis">
      <MemberSignature Language="C#" Value="WordEllipsis" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags WordEllipsis = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.WordEllipsis" />
      <MemberSignature Language="VB.NET" Value="WordEllipsis" />
      <MemberSignature Language="C++ CLI" Value="WordEllipsis" />
      <MemberSignature Language="F#" Value="WordEllipsis = 262144" Usage="System.Windows.Forms.TextFormatFlags.WordEllipsis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="df6a8-155">TRIM wiersza do najbliższej programów word i wielokropek jest umieszczony na końcu przycięte wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df6a8-155">Trims the line to the nearest word and an ellipsis is placed at the end of a trimmed line.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>