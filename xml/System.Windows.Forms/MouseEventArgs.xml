<Type Name="MouseEventArgs" FullName="System.Windows.Forms.MouseEventArgs">
  <TypeSignature Language="C#" Value="public class MouseEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MouseEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f669c-101">Udostępnia dane dla <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, i <see cref="E:System.Windows.Forms.Control.MouseMove" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f669c-101">Provides data for the <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, and <see cref="E:System.Windows.Forms.Control.MouseMove" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f669c-102"><xref:System.Windows.Forms.Control.MouseDown> Zdarzenie wystąpi, gdy użytkownik naciśnie przycisk myszy, gdy wskaźnik znajduje się nad formantem.</span><span class="sxs-lookup"><span data-stu-id="f669c-102">The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control.</span></span> <span data-ttu-id="f669c-103"><xref:System.Windows.Forms.Control.MouseUp> Zdarzenie wystąpi, gdy użytkownik zwolni przycisk myszy, gdy wskaźnik myszy jest nad formantem.</span><span class="sxs-lookup"><span data-stu-id="f669c-103">The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control.</span></span> <span data-ttu-id="f669c-104"><xref:System.Windows.Forms.Control.MouseMove> Zdarzenie wystąpi, gdy użytkownik przesuwa wskaźnik myszy nad formantem.</span><span class="sxs-lookup"><span data-stu-id="f669c-104">The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control.</span></span> <span data-ttu-id="f669c-105">A <xref:System.Windows.Forms.MouseEventArgs> Określa, które zostanie naciśnięty przycisk myszy, ile razy przycisk myszy został naciśnięty i wydaniu współrzędne myszy, a wielkość przenieść kółka myszy.</span><span class="sxs-lookup"><span data-stu-id="f669c-105">A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.</span></span>  
  
 <span data-ttu-id="f669c-106">Istnieje możliwość odbierania <xref:System.Windows.Forms.Control.MouseDown> zdarzeń bez odpowiadającego <xref:System.Windows.Forms.Control.MouseUp>, gdy użytkownik zmienia fokus na inną aplikację przed zwolnieniem przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="f669c-106">It is possible to receive a <xref:System.Windows.Forms.Control.MouseDown> event without a corresponding <xref:System.Windows.Forms.Control.MouseUp>, if the user switches focus to another application before releasing the mouse button.</span></span>  
  
 <span data-ttu-id="f669c-107">Zdarzenia te trzy istnieje dla <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, i <xref:System.Windows.Forms.NotifyIcon> klasy.</span><span class="sxs-lookup"><span data-stu-id="f669c-107">These three events exist for the <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, and <xref:System.Windows.Forms.NotifyIcon> classes.</span></span>  
  
 <span data-ttu-id="f669c-108">Aby uzyskać informacje na temat modelu zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="f669c-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f669c-109">Poniższy kod uchwytów przykłady <xref:System.Windows.Forms.Control.MouseDown> zdarzenia w <xref:System.Windows.Forms.TextBox> , aby kliknij prawym przyciskiem myszy, aby zaznaczyć cały tekst w formancie.</span><span class="sxs-lookup"><span data-stu-id="f669c-109">The following code examples handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control.</span></span> <span data-ttu-id="f669c-110">W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="f669c-110">This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control that is named `textBox1`.</span></span>  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 <span data-ttu-id="f669c-111">Poniższy przykład kodu wykorzystuje `Location` właściwości do śledzenia kliknie lewego przycisku myszy, a także do rysowania serii segmenty linii prostej w odpowiedzi na dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="f669c-111">The following code example uses the `Location` property to track clicks of the left mouse button and to draw a series of straight line segments in response to user input.</span></span> <span data-ttu-id="f669c-112">Przykład nie są odświeżane wiersze ukrycia formularza i następnie ponownie wyświetlić Ten kod zostało pominięte dla uproszczenia.</span><span class="sxs-lookup"><span data-stu-id="f669c-112">The example does not redraw the lines if you hide the form and then redisplay it; this code has been omitted for simplicity.</span></span>  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 <span data-ttu-id="f669c-113">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.MouseEventArgs.X%2A> i <xref:System.Windows.Forms.MouseEventArgs.Y%2A> właściwości, aby wyświetlić bieżącą pozycję wskaźnika myszy w <xref:System.Windows.Forms.ToolTip> okna.</span><span class="sxs-lookup"><span data-stu-id="f669c-113">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (button As MouseButtons, clicks As Integer, x As Integer, y As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseEventArgs(System::Windows::Forms::MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="f669c-114">Jeden z <see cref="T:System.Windows.Forms.MouseButtons" /> wartości wskazujące, który przycisk myszy został naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="f669c-114">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed.</span></span></param>
        <param name="clicks"><span data-ttu-id="f669c-115">Ile razy został naciśnięty przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="f669c-115">The number of times a mouse button was pressed.</span></span></param>
        <param name="x"><span data-ttu-id="f669c-116">Współrzędna x kliknięcie w pikselach.</span><span class="sxs-lookup"><span data-stu-id="f669c-116">The x-coordinate of a mouse click, in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="f669c-117">Współrzędna y kliknięcie w pikselach.</span><span class="sxs-lookup"><span data-stu-id="f669c-117">The y-coordinate of a mouse click, in pixels.</span></span></param>
        <param name="delta"><span data-ttu-id="f669c-118">Podpisem liczba Liczba detents ma obracać pokrętło.</span><span class="sxs-lookup"><span data-stu-id="f669c-118">A signed count of the number of detents the wheel has rotated.</span></span></param>
        <summary><span data-ttu-id="f669c-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.MouseEventArgs" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f669c-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.MouseEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons Button { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons Button" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Button" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Button As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons Button { System::Windows::Forms::MouseButtons get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f669c-120">Pobiera, który przycisk myszy został naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="f669c-120">Gets which mouse button was pressed.</span></span></summary>
        <value><span data-ttu-id="f669c-121">Jeden z <see cref="T:System.Windows.Forms.MouseButtons" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="f669c-121">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f669c-122">Poniższy kod uchwytów przykład <xref:System.Windows.Forms.Control.MouseDown> zdarzenia w <xref:System.Windows.Forms.TextBox> , aby kliknij prawym przyciskiem myszy, aby zaznaczyć cały tekst w formancie.</span><span class="sxs-lookup"><span data-stu-id="f669c-122">The following code example handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control.</span></span> <span data-ttu-id="f669c-123">W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="f669c-123">This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Clicks">
      <MemberSignature Language="C#" Value="public int Clicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Clicks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clicks As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Clicks { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f669c-124">Pobiera liczbę razy przycisk myszy został naciśnięty i wydane.</span><span class="sxs-lookup"><span data-stu-id="f669c-124">Gets the number of times the mouse button was pressed and released.</span></span></summary>
        <value><span data-ttu-id="f669c-125"><see cref="T:System.Int32" /> Zawiera liczbę razy przycisk myszy został naciśnięty i wydane.</span><span class="sxs-lookup"><span data-stu-id="f669c-125">An <see cref="T:System.Int32" /> that contains the number of times the mouse button was pressed and released.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f669c-126">Mimo że definiuje interfejsu systemu Windows standard myszy zdarzenia jako pojedyncze kliknięcia lub dwukrotne kliknięcia, poszczególnych aplikacji może interpretować większej liczby kliknięć jako pojedynczego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f669c-126">Although the Windows interface defines standard mouse events as either single-clicks or double-clicks, individual applications can interpret a larger number of clicks as a single event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f669c-127">Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f669c-127">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f669c-128">W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f669c-128">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="f669c-129">Ten raport pomaga dowiesz się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="f669c-129">This report helps you learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f669c-130">Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f669c-130">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f669c-131">Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu, która dziedziczy po <xref:System.Windows.Forms.Control>, takich jak <xref:System.Windows.Forms.Button> lub <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="f669c-131">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="f669c-132">Następnie nazwą wystąpienia `Control1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f669c-132">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f669c-133">Pobiera podpisem liczba Liczba detents, który ma być obracany kółka myszy pomnożona przez WHEEL_DELTA stałej.</span><span class="sxs-lookup"><span data-stu-id="f669c-133">Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.</span></span> <span data-ttu-id="f669c-134">Zapadka włączona jest kółka myszy o jedną pozycję.</span><span class="sxs-lookup"><span data-stu-id="f669c-134">A detent is one notch of the mouse wheel.</span></span></summary>
        <value><span data-ttu-id="f669c-135">Podpisem liczba Liczba detents kółka myszy ma rotacji pomnożona przez stała WHEEL_DELTA.</span><span class="sxs-lookup"><span data-stu-id="f669c-135">A signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f669c-136">Kółka myszy łączy funkcje przycisk myszy i kółka.</span><span class="sxs-lookup"><span data-stu-id="f669c-136">The mouse wheel combines the features of a wheel and a mouse button.</span></span> <span data-ttu-id="f669c-137">Koło ma odrębny, równomiernie rozmieszczanych pozycje.</span><span class="sxs-lookup"><span data-stu-id="f669c-137">The wheel has discrete, evenly spaced notches.</span></span> <span data-ttu-id="f669c-138">Gdy obracać pokrętło, ponieważ napotkano każdego pozycję jest wysyłany komunikat kółka.</span><span class="sxs-lookup"><span data-stu-id="f669c-138">When you rotate the wheel, a wheel message is sent as each notch is encountered.</span></span> <span data-ttu-id="f669c-139">Jedną pozycję koło, Zapadka włączona jest zdefiniowana przez WHEEL_DELTA, stała systemu windows, który wynosi 120.</span><span class="sxs-lookup"><span data-stu-id="f669c-139">One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120.</span></span> <span data-ttu-id="f669c-140">Dodatnia wartość wskazuje, czy pokrętło został obrócony do przodu (od użytkownika); ujemna wartość oznacza, że koła został wstecz obracać (kierunku użytkownika).</span><span class="sxs-lookup"><span data-stu-id="f669c-140">A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).</span></span>  
  
 <span data-ttu-id="f669c-141">Obecnie jest wartość 120 standardu dla jednego Zapadka włączona.</span><span class="sxs-lookup"><span data-stu-id="f669c-141">Currently, a value of 120 is the standard for one detent.</span></span> <span data-ttu-id="f669c-142">Jeśli wprowadzono myszy rozdzielczości wyższej, definicji WHEEL_DELTA mogą być mniejsze.</span><span class="sxs-lookup"><span data-stu-id="f669c-142">If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller.</span></span> <span data-ttu-id="f669c-143">Większość aplikacji należy sprawdzić, czy wartości dodatnie lub ujemne, a nie łącznej sumy.</span><span class="sxs-lookup"><span data-stu-id="f669c-143">Most applications should check for a positive or negative value rather than an aggregate total.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f669c-144">Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f669c-144">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f669c-145">W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f669c-145">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="f669c-146">Ten raport pomaga dowiesz się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="f669c-146">This report helps you learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f669c-147">Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="f669c-147">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f669c-148">Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu, która dziedziczy po <xref:System.Windows.Forms.Control>, takich jak <xref:System.Windows.Forms.Button> lub <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="f669c-148">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="f669c-149">Następnie nazwą wystąpienia `Control1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f669c-149">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f669c-150">Pobiera lokalizację myszy podczas generowania zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="f669c-150">Gets the location of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="f669c-151">A <see cref="T:System.Drawing.Point" /> zawiera współrzędne myszy x i y, w pikselach, względem lewego górnego rogu formularza.</span><span class="sxs-lookup"><span data-stu-id="f669c-151">A <see cref="T:System.Drawing.Point" /> that contains the x- and y- mouse coordinates, in pixels, relative to the upper-left corner of the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f669c-152">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.MouseEventArgs.Location%2A> właściwości śledzenia kliknięć myszą po lewej stronie i rysowania serii segmenty linii prostej w odpowiedzi na dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="f669c-152">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.Location%2A> property to track left mouse clicks and draw a series of straight line segments in response to user input.</span></span> <span data-ttu-id="f669c-153">Przykład nie jest trwały narysowane linie ukrycia formularza i następnie ponownie wyświetlić Ten kod został pominięty dla uproszczenia.</span><span class="sxs-lookup"><span data-stu-id="f669c-153">The example does not persist the drawn lines if you hide the form and then redisplay it; this code was omitted for simplicity.</span></span>  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f669c-154">Pobiera współrzędną x myszy podczas generowania zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="f669c-154">Gets the x-coordinate of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="f669c-155">Współrzędna x myszy w pikselach.</span><span class="sxs-lookup"><span data-stu-id="f669c-155">The x-coordinate of the mouse, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f669c-156">Współrzędne myszy różnić w zależności od zdarzenia są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="f669c-156">The mouse coordinates vary based on the event being raised.</span></span> <span data-ttu-id="f669c-157">Na przykład, jeśli <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> zdarzenie jest obsługiwane, wartości współrzędnych myszy są względem współrzędne formantu, który wywołał zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="f669c-157">For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.</span></span> <span data-ttu-id="f669c-158">Niektóre zdarzenia związane z operacjami przeciągania i upuszczania skojarzony współrzędne myszy wartości, które są względem pochodzenia formularza lub pochodzenia ekranu.</span><span class="sxs-lookup"><span data-stu-id="f669c-158">Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f669c-159">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.MouseEventArgs.X%2A> i <xref:System.Windows.Forms.MouseEventArgs.Y%2A> właściwości, aby wyświetlić bieżącą pozycję wskaźnika myszy w <xref:System.Windows.Forms.ToolTip> okna.</span><span class="sxs-lookup"><span data-stu-id="f669c-159">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f669c-160">Pobiera współrzędną y myszy podczas generowania zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="f669c-160">Gets the y-coordinate of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="f669c-161">Współrzędna y myszy w pikselach.</span><span class="sxs-lookup"><span data-stu-id="f669c-161">The y-coordinate of the mouse, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f669c-162">Współrzędne myszy różnić w zależności od zdarzenia są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="f669c-162">The mouse coordinates vary based on the event being raised.</span></span> <span data-ttu-id="f669c-163">Na przykład, jeśli <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> zdarzenie jest obsługiwane, wartości współrzędnych myszy są względem współrzędne formantu, który wywołał zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="f669c-163">For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.</span></span> <span data-ttu-id="f669c-164">Niektóre zdarzenia związane z operacjami przeciągania i upuszczania skojarzony myszy współrzędnych wartości, które są względem pochodzenia formularza lub pochodzenia ekranu.</span><span class="sxs-lookup"><span data-stu-id="f669c-164">Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f669c-165">Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.MouseEventArgs.X%2A> i <xref:System.Windows.Forms.MouseEventArgs.Y%2A> właściwości, aby wyświetlić bieżącą pozycję wskaźnika myszy w <xref:System.Windows.Forms.ToolTip> okna.</span><span class="sxs-lookup"><span data-stu-id="f669c-165">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span> <span data-ttu-id="f669c-166">Aby użyć tego kodu, należy wywołać `TrackCoordinates` z konstruktora formularza.</span><span class="sxs-lookup"><span data-stu-id="f669c-166">To use this code, call `TrackCoordinates` from the form constructor.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
  </Members>
</Type>