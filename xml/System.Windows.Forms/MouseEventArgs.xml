<Type Name="MouseEventArgs" FullName="System.Windows.Forms.MouseEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d4a0d5b4dd091dfa102ec6610e94b063b3f1c45" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517551" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MouseEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type MouseEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, i <see cref="E:System.Windows.Forms.Control.MouseMove" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.MouseDown> Zdarzenie wystąpi, gdy użytkownik naciśnie przycisk myszy, gdy wskaźnik znajduje się nad formantem. <xref:System.Windows.Forms.Control.MouseUp> Zdarzenie wystąpi, gdy użytkownik zwolni przycisk myszy, gdy wskaźnik myszy jest nad formantem. <xref:System.Windows.Forms.Control.MouseMove> Zdarzenie wystąpi, gdy użytkownik przesuwa wskaźnik myszy nad formantem. A <xref:System.Windows.Forms.MouseEventArgs> Określa, które zostanie naciśnięty przycisk myszy, ile razy przycisk myszy został naciśnięty i wydaniu współrzędne myszy, a wielkość przenieść kółka myszy.  
  
 Istnieje możliwość odbierania <xref:System.Windows.Forms.Control.MouseDown> zdarzeń bez odpowiadającego <xref:System.Windows.Forms.Control.MouseUp>, gdy użytkownik zmienia fokus na inną aplikację przed zwolnieniem przycisku myszy.  
  
 Zdarzenia te trzy istnieje dla <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, i <xref:System.Windows.Forms.NotifyIcon> klasy.  
  
 Aby uzyskać informacje na temat modelu zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy kod uchwytów przykłady <xref:System.Windows.Forms.Control.MouseDown> zdarzenia w <xref:System.Windows.Forms.TextBox> , aby kliknij prawym przyciskiem myszy, aby zaznaczyć cały tekst w formancie. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1`.  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 Poniższy przykład kodu wykorzystuje `Location` właściwości do śledzenia kliknie lewego przycisku myszy, a także do rysowania serii segmenty linii prostej w odpowiedzi na dane wejściowe użytkownika. Przykład nie są odświeżane wiersze ukrycia formularza i następnie ponownie wyświetlić Ten kod zostało pominięte dla uproszczenia.  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.MouseEventArgs.X%2A> i <xref:System.Windows.Forms.MouseEventArgs.Y%2A> właściwości, aby wyświetlić bieżącą pozycję wskaźnika myszy w <xref:System.Windows.Forms.ToolTip> okna.  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (button As MouseButtons, clicks As Integer, x As Integer, y As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseEventArgs(System::Windows::Forms::MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MouseEventArgs : System.Windows.Forms.MouseButtons * int * int * int * int -&gt; System.Windows.Forms.MouseEventArgs" Usage="new System.Windows.Forms.MouseEventArgs (button, clicks, x, y, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button">Jeden z <see cref="T:System.Windows.Forms.MouseButtons" /> wartości wskazujące, który przycisk myszy został naciśnięty.</param>
        <param name="clicks">Ile razy został naciśnięty przycisk myszy.</param>
        <param name="x">Współrzędna x kliknięcie w pikselach.</param>
        <param name="y">Współrzędna y kliknięcie w pikselach.</param>
        <param name="delta">Podpisem liczba Liczba detents ma obracać pokrętło.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.MouseEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons Button { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons Button" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Button" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Button As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons Button { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.Button : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.MouseEventArgs.Button" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, który przycisk myszy został naciśnięty.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.MouseButtons" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod uchwytów przykład <xref:System.Windows.Forms.Control.MouseDown> zdarzenia w <xref:System.Windows.Forms.TextBox> , aby kliknij prawym przyciskiem myszy, aby zaznaczyć cały tekst w formancie. W tym przykładzie wymaga formularz, który zawiera <xref:System.Windows.Forms.TextBox> formantu o nazwie `textBox1`.  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Clicks">
      <MemberSignature Language="C#" Value="public int Clicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Clicks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clicks As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Clicks { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Clicks : int" Usage="System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę razy przycisk myszy został naciśnięty i wydane.</summary>
        <value>
          <see cref="T:System.Int32" /> Zawiera liczbę razy przycisk myszy został naciśnięty i wydane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że definiuje interfejsu systemu Windows standard myszy zdarzenia jako pojedyncze kliknięcia lub dwukrotne kliknięcia, poszczególnych aplikacji może interpretować większej liczby kliknięć jako pojedynczego zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> zdarzeń. Ten raport pomaga dowiesz się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu, która dziedziczy po <xref:System.Windows.Forms.Control>, takich jak <xref:System.Windows.Forms.Button> lub <xref:System.Windows.Forms.ComboBox>. Następnie nazwą wystąpienia `Control1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera podpisem liczba Liczba detents, który ma być obracany kółka myszy pomnożona przez WHEEL_DELTA stałej. Zapadka włączona jest kółka myszy o jedną pozycję.</summary>
        <value>Podpisem liczba Liczba detents kółka myszy ma rotacji pomnożona przez stała WHEEL_DELTA.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kółka myszy łączy funkcje przycisk myszy i kółka. Koło ma odrębny, równomiernie rozmieszczanych pozycje. Gdy obracać pokrętło, ponieważ napotkano każdego pozycję jest wysyłany komunikat kółka. Jedną pozycję koło, Zapadka włączona jest zdefiniowana przez WHEEL_DELTA, stała systemu windows, który wynosi 120. Dodatnia wartość wskazuje, czy pokrętło został obrócony do przodu (od użytkownika); ujemna wartość oznacza, że koła został wstecz obracać (kierunku użytkownika).  
  
 Obecnie jest wartość 120 standardu dla jednego Zapadka włączona. Jeśli wprowadzono myszy rozdzielczości wyższej, definicji WHEEL_DELTA mogą być mniejsze. Większość aplikacji należy sprawdzić, czy wartości dodatnie lub ujemne, a nie łącznej sumy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> zdarzeń. Ten raport pomaga dowiesz się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu, która dziedziczy po <xref:System.Windows.Forms.Control>, takich jak <xref:System.Windows.Forms.Button> lub <xref:System.Windows.Forms.ComboBox>. Następnie nazwą wystąpienia `Control1` i upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point" Usage="System.Windows.Forms.MouseEventArgs.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lokalizację myszy podczas generowania zdarzeń myszy.</summary>
        <value>A <see cref="T:System.Drawing.Point" /> zawiera współrzędne myszy x i y, w pikselach, względem lewego górnego rogu formularza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.MouseEventArgs.Location%2A> właściwości śledzenia kliknięć myszą po lewej stronie i rysowania serii segmenty linii prostej w odpowiedzi na dane wejściowe użytkownika. Przykład nie jest trwały narysowane linie ukrycia formularza i następnie ponownie wyświetlić Ten kod został pominięty dla uproszczenia.  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.MouseEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędną x myszy podczas generowania zdarzeń myszy.</summary>
        <value>Współrzędna x myszy w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Współrzędne myszy różnić w zależności od zdarzenia są zgłaszane. Na przykład, jeśli <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> zdarzenie jest obsługiwane, wartości współrzędnych myszy są względem współrzędne formantu, który wywołał zdarzenie. Niektóre zdarzenia związane z operacjami przeciągania i upuszczania skojarzony współrzędne myszy wartości, które są względem pochodzenia formularza lub pochodzenia ekranu.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.MouseEventArgs.X%2A> i <xref:System.Windows.Forms.MouseEventArgs.Y%2A> właściwości, aby wyświetlić bieżącą pozycję wskaźnika myszy w <xref:System.Windows.Forms.ToolTip> okna.  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.MouseEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędną y myszy podczas generowania zdarzeń myszy.</summary>
        <value>Współrzędna y myszy w pikselach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Współrzędne myszy różnić w zależności od zdarzenia są zgłaszane. Na przykład, jeśli <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> zdarzenie jest obsługiwane, wartości współrzędnych myszy są względem współrzędne formantu, który wywołał zdarzenie. Niektóre zdarzenia związane z operacjami przeciągania i upuszczania skojarzony myszy współrzędnych wartości, które są względem pochodzenia formularza lub pochodzenia ekranu.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.MouseEventArgs.X%2A> i <xref:System.Windows.Forms.MouseEventArgs.Y%2A> właściwości, aby wyświetlić bieżącą pozycję wskaźnika myszy w <xref:System.Windows.Forms.ToolTip> okna. Aby użyć tego kodu, należy wywołać `TrackCoordinates` z konstruktora formularza.  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
  </Members>
</Type>