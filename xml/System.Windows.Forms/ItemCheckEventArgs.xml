<Type Name="ItemCheckEventArgs" FullName="System.Windows.Forms.ItemCheckEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ab1e5ad7c9eff7cf80076556900ea87cbe4a6be" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36519702" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ItemCheckEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ItemCheckEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ItemCheckEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ItemCheckEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> zdarzenie <see cref="T:System.Windows.Forms.CheckedListBox" /> i <see cref="T:System.Windows.Forms.ListView" /> kontrolki.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.ItemCheck> Zdarzenie wystąpi, gdy zmienia się stan zaznaczenia elementu w polu listy zaznaczenia. <xref:System.Windows.Forms.ItemCheckEventArgs> Klasa określa indeks elementu do zmiany, bieżąca wartość pola wyboru dla elementu i nową wartość do ustawienia dla pola wyboru.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyewidencjonowany <xref:System.Windows.Forms.ListView> formant, który obsługuje <xref:System.Windows.Forms.ListView.ItemCheck?displayProperty=nameWithType> zdarzeń. W metodzie <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> i <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> właściwości <xref:System.Windows.Forms.ItemCheckEventArgs> obiekt, aby pobrać i zgadzają się ceną wybranych elementów menu. Aby uruchomić ten przykład Wklej poniższy kod w nadrzędnym formularza <xref:System.Windows.Forms.ListView> o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `Textbox1`. Wywołanie `InititalizeListView` metody z Konstruktor elementu form lub `Load` metody. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CheckedListBox" />
    <altmember cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemCheckEventArgs (int index, System.Windows.Forms.CheckState newCheckValue, System.Windows.Forms.CheckState currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index, valuetype System.Windows.Forms.CheckState newCheckValue, valuetype System.Windows.Forms.CheckState currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (index As Integer, newCheckValue As CheckState, currentValue As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ItemCheckEventArgs(int index, System::Windows::Forms::CheckState newCheckValue, System::Windows::Forms::CheckState currentValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ItemCheckEventArgs : int * System.Windows.Forms.CheckState * System.Windows.Forms.CheckState -&gt; System.Windows.Forms.ItemCheckEventArgs" Usage="new System.Windows.Forms.ItemCheckEventArgs (index, newCheckValue, currentValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="newCheckValue" Type="System.Windows.Forms.CheckState" />
        <Parameter Name="currentValue" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu do zmiany.</param>
        <param name="newCheckValue">Jeden z <see cref="T:System.Windows.Forms.CheckState" /> wartości, które wskazuje, czy można zmienić pola wyboru dla elementu, który ma być zaznaczone, niezaznaczone lub nieokreślony.</param>
        <param name="currentValue">Jeden z <see cref="T:System.Windows.Forms.CheckState" /> wartości, które wskazuje, czy pole wyboru dla elementu jest aktualnie zaznaczone, niezaznaczone lub nieokreślony.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CurrentValue { System::Windows::Forms::CheckState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : System.Windows.Forms.CheckState" Usage="System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, bieżący stan elementu pola wyboru.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.CheckState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie stanu wyboru określonego elementu w <xref:System.Windows.Forms.CheckedListBox> przed sprawdzania stanu do zastosowania zmian.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyewidencjonowany <xref:System.Windows.Forms.ListView> formant, który obsługuje <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType> zdarzeń. W metodzie <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> i <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> właściwości <xref:System.Windows.Forms.ItemCheckEventArgs> obiekt, aby pobrać i zgadzają się ceną wybranych elementów menu. Aby uruchomić ten przykład Wklej poniższy kod w nadrzędnym formularza <xref:System.Windows.Forms.ListView> o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `Textbox1`. Wywołanie `InititalizeListView` metody z Konstruktor elementu form lub `Load` metody. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczony od zera indeks elementu do zmiany.</summary>
        <value>Liczony od zera indeks elementu do zmiany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do określenia, który element pole wyboru w <xref:System.Windows.Forms.CheckedListBox> został zmieniony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyewidencjonowany <xref:System.Windows.Forms.ListView> formant, który obsługuje <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType> zdarzeń. W metodzie <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> i <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> właściwości <xref:System.Windows.Forms.ItemCheckEventArgs> obiekt, aby pobrać i zgadzają się ceną wybranych elementów menu. Aby uruchomić ten przykład Wklej poniższy kod w nadrzędnym formularza <xref:System.Windows.Forms.ListView> o nazwie `ListView1` i <xref:System.Windows.Forms.TextBox> o nazwie `Textbox1`. Wywołanie `InititalizeListView` metody z Konstruktor elementu form lub `Load` metody. Upewnij się, że wszystkie zdarzenia są skojarzone z ich metod obsługi zdarzeń.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState NewValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NewValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState NewValue { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberSignature Language="F#" Value="member this.NewValue : System.Windows.Forms.CheckState with get, set" Usage="System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy można zaznaczyć pole wyboru dla elementu, który ma być zaznaczone, niezaznaczone lub nieokreślony.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.CheckState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie stanu wyboru nowych określony element przed stan wyboru jest zmieniony przez <xref:System.Windows.Forms.CheckedListBox> formantu. Oprócz określenia nowy stan wyboru, tej właściwości można użyć w obsłudze zdarzeń dla <xref:System.Windows.Forms.CheckedListBox.ItemCheck> zdarzeń zmiany stanu do stanu wyboru inny niż określony. Na przykład, jeśli użytkownik zaznaczone pole wyboru obok elementu w <xref:System.Windows.Forms.CheckedListBox> że zdecydowano, nie powinna być sprawdzana na podstawie stanu aplikacji, można przesłonić, zmiany w stanie zaznaczone ustawienie dla tej właściwości do jego poprzedniego ustawienia lub t o stanie różnych wyboru.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.CheckedListBox> o nazwie `CheckedListBox1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      </Docs>
    </Member>
  </Members>
</Type>