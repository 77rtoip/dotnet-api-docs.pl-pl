<Type Name="IContainerControl" FullName="System.Windows.Forms.IContainerControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="daa3a1806d86f0a9617d1345a5205ad0fa97f1e8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36520509" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContainerControl" />
  <TypeSignature Language="F#" Value="type IContainerControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia funkcje sterowania do działania jako elementu nadrzędnego dla innych formantów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład dziedziczy <xref:System.Windows.Forms.ScrollableControl> klasy i implementuje <xref:System.Windows.Forms.IContainerControl> interfejsu. Implementacja jest dodawany do <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> właściwości i <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> metody.  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Implementuje ten interfejs w klasy, które ma element nadrzędny kolekcji formantów. Elementy członkowskie tego interfejsu umożliwiają aktywować formant podrzędny lub kontroli jest obecnie aktywny. Po zaimplementowaniu w klasie, <see cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" /> przyjmuje <see cref="T:System.Windows.Forms.Control" /> jako parametr i aktywuje określonego formantu. <see cref="P:System.Windows.Forms.IContainerControl.ActiveControl" /> Właściwości aktywuje lub pobiera formant, który jest aktywny.  W najbardziej typowych scenariuszy nie należy bezpośrednio zawierać implementację tego interfejsu. Na przykład jeśli tworzysz projekt Biblioteka formantów systemu Windows, programu Visual Studio generuje klasę początkową dla Ciebie. Czy klasa dziedziczy <see cref="T:System.Windows.Forms.UserControl" /> klasy, a <see cref="T:System.Windows.Forms.UserControl" /> implementuje <see cref="T:System.Windows.Forms.IContainerControl" /> dla Ciebie.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.Windows.Forms.Control" />
  </Docs>
  <Members>
    <Member MemberName="ActivateControl">
      <MemberSignature Language="C#" Value="public bool ActivateControl (System.Windows.Forms.Control active);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ActivateControl(class System.Windows.Forms.Control active) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateControl (active As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ActivateControl(System::Windows::Forms::Control ^ active);" />
      <MemberSignature Language="F#" Value="abstract member ActivateControl : System.Windows.Forms.Control -&gt; bool" Usage="iContainerControl.ActivateControl active" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="active" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="active">
          <see cref="T:System.Windows.Forms.Control" /> Aktywowane.</param>
        <summary>Aktywuje określonego formantu.</summary>
        <returns>
          <see langword="true" /> Jeśli formant jest pomyślnie uaktywniony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład dziedziczy <xref:System.Windows.Forms.ScrollableControl> klasy i implementuje <xref:System.Windows.Forms.IContainerControl> interfejsu. Implementacja jest dodawany do <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> właściwości i <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> metody.  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Po zaimplementowaniu w klasie, ta metoda aktywuje określonego <see cref="T:System.Windows.Forms.Control" />. Kontrolka musi być elementem podrzędnym formantu kontenera.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.IContainerControl.ActiveControl" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="ActiveControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control ActiveControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control ActiveControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ ActiveControl { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveControl : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontrolkę, która jest aktywna do formantu kontenera.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Control" /> Który jest obecnie aktywny formantu kontenera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład dziedziczy <xref:System.Windows.Forms.ScrollableControl> klasy i implementuje <xref:System.Windows.Forms.IContainerControl> interfejsu. Implementacja jest dodawany do <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> właściwości i <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> metody.  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Po zaimplementowaniu w klasie, ta właściwość aktywuje i pobiera aktywny formant do formantu kontenera.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>