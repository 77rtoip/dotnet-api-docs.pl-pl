<Type Name="ListBox+SelectedIndexCollection" FullName="System.Windows.Forms.ListBox+SelectedIndexCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bce93a91a0495b11f9cd5747f5f38e70c4062c8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69185506" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.SelectedIndexCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/SelectedIndexCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.SelectedIndexCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::SelectedIndexCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.SelectedIndexCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje kolekcję zawierającą indeksy do wybranych elementów w <see cref="T:System.Windows.Forms.ListBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa przechowuje indeksy do wybranych elementów <xref:System.Windows.Forms.ListBox>w. <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> Indeksy przechowywane w <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> indeksach są pozycjami indeksu <xref:System.Windows.Forms.ListBox.ObjectCollection> w klasie. Klasa przechowuje wszystkie elementy wyświetlane <xref:System.Windows.Forms.ListBox>w. <xref:System.Windows.Forms.ListBox.ObjectCollection>  
  
 W poniższej tabeli przedstawiono przykład sposobu <xref:System.Windows.Forms.ListBox.ObjectCollection> przechowywania elementów <xref:System.Windows.Forms.ListBox> programu oraz ich Stanów wyboru w ramach przykładu <xref:System.Windows.Forms.ListBox>.  
  
|Indeks|Element|Stan zaznaczenia w polu listy|  
|-----------|----------|----------------------------------------|  
|0|Obiekt1|Niezaznaczone|  
|1|Obiekt2|Wybrane|  
|2|object3|Niezaznaczone|  
|3|object4|Wybrane|  
|4|object5|Wybrane|  
  
 W oparciu o <xref:System.Windows.Forms.ListBox.ObjectCollection> przykład z poprzedniej tabeli przedstawiono w poniższej tabeli <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> sposób wyświetlania.  
  
|Indeks|Indeks wybranego elementu w Obiekciecollection|  
|-----------|------------------------------------------------|  
|0|1|  
|1|3|  
|2|4|  
  
 Właściwości i metod tej klasy można użyć do wykonywania różnych zadań z kolekcją. Metoda pozwala określić, czy pozycja indeksu <xref:System.Windows.Forms.ListBox.ObjectCollection> z klasy jest elementem członkowskim <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>wybranych indeksów przechowywanych w. <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains%2A> Gdy wiesz, że element znajduje się w kolekcji, możesz użyć metody, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.IndexOf%2A> aby określić, gdzie <xref:System.Windows.Forms.ListBox> jest przechowywana określona pozycja indeksu <xref:System.Windows.Forms.ListBox.ObjectCollection> w ramach elementu for.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Windows.Forms.ListBox.FindString%2A> metody w celu wyszukania wszystkich wystąpień tekstu wyszukiwania w elementach. <xref:System.Windows.Forms.ListBox> W przykładzie stosowana jest wersja <xref:System.Windows.Forms.ListBox.FindString%2A> metody, która pozwala określić początkowy indeks wyszukiwania, z którego ma być ciągłego wyszukiwania wszystkich elementów <xref:System.Windows.Forms.ListBox>w. W przykładzie pokazano również, jak ustalić, <xref:System.Windows.Forms.ListBox.FindString%2A> Kiedy metoda rozpoczyna wyszukiwanie od góry listy po osiągnięciu dolnej części listy elementów, aby zapobiec przeszukiwaniu cyklicznemu. Po znalezieniu elementów w programie <xref:System.Windows.Forms.ListBox>są one wybierane <xref:System.Windows.Forms.ListBox.SetSelected%2A> przy użyciu metody.  
  
 [!code-cpp[ListBox.FindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectedIndexCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SelectedIndexCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.SelectedIndexCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.SelectedIndexCollection" Usage="new System.Windows.Forms.ListBox.SelectedIndexCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ListBox" /> Reprezentujący właściciela kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można utworzyć wystąpienia tej klasy bez kojarzenia jej z <xref:System.Windows.Forms.ListBox> kontrolką.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(int index);" />
      <MemberSignature Language="F#" Value="member this.Add : int -&gt; unit" Usage="selectedIndexCollection.Add index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Lokalizacja w tablicy, w której ma zostać dodany <see cref="T:System.Windows.Forms.ListBox" />.</param>
        <summary><see cref="T:System.Windows.Forms.ListBox" /> Dodaje w określonej lokalizacji indeksu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="selectedIndexCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie kontrolki z kolekcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (selectedIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int selectedIndex);" />
      <MemberSignature Language="F#" Value="member this.Contains : int -&gt; bool" Usage="selectedIndexCollection.Contains selectedIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Indeks, który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Określa, czy określony indeks znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli określony indeks <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> <see cref="T:System.Windows.Forms.ListBox" /> jest elementem dla elementu w tej kolekcji, <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pozwala określić, czy pozycja indeksu <xref:System.Windows.Forms.ListBox.ObjectCollection> z klasy jest elementem członkowskim <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>wybranych indeksów przechowywanych w. <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains%2A> Można użyć tej opcji, aby określić, czy określony element w wielokrotnym wyborze <xref:System.Windows.Forms.ListBox> jest zaznaczony.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.SelectedIndexCollection.IndexOf(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.CopyTo(System.Array,System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="selectedIndexCollection.CopyTo (dest, index)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="selectedIndexCollection.CopyTo (destination, index)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.CopyTo(System.Array,System.Int32)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">Tablica docelowa.</param>
        <param name="dest">Tablica docelowa.</param>
        <param name="index">Indeks w tablicy docelowej, w którym rozpoczyna się przechowywanie.</param>
        <summary>Kopiuje całą kolekcję do istniejącej tablicy w określonej lokalizacji w tablicy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do łączenia wybranych indeksów z wielu kolekcji w jedną tablicę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.SelectedIndexCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów w kolekcji.</summary>
        <value>Liczba elementów w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie liczby wybranych elementów w <xref:System.Windows.Forms.ListBox>. Tej wartości można następnie użyć podczas zapętlenia przez wartości kolekcji i należy podać wiele iteracji, aby wykonać pętlę. Chyba że <xref:System.Windows.Forms.ListBox> `SelectionMode.MultiSimple` właściwość jest ustawiona na lub `SelectionMode.MultiExtended`, ta właściwość zawsze zwraca wartość zero (0) lub jeden (1) w zależności od tego, czy masz wybrany element. <xref:System.Windows.Forms.ListBox.SelectionMode%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Windows.Forms.ListBox.FindString%2A> metody w celu wyszukania wszystkich wystąpień tekstu wyszukiwania w elementach. <xref:System.Windows.Forms.ListBox> W przykładzie stosowana jest wersja <xref:System.Windows.Forms.ListBox.FindString%2A> metody, która pozwala określić początkowy indeks wyszukiwania, z którego ma być ciągłego wyszukiwania wszystkich elementów <xref:System.Windows.Forms.ListBox>w. W przykładzie pokazano również, jak ustalić, <xref:System.Windows.Forms.ListBox.FindString%2A> Kiedy metoda rozpoczyna wyszukiwanie od góry listy po osiągnięciu dolnej części listy elementów, aby zapobiec przeszukiwaniu cyklicznemu. Po znalezieniu elementów w programie <xref:System.Windows.Forms.ListBox>są one wybierane <xref:System.Windows.Forms.ListBox.SetSelected%2A> przy użyciu metody.  
  
 [!code-cpp[ListBox.FindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="selectedIndexCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który będzie używany do iteracji przez wybrane kolekcje indeksów.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> Reprezentujący wybrane kolekcje indeksów.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (selectedIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int selectedIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : int -&gt; int" Usage="selectedIndexCollection.IndexOf selectedIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Indeks (liczony od <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> zera) do zlokalizowania w tej kolekcji.</param>
        <summary>Zwraca indeks znajdujący się <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> w określonym indeksie <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> z <see cref="T:System.Windows.Forms.ListBox" />.</summary>
        <returns>Indeks (liczony od zera) w kolekcji, w której znajduje się <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />określony indeks w; w przeciwnym razie, ujemny jeden (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wiesz, że element znajduje się w kolekcji (przy użyciu <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains%2A> metody), możesz <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.IndexOf%2A> użyć metody, aby określić, gdzie <xref:System.Windows.Forms.ListBox.ObjectCollection> określona <xref:System.Windows.Forms.ListBox> pozycja indeksu w ramach dla elementu jest przechowywana w <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListBox.SelectedIndexCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli kolekcja jest tylko do odczytu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zawsze `true` dla tej kolekcji. Elementy w tej kolekcji są modyfikowane tylko przez <xref:System.Windows.Forms.ListBox> formant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : int" Usage="System.Windows.Forms.ListBox.SelectedIndexCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks elementu w kolekcji, który ma zostać pobrany.</param>
        <summary>Pobiera wartość indeksu o określonym indeksie w tej kolekcji.</summary>
        <value>Wartość indeksu z <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> , która jest przechowywana w określonej lokalizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten indeksator pozwala uzyskać określony indeks z <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>. Indeks przechowywany w kolekcji jest indeksem <xref:System.Windows.Forms.ListBox.ObjectCollection> <xref:System.Windows.Forms.ListBox> , który reprezentuje wybrany element w <xref:System.Windows.Forms.ListBox>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość parametru jest mniejsza od zera lub większa lub równa wartości <see cref="P:System.Windows.Forms.ListBox.SelectedIndexCollection.Count" /> właściwości <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> klasy. <paramref name="index" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int index);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="selectedIndexCollection.Remove index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Formant, który ma zostać usunięty.</param>
        <summary>Usuwa określony formant z kolekcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.ICollection.IsSynchronized" />Zobacz.</summary>
        <value><see langword="false" />we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.ICollection.SyncRoot" />Zobacz.</summary>
        <value>Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Indeks, który ma zostać dodany do kolekcji.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Add(System.Object)" />Zobacz.</summary>
        <returns>Pozycja, w której został wstawiony indeks.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 Nie można zmienić <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> klasy bezpośrednio. Aby dodać element do <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> Użyj właściwości lub <xref:System.Windows.Forms.ListBox.SetSelected%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Clear" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (selectedIndex As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ selectedIndex) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Indeks, który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Contains(System.Object)" />Zobacz.</summary>
        <returns><see langword="true" />Jeśli określony indeks <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> <see cref="T:System.Windows.Forms.ListBox" /> jest elementem dla elementu w tej kolekcji; w przeciwnym razie, FAŁSZ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 Metoda pozwala określić, czy pozycja indeksu <xref:System.Windows.Forms.ListBox.ObjectCollection> z elementu członkowskiego <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>wybranych indeksów jest przechowywana w. <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.System%23Collections%23IList%23Contains%2A> Za pomocą tej metody można określić, czy określony element w polu listy wielokrotnego wyboru jest zaznaczony.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (selectedIndex As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ selectedIndex) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Indeks (liczony od <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> zera) do zlokalizowania w tej kolekcji.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.IndexOf(System.Object)" />Zobacz.</summary>
        <returns>Indeks (liczony od zera) w kolekcji, w której znajduje się określony <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> indeks, jeśli znajduje się <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />w; w przeciwnym razie,-1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 Zawiera indeksy wybranych elementów <xref:System.Windows.Forms.ListBox.ObjectCollection> w <xref:System.Windows.Forms.ListBox> kontrolce. <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Indeks, pod którym ma zostać wstawiona wartość.</param>
        <param name="value">Obiekt, który ma zostać dodany do <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 Nie można zmienić <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> klasy bezpośrednio. Aby dodać element do <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, <xref:System.Windows.Forms.ListBox.SelectedItem%2A> Użyj właściwości lub <xref:System.Windows.Forms.ListBox.SetSelected%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.IList.IsFixedSize" />Zobacz.</summary>
        <value><see langword="true" />we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.IList.Item(System.Int32)" />Zobacz.</summary>
        <value>Wartość indeksu z <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> , która jest przechowywana w określonej lokalizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt, który ma zostać usunięty z <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Remove(System.Object)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 Nie można zmienić <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> klasy bezpośrednio. Aby usunąć element z <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> Użyj właściwości lub <xref:System.Windows.Forms.ListBox.SetSelected%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać usunięty.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.  
  
 Nie można zmienić <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> klasy bezpośrednio. Aby usunąć element z <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> Użyj właściwości lub <xref:System.Windows.Forms.ListBox.SetSelected%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Zawsze generowany.</exception>
        <altmember cref="M:System.Collections.IList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
