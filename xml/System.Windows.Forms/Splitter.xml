<Type Name="Splitter" FullName="System.Windows.Forms.Splitter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61d97e832ccaf5f1066281de5f265eef0fdf7d89" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36514932" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Splitter : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Splitter extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Splitter" />
  <TypeSignature Language="VB.NET" Value="Public Class Splitter&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Splitter : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type Splitter = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SplitterMoved")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Dock")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.SplitterDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolkę podziału, która umożliwia użytkownikowi zmienianie rozmiaru formantów dokowanych. <see cref="T:System.Windows.Forms.Splitter" /> został zastąpiony przez <see cref="T:System.Windows.Forms.SplitContainer" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Splitter> Kontroli umożliwia użytkownikowi zmianę rozmiaru formantów, które są zadokowane do krawędzi <xref:System.Windows.Forms.Splitter> formantu w czasie wykonywania. Gdy użytkownik przesuwa się wskaźnik myszy nad <xref:System.Windows.Forms.Splitter> kontroli zmian kursora wskazująca zadokowane dla formantów <xref:System.Windows.Forms.Splitter> zmieniony rozmiar formantu. <xref:System.Windows.Forms.Splitter> Kontroli umożliwia użytkownikowi zmienianie rozmiaru zadokowanego kontrolkę, która jest bezpośrednio przed jej w kolejności dokowania. W związku z tym umożliwia użytkownikowi zmienianie rozmiaru formantu zadokowanych dock kontroli, użytkownik ma mieć możliwość zmiany rozmiaru krawędzią kontenera, a następnie dock rozdzielacz do tej samej stronie tego kontenera. Na przykład można utworzyć okna jest podobny do Eksploratora Windows, należy dodać <xref:System.Windows.Forms.TreeView> sterowania do formularza i ustawić jej <xref:System.Windows.Forms.Control.Dock%2A> właściwości `DockStyle.Left`. Dodaj <xref:System.Windows.Forms.Splitter> sterowania do formularza i ustawić jej <xref:System.Windows.Forms.Control.Dock%2A> właściwości `DockStyle.Left` również. Aby ukończyć układu formularza, dodać <xref:System.Windows.Forms.ListView> kontroli i ustawić jej <xref:System.Windows.Forms.Control.Dock%2A> właściwości `DockStyle.Fill` mają <xref:System.Windows.Forms.ListView> zajmują pozostałe miejsce w formularzu. W czasie wykonywania, użytkownik może następnie zmienia szerokość z <xref:System.Windows.Forms.TreeView> formantu (, jak również <xref:System.Windows.Forms.ListView> kontroli) przez przeniesienie <xref:System.Windows.Forms.Splitter> formantu.  
  
 Aby upewnić się, że <xref:System.Windows.Forms.Splitter> formantu nie zmiana rozmiaru formantów zadokowana rozmiar, który jest za mały, aby była przydatna dla użytkownika, użyj <xref:System.Windows.Forms.Splitter.MinExtra%2A> i <xref:System.Windows.Forms.Splitter.MinSize%2A> właściwości. <xref:System.Windows.Forms.Splitter.MinExtra%2A> i <xref:System.Windows.Forms.Splitter.MinSize%2A> właściwości określają minimalny rozmiar, która kontroluje zadokowane po lewej i prawej (lub górnej i dolne Jeśli poziomym <xref:System.Windows.Forms.Splitter> kontroli) mogą być ustalone na. Jeśli inne formanty na formularzu który <xref:System.Windows.Forms.Splitter> kontroli jest zadokowany do wyświetlenia określonej styl obramowania, możesz użyć <xref:System.Windows.Forms.Splitter.BorderStyle%2A> właściwości, aby dopasować styl obramowania formantów, które są zadokowane.  
  
 Należy ustawić limit maksymalnego rozmiaru na formantów, które <xref:System.Windows.Forms.Splitter> jest zadokowana formantu. <xref:System.Windows.Forms.Splitter.SplitterMoved> i <xref:System.Windows.Forms.Splitter.SplitterMoving> zdarzeń umożliwiają określenie, kiedy użytkownik jest zmiana rozmiaru zadokowany formant. Można użyć <xref:System.Windows.Forms.Splitter.SplitPosition%2A> właściwości w obsłudze zdarzeń dla <xref:System.Windows.Forms.Splitter.SplitterMoved> lub <xref:System.Windows.Forms.Splitter.SplitterMoving> zdarzeń, aby określić rozmiar formantu który <xref:System.Windows.Forms.Splitter> formant jest zadokowane i ustawić <xref:System.Windows.Forms.Splitter.SplitPosition%2A> właściwości na inną wartość, aby ograniczyć zadokowanych szerokość formantu do określonego maksymalną szerokość (lub wysokość Jeśli poziomie wyrównany <xref:System.Windows.Forms.Splitter> kontroli).  
  
> [!NOTE]
>  Zmiana rozmiaru formantu przy użyciu <xref:System.Windows.Forms.Splitter> kontroli jest możliwe tylko przy użyciu myszy. Nie jest możliwe, aby uzyskać dostęp do <xref:System.Windows.Forms.Splitter> kontrolować za pomocą klawiatury.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.Splitter> kontroli w połączeniu z <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> formanty można utworzyć okna, podobnie jak w Eksploratorze Windows. Aby zidentyfikować <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> formantów, węzły i elementy są dodawane do obu formantów. W przykładzie użyto <xref:System.Windows.Forms.Splitter.MinExtra%2A> i <xref:System.Windows.Forms.Splitter.MinSize%2A> właściwości <xref:System.Windows.Forms.Splitter> zapobiegające <xref:System.Windows.Forms.TreeView> lub <xref:System.Windows.Forms.ListView> formantu od rozmiaru zbyt małej lub zbyt duży. W tym przykładzie wymaga, że metoda utworzone w tym przykładzie jest zdefiniowana w <xref:System.Windows.Forms.Form> i czy metoda jest wywoływana z konstruktora <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[Splitter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Splitter Example/CPP/form1.cpp#1)]
 [!code-csharp[Splitter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Splitter Example/CS/form1.cs#1)]
 [!code-vb[Splitter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Splitter Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Splitter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Splitter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Splitter" /> klasy. <see cref="T:System.Windows.Forms.Splitter" /> został zastąpiony przez <see cref="T:System.Windows.Forms.SplitContainer" />i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.Forms.Splitter.MinSize%2A> i <xref:System.Windows.Forms.Splitter.MinExtra%2A> właściwości są ustawione na 25. <xref:System.Windows.Forms.Control.Dock%2A> Właściwość jest ustawiona na `DockStyle.Left` domyślnie.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.Splitter> kontroli w połączeniu z <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> formanty można utworzyć okna, podobnie jak w Eksploratorze Windows. Aby zidentyfikować <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> formantów, węzły i elementy są dodawane do obu formantów. W przykładzie użyto <xref:System.Windows.Forms.Splitter.MinExtra%2A> i <xref:System.Windows.Forms.Splitter.MinSize%2A> właściwości <xref:System.Windows.Forms.Splitter> zapobiegające <xref:System.Windows.Forms.TreeView> lub <xref:System.Windows.Forms.ListView> formantu od rozmiaru zbyt małej lub zbyt duży. W tym przykładzie wymaga, że metoda utworzone w tym przykładzie jest zdefiniowana w <xref:System.Windows.Forms.Form> i czy metoda jest wywoływana z konstruktora <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[Splitter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Splitter Example/CPP/form1.cpp#1)]
 [!code-csharp[Splitter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Splitter Example/CS/form1.cs#1)]
 [!code-vb[Splitter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Splitter Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public override bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.Splitter.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>
          <see langword="true" /> Jeśli włączona; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AnchorStyles Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AnchorStyles Anchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Anchor As AnchorStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AnchorStyles Anchor { System::Windows::Forms::AnchorStyles get(); void set(System::Windows::Forms::AnchorStyles value); };" />
      <MemberSignature Language="F#" Value="member this.Anchor : System.Windows.Forms.AnchorStyles with get, set" Usage="System.Windows.Forms.Splitter.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AnchorStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.AnchorStyles" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.Splitter.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Obraz tła wyświetlany w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.Splitter.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.ImageLayout" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.Splitter.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania formantu. <see cref="P:System.Windows.Forms.Splitter.BorderStyle" /> został zastąpiony przez <see cref="P:System.Windows.Forms.SplitContainer.BorderStyle" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości. Wartość domyślna to <see langword="BorderStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest zwykle używane podczas kontrolki <xref:System.Windows.Forms.Splitter> kontroli jest zadokowana są wyświetlane z określonych obramowanie i chcesz <xref:System.Windows.Forms.Splitter> kontroli zgodnie ze stylem ich wyświetlania. Na przykład, jeśli masz <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> kontrolować, które <xref:System.Windows.Forms.Splitter> formantu zostanie zadokowane do, że mają być wyświetlane bez żadnych obramowań, można ustawić <xref:System.Windows.Forms.Splitter.BorderStyle%2A> właściwości `BorderStyle.None`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość właściwości nie jest jednym z <see cref="T:System.Windows.Forms.BorderStyle" /> wartości.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Splitter.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca parametry potrzebne do utworzenia uchwytu.</summary>
        <value>A <see cref="T:System.Windows.Forms.CreateParams" /> zawierający tworzenia wymaganych parametrów podczas tworzenia uchwytu do formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dziedziczenie klas mogą przesłaniać tę właściwość, aby zapewnić dodatkowe funkcje. Upewnij się, jednak, że te klasy wywołać `base.getCreateParams()` najpierw uzyskanie struktury zawierający podstawowe informacje.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Splitter.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kursor domyślny dla formantu.</summary>
        <value>Obiekt typu <see cref="T:System.Windows.Forms.Cursor" /> reprezentujący bieżący kursor domyślny.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Splitter.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny tryb Input Method Editor (IME) obsługiwany przez ten formant.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.ImeMode" /> wartości.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Splitter.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny rozmiar formantu.</summary>
        <value>A <see cref="T:System.Drawing.Size" /> reprezentujący domyślny rozmiar formantu.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Size" />
      </Docs>
    </Member>
    <Member MemberName="Dock">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DockStyle Dock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle Dock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.Dock" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Dock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DockStyle Dock { System::Windows::Forms::DockStyle get(); void set(System::Windows::Forms::DockStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Dock : System.Windows.Forms.DockStyle with get, set" Usage="System.Windows.Forms.Splitter.Dock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, które <see cref="T:System.Windows.Forms.Splitter" /> obramowania są zadokowane do kontrolki nadrzędnej i określa, jak <see cref="T:System.Windows.Forms.Splitter" /> zmieni się rozmiar obejmujące jego element nadrzędny.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.DockStyle" /> wartości. Wartość domyślna to <see cref="F:System.Windows.Forms.DockStyle.Left" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.Splitter.Dock%2A> właściwości, aby określić, jak automatycznie zmieni się rozmiar kontrolki jako zmieni się rozmiar kontrolki nadrzędnej. Można ustawić tylko <xref:System.Windows.Forms.Splitter.Dock%2A> właściwości <xref:System.Windows.Forms.DockStyle.Top>, <xref:System.Windows.Forms.DockStyle.Bottom>, <xref:System.Windows.Forms.DockStyle.Left>, lub <xref:System.Windows.Forms.DockStyle.Right>. <xref:System.Windows.Forms.Splitter> Kontroli umożliwia użytkownikowi zmienianie rozmiaru zadokowanego kontrolkę, która jest bezpośrednio przed jej w kolejności dokowania. W związku z tym, aby umożliwić użytkownikowi zmienianie rozmiaru formantu zadokowane, dock formantu krawędzią kontenera i następnie dokowanie <xref:System.Windows.Forms.Splitter> kontrolki do tej samej stronie tego kontenera. Aby uzyskać więcej informacji, zobacz przykład w <xref:System.Windows.Forms.Splitter> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Forms.Splitter.Dock" /> Nie ustawiono na jedną z prawidłowych <see cref="T:System.Windows.Forms.DockStyle" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberSignature Language="F#" Value="member this.Enter : EventHandler " Usage="member this.Enter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.Splitter.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Czcionka tekstu wyświetlanego przez formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Splitter.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Kolor pierwszego planu formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.ImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImeMode ImeMode { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeMode : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Splitter.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Jeden z <see cref="T:System.Windows.Forms.ImeMode" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.ImeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ImeModeChanged : EventHandler " Usage="member this.ImeModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberSignature Language="F#" Value="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " Usage="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberSignature Language="F#" Value="member this.Leave : EventHandler " Usage="member this.Leave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinExtra">
      <MemberSignature Language="C#" Value="public int MinExtra { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinExtra" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.MinExtra" />
      <MemberSignature Language="VB.NET" Value="Public Property MinExtra As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinExtra { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinExtra : int with get, set" Usage="System.Windows.Forms.Splitter.MinExtra" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(25)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia minimalną odległość, które muszą pozostać między formant rozdzielacza i krawędzi w przeciwną stronę kontenera (lub najbliższy formantu zadokowane na tej stronie). <see cref="P:System.Windows.Forms.Splitter.MinExtra" /> został zastąpiony przez właściwości podobne w <see cref="T:System.Windows.Forms.SplitContainer" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <value>Minimalna odległość, wyrażoną w pikselach między <see cref="T:System.Windows.Forms.Splitter" /> kontroli i krawędzi w przeciwną stronę kontenera (lub najbliższy formantu zadokowane na tej stronie). Wartość domyślna to 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla poziomej <xref:System.Windows.Forms.Splitter> formantu ( <xref:System.Windows.Forms.Splitter> kontroli zadokowane do góry lub u dołu kontener), minimalna wysokość obszaru kontenera zastrzeżone dla formantów niezadokowanego jest to wartość minus wysokość <xref:System.Windows.Forms.Splitter> formantu. Dla pionowym <xref:System.Windows.Forms.Splitter> kontroli ( <xref:System.Windows.Forms.Splitter> kontroli zadokowane po lewej lub prawej kontener), minimalna szerokość obszaru kontenera zastrzeżone dla formantów niezadokowanego jest to wartość minus szerokość <xref:System.Windows.Forms.Splitter> formantu. Użytkownik nie może przenieść podziału minął limit określony przez tę właściwość.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.Splitter.MinExtra%2A> właściwość jest ustawiona na wartość ujemną, wartość właściwości zostanie zresetowana do 0.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.Splitter> kontroli w połączeniu z <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> formanty można utworzyć okna, podobnie jak w Eksploratorze Windows. Aby zidentyfikować <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> formantów, węzły i elementy są dodawane do obu formantów. W przykładzie użyto <xref:System.Windows.Forms.Splitter.MinExtra%2A> i <xref:System.Windows.Forms.Splitter.MinSize%2A> właściwości <xref:System.Windows.Forms.Splitter> zapobiegające <xref:System.Windows.Forms.TreeView> lub <xref:System.Windows.Forms.ListView> formantu od rozmiaru zbyt małej lub zbyt duży. W tym przykładzie wymaga, że metoda utworzone w tym przykładzie jest zdefiniowana w <xref:System.Windows.Forms.Form> i czy metoda jest wywoływana z konstruktora <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[Splitter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Splitter Example/CPP/form1.cpp#1)]
 [!code-csharp[Splitter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Splitter Example/CS/form1.cs#1)]
 [!code-vb[Splitter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Splitter Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Splitter.MinSize" />
      </Docs>
    </Member>
    <Member MemberName="MinSize">
      <MemberSignature Language="C#" Value="public int MinSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.MinSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MinSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinSize : int with get, set" Usage="System.Windows.Forms.Splitter.MinSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(25)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia minimalną odległość, które muszą pozostać między formant rozdzielacza i krawędzi kontenera, że kontrolka jest zadokowany do. <see cref="P:System.Windows.Forms.Splitter.MinSize" /> został zastąpiony przez <see cref="P:System.Windows.Forms.SplitContainer.Panel1MinSize" /> i <see cref="P:System.Windows.Forms.SplitContainer.Panel2MinSize" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <value>Minimalna odległość, wyrażoną w pikselach między <see cref="T:System.Windows.Forms.Splitter" /> krawędzi kontenera, że formant jest zadokowana i kontroli. Wartość domyślna to 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla poziomej <xref:System.Windows.Forms.Splitter> formantu ( <xref:System.Windows.Forms.Splitter> kontroli zadokowane do góry lub u dołu kontener), ta wartość jest minimalną wysokość formantu o zmiennym rozmiarze. Dla pionowym <xref:System.Windows.Forms.Splitter> formantu ( <xref:System.Windows.Forms.Splitter> kontroli zadokowane po lewej lub prawej kontener), ta wartość jest minimalną szerokość formantu o zmiennym rozmiarze. Użytkownik nie może przenieść podziału minął limit określony przez tę właściwość.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.Splitter.MinSize%2A> właściwość jest ustawiona na wartość ujemną, wartość właściwości zostanie zresetowana do 0.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Windows.Forms.Splitter> kontroli w połączeniu z <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> formanty można utworzyć okna, podobnie jak w Eksploratorze Windows. Aby zidentyfikować <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> formantów, węzły i elementy są dodawane do obu formantów. W przykładzie użyto <xref:System.Windows.Forms.Splitter.MinExtra%2A> i <xref:System.Windows.Forms.Splitter.MinSize%2A> właściwości <xref:System.Windows.Forms.Splitter> zapobiegające <xref:System.Windows.Forms.TreeView> lub <xref:System.Windows.Forms.ListView> formantu od rozmiaru zbyt małej lub zbyt duży. W tym przykładzie wymaga, że metoda utworzone w tym przykładzie jest zdefiniowana w <xref:System.Windows.Forms.Form> i czy metoda jest wywoływana z konstruktora <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[Splitter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Splitter Example/CPP/form1.cpp#1)]
 [!code-csharp[Splitter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Splitter Example/CS/form1.cs#1)]
 [!code-vb[Splitter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Splitter Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Splitter.MinExtra" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="splitter.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Ta metoda nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="splitter.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.MouseDown" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Splitter.OnMouseDown%2A> Metody rozpocznie przeciąganie `Splitter` formantu zmiany rozmiaru zadokowany formant, który jest bezpośrednio przed `Splitter` według dokowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="splitter.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.MouseMove" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli użytkownik posiada lewego przycisku myszy w dół i myszy, <xref:System.Windows.Forms.Splitter.OnMouseMove%2A> przenosi metody <xref:System.Windows.Forms.Splitter> formantu zmiany rozmiaru zadokowany formant, który jest bezpośrednio przed <xref:System.Windows.Forms.Splitter> według dokowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="splitter.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Control.MouseUp" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Splitter.OnMouseUp%2A> Metody zmienia rozmiar zadokowanych kontrolkę, która jest bezpośrednio przed podziału, według dokowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSplitterMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnSplitterMoved (System.Windows.Forms.SplitterEventArgs sevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSplitterMoved(class System.Windows.Forms.SplitterEventArgs sevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSplitterMoved (sevent As SplitterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSplitterMoved(System::Windows::Forms::SplitterEventArgs ^ sevent);" />
      <MemberSignature Language="F#" Value="abstract member OnSplitterMoved : System.Windows.Forms.SplitterEventArgs -&gt; unit&#xA;override this.OnSplitterMoved : System.Windows.Forms.SplitterEventArgs -&gt; unit" Usage="splitter.OnSplitterMoved sevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sevent" Type="System.Windows.Forms.SplitterEventArgs" />
      </Parameters>
      <Docs>
        <param name="sevent">A <see cref="T:System.Windows.Forms.SplitterEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Splitter.SplitterMoved" /> zdarzeń. <see cref="M:System.Windows.Forms.Splitter.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)" /> został zastąpiony przez <see cref="M:System.Windows.Forms.SplitContainer.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.Splitter.OnSplitterMoved%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.Splitter.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Splitter.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.SplitterEventArgs" />
        <altmember cref="T:System.Windows.Forms.SplitterEventHandler" />
        <altmember cref="E:System.Windows.Forms.Splitter.SplitterMoved" />
      </Docs>
    </Member>
    <Member MemberName="OnSplitterMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnSplitterMoving (System.Windows.Forms.SplitterEventArgs sevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSplitterMoving(class System.Windows.Forms.SplitterEventArgs sevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.OnSplitterMoving(System.Windows.Forms.SplitterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSplitterMoving (sevent As SplitterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSplitterMoving(System::Windows::Forms::SplitterEventArgs ^ sevent);" />
      <MemberSignature Language="F#" Value="abstract member OnSplitterMoving : System.Windows.Forms.SplitterEventArgs -&gt; unit&#xA;override this.OnSplitterMoving : System.Windows.Forms.SplitterEventArgs -&gt; unit" Usage="splitter.OnSplitterMoving sevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sevent" Type="System.Windows.Forms.SplitterEventArgs" />
      </Parameters>
      <Docs>
        <param name="sevent">A <see cref="T:System.Windows.Forms.SplitterEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Forms.Splitter.SplitterMoving" /> zdarzeń. <see cref="M:System.Windows.Forms.Splitter.OnSplitterMoving(System.Windows.Forms.SplitterEventArgs)" /> został zastąpiony przez <see cref="M:System.Windows.Forms.SplitContainer.OnSplitterMoving(System.Windows.Forms.SplitterCancelEventArgs)" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Windows.Forms.Splitter.OnSplitterMoving%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Forms.Splitter.OnSplitterMoving(System.Windows.Forms.SplitterEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Splitter.OnSplitterMoving(System.Windows.Forms.SplitterEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.SplitterEventArgs" />
        <altmember cref="T:System.Windows.Forms.SplitterEventHandler" />
        <altmember cref="E:System.Windows.Forms.Splitter.SplitterMoving" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="splitter.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">Nowe <see cref="P:System.Windows.Forms.Control.Left" /> wartość właściwości formantu.</param>
        <param name="y">Nowe <see cref="P:System.Windows.Forms.Control.Top" /> wartość właściwości formantu.</param>
        <param name="width">Nowe <see cref="P:System.Windows.Forms.Control.Width" /> wartość właściwości formantu.</param>
        <param name="height">Nowe <see cref="P:System.Windows.Forms.Control.Height" /> wartość właściwości formantu.</param>
        <param name="specified">Bitowe połączenie <see cref="T:System.Windows.Forms.BoundsSpecified" /> wartości.</param>
        <summary>Wykonuje pracę ustawienia określone granice tego formantu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="SplitPosition">
      <MemberSignature Language="C#" Value="public int SplitPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.SplitPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitPosition { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SplitPosition : int with get, set" Usage="System.Windows.Forms.Splitter.SplitPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia odległość między formant rozdzielacza i krawędzi kontenera, że kontrolka jest zadokowany do. <see cref="P:System.Windows.Forms.Splitter.SplitPosition" /> został zastąpiony przez <see cref="P:System.Windows.Forms.SplitContainer.Panel1MinSize" /> i <see cref="P:System.Windows.Forms.SplitContainer.Panel2MinSize" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <value>Odległość w pikselach między <see cref="T:System.Windows.Forms.Splitter" /> krawędzi kontenera, że formant jest zadokowana i kontroli. Jeśli <see cref="T:System.Windows.Forms.Splitter" /> formant nie jest powiązany z kontrolką, wartość wynosi -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla poziomej <xref:System.Windows.Forms.Splitter> formantu ( <xref:System.Windows.Forms.Splitter> kontroli zadokowane do góry lub u dołu kontener), ta wartość jest wysokość formantu o zmiennym rozmiarze. Dla pionowym <xref:System.Windows.Forms.Splitter> formantu ( <xref:System.Windows.Forms.Splitter> kontroli zadokowane po lewej lub prawej kontener), ta wartość jest szerokość formantu o zmiennym rozmiarze. Można użyć <xref:System.Windows.Forms.Splitter.SplitPosition%2A> właściwości w obsłudze zdarzeń dla <xref:System.Windows.Forms.Splitter.SplitterMoved> lub <xref:System.Windows.Forms.Splitter.SplitterMoving> zdarzeń, aby określić rozmiar formantu który <xref:System.Windows.Forms.Splitter> kontroli jest zadokowana i ograniczyć jego szerokość do określonego maksymalną szerokość (lub wysokość Jeśli poziomo zadokowane <xref:System.Windows.Forms.Splitter> kontroli).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Splitter.SplitterMoved" />
        <altmember cref="E:System.Windows.Forms.Splitter.SplitterMoving" />
      </Docs>
    </Member>
    <Member MemberName="SplitterMoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SplitterEventHandler SplitterMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SplitterEventHandler SplitterMoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.SplitterMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SplitterMoved As SplitterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SplitterEventHandler ^ SplitterMoved;" />
      <MemberSignature Language="F#" Value="member this.SplitterMoved : System.Windows.Forms.SplitterEventHandler " Usage="member this.SplitterMoved : System.Windows.Forms.SplitterEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SplitterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant rozdzielacz jest przenoszony. <see cref="E:System.Windows.Forms.Splitter.SplitterMoved" /> został zastąpiony przez <see cref="E:System.Windows.Forms.SplitContainer.SplitterMoved" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.Splitter.SplitterMoved> zdarzeń, aby zweryfikować zmiany rozmiaru w aplikacji. Na przykład jeśli <xref:System.Windows.Forms.Splitter> kontroli jest zadokowany do krawędzi <xref:System.Windows.Forms.TreeView> kontroli i <xref:System.Windows.Forms.ListView> sterowania, można napisać kod <xref:System.Windows.Forms.Splitter.SplitterMoved> zdarzeń, aby ustalić, czy rozmiar minimalny i/lub maksymalną <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> Formanty został przekroczony i zmiana rozmiaru formantów do ich rozmiaru minimalną lub maksymalną.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Splitter.SplitterMoved> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.Splitter> o nazwie `Splitter1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Splitter.SplitterMoved> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#550](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#550)]
 [!code-vb[System.Windows.Forms.EventExamples#550](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#550)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Splitter.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)" />
        <altmember cref="T:System.Windows.Forms.SplitterEventArgs" />
        <altmember cref="T:System.Windows.Forms.SplitterEventHandler" />
        <altmember cref="E:System.Windows.Forms.Splitter.SplitterMoving" />
      </Docs>
    </Member>
    <Member MemberName="SplitterMoving">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SplitterEventHandler SplitterMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SplitterEventHandler SplitterMoving" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.SplitterMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SplitterMoving As SplitterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SplitterEventHandler ^ SplitterMoving;" />
      <MemberSignature Language="F#" Value="member this.SplitterMoving : System.Windows.Forms.SplitterEventHandler " Usage="member this.SplitterMoving : System.Windows.Forms.SplitterEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SplitterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant rozdzielacza jest właśnie przenoszony. <see cref="E:System.Windows.Forms.Splitter.SplitterMoving" /> został zastąpiony przez <see cref="E:System.Windows.Forms.SplitContainer.SplitterMoving" /> i tylko w celu zachowania zgodności z poprzednimi wersjami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć programu obsługi zdarzeń dla <xref:System.Windows.Forms.Splitter.SplitterMoving> zdarzeń, aby zweryfikować zmiany rozmiaru w aplikacji. Na przykład jeśli <xref:System.Windows.Forms.Splitter> kontroli jest zadokowany do krawędzi <xref:System.Windows.Forms.TreeView> kontroli i <xref:System.Windows.Forms.ListView> sterowania, można napisać kod <xref:System.Windows.Forms.Splitter.SplitterMoved> zdarzeń, aby ustalić, czy rozmiar minimalny i/lub maksymalną <xref:System.Windows.Forms.TreeView> i <xref:System.Windows.Forms.ListView> Formanty został przekroczony i ograniczyć zmiana rozmiaru formantów w celu ich rozmiar minimalną lub maksymalną.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego. W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Splitter.SplitterMoving> zdarzeń. Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu. Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.  
  
 Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.Splitter> o nazwie `Splitter1`. Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Splitter.SplitterMoving> zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#549](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#549)]
 [!code-vb[System.Windows.Forms.EventExamples#549](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#549)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Splitter.OnSplitterMoving(System.Windows.Forms.SplitterEventArgs)" />
        <altmember cref="T:System.Windows.Forms.SplitterEventArgs" />
        <altmember cref="T:System.Windows.Forms.SplitterEventHandler" />
        <altmember cref="E:System.Windows.Forms.Splitter.SplitterMoved" />
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Splitter.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>
          <see langword="true" /> Jeśli włączona; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Splitter.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Splitter.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest ważna dla tej klasy.</summary>
        <value>Ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Splitter.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To zdarzenie nie jest ważna dla tej klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie nie jest ważna dla tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Splitter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="splitter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg reprezentujący <see cref="T:System.Windows.Forms.Splitter" /> formantu.</summary>
        <returns>Ciąg reprezentujący bieżące <see cref="T:System.Windows.Forms.Splitter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Splitter.ToString%2A> Metoda zwraca ciąg zawierający typ i wartości dla <xref:System.Windows.Forms.Splitter.MinSize%2A> i <xref:System.Windows.Forms.Splitter.MinExtra%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>