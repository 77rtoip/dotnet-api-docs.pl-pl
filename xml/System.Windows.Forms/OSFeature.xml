<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f8490b1b743429b4f7179e1a7f1ae345071802c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517145" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OSFeature extends System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OSFeature" />
  <TypeSignature Language="VB.NET" Value="Public Class OSFeature&#xA;Inherits FeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class OSFeature : System::Windows::Forms::FeatureSupport" />
  <TypeSignature Language="F#" Value="type OSFeature = class&#xA;    inherit FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia zapytań określonych funkcji systemu operacyjnego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj `static` wystąpienia tej klasy w <xref:System.Windows.Forms.OSFeature.Feature%2A> właściwości zapytania dla funkcji systemu operacyjnego. Nie można utworzyć wystąpienia tej klasy.  
  
 Aby sprawdzić wersje funkcji, należy wywołać <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> metody. Aby ustalić, czy funkcja lub określonej wersji są dostępne, należy wywołać <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> metodę i określić tę funkcję, aby wyszukać o identyfikatorach funkcji dostępnych w tej klasie.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Windows.Forms.OSFeature> do badania systemu operacyjnego, aby ustalić, czy <xref:System.Windows.Forms.OSFeature.LayeredWindows> instalacji funkcji. Przykład przedstawia dwa sposoby sprawdzenia, czy funkcja jest obecny. W metodzie pierwszy `myVersion` jest sprawdzane, aby sprawdzić, czy jest `null`. Jeśli wersja jest `null`, ta funkcja nie jest zainstalowana. W metodzie drugi przykład wywołuje metody klasy podstawowej <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> czy funkcja jest zainstalowane. Wyniki są wyświetlane w polu tekstowym.  
  
 Ten kod zakłada `textBox1` został utworzony i umieszczane na formularzu.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.SystemInformation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OSFeature();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.OSFeature" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można utworzyć wystąpienia tej klasy. Aby wyszukać funkcje systemu operacyjnego, należy użyć `static` wystąpienie <xref:System.Windows.Forms.OSFeature> podane w tej klasie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.OSFeature Feature" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OSFeature.Feature" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Feature As OSFeature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::OSFeature ^ Feature { System::Windows::Forms::OSFeature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Feature : System.Windows.Forms.OSFeature" Usage="System.Windows.Forms.OSFeature.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="static" /> wystąpienie <see cref="T:System.Windows.Forms.OSFeature" /> klasy na potrzeby funkcji zapytania. Ta właściwość jest tylko do odczytu.</summary>
        <value>Wystąpienie <see cref="T:System.Windows.Forms.OSFeature" /> klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej `static` właściwości zapytania dla funkcji systemu operacyjnego. Nie można utworzyć wystąpienia tej klasy.  
  
 Aby sprawdzić wersje funkcji, należy wywołać <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> metody. Aby ustalić, czy funkcja lub określonej wersji są dostępne, należy wywołać <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> metodę i określić tę funkcję, aby wyszukać o identyfikatorach funkcji dostępnych w tej klasie.  
  
   
  
## Examples  
 Następujące przykładowe zapytania <xref:System.Windows.Forms.OSFeature> dla <xref:System.Windows.Forms.OSFeature.LayeredWindows> funkcji. Wersja jest sprawdzane, aby sprawdzić, czy jest `null`, aby ustalić, czy funkcja jest obecny. Wynik jest wyświetlany w polu tekstowym. Ten kod zakłada `textBox1` został utworzony i umieszczane na formularzu.  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.#ctor" />
        <altmember cref="T:System.Version" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="override this.GetVersionPresent : obj -&gt; Version" Usage="oSFeature.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Funkcja, którego wersja jest wymagana, albo <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> lub <see cref="F:System.Windows.Forms.OSFeature.Themes" />.</param>
        <summary>Pobiera wersję określona funkcja dostępna w systemie.</summary>
        <returns>A <see cref="T:System.Version" /> reprezentujący wersja aktualnie dostępne w systemie; funkcja określonego systemu operacyjnego lub <see langword="null" /> Jeśli nie można odnaleźć funkcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.OSFeature.Feature%2A> właściwość `static` wystąpienie <xref:System.Windows.Forms.OSFeature> zawarte w tej klasy można wyszukiwać numer wersji funkcji.  
  
   
  
## Examples  
 Następujące przykładowe zapytania <xref:System.Windows.Forms.OSFeature> dla <xref:System.Windows.Forms.OSFeature.LayeredWindows> funkcji. Wersja jest sprawdzane, aby sprawdzić, czy jest `null`, aby ustalić, czy funkcja jest obecny. Wynik jest wyświetlany w polu tekstowym. Ten kod zakłada `textBox1` został utworzony i umieszczane na formularzu.  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(valuetype System.Windows.Forms.SystemParameter enumVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (enumVal As SystemParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::Windows::Forms::SystemParameter enumVal);" />
      <MemberSignature Language="F#" Value="static member IsPresent : System.Windows.Forms.SystemParameter -&gt; bool" Usage="System.Windows.Forms.OSFeature.IsPresent enumVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" />
      </Parameters>
      <Docs>
        <param name="enumVal">A <see cref="T:System.Windows.Forms.SystemParameter" /> reprezentujący funkcji wyszukiwania.</param>
        <summary>Pobiera wartość wskazującą, czy system operacyjny obsługuje określona funkcja lub metryki.</summary>
        <returns>
          <see langword="true" /> Jeśli funkcja jest dostępna w systemie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Windows.Forms.OSFeature.IsPresent%2A> metodę, aby określić, czy system operacyjny obsługuje określoną funkcję lub Metryka identyfikowane przez `enumValue`. Na podstawie wartości zwracane z <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, można zastosować akcje warunkowe w kodzie. Na przykład, jeśli wywołanie tej metody za pomocą wartości parametru <xref:System.Windows.Forms.SystemParameter.FlatMenu> zwraca `true`, można utworzyć rysowanych przez właściciela menu w aplikacji w stylu płaskim.  
  
 Podczas uzyskiwania dostępu do niektórych funkcji systemu lub metryki może zgłaszać wyjątki, jeśli nie są dostępne w wersji określonego systemu operacyjnego. W takim przypadku należy najpierw użyć odpowiedniego <xref:System.Windows.Forms.SystemParameter> wartość wyliczenia, wraz z <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, aby ustalić, czy metryka jest obsługiwana. Na przykład wywołać <xref:System.Windows.Forms.OSFeature.IsPresent%2A> z <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> przed pobraniem <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> wartości właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Windows.Forms.OSFeature.IsPresent%2A> metody z <xref:System.Windows.Forms.SystemParameter> wyliczenia. Przykład określa, czy system operacyjny obsługuje `CaretWidth` metryki przed wywołaniem <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> właściwości.  
  
 [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemParameter" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object LayeredWindows" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayeredWindows As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ LayeredWindows;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayeredWindows : obj" Usage="System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje funkcji systemu windows z warstwami, najwyższego poziomu. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno warstwowego jest możliwe przezroczystym lub półprzezroczystym przez system operacyjny. Obsługa warstwowego systemu windows została wprowadzona w systemie Windows 2000. Aby uzyskać więcej informacji, zobacz "Warstwie systemu Windows: A nowy sposób do użycia przejrzystości i przezroczystość efekty w aplikacji systemu Windows" w dokumentacji zestawu SDK platformy w http://msdn.microsoft.com.  
  
 Aby określić, czy funkcja warstwowego systemu windows jest zainstalowany, użyj <xref:System.Windows.Forms.OSFeature.Feature%2A> właściwości, aby wywołać metodę klasy podstawowej <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> z <xref:System.Windows.Forms.OSFeature.LayeredWindows> jako funkcja do wyszukania.  
  
 Alternatywnie można sprawdzić, czy funkcja jest zainstalowany, wywołując <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> metody z <xref:System.Windows.Forms.OSFeature.LayeredWindows> funkcję można znaleźć.  
  
   
  
## Examples  
 Poniższy przykład określa, czy bieżący system obsługuje warstwowego systemu windows. Metody klasy podstawowej <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> jest wywoływana z <xref:System.Windows.Forms.OSFeature.LayeredWindows> jako funkcja do wyszukania. Wynik jest wyświetlany w polu tekstowym. Ten kod zakłada `textBox1` wystąpienie zostało utworzone i umieszczane na formularzu.  
  
 [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object Themes" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.Themes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Themes As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ Themes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Themes : obj" Usage="System.Windows.Forms.OSFeature.Themes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje funkcję kompozycji systemu operacyjnego. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Motyw jest kolekcją wizualny interfejs ustawień, które obejmują tapetę, kursorów, czcionki, dźwięki i ikony po raz pierwszy wprowadzone w programie Microsoft Plus! dla systemu Windows 95. .NET Framework nie obsługuje bezpośrednio manipulowania kompozycje, mimo że ma on kompleksową obsługę style wizualne w <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> przestrzeni nazw. Aby uzyskać więcej informacji na temat kompozycji systemu Windows zobacz tematy, kompozycje i style wizualne i dokumentacja języka Visual Style w zestawie SDK systemu Win32.  
  
 Aby ustalić, czy jest zainstalowana funkcja kompozycje, wywołaj metodę klasy podstawowej <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> z <xref:System.Windows.Forms.OSFeature.Themes> jako funkcja do wyszukania.  
  
 Alternatywnie można sprawdzić, czy funkcja jest zainstalowany, wywołując <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> metody z <xref:System.Windows.Forms.OSFeature.Themes> funkcję można znaleźć.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
  </Members>
</Type>