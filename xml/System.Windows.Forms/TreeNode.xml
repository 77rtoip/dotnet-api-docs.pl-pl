<Type Name="TreeNode" FullName="System.Windows.Forms.TreeNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="636a04cfedf01bbdeef0b41180d21540d676b803" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69176253" /></Metadata><TypeSignature Language="C#" Value="public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TreeNode extends System.MarshalByRefObject implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : MarshalByRefObject, ICloneable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje węzeł <see cref="T:System.Windows.Forms.TreeView" />obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolekcja zawiera wszystkie obiekty podrzędne <xref:System.Windows.Forms.TreeNode> przypisane do bieżącego <xref:System.Windows.Forms.TreeNode>. <xref:System.Windows.Forms.TreeNode.Nodes%2A> Po wykonaniu tej czynności można dodać, usunąć <xref:System.Windows.Forms.TreeNode>lub sklonować. w takim przypadku wszystkie podrzędne węzły drzewa są dodawane, usuwane lub klonowane. Każda <xref:System.Windows.Forms.TreeNode> z nich może zawierać kolekcję innych <xref:System.Windows.Forms.TreeNode> obiektów. Może to utrudnić ustalenie, gdzie jesteś w <xref:System.Windows.Forms.TreeView> trakcie iteracji kolekcji. Aby określić lokalizację w strukturze drzewa, użyj <xref:System.Windows.Forms.TreeNode.FullPath%2A> właściwości. Ciąg można analizować za pomocą <xref:System.Windows.Forms.TreeNode> wartości ciągu, <xref:System.Windows.Forms.TreeView.PathSeparator%2A> aby określić, gdzie rozpoczyna się i kończą etykietka. <xref:System.Windows.Forms.TreeNode.FullPath%2A>  
  
 Etykieta jest ustawiana przez <xref:System.Windows.Forms.TreeNode.Text%2A> ustawienie właściwości jawnie. <xref:System.Windows.Forms.TreeNode> Alternatywą jest utworzenie węzła drzewa przy użyciu jednego z <xref:System.Windows.Forms.TreeNode.%23ctor%2A> konstruktorów, które mają parametr ciągu, który <xref:System.Windows.Forms.TreeNode.Text%2A> reprezentuje właściwość. Etykieta jest wyświetlana obok <xref:System.Windows.Forms.TreeNode> obrazu, jeśli jest wyświetlany.  
  
 Aby wyświetlić obrazy obok węzłów drzewa, <xref:System.Windows.Forms.ImageList> należy przypisać <xref:System.Windows.Forms.TreeView.ImageList%2A> do właściwości kontrolki nadrzędnej <xref:System.Windows.Forms.TreeView> i przypisać <xref:System.Windows.Forms.ImageList> obiekt <xref:System.Drawing.Image> przez odwołanie jego wartości indeksu we właściwości. Ustaw właściwość na wartość <xref:System.Drawing.Image> indeksu, która <xref:System.Windows.Forms.TreeNode> ma być wyświetlana, gdy element jest w stanie niezaznaczonym. <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> Analogicznie Ustaw <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> właściwość na wartość <xref:System.Drawing.Image> indeksu, która <xref:System.Windows.Forms.TreeNode> ma być wyświetlana, gdy jest zaznaczone.  
  
 Wybór określonych węzłów drzewa i iteracja za <xref:System.Windows.Forms.TreeView.Nodes%2A> pośrednictwem kolekcji można osiągnąć przy użyciu następujących wartości właściwości: <xref:System.Windows.Forms.TreeNode.FirstNode%2A> <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A> <xref:System.Windows.Forms.TreeNode.PrevNode%2A> <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>,,. Przypisz zwrócone przez jedną z wcześniej właściwości <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> do właściwości, aby wybrać <xref:System.Windows.Forms.TreeView> ten węzeł drzewa w kontrolce. <xref:System.Windows.Forms.TreeNode>  
  
 Węzły drzewa mogą być rozwinięte, aby wyświetlić następny poziom węzłów drzewa podrzędnego. Użytkownik może rozwinąć <xref:System.Windows.Forms.TreeNode> , naciskając przycisk Plus (+) obok <xref:System.Windows.Forms.TreeNode>, jeśli jest wyświetlany, <xref:System.Windows.Forms.TreeNode> lub można <xref:System.Windows.Forms.TreeNode.Expand%2A> rozwinąć, wywołując metodę. Aby rozwinąć wszystkie podrzędne poziomy węzłów drzewa w <xref:System.Windows.Forms.TreeNode.Nodes%2A> kolekcji, <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> Wywołaj metodę. Możesz zwinąć poziom podrzędny <xref:System.Windows.Forms.TreeNode> , <xref:System.Windows.Forms.TreeNode.Collapse%2A> wywołując metodę lub naciskając przycisk minus (- <xref:System.Windows.Forms.TreeNode>) obok elementu, jeśli jest wyświetlany. Możesz również wywołać <xref:System.Windows.Forms.TreeNode.Toggle%2A> metodę, aby przeprowadzić <xref:System.Windows.Forms.TreeNode> alternatywę między rozwiniętym i zwiniętym stanem.  
  
 Węzły drzewa mogą opcjonalnie wyświetlać pole wyboru. Aby wyświetlić pola wyboru, ustaw <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> Właściwość <xref:System.Windows.Forms.TreeView> na `true`. Właściwość jest ustawiona na `true` dla węzłów drzewa, które są w stanie zaznaczenia. <xref:System.Windows.Forms.TreeNode.Checked%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla informacje o klientach w <xref:System.Windows.Forms.TreeView> kontrolce. Węzły drzewa głównego wyświetlają nazwy klientów, a podrzędne węzły drzewa wyświetlają numery zamówień przypisane do każdego klienta. W tym przykładzie do 1 000 klientów są wyświetlane 15 zamówień. <xref:System.Windows.Forms.TreeView> Odświeżenie jest pomijane <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> przy użyciu metod i <xref:System.Windows.Forms.TreeView.EndUpdate%2A> , a podczas tworzenia i malowania <xref:System.Windows.Forms.TreeNode> obiektów <xref:System.Windows.Forms.Cursor> jest wyświetlany czas oczekiwania. Ten przykład wymaga, aby masz `Customer` obiekt, który może zawierać `Order` kolekcję obiektów. Wymaga również, aby utworzono wystąpienie <xref:System.Windows.Forms.TreeView> kontrolki <xref:System.Windows.Forms.Form>na.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/de1b82db-4905-449a-9f59-af271a6b6673">Instrukcje: dodawanie i usuwanie węzłów za pomocą kontrolki TreeView formularzy systemu Windows</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy węzeł drzewa głównego do przypisywania podrzędnych węzłów drzewa. Podrzędny węzeł drzewa dla `Customer` każdego obiektu <xref:System.Collections.ArrayList> w obiekcie jest dodawany do węzła drzewa głównego oraz podrzędny węzeł drzewa dla `Customer` każdego `Order` obiektu przypisanego do obiektu. Obiekt jest przypisany <xref:System.Windows.Forms.TreeNode.Tag%2A> do właściwości, a węzły drzewa reprezentujące `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstem. `Customer` `Customer` Ten przykład wymaga zdefiniowania <xref:System.Windows.Forms.TreeView> obiektu i `Order` kontrolki <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> o nazwie `customerArray` , która zawiera `Customer` obiekty.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Etykieta <see cref="P:System.Windows.Forms.TreeNode.Text" /> nowego węzła drzewa.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.TreeNode" /> klasy z określonym tekstem etykiety.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość parametru jest przypisana do <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości węzła, a następnie zostanie etykieta węzła drzewa. `text`  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla informacje o klientach w <xref:System.Windows.Forms.TreeView> kontrolce. Węzły drzewa głównego wyświetlają nazwy klientów, a podrzędne węzły drzewa wyświetlają numery zamówień przypisane do każdego klienta. W tym przykładzie do 1 000 klientów są wyświetlane 15 zamówień. <xref:System.Windows.Forms.TreeView> Odświeżenie jest pomijane <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> przy użyciu metod i <xref:System.Windows.Forms.TreeView.EndUpdate%2A> , a podczas tworzenia i malowania <xref:System.Windows.Forms.TreeNode> obiektów <xref:System.Windows.Forms.Cursor> jest wyświetlany czas oczekiwania. Ten przykład wymaga, aby masz `Customer` obiekt, który może zawierać `Order` kolekcję obiektów. Wymaga również, aby utworzono wystąpienie <xref:System.Windows.Forms.TreeView> kontrolki <xref:System.Windows.Forms.Form>na.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TreeNode(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Zawiera <see cref="T:System.Runtime.Serialization.SerializationInfo" /> dane służące do deserializacji klasy.</param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Zawiera źródło i miejsce docelowe serializowanego strumienia.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.TreeNode" /> klasy przy użyciu określonych informacji o serializacji i kontekstu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">Etykieta <see cref="P:System.Windows.Forms.TreeNode.Text" /> nowego węzła drzewa.</param>
        <param name="children">Tablica obiektów podrzędnych <see cref="T:System.Windows.Forms.TreeNode" /> .</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.TreeNode" /> klasy z określonym tekstem etykiety i podrzędnymi węzłami drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość parametru jest przypisana do <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości węzła, a następnie zostanie etykieta węzła drzewa. `text` Węzły drzewa, które znajdują się w `children` tablicy, są dodawane do <xref:System.Windows.Forms.TreeNodeCollection> programu <xref:System.Windows.Forms.TreeNode.Nodes%2A> , który jest przechowywany we właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy węzeł drzewa głównego do przypisywania podrzędnych węzłów drzewa. Podrzędny węzeł drzewa dla `Customer` każdego obiektu <xref:System.Collections.ArrayList> w obiekcie jest dodawany do węzła drzewa głównego oraz podrzędny węzeł drzewa dla `Customer` każdego `Order` obiektu przypisanego do obiektu. Obiekt jest przypisany <xref:System.Windows.Forms.TreeNode.Tag%2A> do właściwości, a węzły drzewa reprezentujące `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstem. `Customer` `Customer` Ten przykład wymaga zdefiniowania <xref:System.Windows.Forms.TreeView> obiektu i `Order` kontrolki <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> o nazwie `customerArray` , która zawiera `Customer` obiekty.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Etykieta <see cref="P:System.Windows.Forms.TreeNode.Text" /> nowego węzła drzewa.</param>
        <param name="imageIndex">Wartość indeksu, która <see cref="T:System.Drawing.Image" /> ma być wyświetlana, gdy węzeł drzewa jest niezaznaczony.</param>
        <param name="selectedImageIndex">Wartość indeksu, <see cref="T:System.Drawing.Image" /> która ma być wyświetlana po wybraniu węzła drzewa.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.TreeNode" /> klasy z określonym tekstem etykiety i obrazami, które mają być wyświetlane, gdy węzeł drzewa jest w stanie wybranym i niezaznaczonym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość parametru jest przypisana do <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości węzła, a następnie zostanie etykieta węzła drzewa. `text` <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> Wartości `imageIndex` i `selectedImageIndex` to wartości<xref:System.Drawing.Image> indeksu przechowywane we właściwości przypisane do. Obraz, do którego odwołuje `imageIndex` się właściwość, jest wyświetlany, gdy węzeł drzewa nie jest zaznaczony. Podobnie obraz, do którego odwołuje `selectedImageIndex` się właściwość, jest wyświetlany, gdy węzeł drzewa jest w stanie zaznaczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i przypisuje <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView> do kontrolki i wypełnia <xref:System.Windows.Forms.TreeView> formant z <xref:System.Windows.Forms.TreeNode> obiektami. Węzły drzewa są przypisane obrazy z <xref:System.Windows.Forms.ImageList> tego, który jest wyświetlany, gdy węzeł drzewa jest w wybranym lub niezaznaczonym stanie. Ten <xref:System.Windows.Forms.Form> przykład wymaga <xref:System.Collections.ArrayList> <xref:System.Windows.Forms.TreeView>, aby zawierał `Order` `Customer` , i zawierający obiekty, które zawierają obiekty. Wymaga również, aby `Customer` obiekty i `Order` zostały zdefiniowane.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">Etykieta <see cref="P:System.Windows.Forms.TreeNode.Text" /> nowego węzła drzewa.</param>
        <param name="imageIndex">Wartość indeksu, która <see cref="T:System.Drawing.Image" /> ma być wyświetlana, gdy węzeł drzewa jest niezaznaczony.</param>
        <param name="selectedImageIndex">Wartość indeksu, <see cref="T:System.Drawing.Image" /> która ma być wyświetlana po wybraniu węzła drzewa.</param>
        <param name="children">Tablica obiektów podrzędnych <see cref="T:System.Windows.Forms.TreeNode" /> .</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.TreeNode" /> klasy z określonym tekstem etykiety, podrzędnymi węzłami drzewa i obrazami wyświetlanymi, gdy węzeł drzewa jest w stanie zaznaczonym i niezaznaczonym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość parametru jest przypisana do <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości węzła, a następnie zostanie etykieta węzła drzewa. `text` <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> Wartości `imageIndex` i `selectedImageIndex` to wartości<xref:System.Drawing.Image> indeksu przechowywane we właściwości przypisane do. Obraz, do którego odwołuje `imageIndex` się parametr, jest wyświetlany, gdy węzeł drzewa nie jest zaznaczony. Analogicznie, obraz przywoływany `selectedImageIndex` w parametrze jest wyświetlany, gdy węzeł drzewa jest w wybranym stanie. Węzły drzewa, które znajdują się w `children` tablicy, są dodawane do <xref:System.Windows.Forms.TreeNodeCollection> programu <xref:System.Windows.Forms.TreeNode.Nodes%2A> , który jest przechowywany we właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i przypisuje <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView> do kontrolki i wypełnia <xref:System.Windows.Forms.TreeView> formant z <xref:System.Windows.Forms.TreeNode> obiektami. Węzły drzewa są przypisane obrazy z <xref:System.Windows.Forms.ImageList> tego, który jest wyświetlany, gdy węzeł drzewa jest w wybranym lub niezaznaczonym stanie. Ten <xref:System.Windows.Forms.Form> przykład wymaga <xref:System.Collections.ArrayList> <xref:System.Windows.Forms.TreeView>, aby zawierał `Order` `Customer` , i zawierający obiekty, które zawierają obiekty. Wymaga również, aby `Customer` obiekty i `Order` zostały zdefiniowane.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła węzła drzewa.</summary>
        <value>Tło <see cref="T:System.Drawing.Color" /> węzła drzewa. Wartość domyślna to <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Color.Empty?displayProperty=nameWithType> <xref:System.Drawing.Color> <xref:System.Windows.Forms.TreeView> Jeśli właściwość jest ustawiona na<xref:System.Windows.Forms.Control.BackColor%2A> , używana jest wartość właściwości kontrolki, do której przypisany jest węzeł drzewa. <xref:System.Windows.Forms.TreeNode.BackColor%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu <xref:System.Windows.Forms.TreeNode> wyróżnia wszystkie <xref:System.Windows.Forms.TreeView> obiekty kontrolki, która `true` ma <xref:System.Windows.Forms.TreeNode.Checked%2A> ustawioną właściwość na przez ustawienie jej <xref:System.Windows.Forms.TreeNode.BackColor%2A> właściwości na <xref:System.Drawing.Color.Yellow%2A>. Ten kod wymaga <xref:System.Windows.Forms.TreeView> kontrolki <xref:System.Windows.Forms.Form> z kolekcją <xref:System.Windows.Forms.TreeNode> obiektów.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="treeNode.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje Edytowanie etykiety węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowym scenariuszem korzystania z tej metody jest wywołanie go w <xref:System.Windows.Forms.MenuItem.Click> przypadku zdarzenia <xref:System.Windows.Forms.MenuItem> lub <xref:System.Windows.Forms.ContextMenu>.  
  
> [!NOTE]
>  Ta metoda działa tylko wtedy, <xref:System.Windows.Forms.TreeView.LabelEdit%2A> gdy właściwość <xref:System.Windows.Forms.TreeView> jest ustawiona na `true`. Jeśli <xref:System.Windows.Forms.TreeView.LabelEdit%2A> jest ustawiona na `false`, zgłaszany jest wyjątek, a węzeł drzewa nie zostanie umieszczony w stanie edytowalnym.  
  
   
  
## Examples  
 Poniższy przykład kodu umożliwia użytkownikowi edytowanie węzłów drzewa niegłównych przy użyciu <xref:System.Windows.Forms.ContextMenu>. Gdy użytkownik kliknie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> na tej pozycji jest określana i przechowywana w zmiennej o nazwie. `mySelectedNode` Jeśli wybrano węzeł drzewa niegłówny, jest on umieszczany w stanie edytowalnym, umożliwiając użytkownikowi edytowanie etykiety węzła. Gdy użytkownik zatrzyma Edytowanie etykiety węzła drzewa, nowy tekst etykiety zostanie oszacowany i zapisany. W tym przykładzie kilka znaków jest traktowanych jako nieprawidłowe w tekście etykiety. Jeśli jeden z nieprawidłowych znaków znajduje się w ciągu etykiety lub ciąg jest pusty, użytkownik zostanie powiadomiony o błędzie i etykieta zostanie zwrócona do poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.TreeView.LabelEdit" />jest ustawiony na <see langword="false" />.</exception>
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.TreeNode.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera granice węzła drzewa.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Współrzędne są względne w lewym górnym rogu <xref:System.Windows.Forms.TreeView> kontrolki.  
  
   
  
## Examples  
 Poniższy przykład kodu zmienia rozmiar <xref:System.Windows.Forms.TreeNode.NodeFont%2A> do określonego rozmiaru i dostosowuje <xref:System.Windows.Forms.TreeView.ItemHeight%2A> formant nadrzędny <xref:System.Windows.Forms.TreeView> węzła drzewa. Ten przykład wymaga <xref:System.Windows.Forms.Form> , aby <xref:System.Windows.Forms.TreeView> zawierał <xref:System.Windows.Forms.TreeNode> formant z kolekcją obiektów i <xref:System.Windows.Forms.ComboBox> zawierający rozmiary czcionki.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł drzewa jest w stanie zaznaczenia.</summary>
        <value><see langword="true" />Jeśli węzeł drzewa jest w stanie zaznaczenia; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu <xref:System.Windows.Forms.TreeNode> wyróżnia wszystkie <xref:System.Windows.Forms.TreeView> obiekty kontrolki, która `true` ma <xref:System.Windows.Forms.TreeNode.Checked%2A> ustawioną właściwość na przez ustawienie jej <xref:System.Windows.Forms.TreeNode.BackColor%2A> właściwości na <xref:System.Drawing.Color.Yellow%2A>. Ten kod wymaga <xref:System.Windows.Forms.TreeView> kontrolki <xref:System.Windows.Forms.Form> z kolekcją <xref:System.Windows.Forms.TreeNode> obiektów.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kopiuje węzeł drzewa i całe poddrzewo w tym węźle drzewa.</summary>
        <returns><see cref="T:System.Object" /> Reprezentuje sklonowany. <see cref="T:System.Windows.Forms.TreeNode" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zostanie skopiowana struktura drzewa z sklonowanego węzła drzewa i poniżej. Wszystkie podrzędne węzły drzewa przypisane do <xref:System.Windows.Forms.TreeNode> klonowania są uwzględniane w nowym węźle drzewa i poddrzewie.  
  
 <xref:System.Windows.Forms.TreeNode.Clone%2A> Metoda wykonuje skróconą kopię węzła. Jeśli wartość <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwości jest typem referencyjnym, zarówno oryginalna, jak i sklonowana kopia będą wskazywały to samo pojedyncze wystąpienie <xref:System.Windows.Forms.TreeNode.Tag%2A> wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu klonuje ostatni podrzędny węzeł drzewa ostatniego węzła drzewa głównego i wstawia klon jako pierwszy węzeł drzewa głównego w `TreeNodeCollection`. Ten przykład wymaga, aby <xref:System.Windows.Forms.TreeView> masz kontrolkę <xref:System.Windows.Forms.Form> zawierającą <xref:System.Windows.Forms.Button>kolekcję <xref:System.Windows.Forms.TreeNode> obiektów i.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#3)]
 [!code-csharp[TreeNode_EnsureVisible_4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#3)]
 [!code-vb[TreeNode_EnsureVisible_4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Collapse">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.TreeNode" />Zwija.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwija węzeł drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwija bieżące <xref:System.Windows.Forms.TreeNode> i jego węzły podrzędne. <xref:System.Windows.Forms.TreeNode.Collapse%2A> Jeśli chcesz zwinąć tylko bieżącą <xref:System.Windows.Forms.TreeNode>, <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=nameWithType> Użyj przeciążenia, przekazując `true` do ignorowania węzłów podrzędnych.  
  
> [!NOTE]
>  Stan elementu <xref:System.Windows.Forms.TreeNode> jest trwały. Na przykład jeśli następny poziom węzłów podrzędnych nie został wcześniej zwinięty, po <xref:System.Windows.Forms.TreeNode.Expand%2A> wywołaniu metody węzły podrzędne są wyświetlane w ich poprzednio rozwiniętym stanie.  
  
   
  
## Examples  
 Poniższy przykład kodu przełącza zaznaczony węzeł po kliknięciu przycisku. Jeśli wybrany węzeł jest zwinięty, jest rozwinięty, jeśli jest rozwinięty przez wywołanie <xref:System.Windows.Forms.TreeNode.Expand%2A> metody, jest zwinięty przez <xref:System.Windows.Forms.TreeNode.Collapse%2A> wywołanie metody. Ten przykład <xref:System.Windows.Forms.Form> wymaga, aby był <xref:System.Windows.Forms.TreeView> z kontrolką, która ma co najmniej jeden <xref:System.Windows.Forms.TreeNode> z co najmniej jednym elementem <xref:System.Windows.Forms.TreeNode>podrzędnym.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (bool ignoreChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(bool ignoreChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (ignoreChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse(bool ignoreChildren);" />
      <MemberSignature Language="F#" Value="member this.Collapse : bool -&gt; unit" Usage="treeNode.Collapse ignoreChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignoreChildren" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="ignoreChildren"><see langword="true" />pozostawienie węzłów podrzędnych w bieżącym stanie; <see langword="false" /> aby zwinąć węzły podrzędne.</param>
        <summary><see cref="T:System.Windows.Forms.TreeNode" /> Zwija i opcjonalnie zwija swoje elementy podrzędne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, przekazując `true`, gdy chcesz zwinąć węzeł, ale pozostaw węzły podrzędne w ich rozwiniętym stanie. <xref:System.Windows.Forms.TreeNode.Collapse%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera menu skrótów skojarzone z tym węzłem drzewa.</summary>
        <value><see cref="T:System.Windows.Forms.ContextMenu" /> Jest skojarzony z węzłem drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Preferowany sposób kojarzenia menu skrótów z węzłem drzewa jest z <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> właściwością.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia menu skrótów skojarzone z tym węzłem drzewa.</summary>
        <value><see cref="T:System.Windows.Forms.ContextMenuStrip" /> Skojarzone z węzłem drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menu skrótów jest wyświetlane, gdy użytkownik kliknie prawym przyciskiem myszy węzeł drzewa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Deserialize (serializationInfo, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Opisuje .<see cref="T:System.Windows.Forms.TreeNode" /></param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Wskazuje stan strumienia podczas deserializacji.</param>
        <summary>Ładuje stan <see cref="T:System.Windows.Forms.TreeNode" /> z określonego <see cref="T:System.Runtime.Serialization.SerializationInfo" />elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit(bool cancel);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : bool -&gt; unit" Usage="treeNode.EndEdit cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel"><see langword="true" />Jeśli edytowanie tekstu etykiety węzła drzewa zostało anulowane bez zapisywania; w przeciwnym razie. <see langword="false" /></param>
        <summary>Zamyka Edytowanie etykiety węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu umożliwia użytkownikowi edytowanie węzłów drzewa niegłównych przy użyciu <xref:System.Windows.Forms.ContextMenu>. Gdy użytkownik kliknie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> na tej pozycji jest określana i przechowywana w zmiennej o nazwie. `mySelectedNode` Jeśli wybrano węzeł drzewa niegłówny, jest on umieszczany w stanie edytowalnym, umożliwiając użytkownikowi edytowanie etykiety węzła. Gdy użytkownik zatrzyma Edytowanie etykiety węzła drzewa, nowy tekst etykiety zostanie oszacowany i zapisany. W tym przykładzie kilka znaków jest traktowanych jako nieprawidłowe w tekście etykiety. Jeśli jeden z nieprawidłowych znaków znajduje się w ciągu etykiety lub ciąg jest pusty, użytkownik zostanie powiadomiony o błędzie i etykieta zostanie zwrócona do poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : unit -&gt; unit" Usage="treeNode.EnsureVisible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia, że węzeł drzewa jest widoczny, rozwijając węzły drzewa i przewijając kontrolkę widok drzewa stosownie do potrzeb.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy metoda jest wywoływana, drzewo jest rozwijane i przewijane, aby upewnić się, że bieżący węzeł drzewa jest widoczny <xref:System.Windows.Forms.TreeView>w. <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A> Ta metoda jest przydatna, jeśli zaznaczysz węzeł drzewa w kodzie na podstawie określonych kryteriów. Wywołanie tej metody po wybraniu węzła spowoduje, że użytkownik będzie widział i współpracując z wybranym węzłem.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=nameWithType> Jeśli właściwość jest ustawiona na wartość, która jest większa niż wysokość kontrolki widoku drzewa, wywołanie tej metody ma nieoczekiwane wyniki.  
  
   
  
## Examples  
 Poniższy przykład kodu przesuwa ostatni podrzędny węzeł drzewa ostatniego węzła drzewa głównego do widoku w widoku drzewa, gdy przycisk zostanie kliknięty. Ten przykład wymaga, aby <xref:System.Windows.Forms.TreeView> masz kontrolkę <xref:System.Windows.Forms.Form> zawierającą kolekcję <xref:System.Windows.Forms.TreeNode> obiektów i <xref:System.Windows.Forms.Button>. Powinna być wystarczająca liczba węzłów drzewa, aby nie były widoczne w formancie widoku drzewa.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozwija węzeł drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda rozwija bieżącą <xref:System.Windows.Forms.TreeNode> wartość w dół do następnego poziomu węzłów. <xref:System.Windows.Forms.TreeNode.Expand%2A>  
  
> [!NOTE]
>  Stan elementu <xref:System.Windows.Forms.TreeNode> jest trwały. Na przykład jeśli następny poziom węzłów podrzędnych nie został wcześniej zwinięty, po <xref:System.Windows.Forms.TreeNode.Expand%2A> wywołaniu metody węzły podrzędne są wyświetlane w ich poprzednio rozwiniętym stanie.  
  
   
  
## Examples  
 Poniższy przykład kodu przełącza zaznaczony węzeł po kliknięciu przycisku. Jeśli wybrany węzeł jest zwinięty, jest rozwinięty, jeśli jest rozwinięty przez wywołanie <xref:System.Windows.Forms.TreeNode.Expand%2A> metody, jest zwinięty przez <xref:System.Windows.Forms.TreeNode.Collapse%2A> wywołanie metody. Ten przykład <xref:System.Windows.Forms.Form> wymaga, aby był <xref:System.Windows.Forms.TreeView> z kontrolką, która ma co najmniej jeden <xref:System.Windows.Forms.TreeNode> z co najmniej jednym elementem <xref:System.Windows.Forms.TreeNode>podrzędnym.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozwija wszystkie podrzędne węzły drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda rozszerza wszystkie podrzędne węzły drzewa przypisane <xref:System.Windows.Forms.TreeNode.Nodes%2A> do kolekcji. <xref:System.Windows.Forms.TreeNode.ExpandAll%2A>  
  
> [!NOTE]
>  Stan elementu <xref:System.Windows.Forms.TreeNode> jest trwały. Na przykład jeśli następny poziom węzłów podrzędnych nie został wcześniej zwinięty, po <xref:System.Windows.Forms.TreeNode.Expand%2A> wywołaniu metody węzły podrzędne są wyświetlane w ich poprzednio rozwiniętym stanie.  
  
   
  
## Examples  
 Poniższy przykład kodu rozszerza wszystkie węzły <xref:System.Windows.Forms.TreeView> drzewa w kontrolce <xref:System.Windows.Forms.TreeNode.FirstNode%2A> , <xref:System.Windows.Forms.CheckBox> gdy jest zaznaczone, i <xref:System.Windows.Forms.CheckBox> zwija po wyczyszczeniu. Ten przykład wymaga <xref:System.Windows.Forms.CheckBox>, aby miało <xref:System.Windows.Forms.Form> obiekt z <xref:System.Windows.Forms.TreeNodeCollection> i <xref:System.Windows.Forms.TreeView> formant z kilkoma <xref:System.Windows.Forms.TreeNode> obiektami (najlepiej z co najmniej trzema poziomami).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="FirstNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode FirstNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode FirstNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FirstNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ FirstNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FirstNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pierwszy podrzędny węzeł drzewa w kolekcji węzłów drzewa.</summary>
        <value>Pierwszy element podrzędny <see cref="T:System.Windows.Forms.TreeNode" /> <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest pierwszym elementem podrzędnym <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> przechowywanym we <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwości bieżącego węzła drzewa. <xref:System.Windows.Forms.TreeNode.FirstNode%2A> Jeśli nie <xref:System.Windows.Forms.TreeNode.FirstNode%2A> `null`ma węzła drzewa bez elementu podrzędnego, właściwość zwraca. <xref:System.Windows.Forms.TreeNode>  
  
   
  
## Examples  
 Poniższy przykład kodu wybiera odpowiednie <xref:System.Windows.Forms.TreeNode> po ustaleniu, <xref:System.Windows.Forms.TreeNode> czy zakończono przekazywanie i który <xref:System.Windows.Forms.TreeNode> ma zostać wybrany. Ten przykład wymaga, aby użytkownik miał <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> kontrolkę <xref:System.Windows.Forms.TreeNodeCollection> , która zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymagane jest również posiadanie <xref:System.Windows.Forms.ComboBox> następujących elementów: "Previous", "PreviousVisible", "Next", "NextVisible", "First" i "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu węzła drzewa.</summary>
        <value>Pierwszy plan <see cref="T:System.Drawing.Color" /> węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `null`używana jest<xref:System.Windows.Forms.Control.ForeColor%2A> wartość<xref:System.Windows.Forms.TreeView> właściwości kontrolki, do której przypisany jest węzeł drzewa. <xref:System.Drawing.Color>  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy węzeł drzewa głównego do przypisywania podrzędnych węzłów drzewa. Podrzędny węzeł drzewa dla `Customer` każdego obiektu <xref:System.Collections.ArrayList> w obiekcie jest dodawany do węzła drzewa głównego oraz podrzędny węzeł drzewa dla `Customer` każdego `Order` obiektu przypisanego do obiektu. Obiekt jest przypisany <xref:System.Windows.Forms.TreeNode.Tag%2A> do właściwości, a węzły drzewa reprezentujące `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstem. `Customer` `Customer` Ten przykład wymaga zdefiniowania <xref:System.Windows.Forms.TreeView> obiektu i `Order` kontrolki <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> o nazwie `customerArray` , która zawiera `Customer` obiekty.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TreeNode FromHandle(class System.Windows.Forms.TreeView tree, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (tree As TreeView, handle As IntPtr) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::TreeNode ^ FromHandle(System::Windows::Forms::TreeView ^ tree, IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : System.Windows.Forms.TreeView * nativeint -&gt; System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FromHandle (tree, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tree" Type="System.Windows.Forms.TreeView" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tree"><see cref="T:System.Windows.Forms.TreeView" /> Zawiera węzeł drzewa.</param>
        <param name="handle">Uchwyt węzła drzewa.</param>
        <summary>Zwraca węzeł drzewa z określonym dojściem i przypisany do określonej kontrolki widoku drzewa.</summary>
        <returns>Reprezentuje węzeł drzewa przypisany do określonej <see cref="T:System.Windows.Forms.TreeView" /> kontrolki z określonym dojściem. <see cref="T:System.Windows.Forms.TreeNode" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy węzeł zostanie dodany do <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=nameWithType> kolekcji <xref:System.Windows.Forms.TreeView> , kontrolka wysyła powiadomienie NM_CUSTOMDRAW przed udostępnieniem uchwytu węzła. W przypadku zastąpienia <xref:System.Windows.Forms.Control.WndProc%2A> metody <xref:System.Windows.Forms.TreeView> w celu zapewnienia niestandardowego rysowania w odpowiedzi na to powiadomienie należy zawsze sprawdzić wartość zwracaną tej metody, aby uzyskać `null` dostęp do węzła.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera <xref:System.Windows.Forms.TreeNode> , który został zwinięty i tworzy jego kopię <xref:System.Windows.Forms.TreeNode.Handle%2A> przy użyciu właściwości. Oryginał <xref:System.Windows.Forms.TreeNode> zostanie usunięty <xref:System.Windows.Forms.TreeNodeCollection>z, a kopia zostanie dodana do kolekcji. Ten przykład wymaga, aby znajdował <xref:System.Windows.Forms.Form> się <xref:System.Windows.Forms.TreeView> z kontrolką. <xref:System.Windows.Forms.TreeView> Kontrolka powinna mieć dwa lub więcej węzłów głównych, z których każdy ma co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.TreeView" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.Windows.Forms.TreeNode.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę z węzła głównego drzewa do bieżącego węzła drzewa.</summary>
        <value>Ścieżka z węzła drzewa głównego do bieżącego węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżka składa się z etykiet wszystkich węzłów drzewa, które muszą zostać przechodzące, aby osiągnąć ten węzeł drzewa, rozpoczynając od węzła głównego drzewa. Etykiety węzłów są oddzielane znakiem ogranicznika określonym we <xref:System.Windows.Forms.TreeView.PathSeparator%2A> właściwości <xref:System.Windows.Forms.TreeView> kontrolki zawierającej ten węzeł. Na przykład, jeśli znak ogranicznika kontrolki widoku drzewa o nazwie "Location" jest ustawiony na znak ukośnika odwrotnego (\\) <xref:System.Windows.Forms.TreeNode.FullPath%2A> , wartość właściwości to "Country\Region\State".  
  
   
  
## Examples  
 Poniższy przykład kodu <xref:System.Windows.Forms.TreeView.PathSeparator%2A> ustawia właściwość <xref:System.Windows.Forms.TreeView> a i wyświetla liczbę podrzędnych węzłów drzewa <xref:System.Windows.Forms.TreeNodeCollection> , które są <xref:System.Windows.Forms.TreeView.SelectedNode%2A>zawarte w. Zostanie również wyświetlony procent podrzędnego węzła drzewa do sumy węzłów drzewa w kontrolce widok drzewa. Ten przykład wymaga <xref:System.Windows.Forms.Button>, aby miało <xref:System.Windows.Forms.Form> obiekt z <xref:System.Windows.Forms.TreeNodeCollection> i <xref:System.Windows.Forms.TreeView> formant z kilkoma <xref:System.Windows.Forms.TreeNode> obiektami (najlepiej z co najmniej trzema poziomami).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Węzeł nie jest zawarty w <see cref="T:System.Windows.Forms.TreeView" />.</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberSignature Language="F#" Value="member this.GetNodeCount : bool -&gt; int" Usage="treeNode.GetNodeCount includeSubTrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees"><see langword="true" />Jeśli wynikowa liczba obejmuje wszystkie węzły drzewa pośrednio pośrednim w tym węźle drzewa; w przeciwnym razie. <see langword="false" /></param>
        <summary>Zwraca liczbę węzłów drzewa podrzędnego.</summary>
        <returns>Liczba podrzędnych węzłów drzewa przypisanych do <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu <xref:System.Windows.Forms.TreeView.PathSeparator%2A> ustawia właściwość <xref:System.Windows.Forms.TreeView> a i wyświetla liczbę podrzędnych węzłów drzewa <xref:System.Windows.Forms.TreeNodeCollection> , które są <xref:System.Windows.Forms.TreeView.SelectedNode%2A>zawarte w. Zostanie również wyświetlony procent podrzędnego węzła drzewa do sumy węzłów drzewa w kontrolce widok drzewa. Ten przykład wymaga <xref:System.Windows.Forms.Button>, aby miało <xref:System.Windows.Forms.Form> obiekt z <xref:System.Windows.Forms.TreeNodeCollection> i <xref:System.Windows.Forms.TreeView> formant z kilkoma <xref:System.Windows.Forms.TreeNode> obiektami (najlepiej z co najmniej trzema poziomami).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Nodes" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.TreeNode.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera uchwyt węzła drzewa.</summary>
        <value>Uchwyt węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli dojście nie jest już utworzone, gdy <xref:System.Windows.Forms.TreeNode.Handle%2A> istnieje odwołanie do właściwości, zostanie ona utworzona.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera <xref:System.Windows.Forms.TreeNode> , który został zwinięty i tworzy jego kopię <xref:System.Windows.Forms.TreeNode.Handle%2A> przy użyciu właściwości. Oryginał <xref:System.Windows.Forms.TreeNode> zostanie usunięty <xref:System.Windows.Forms.TreeNodeCollection>z, a kopia zostanie dodana do kolekcji. Ten przykład wymaga, aby znajdował <xref:System.Windows.Forms.Form> się <xref:System.Windows.Forms.TreeView> z kontrolką. <xref:System.Windows.Forms.TreeView> Kontrolka powinna mieć dwa lub więcej węzłów głównych, z których każdy ma co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość indeksu listy obrazów wyświetlanego, gdy węzeł drzewa jest w stanie niezaznaczonym.</summary>
        <value>Wartość indeksu od zera, która reprezentuje położenie obrazu w przypisanej <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość jest wartością <xref:System.Drawing.Image> indeksu <xref:System.Windows.Forms.ImageList> przechowywaną<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> we właściwości przypisanej do. <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>  
  
> [!NOTE]
>  Wartość <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> domyślna właściwości jest taka sama <xref:System.Windows.Forms.TreeView.ImageIndex%2A> jak Właściwość <xref:System.Windows.Forms.TreeView> kontrolki, do której <xref:System.Windows.Forms.TreeNode> jest przypisany.  
  
 Właściwości <xref:System.Windows.Forms.TreeNode.ImageKey%2A> i<xref:System.Windows.Forms.TreeNode.ImageIndex%2A> wzajemnie się wykluczają. w związku z tym, jeśli jedna właściwość jest ustawiona, drugi zostanie zignorowany. W przypadku ustawienia <xref:System.Windows.Forms.TreeNode.ImageKey%2A> właściwości <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> właściwość zostanie automatycznie ustawiona na wartość-1. Alternatywnie, jeśli ustawisz <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> jest automatycznie ustawiany pusty ciąg ("").  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i przypisuje <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView> do kontrolki i wypełnia <xref:System.Windows.Forms.TreeView> formant z <xref:System.Windows.Forms.TreeNode> obiektami. Węzły drzewa są przypisane obrazy z <xref:System.Windows.Forms.ImageList> tego, który jest wyświetlany, gdy węzeł drzewa jest w wybranym lub niezaznaczonym stanie. Ten <xref:System.Windows.Forms.Form> przykład wymaga <xref:System.Collections.ArrayList> <xref:System.Windows.Forms.TreeView>, aby zawierał `Order` `Customer` , i zawierający obiekty, które zawierają obiekty. Wymaga również, aby `Customer` obiekty i `Order` zostały zdefiniowane.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz dla obrazu skojarzonego z tym węzłem drzewa, gdy węzeł jest w stanie niezaznaczonym.</summary>
        <value>Klucz obrazu skojarzonego z tym węzłem drzewa, gdy węzeł jest w stanie niezaznaczonym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz obrazu zwrócony przez tę właściwość jest zawarty we <xref:System.Windows.Forms.TreeView.ImageList%2A> właściwości zawierającej <xref:System.Windows.Forms.TreeView> kontrolki.  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> Nie uwzględnia wielkości liter.  
  
 Właściwości <xref:System.Windows.Forms.TreeNode.ImageKey%2A> i<xref:System.Windows.Forms.TreeNode.ImageIndex%2A> wykluczają się wzajemnie. Jeśli jedna właściwość jest ustawiona, drugi zostanie zignorowany. W przypadku ustawienia <xref:System.Windows.Forms.TreeNode.ImageKey%2A> właściwości <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> właściwość zostanie automatycznie ustawiona na wartość-1. Alternatywnie, jeśli ustawisz <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> jest automatycznie ustawiany pusty ciąg ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.TreeNode.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pozycję węzła drzewa w kolekcji węzłów drzewa.</summary>
        <value>Wartość indeksu od zera, która reprezentuje pozycję węzła drzewa w <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Forms.TreeNode.Text%2A> Poniższy przykład kodu wyświetla wartości <xref:System.Windows.Forms.TreeNode> właściwości i <xref:System.Windows.Forms.TreeNode.Index%2A> reprezentowane przez <xref:System.Windows.Forms.TreeNode.Parent%2A> Właściwość <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>. Ten przykład wymaga, aby znajdował <xref:System.Windows.Forms.Form> się <xref:System.Windows.Forms.TreeView> z kontrolką. <xref:System.Windows.Forms.TreeView> Musi mieć co najmniej dwa węzły główne, z których każdy ma co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditing">
      <MemberSignature Language="C#" Value="public bool IsEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditing : bool" Usage="System.Windows.Forms.TreeNode.IsEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł drzewa jest w stanie edytowalnym.</summary>
        <value><see langword="true" />Jeśli węzeł drzewa jest w stanie edytowalnym; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu umożliwia użytkownikowi edytowanie węzłów drzewa niegłównych przy użyciu <xref:System.Windows.Forms.ContextMenu>. Gdy użytkownik kliknie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> na tej pozycji jest określana i przechowywana w zmiennej o nazwie. `mySelectedNode` Jeśli wybrano węzeł drzewa niegłówny, jest on umieszczany w stanie edytowalnym, umożliwiając użytkownikowi edytowanie etykiety węzła. Gdy użytkownik zatrzyma Edytowanie etykiety węzła drzewa, nowy tekst etykiety zostanie oszacowany i zapisany. W tym przykładzie kilka znaków jest traktowanych jako nieprawidłowe w tekście etykiety. Jeśli jeden z nieprawidłowych znaków znajduje się w ciągu etykiety lub ciąg jest pusty, użytkownik zostanie powiadomiony o błędzie i etykieta zostanie zwrócona do poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExpanded : bool" Usage="System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł drzewa jest w stanie rozwiniętym.</summary>
        <value><see langword="true" />Jeśli węzeł drzewa jest w stanie rozwiniętym; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przełącza zaznaczony węzeł po kliknięciu przycisku. Jeśli wybrany węzeł jest zwinięty, jest rozwinięty, jeśli jest rozwinięty przez wywołanie <xref:System.Windows.Forms.TreeNode.Expand%2A> metody, jest zwinięty przez <xref:System.Windows.Forms.TreeNode.Collapse%2A> wywołanie metody. Ten przykład <xref:System.Windows.Forms.Form> wymaga, aby był <xref:System.Windows.Forms.TreeView> z kontrolką, która ma co najmniej jeden <xref:System.Windows.Forms.TreeNode> z co najmniej jednym elementem <xref:System.Windows.Forms.TreeNode>podrzędnym.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Windows.Forms.TreeNode.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł drzewa jest w wybranym stanie.</summary>
        <value><see langword="true" />Jeśli węzeł drzewa jest w wybranym stanie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wybiera odpowiednie <xref:System.Windows.Forms.TreeNode> po ustaleniu, <xref:System.Windows.Forms.TreeNode> czy zakończono przekazywanie i który <xref:System.Windows.Forms.TreeNode> ma zostać wybrany. Ten przykład <xref:System.Windows.Forms.Form> wymaga, aby mieć <xref:System.Windows.Forms.TreeView> kontrolkę z kontrolką <xref:System.Windows.Forms.TreeNodeCollection> zawierającą kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymagane jest również posiadanie <xref:System.Windows.Forms.ComboBox> następujących elementów: "Previous", "PreviousVisible", "Next", "NextVisible", "First" i "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.Forms.TreeNode.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł drzewa jest widoczny, czy częściowo widoczny.</summary>
        <value><see langword="true" />Jeśli węzeł drzewa jest widoczny lub częściowo widoczny; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przesuwa ostatni podrzędny węzeł drzewa ostatniego węzła drzewa głównego do widoku w widoku drzewa, gdy przycisk zostanie kliknięty. Ten przykład wymaga, aby <xref:System.Windows.Forms.TreeView> masz kontrolkę <xref:System.Windows.Forms.Form> zawierającą kolekcję <xref:System.Windows.Forms.TreeNode> obiektów i <xref:System.Windows.Forms.Button>. Powinna być wystarczająca liczba węzłów drzewa, aby nie były widoczne w formancie widoku drzewa.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="LastNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode LastNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode LastNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.LastNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ LastNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.LastNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ostatni podrzędny węzeł drzewa.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> Reprezentuje ostatni podrzędny węzeł drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest ostatnim elementem podrzędnym <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> przechowywanym we <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwości bieżącego węzła drzewa. <xref:System.Windows.Forms.TreeNode.LastNode%2A> Jeśli nie <xref:System.Windows.Forms.TreeNode.LastNode%2A> `null`ma węzła drzewa bez elementu podrzędnego, właściwość zwraca. <xref:System.Windows.Forms.TreeNode>  
  
   
  
## Examples  
 Poniższy przykład kodu wybiera odpowiednie <xref:System.Windows.Forms.TreeNode> po ustaleniu, <xref:System.Windows.Forms.TreeNode> czy zakończono przekazywanie i który <xref:System.Windows.Forms.TreeNode> ma zostać wybrany. Ten przykład wymaga, aby użytkownik miał <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> kontrolkę <xref:System.Windows.Forms.TreeNodeCollection> , która zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymagane jest również posiadanie <xref:System.Windows.Forms.ComboBox> następujących elementów: "Previous", "PreviousVisible", "Next", "NextVisible", "First" i "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : int" Usage="System.Windows.Forms.TreeNode.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera od zera głębokość węzła drzewa w <see cref="T:System.Windows.Forms.TreeView" /> kontrolce.</summary>
        <value>Głębokość od zera dla węzła drzewa w <see cref="T:System.Windows.Forms.TreeView" /> kontrolce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Level%2A> Dla właściwości węzeł główny jest uznawany za pierwszy poziom zagnieżdżenia i zwraca 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.TreeNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę węzła drzewa.</summary>
        <value><see cref="T:System.String" /> Reprezentujący nazwę węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A jest również kluczem węzła, gdy <xref:System.Windows.Forms.TreeNodeCollection>węzeł jest częścią. <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNode.Name%2A> Jeśli węzeł nie ma nazwy, <xref:System.Windows.Forms.TreeNode.Name%2A> zwraca pusty ciąg ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera następny równorzędny węzeł drzewa.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> który reprezentuje następny węzeł drzewa elementów równorzędnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNodeCollection> <xref:System.Windows.Forms.TreeNode.Nodes%2A> <xref:System.Windows.Forms.TreeNode>Jest to następny element równorzędny <xref:System.Windows.Forms.TreeNode> przechowywany we właściwości elementu nadrzędnego węzła drzewa. <xref:System.Windows.Forms.TreeNode.NextNode%2A> Jeśli nie ma następnego węzła drzewa, <xref:System.Windows.Forms.TreeNode.NextNode%2A> Właściwość zwraca. `null`  
  
   
  
## Examples  
 Poniższy przykład kodu wybiera odpowiednie <xref:System.Windows.Forms.TreeNode> po ustaleniu, <xref:System.Windows.Forms.TreeNode> czy zakończono przekazywanie i który <xref:System.Windows.Forms.TreeNode> ma zostać wybrany. Ten przykład wymaga, aby użytkownik miał <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> kontrolkę <xref:System.Windows.Forms.TreeNodeCollection> , która zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymagane jest również posiadanie <xref:System.Windows.Forms.ComboBox> następujących elementów: "Previous", "PreviousVisible", "Next", "NextVisible", "First" i "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="NextVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera następny widoczny węzeł drzewa.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> Reprezentujący następny widoczny węzeł drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> Może to być element podrzędny, równorzędny lub węzeł drzewa z innej gałęzi. Jeśli nie ma następnego węzła drzewa, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> Właściwość zwraca. `null`  
  
   
  
## Examples  
 Poniższy przykład kodu wybiera odpowiednie <xref:System.Windows.Forms.TreeNode> po ustaleniu, <xref:System.Windows.Forms.TreeNode> czy zakończono przekazywanie i który <xref:System.Windows.Forms.TreeNode> ma zostać wybrany. Ten przykład wymaga, aby użytkownik miał <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> kontrolkę <xref:System.Windows.Forms.TreeNodeCollection> , która zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymagane jest również posiadanie <xref:System.Windows.Forms.ComboBox> następujących elementów: "Previous", "PreviousVisible", "Next", "NextVisible", "First" i "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="NodeFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font NodeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font NodeFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NodeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ NodeFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NodeFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.TreeNode.NodeFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę używaną do wyświetlania tekstu na etykiecie węzła drzewa.</summary>
        <value><see cref="T:System.Drawing.Font" /> Służy do wyświetlania tekstu na etykiecie węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `null`używana jest<xref:System.Windows.Forms.Control.Font%2A> wartość<xref:System.Windows.Forms.TreeView> właściwości kontrolki, do której jest dołączony ten węzeł. <xref:System.Drawing.Font>  
  
> [!NOTE]
>  Jeśli czcionka węzła jest większa niż <xref:System.Windows.Forms.Control.Font%2A> wartość właściwości ustawiona <xref:System.Windows.Forms.TreeView> w kontrolce, tekst etykiety węzła drzewa jest obcinany.  
  
   
  
## Examples  
 Poniższy przykład kodu zmienia rozmiar <xref:System.Windows.Forms.TreeNode.NodeFont%2A> do określonego rozmiaru i dostosowuje <xref:System.Windows.Forms.TreeView.ItemHeight%2A> formant nadrzędny <xref:System.Windows.Forms.TreeView> węzła drzewa. Ten przykład wymaga, aby użytkownik miał <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> kontrolkę zawierającą kolekcję <xref:System.Windows.Forms.TreeNode> obiektów, <xref:System.Windows.Forms.ComboBox> która zawiera rozmiary czcionek.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Windows.Forms.TreeNodeCollection" Usage="System.Windows.Forms.TreeNode.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Forms.TreeNode" /> obiektów przypisanych do bieżącego węzła drzewa.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNodeCollection" /> Reprezentuje węzły drzewa przypisane do bieżącego węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość może zawierać kolekcję innych <xref:System.Windows.Forms.TreeNode> obiektów. <xref:System.Windows.Forms.TreeNode.Nodes%2A> Każdy węzeł drzewa w kolekcji ma <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwość, która może zawierać własną. <xref:System.Windows.Forms.TreeNodeCollection> Zagnieżdżanie węzłów drzewa może utrudniać nawigowanie po strukturze drzewa. <xref:System.Windows.Forms.TreeNode.FullPath%2A> Właściwość ułatwia ustalenie lokalizacji w drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa wybrany węzeł drzewa z jednego <xref:System.Windows.Forms.TreeView> i dodaje go do innego, jeśli obie kolekcje węzłów drzewa nie są tylko do odczytu. <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> Gdy jest kliknięty, jest<xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> usuwany z jednego przy użyciu metody i dodawany do drugiego przy użyciu metody. <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Button> W <xref:System.Windows.Forms.TreeView> `treeView1` tymprzykładzie`treeView2`wymagane są dwa kontrolki o nazwach i i a. <xref:System.Windows.Forms.Form>  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Parent { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera węzeł drzewa nadrzędnego bieżącego węzła drzewa.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> Reprezentuje element nadrzędny bieżącego węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli węzeł drzewa znajduje się na poziomie głównym, <xref:System.Windows.Forms.TreeNode.Parent%2A> Właściwość zwraca. `null`  
  
   
  
## Examples  
 <xref:System.Windows.Forms.TreeNode.Text%2A> Poniższy przykład kodu wyświetla wartości <xref:System.Windows.Forms.TreeNode> właściwości i <xref:System.Windows.Forms.TreeNode.Index%2A> reprezentowane przez <xref:System.Windows.Forms.TreeNode.Parent%2A> Właściwość <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>. Ten przykład wymaga, aby znajdował <xref:System.Windows.Forms.Form> się <xref:System.Windows.Forms.TreeView> z kontrolką. <xref:System.Windows.Forms.TreeView> Musi mieć co najmniej dwa węzły główne, z których każdy ma co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poprzedni węzeł drzewa elementów równorzędnych.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> Reprezentujący poprzedni węzeł drzewa elementów równorzędnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNodeCollection> <xref:System.Windows.Forms.TreeNode.Nodes%2A> <xref:System.Windows.Forms.TreeNode>Jest to poprzedni element równorzędny <xref:System.Windows.Forms.TreeNode> przechowywany we właściwości elementu nadrzędnego węzła drzewa. <xref:System.Windows.Forms.TreeNode.PrevNode%2A> Jeśli nie ma poprzedniego węzła drzewa, <xref:System.Windows.Forms.TreeNode.PrevNode%2A> Właściwość zwraca. `null`  
  
   
  
## Examples  
 Poniższy przykład kodu wybiera odpowiednie <xref:System.Windows.Forms.TreeNode> po ustaleniu, <xref:System.Windows.Forms.TreeNode> czy zakończono przekazywanie i który <xref:System.Windows.Forms.TreeNode> ma zostać wybrany. Ten przykład wymaga, aby użytkownik miał <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> kontrolkę <xref:System.Windows.Forms.TreeNodeCollection> , która zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymagane jest również posiadanie <xref:System.Windows.Forms.ComboBox> następujących elementów: "Previous", "PreviousVisible", "Next", "NextVisible", "First" i "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="PrevVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poprzedni widoczny węzeł drzewa.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> Reprezentujący poprzedni widoczny węzeł drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> Może to być element podrzędny, równorzędny lub węzeł drzewa z innej gałęzi. Jeśli nie ma poprzedniego węzła drzewa, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> Właściwość zwraca. `null`  
  
   
  
## Examples  
 Poniższy przykład kodu wybiera odpowiednie <xref:System.Windows.Forms.TreeNode> po ustaleniu, <xref:System.Windows.Forms.TreeNode> czy zakończono przekazywanie i który <xref:System.Windows.Forms.TreeNode> ma zostać wybrany. Ten przykład wymaga, aby użytkownik miał <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> kontrolkę <xref:System.Windows.Forms.TreeNodeCollection> , która zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymagane jest również posiadanie <xref:System.Windows.Forms.ComboBox> następujących elementów: "Previous", "PreviousVisible", "Next", "NextVisible", "First" i "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="treeNode.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa bieżący węzeł drzewa z kontrolki widoku drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy metoda jest wywoływana, węzeł drzewa i wszystkie podrzędne węzły drzewa, które są przypisane <xref:System.Windows.Forms.TreeNode>do <xref:System.Windows.Forms.TreeView>, są usuwane z. <xref:System.Windows.Forms.TreeNode.Remove%2A> Usunięte węzły podrzędne zostaną usunięte z programu, <xref:System.Windows.Forms.TreeView> ale są nadal dołączone do tego węzła drzewa.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa <xref:System.Windows.Forms.TreeNode> gdy użytkownik kliknie prawym przyciskiem myszy nad nim i przełączy go z rozwinięte na zwinięte, gdy użytkownik kliknie kółko myszy. Ten przykład wymaga, aby znajdował <xref:System.Windows.Forms.Form> się <xref:System.Windows.Forms.TreeView> z kontrolką. <xref:System.Windows.Forms.TreeView> Powinien mieć dwa lub więcej węzłów drzewa głównego, z których każdy ma co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość indeksu listy obrazów wyświetlanego, gdy węzeł drzewa jest w wybranym stanie.</summary>
        <value>Wartość indeksu liczony od zera, która reprezentuje położenie obrazu w <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość jest wartością <xref:System.Drawing.Image> indeksu <xref:System.Windows.Forms.ImageList> przechowywaną<xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> we właściwości przypisanej do. <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A>  
  
> [!NOTE]
>  Wartość <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> domyślna właściwości jest taka sama <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> jak Właściwość <xref:System.Windows.Forms.TreeView> kontrolki, do której <xref:System.Windows.Forms.TreeNode> jest przypisany.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i przypisuje <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView> do kontrolki i wypełnia <xref:System.Windows.Forms.TreeView> formant z <xref:System.Windows.Forms.TreeNode> obiektami. Węzły drzewa są przypisane obrazy z <xref:System.Windows.Forms.ImageList> tego, który jest wyświetlany, gdy węzeł drzewa jest w wybranym lub niezaznaczonym stanie. Ten przykład wymaga <xref:System.Windows.Forms.Form> , aby <xref:System.Windows.Forms.TreeView>zawierał, i <xref:System.Collections.ArrayList> zawierający `Customer` obiekty, które zawierają `Order` obiekty. Wymaga również, aby `Customer` obiekty i `Order` zostały zdefiniowane.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz obrazu wyświetlany w węźle drzewa, gdy znajduje się on w wybranym stanie.</summary>
        <value>Klucz obrazu wyświetlany, gdy węzeł drzewa jest w stanie zaznaczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz obrazu zwrócony przez tę właściwość jest zawarty we <xref:System.Windows.Forms.TreeView.ImageList%2A> właściwości kontrolki nadrzędnej. <xref:System.Windows.Forms.TreeView>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Serialize (si, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="si"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Opisuje .<see cref="T:System.Windows.Forms.TreeNode" /></param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Wskazuje stan strumienia podczas serializacji</param>
        <summary>Zapisuje stan <see cref="T:System.Windows.Forms.TreeNode" /> do określonego <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">w przypadku usług serializacji. Skojarzone Wyliczenie:<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks obrazu, który jest używany do <see cref="T:System.Windows.Forms.TreeNode" /> wskazania stanu elementu, w którym <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> Właściwość Parent <see cref="T:System.Windows.Forms.TreeView" /> <see langword="false" />ma ustawioną wartość.</summary>
        <value>Indeks obrazu, który jest używany do wskazania stanu <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indeks obrazu, który jest zwracany przez tę właściwość, jest zawarty we <xref:System.Windows.Forms.TreeView.StateImageList%2A> właściwości kontrolki nadrzędnej. <xref:System.Windows.Forms.TreeView>  
  
 Jeśli element nadrzędny <xref:System.Windows.Forms.TreeView> ma włączone pola wyboru <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> , jest ignorowany, a węzeł będzie wyświetlał pierwszy <xref:System.Windows.Forms.TreeView.StateImageList%2A> lub drugi obraz w zestawie na obiekcie nadrzędnym <xref:System.Windows.Forms.TreeView> , aby wskazać odpowiednio niesprawdzony lub sprawdzony stan. Przełączanie właściwości nie ma wpływu na wartość <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>. <xref:System.Windows.Forms.TreeNode.Checked%2A>  
  
 Wartość <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> zwraca-1, gdy nie jest ustawiona. Właściwości <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> i<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> są wzajemnie wykluczające się, co oznacza, że jest ono ustawione, drugi jest ignorowany. W przypadku ustawienia <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> właściwości <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> właściwość zostanie automatycznie ustawiona na wartość-1. Alternatywnie, jeśli ustawisz <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> jest automatycznie ustawiany pusty ciąg ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony indeks jest mniejszy niż-1 lub większy niż 14.</exception>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageKey" />
      </Docs>
    </Member>
    <Member MemberName="StateImageKey">
      <MemberSignature Language="C#" Value="public string StateImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz obrazu, który jest używany do <see cref="T:System.Windows.Forms.TreeNode" /> wskazania stanu elementu, w którym <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> Właściwość Parent <see cref="T:System.Windows.Forms.TreeView" /> <see langword="false" />ma ustawioną wartość.</summary>
        <value>Klucz obrazu, który jest używany do wskazania stanu <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz obrazu, który jest zwracany przez tę właściwość, jest zawarty we <xref:System.Windows.Forms.TreeView.StateImageList%2A> właściwości kontrolki nadrzędnej. <xref:System.Windows.Forms.TreeView>  
  
 Jeśli element nadrzędny <xref:System.Windows.Forms.TreeView> ma włączone pola wyboru <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> , jest ignorowany, a węzeł będzie wyświetlał pierwszy <xref:System.Windows.Forms.TreeView.StateImageList%2A> lub drugi obraz w zestawie na obiekcie nadrzędnym <xref:System.Windows.Forms.TreeView> , aby wskazać odpowiednio niesprawdzony lub sprawdzony stan. Przełączanie właściwości nie ma wpływu na wartość <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>. <xref:System.Windows.Forms.TreeNode.Checked%2A>  
  
 Właściwości <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> i<xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> są wzajemnie wykluczające się, co oznacza, że jest ono ustawione, drugi jest ignorowany. W przypadku ustawienia <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> właściwości <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> właściwość zostanie automatycznie ustawiona na wartość-1. Alternatywnie, jeśli ustawisz <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> jest automatycznie ustawiany pusty ciąg (""). Należy ustawić <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> do obrazu z odpowiednim indeksem w zakresie od 0 do 14. Można ustawić <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> na obraz o wartości indeksu większej niż 14 (wyjątek nie zostanie zgłoszony), ale obraz może nie być wyświetlany  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> , który zawiera dane do <see cref="T:System.Windows.Forms.TreeNode" />serializacji.</param>
        <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> , który zawiera informacje o miejscu docelowym tej serializacji.</param>
        <summary>Wypełnia obiekt informacji serializacji danymi wymaganymi do serializacji <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">w przypadku usług serializacji. Skojarzone Wyliczenie:<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.TreeNode.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera dane o węźle drzewa.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane o węźle drzewa. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do <xref:System.Object> tej właściwości można przypisać dowolny typ pochodny. Jeśli ta właściwość jest ustawiana za pomocą projektanta Windows Forms, można przypisać tylko tekst.  
  
> [!CAUTION]
>  <xref:System.Windows.Forms.TreeNode.Clone%2A> Metoda wykonuje skróconą kopię węzła. Jeśli wartość <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwości jest typem referencyjnym, zarówno oryginalna, jak i sklonowana kopia będą wskazywały to samo pojedyncze wystąpienie <xref:System.Windows.Forms.TreeNode.Tag%2A> wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy węzeł drzewa głównego do przypisywania podrzędnych węzłów drzewa. Podrzędny węzeł drzewa dla `Customer` każdego obiektu <xref:System.Collections.ArrayList> w obiekcie jest dodawany do węzła drzewa głównego oraz podrzędny węzeł drzewa dla `Customer` każdego `Order` obiektu przypisanego do obiektu. Obiekt jest przypisany <xref:System.Windows.Forms.TreeNode.Tag%2A> do właściwości, a węzły drzewa reprezentujące `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstem. `Customer` `Customer` Ten przykład wymaga zdefiniowania <xref:System.Windows.Forms.TreeView> obiektu i `Order` kontrolki <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> o nazwie `customerArray` , która zawiera `Customer` obiekty.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany w etykiecie węzła drzewa.</summary>
        <value>Tekst wyświetlany w etykiecie węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maksymalna liczba znaków, jaką <xref:System.Windows.Forms.TreeNode> może wyświetlić to 259. <xref:System.String> Jeśli do tej właściwości przypisano więcej niż 259 znaków, wyświetlane są tylko pierwsze znaki 259.  
  
 Ta właściwość nie może być ustawiona przez użytkownika, jeśli <xref:System.Windows.Forms.TreeView.LabelEdit%2A> Właściwość nadrzędna <xref:System.Windows.Forms.TreeView> ma ustawioną wartość `false`. Alternatywą dla jawnego ustawienia tej właściwości jest utworzenie węzła drzewa przy użyciu jednego z <xref:System.Windows.Forms.TreeNode.%23ctor%2A> konstruktorów, które mają parametr ciągu, który <xref:System.Windows.Forms.TreeNode.Text%2A> reprezentuje właściwość. Etykieta jest wyświetlana obok <xref:System.Windows.Forms.TreeNode> obrazu, jeśli jest wyświetlany.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy węzeł drzewa głównego do przypisywania podrzędnych węzłów drzewa. Podrzędny węzeł drzewa dla `Customer` każdego obiektu <xref:System.Collections.ArrayList> w obiekcie jest dodawany do węzła drzewa głównego oraz podrzędny węzeł drzewa dla `Customer` każdego `Order` obiektu przypisanego do obiektu. Obiekt jest przypisany <xref:System.Windows.Forms.TreeNode.Tag%2A> do właściwości, a węzły drzewa reprezentujące `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstem. `Customer` `Customer` Ten przykład wymaga zdefiniowania <xref:System.Windows.Forms.TreeView> obiektu i `Order` kontrolki <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> o nazwie `customerArray` , która zawiera `Customer` obiekty.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.LabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public void Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Toggle" />
      <MemberSignature Language="VB.NET" Value="Public Sub Toggle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Toggle();" />
      <MemberSignature Language="F#" Value="member this.Toggle : unit -&gt; unit" Usage="treeNode.Toggle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Włącza lub wyłącza węzeł drzewa w stanie rozwiniętym lub zwiniętym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Węzeł drzewa jest przełączany do stanu odpowiadającego jego bieżącemu stanowi — rozwinięty lub zwinięty.  
  
> [!NOTE]
>  Stan elementu <xref:System.Windows.Forms.TreeNode> jest trwały. Na przykład jeśli następny poziom węzłów podrzędnych nie został wcześniej zwinięty, po <xref:System.Windows.Forms.TreeNode.Expand%2A> wywołaniu metody węzły podrzędne są wyświetlane w ich poprzednio rozwiniętym stanie.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa <xref:System.Windows.Forms.TreeNode> gdy użytkownik kliknie prawym przyciskiem myszy nad nim i przełączy go z rozwinięte na zwinięte, gdy użytkownik kliknie kółko myszy. Ten przykład wymaga, aby znajdował <xref:System.Windows.Forms.Form> się <xref:System.Windows.Forms.TreeView> z kontrolką. <xref:System.Windows.Forms.TreeView> Powinien mieć dwa lub więcej węzłów drzewa głównego, z których każdy ma co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany, gdy wskaźnik myszy znajduje się nad elementem <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>Pobiera tekst wyświetlany, gdy wskaźnik myszy znajduje się nad elementem <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nadrzędna <xref:System.Windows.Forms.TreeView>musibyć ustawiona na wartość tak <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> , aby była widoczna w czasie wykonywania. `true` <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A>  
  
 Jeśli kontrolka zawiera etykietkę narzędzia i zawiera również <xref:System.Windows.Forms.TreeNode> element <xref:System.Windows.Forms.ToolTip>, który <xref:System.Windows.Forms.ToolTip> ma, będzie widoczny tylko dla danego węzła. <xref:System.Windows.Forms.TreeView>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> jak używać właściwości i. <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> Aby uruchomić ten przykład, wklej następujący kod do formularza systemu Windows i wywołanie `InitializeTreeViewWithToolTips` z konstruktora lub <xref:System.Windows.Forms.Form.Load> programu obsługi zdarzeń formularza.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg, który reprezentuje bieżący obiekt.</summary>
        <returns>Ciąg, który reprezentuje bieżący obiekt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeView TreeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeView TreeView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.TreeView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TreeView As TreeView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeView ^ TreeView { System::Windows::Forms::TreeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TreeView : System.Windows.Forms.TreeView" Usage="System.Windows.Forms.TreeNode.TreeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nadrzędny widok drzewa, do którego jest przypisany węzeł drzewa.</summary>
        <value>Reprezentuje widok drzewa nadrzędnego, do którego jest przypisany węzeł drzewa, lub <see langword="null" /> Jeśli węzeł nie został przypisany do widoku drzewa. <see cref="T:System.Windows.Forms.TreeView" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wybiera odpowiednie <xref:System.Windows.Forms.TreeNode> po ustaleniu, <xref:System.Windows.Forms.TreeNode> czy zakończono przekazywanie i który <xref:System.Windows.Forms.TreeNode> ma zostać wybrany. Ten przykład wymaga, aby użytkownik miał <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> kontrolkę <xref:System.Windows.Forms.TreeNodeCollection> , która zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymagane jest również posiadanie <xref:System.Windows.Forms.ComboBox> następujących elementów: "Previous", "PreviousVisible", "Next", "NextVisible", "First" i "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>
