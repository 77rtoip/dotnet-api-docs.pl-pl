<Type Name="TreeNode" FullName="System.Windows.Forms.TreeNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8dfa7211cdaaa47a8de7628f4acdeea67eb937fb" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42944801" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TreeNode extends System.MarshalByRefObject implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : MarshalByRefObject, ICloneable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje węzeł <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Nodes%2A> Kolekcja przechowuje wszystkie podrzędne <xref:System.Windows.Forms.TreeNode> obiektów przypisane do bieżącego <xref:System.Windows.Forms.TreeNode>. Można dodać, usunąć lub sklonować <xref:System.Windows.Forms.TreeNode>; gdy to zrobisz, wszystkie drzewa podrzędnego węzły są dodawane, usuwane lub sklonować. Każdy <xref:System.Windows.Forms.TreeNode> może zawierać innych kolekcji <xref:System.Windows.Forms.TreeNode> obiektów. To może utrudnić ustalenie, gdzie jesteś w <xref:System.Windows.Forms.TreeView> podczas iteracji w kolekcji. Określanie lokalizacji w strukturze drzewa, użyj <xref:System.Windows.Forms.TreeNode.FullPath%2A> właściwości. <xref:System.Windows.Forms.TreeNode.FullPath%2A> Ciąg można analizować za pomocą <xref:System.Windows.Forms.TreeView.PathSeparator%2A> wartość w celu określenia, gdzie ciągu <xref:System.Windows.Forms.TreeNode> etykieta rozpoczęcia i zakończenia.  
  
 <xref:System.Windows.Forms.TreeNode> Etykieta jest ustawiona, ustawiając <xref:System.Windows.Forms.TreeNode.Text%2A> właściwość jawnie. Alternatywą jest do utworzenia węzła drzewa, przy użyciu jednej z <xref:System.Windows.Forms.TreeNode.%23ctor%2A> konstruktorów, które ma parametr typu ciąg, który reprezentuje <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości. Etykieta jest wyświetlana obok <xref:System.Windows.Forms.TreeNode> obrazu, jeśli wyświetlony zostanie jeden.  
  
 Do wyświetlania obrazów obok węzły drzewa, Przypisz <xref:System.Windows.Forms.ImageList> do <xref:System.Windows.Forms.TreeView.ImageList%2A> właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView> kontroli i przypisać <xref:System.Drawing.Image> , odwołując się do jego wartość indeksu w <xref:System.Windows.Forms.ImageList> właściwości. Ustaw <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> właściwości wartość indeksu <xref:System.Drawing.Image> mają być wyświetlane, gdy <xref:System.Windows.Forms.TreeNode> jest w stanie niezaznaczone. Podobnie, ustaw <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> właściwości wartość indeksu <xref:System.Drawing.Image> mają być wyświetlane, gdy <xref:System.Windows.Forms.TreeNode> jest zaznaczone.  
  
 Wybieranie węzłów określonego drzewa i przechodzenie przez <xref:System.Windows.Forms.TreeView.Nodes%2A> kolekcji można osiągnąć, używając następujących wartości właściwości: <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>. Przypisz <xref:System.Windows.Forms.TreeNode> zwrócony przez jedną z wyżej wymienionych właściwości na <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> właściwości, aby wybrać ten węzeł drzewa w <xref:System.Windows.Forms.TreeView> kontroli.  
  
 Węzły drzewa można rozszerzyć, aby wyświetlić następny poziom węzłów drzew podrzędnych. Użytkownika można rozwinąć <xref:System.Windows.Forms.TreeNode> , naciskając klawisz plus (+) znajdujący się obok <xref:System.Windows.Forms.TreeNode>, jeśli wyświetlony zostanie jeden lub rozwinąć <xref:System.Windows.Forms.TreeNode> przez wywołanie metody <xref:System.Windows.Forms.TreeNode.Expand%2A> metody. Aby rozwinąć wszystkie podrzędne drzewa węzła poziomy <xref:System.Windows.Forms.TreeNode.Nodes%2A> kolekcji, wywołanie <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> metody. Można zwinąć podrzędne <xref:System.Windows.Forms.TreeNode> poziomu przez wywołanie metody <xref:System.Windows.Forms.TreeNode.Collapse%2A> metody lub użytkownik może nacisnąć klawisz minus (-) przycisk Dalej, aby <xref:System.Windows.Forms.TreeNode>, jeśli wyświetlony zostanie jeden. Można również wywołać <xref:System.Windows.Forms.TreeNode.Toggle%2A> alternatywne metody <xref:System.Windows.Forms.TreeNode> między Stanami rozwinięty i zwinięty.  
  
 Węzły drzewa mogą opcjonalnie wyświetlić pole wyboru. Aby wyświetlić pola wyboru, należy ustawić <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> właściwość <xref:System.Windows.Forms.TreeView> do `true`. <xref:System.Windows.Forms.TreeNode.Checked%2A> Właściwość jest ustawiona na `true` węzłów drzewa, które znajdują się w stanie zaznaczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla informacje o kliencie w <xref:System.Windows.Forms.TreeView> kontroli. Węzły drzewa główne wyświetlenie nazwy klienta, a węzły drzewa podrzędnego wyświetlić numery przypisane do każdego klienta. W tym przykładzie 1000 klientów są wyświetlane z 15 zamówienia. Odświeżenie <xref:System.Windows.Forms.TreeView> jest pomijana przy użyciu <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> i <xref:System.Windows.Forms.TreeView.EndUpdate%2A> metody i oczekiwania <xref:System.Windows.Forms.Cursor> jest wyświetlany podczas <xref:System.Windows.Forms.TreeView> tworzy i maluje <xref:System.Windows.Forms.TreeNode> obiektów. W tym przykładzie wymaga, że masz `Customer` obiekt, który może zawierać zbiór `Order` obiektów. Wymaga to również, że utworzono wystąpienie <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy węzeł główny drzewa można przypisać podrzędnych węzłów drzewa. Węzeł drzewa podrzędnego dla każdego `Customer` obiektu <xref:System.Collections.ArrayList> zostanie dodany do węzła głównego drzewa, a także węzła drzewa podrzędnego dla każdego `Order` przypisane do obiektu `Customer` obiektu. `Customer` Przypisany jest obiekt <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwość i węzły drzewa reprezentujący `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstu. W tym przykładzie wymaga, że masz `Customer` i `Order` zdefiniowanego obiektu <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form>i <xref:System.Collections.ArrayList> o nazwie `customerArray` zawierający `Customer` obiektów.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Etykieta <see cref="P:System.Windows.Forms.TreeNode.Text" /> nowego węzła drzewa.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> klasy przy użyciu tekstu etykiety.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text` Wartość parametru jest przypisany do węzła <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości i staje się etykieta węzła drzewa.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla informacje o kliencie w <xref:System.Windows.Forms.TreeView> kontroli. Węzły drzewa główne wyświetlenie nazwy klienta, a węzły drzewa podrzędnego wyświetlić numery przypisane do każdego klienta. W tym przykładzie 1000 klientów są wyświetlane z 15 zamówienia. Odświeżenie <xref:System.Windows.Forms.TreeView> jest pomijana przy użyciu <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> i <xref:System.Windows.Forms.TreeView.EndUpdate%2A> metody i oczekiwania <xref:System.Windows.Forms.Cursor> jest wyświetlany podczas <xref:System.Windows.Forms.TreeView> tworzy i maluje <xref:System.Windows.Forms.TreeNode> obiektów. W tym przykładzie wymaga, że masz `Customer` obiekt, który może zawierać zbiór `Order` obiektów. Wymaga to również, że utworzono wystąpienie <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TreeNode(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Zawierający dane do zdeserializowania klasy.</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> Zawierający źródłowe i docelowe serializowanym strumieniu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> przy użyciu określonego serializacja informacji i kontekst.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">Etykieta <see cref="P:System.Windows.Forms.TreeNode.Text" /> nowego węzła drzewa.</param>
        <param name="children">Tablica podrzędnych <see cref="T:System.Windows.Forms.TreeNode" /> obiektów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> klasy z określoną etykietą węzły drzewa tekstu i podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text` Wartość parametru jest przypisany do węzła <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości i staje się etykieta węzła drzewa. Węzły drzewa, które są zawarte w `children` tablicy są dodawane do <xref:System.Windows.Forms.TreeNodeCollection> przechowywaną w <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy węzeł główny drzewa można przypisać podrzędnych węzłów drzewa. Węzeł drzewa podrzędnego dla każdego `Customer` obiektu <xref:System.Collections.ArrayList> zostanie dodany do węzła głównego drzewa, a także węzła drzewa podrzędnego dla każdego `Order` przypisane do obiektu `Customer` obiektu. `Customer` Przypisany jest obiekt <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwość i węzły drzewa reprezentujący `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstu. W tym przykładzie wymaga, że masz `Customer` i `Order` zdefiniowanego obiektu <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form>i <xref:System.Collections.ArrayList> o nazwie `customerArray` zawierający `Customer` obiektów.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Etykieta <see cref="P:System.Windows.Forms.TreeNode.Text" /> nowego węzła drzewa.</param>
        <param name="imageIndex">Wartość indeksu <see cref="T:System.Drawing.Image" /> wyświetlany, gdy węzeł drzewa nie jest zaznaczona.</param>
        <param name="selectedImageIndex">Wartość indeksu <see cref="T:System.Drawing.Image" /> do wyświetlenia po wybraniu węzła drzewa.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> klasy z określoną etykietą, tekstu i obrazów do wyświetlania, gdy węzeł drzewa jest w stanie zaznaczone i niezaznaczone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text` Wartość parametru jest przypisany do węzła <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości i staje się etykieta węzła drzewa. `imageIndex` i `selectedImageIndex` wartości są wartości indeksu <xref:System.Drawing.Image> przechowywane w <xref:System.Windows.Forms.ImageList> przypisane do <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> właściwości. Obraz, do którego odwołuje się `imageIndex` właściwości jest wyświetlane, gdy nie wybrano węzeł drzewa. Podobnie, obraz, do którego odwołuje się `selectedImageIndex` właściwości jest wyświetlane, gdy węzeł drzewa jest w stanie wybrania.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i przypisuje <xref:System.Windows.Forms.ImageList> do <xref:System.Windows.Forms.TreeView> kontroli i wypełnienia <xref:System.Windows.Forms.TreeView> kontrolką <xref:System.Windows.Forms.TreeNode> obiektów. Węzły drzewa są przypisywane obrazów z <xref:System.Windows.Forms.ImageList> która jest wyświetlana, gdy węzeł drzewa jest w stanie zaznaczony lub niezaznaczony. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.TreeView>i <xref:System.Collections.ArrayList> zawierający `Customer` obiektów, każdy zawiera `Order` obiektów. Wymaga również, aby `Customer` i `Order` obiekty są zdefiniowane.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">Etykieta <see cref="P:System.Windows.Forms.TreeNode.Text" /> nowego węzła drzewa.</param>
        <param name="imageIndex">Wartość indeksu <see cref="T:System.Drawing.Image" /> wyświetlany, gdy węzeł drzewa nie jest zaznaczona.</param>
        <param name="selectedImageIndex">Wartość indeksu <see cref="T:System.Drawing.Image" /> do wyświetlenia po wybraniu węzła drzewa.</param>
        <param name="children">Tablica podrzędnych <see cref="T:System.Windows.Forms.TreeNode" /> obiektów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.TreeNode" /> klasy przy użyciu tekstu etykiety podrzędne węzły drzewa i obrazów do wyświetlania, gdy węzeł drzewa jest w stanie zaznaczone i niezaznaczone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text` Wartość parametru jest przypisany do węzła <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości i staje się etykieta węzła drzewa. `imageIndex` i `selectedImageIndex` wartości są wartości indeksu <xref:System.Drawing.Image> przechowywane w <xref:System.Windows.Forms.ImageList> przypisane do <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> właściwości. Obraz, do którego odwołuje się `imageIndex` parametru jest wyświetlane, gdy nie wybrano węzeł drzewa. Podobnie, obraz, do którego odwołuje się `selectedImageIndex` parametru jest wyświetlane, gdy węzeł drzewa jest w stanie wybrania. Węzły drzewa, które są zawarte w `children` tablicy są dodawane do <xref:System.Windows.Forms.TreeNodeCollection> przechowywaną w <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i przypisuje <xref:System.Windows.Forms.ImageList> do <xref:System.Windows.Forms.TreeView> kontroli i wypełnienia <xref:System.Windows.Forms.TreeView> kontrolką <xref:System.Windows.Forms.TreeNode> obiektów. Węzły drzewa są przypisywane obrazów z <xref:System.Windows.Forms.ImageList> która jest wyświetlana, gdy węzeł drzewa jest w stanie zaznaczony lub niezaznaczony. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.TreeView>i <xref:System.Collections.ArrayList> zawierający `Customer` obiektów, każdy zawiera `Order` obiektów. Wymaga również, aby `Customer` i `Order` obiekty są zdefiniowane.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła węzła drzewa.</summary>
        <value>Tło <see cref="T:System.Drawing.Color" /> węzła drzewa. Wartość domyślna to <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.TreeNode.BackColor%2A> właściwość jest ustawiona na <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, <xref:System.Drawing.Color> używany jest <xref:System.Windows.Forms.Control.BackColor%2A> wartość właściwości <xref:System.Windows.Forms.TreeView> kontroli, przypisany do węzła drzewa.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje dowolne <xref:System.Windows.Forms.TreeNode> obiektów <xref:System.Windows.Forms.TreeView> formantu, który ma jej <xref:System.Windows.Forms.TreeNode.Checked%2A> właściwością `true` , ustawiając jego <xref:System.Windows.Forms.TreeNode.BackColor%2A> właściwość <xref:System.Drawing.Color.Yellow%2A>. Ten kod wymaga posiadania <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form> z kolekcją <xref:System.Windows.Forms.TreeNode> obiektów.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="treeNode.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje edycji Etykieta węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowy scenariusz, aby użyć tej metody jest wywołanie go na <xref:System.Windows.Forms.MenuItem.Click> zdarzenia <xref:System.Windows.Forms.MenuItem> lub <xref:System.Windows.Forms.ContextMenu>.  
  
> [!NOTE]
>  Ta metoda działa tylko, jeśli <xref:System.Windows.Forms.TreeView.LabelEdit%2A> właściwość <xref:System.Windows.Forms.TreeView> ustawiono `true`. Jeśli <xref:System.Windows.Forms.TreeView.LabelEdit%2A> ustawiono `false`, zgłaszany jest wyjątek i węzeł drzewa nie powoduje umieszczenia przechodzą w stan można edytować.  
  
   
  
## Examples  
 Poniższy przykład kodu umożliwia użytkownikowi edytować węzły drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>. Po kliknięciu myszą, <xref:System.Windows.Forms.TreeNode> , położenie ustalone i przechowywane w zmiennej o nazwie `mySelectedNode`. Jeśli węzeł drzewa nonroot został wybrany, zostanie ono przełączone do stanu można edytować, umożliwiając użytkownikowi edytowanie Etykieta węzła. Po użytkownik zatrzymuje edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany. W tym przykładzie kilku znaków są uważane za nieprawidłowe w tekst etykiety. Jeśli jeden z niedozwolonych znaków znajduje się w ciąg znaków etykiety lub jest on pusty, użytkownik jest powiadamiany o błędzie i etykiety są zwracane do jego poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.TreeView.LabelEdit" /> ustawiono <see langword="false" />.</exception>
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.TreeNode.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera granice węzła drzewa.</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> Reprezentujący granice węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Współrzędne są podawane względem lewego górnego rogu <xref:System.Windows.Forms.TreeView> kontroli.  
  
   
  
## Examples  
 Poniższy przykład kodu zmienia rozmiar <xref:System.Windows.Forms.TreeNode.NodeFont%2A> z określonym rozmiarem i dopasowuje <xref:System.Windows.Forms.TreeView.ItemHeight%2A> węzeł drzewa nadrzędnego <xref:System.Windows.Forms.TreeView> kontroli. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.TreeView> kontrolki z kolekcją <xref:System.Windows.Forms.TreeNode> obiektów, a <xref:System.Windows.Forms.ComboBox> zawierający rozmiary czcionek.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy węzeł drzewa jest w stanie zaznaczenia.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł drzewa jest w stanie zaznaczenia; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje dowolne <xref:System.Windows.Forms.TreeNode> obiektów <xref:System.Windows.Forms.TreeView> formantu, który ma jej <xref:System.Windows.Forms.TreeNode.Checked%2A> właściwością `true` , ustawiając jego <xref:System.Windows.Forms.TreeNode.BackColor%2A> właściwość <xref:System.Drawing.Color.Yellow%2A>. Ten kod wymaga posiadania <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form> z kolekcją <xref:System.Windows.Forms.TreeNode> obiektów.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kopiuje węzła drzewa i całe poddrzewo osadzone na ten węzeł drzewa.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący sklonowany <see cref="T:System.Windows.Forms.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktura drzewa, węzeł drzewa klonowanego, jak i poniżej jest kopiowany. Wszystkie węzły drzewa podrzędnego przypisane do <xref:System.Windows.Forms.TreeNode> klonowanego są dołączone do nowego węzła drzewa i poddrzewa.  
  
 <xref:System.Windows.Forms.TreeNode.Clone%2A> Metoda wykonuje płytką kopię węzła. Jeśli wartość <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwość jest typem referencyjnym, oryginalne i sklonowanej kopii wskaże w tym samym pojedynczego wystąpienia <xref:System.Windows.Forms.TreeNode.Tag%2A> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu klony ostatniego węzła drzewa podrzędnego ostatni węzeł główny w drzewie i wstawia klonu jako pierwszy węzeł drzewa katalogu głównego w `TreeNodeCollection`. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form> zawiera zbiór <xref:System.Windows.Forms.TreeNode> obiektów i <xref:System.Windows.Forms.Button>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#3)]
 [!code-csharp[TreeNode_EnsureVisible_4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#3)]
 [!code-vb[TreeNode_EnsureVisible_4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Collapse">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwija <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwija węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Collapse%2A> Metoda Zwija bieżący <xref:System.Windows.Forms.TreeNode> i jego węzłami podrzędnymi. Jeśli chcesz tylko bieżącej zwijania <xref:System.Windows.Forms.TreeNode>, użyj <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=nameWithType> przeciążenia, przekazując `true` ignorowanie jego węzłów podrzędnych.  
  
> [!NOTE]
>  Stan <xref:System.Windows.Forms.TreeNode> jest trwały. Na przykład, jeśli następny poziom węzłów podrzędnych nie sbalil wcześniej, gdy <xref:System.Windows.Forms.TreeNode.Expand%2A> metoda jest wywoływana, węzły podrzędne są wyświetlane w stanie rozwiniętym wcześniej.  
  
   
  
## Examples  
 Poniższy przykład kodu przełącza zaznaczony węzeł, po kliknięciu przycisku. Jeśli wybrany węzeł jest zwinięte, jest ona rozwinięta, jeśli jest rozwinięta, wywołując <xref:System.Windows.Forms.TreeNode.Expand%2A> metody jest zwinięte, wywołując <xref:System.Windows.Forms.TreeNode.Collapse%2A> metody. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formant, który ma co najmniej jedną <xref:System.Windows.Forms.TreeNode> z co najmniej jeden element podrzędny <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (bool ignoreChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(bool ignoreChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (ignoreChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse(bool ignoreChildren);" />
      <MemberSignature Language="F#" Value="member this.Collapse : bool -&gt; unit" Usage="treeNode.Collapse ignoreChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignoreChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignoreChildren">
          <see langword="true" /> Aby pozostawić węzły podrzędne w wraz z bieżącym stanem; <see langword="false" /> Aby zwinąć węzłów podrzędnych.</param>
        <summary>Zwija <see cref="T:System.Windows.Forms.TreeNode" /> i opcjonalnie zwinięciu jego elementów podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.TreeNode.Collapse%2A> jest metoda `true`, jeśli chcesz zwinąć węzeł, ale pozostawić jej podrzędnych węzłów w stanie rozwiniętym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera menu skrótów, który jest skojarzony z tym węzłem drzewa.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ContextMenu" /> Skojarzonego z węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest preferowanym sposobem kojarzenie menu skrótów za pomocą węzła drzewa <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia skojarzony z tym węzłem drzewa menu skrótów.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ContextMenuStrip" /> Skojarzone z węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menu skrótów jest wyświetlany, gdy użytkownik kliknie prawym przyciskiem myszy węzeł drzewa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Deserialize (serializationInfo, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Opisujący <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> Wskazujące stan strumienia podczas deserializacji.</param>
        <summary>Ładuje stan <see cref="T:System.Windows.Forms.TreeNode" /> z określonego <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit(bool cancel);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : bool -&gt; unit" Usage="treeNode.EndEdit cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <see langword="true" /> Jeśli edycji tekstu etykiety węzła drzewa zostało anulowane bez zapisywany; w przeciwnym razie <see langword="false" />.</param>
        <summary>Kończy edytowanie Etykieta węzła drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu umożliwia użytkownikowi edytować węzły drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>. Kliknięcie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> , położenie ustalone i przechowywane w zmiennej o nazwie `mySelectedNode`. Jeśli węzeł drzewa nonroot został wybrany, zostanie ono przełączone do stanu można edytować, umożliwiając użytkownikowi edytowanie Etykieta węzła. Po użytkownik zatrzymuje edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany. W tym przykładzie kilku znaków są uważane za nieprawidłowe w tekst etykiety. Jeśli jeden z niedozwolonych znaków znajduje się w ciąg znaków etykiety lub jest on pusty, użytkownik jest powiadamiany o błędzie i etykiety są zwracane do jego poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : unit -&gt; unit" Usage="treeNode.EnsureVisible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia, że węzeł drzewa jest widoczny, rozwijając węzły drzewa i przewijanie w kontrolce widoku drzewa zgodnie z potrzebami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A> metoda jest wywoływana, drzewa jest rozwinięte i przewijane, aby upewnić się, że bieżącego węzła drzewa jest widoczna w <xref:System.Windows.Forms.TreeView>. Ta metoda jest przydatna, jeśli wybierasz węzła drzewa w kodzie na podstawie określonych kryteriów. Przez wywołanie tej metody, po wybraniu węzła, użytkownik może wyświetlać i korzystać z wybranego węzła.  
  
> [!NOTE]
>  Jeśli <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=nameWithType> właściwość jest ustawiona na wartość, która jest większa niż wysokość kontrolki widoku drzewa, wywołanie tej metody ma nieoczekiwane wyniki.  
  
   
  
## Examples  
 Poniższy przykład kodu wnosi ostatnim elementem podrzędnym węzła drzewa ostatniego węzła głównego w drzewie do widoku w widoku drzewa po kliknięciu przycisku. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form> zawiera zbiór <xref:System.Windows.Forms.TreeNode> obiektów, a <xref:System.Windows.Forms.Button>. Powinno być wystarczająco dużo węzłów drzewa, aby nie były wszystkie widoczne w kontrolce widoku drzewa.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozwija węzeł drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Expand%2A> Metoda rozwija bieżący <xref:System.Windows.Forms.TreeNode> do następnego poziomu węzłów.  
  
> [!NOTE]
>  Stan <xref:System.Windows.Forms.TreeNode> jest trwały. Na przykład, jeśli następny poziom węzłów podrzędnych nie sbalil wcześniej, gdy <xref:System.Windows.Forms.TreeNode.Expand%2A> metoda jest wywoływana, węzły podrzędne są wyświetlane w stanie rozwiniętym wcześniej.  
  
   
  
## Examples  
 Poniższy przykład kodu przełącza zaznaczony węzeł, po kliknięciu przycisku. Jeśli wybrany węzeł jest zwinięte, jest ona rozwinięta, jeśli jest rozwinięta, wywołując <xref:System.Windows.Forms.TreeNode.Expand%2A> metody jest zwinięte, wywołując <xref:System.Windows.Forms.TreeNode.Collapse%2A> metody. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formant, który ma co najmniej jedną <xref:System.Windows.Forms.TreeNode> z co najmniej jeden element podrzędny <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozwija wszystkie węzły podrzędne drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> Metoda rozwija wszystkie podrzędne węzły drzewa przypisane do <xref:System.Windows.Forms.TreeNode.Nodes%2A> kolekcji.  
  
> [!NOTE]
>  Stan <xref:System.Windows.Forms.TreeNode> jest trwały. Na przykład, jeśli następny poziom węzłów podrzędnych nie sbalil wcześniej, gdy <xref:System.Windows.Forms.TreeNode.Expand%2A> metoda jest wywoływana, węzły podrzędne są wyświetlane w stanie rozwiniętym wcześniej.  
  
   
  
## Examples  
 Poniższy przykład kodu rozwija wszystkie węzły drzewa w <xref:System.Windows.Forms.TreeView> decyduje o <xref:System.Windows.Forms.CheckBox> jest zaznaczone, a zwija <xref:System.Windows.Forms.TreeNode.FirstNode%2A> podczas <xref:System.Windows.Forms.CheckBox> jest wyczyszczone. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.CheckBox>, a <xref:System.Windows.Forms.TreeView> kontrolką <xref:System.Windows.Forms.TreeNodeCollection> ma kilka <xref:System.Windows.Forms.TreeNode> obiektów (najlepiej z co najmniej trzy poziomy).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="FirstNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode FirstNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode FirstNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FirstNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ FirstNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FirstNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pierwszy element podrzędny węzła drzewa w kolekcji węzła drzewa.</summary>
        <value>Pierwszy element podrzędny <see cref="T:System.Windows.Forms.TreeNode" /> w <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.FirstNode%2A> Jest pierwszym elementem podrzędnym <xref:System.Windows.Forms.TreeNode> w <xref:System.Windows.Forms.TreeNodeCollection> przechowywane w <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwości bieżącego węzła drzewa. Jeśli <xref:System.Windows.Forms.TreeNode> ma Brak węzła podrzędnego <xref:System.Windows.Forms.TreeNode.FirstNode%2A> właściwość zwraca `null`.  
  
   
  
## Examples  
 Wybiera odpowiednią klasę w poniższym przykładzie kodu <xref:System.Windows.Forms.TreeNode> po ustaleniu, jeśli <xref:System.Windows.Forms.TreeNode> przekazany na jest wybrany, które <xref:System.Windows.Forms.TreeNode> do wybrania. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formantu, który ma <xref:System.Windows.Forms.TreeNodeCollection> zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymaga to również, że masz <xref:System.Windows.Forms.ComboBox> z następującymi elementami: "Wstecz", "PreviousVisible", "Dalej", "NextVisible", "Pierwszy" i "Ostatni".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor pierwszego planu węzła drzewa.</summary>
        <value>Kolor pierwszego planu <see cref="T:System.Drawing.Color" /> węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `null`, <xref:System.Drawing.Color> używany jest <xref:System.Windows.Forms.Control.ForeColor%2A> wartość właściwości <xref:System.Windows.Forms.TreeView> kontroli, przypisany do węzła drzewa.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy węzeł główny drzewa można przypisać podrzędnych węzłów drzewa. Węzeł drzewa podrzędnego dla każdego `Customer` obiektu <xref:System.Collections.ArrayList> zostanie dodany do węzła głównego drzewa, a także węzła drzewa podrzędnego dla każdego `Order` przypisane do obiektu `Customer` obiektu. `Customer` Przypisany jest obiekt <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwość i węzły drzewa reprezentujący `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstu. W tym przykładzie wymaga, że masz `Customer` i `Order` zdefiniowanego obiektu <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form>i <xref:System.Collections.ArrayList> o nazwie `customerArray` zawierający `Customer` obiektów.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TreeNode FromHandle(class System.Windows.Forms.TreeView tree, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (tree As TreeView, handle As IntPtr) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::TreeNode ^ FromHandle(System::Windows::Forms::TreeView ^ tree, IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : System.Windows.Forms.TreeView * nativeint -&gt; System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FromHandle (tree, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tree" Type="System.Windows.Forms.TreeView" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tree">
          <see cref="T:System.Windows.Forms.TreeView" /> Zawierający węzła drzewa.</param>
        <param name="handle">Uchwyt węzła drzewa.</param>
        <summary>Zwraca węzeł drzewa z określonym obsługi i przypisaniu go do określonego drzewa Wyświetl formant.</summary>
        <returns>A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentujący przypisane do określonego węzła drzewa <see cref="T:System.Windows.Forms.TreeView" /> formantu o określone dojście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy węzeł zostanie dodany do <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=nameWithType> kolekcji <xref:System.Windows.Forms.TreeView> kontroli wysyła powiadomienie NM_CUSTOMDRAW przed dojścia do węzła jest dostępna. Jeśli zastąpisz <xref:System.Windows.Forms.Control.WndProc%2A> metody <xref:System.Windows.Forms.TreeView> zapewnienie niestandardowego rysowania w odpowiedzi na to powiadomienie, należy zawsze sprawdzić wartość zwracaną przez tę metodę `null` przed próbą dostępu do węzła.  
  
   
  
## Examples  
 Poniższy kod pobiera przykład <xref:System.Windows.Forms.TreeNode> sbalil i tworzy kopię go za pomocą jego <xref:System.Windows.Forms.TreeNode.Handle%2A> właściwości. Oryginalny <xref:System.Windows.Forms.TreeNode> zostanie usunięty z <xref:System.Windows.Forms.TreeNodeCollection>, a kopia jest dodawany do kolekcji. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> kontroli na nim. <xref:System.Windows.Forms.TreeView> Formant powinien mieć co najmniej dwa węzły główne, każde posiada co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.TreeView" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.Windows.Forms.TreeNode.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę z katalogu głównego węzła drzewa do bieżącego węzła drzewa.</summary>
        <value>Ścieżka z katalogu głównego węzła drzewa do bieżącego węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżka składa się z etykiet wszystkie węzły drzewa, które nastąpi przejście, aby dotrzeć do tego węzła drzewa, zaczynając od głównego węzła drzewa. Etykiety węzła są oddzielone znak ograniczający określone w <xref:System.Windows.Forms.TreeView.PathSeparator%2A> właściwość <xref:System.Windows.Forms.TreeView> formant, który zawiera ten węzeł. Na przykład, jeśli znak ograniczający kontrolki widok drzewa o nazwie "Lokalizacja" jest równa znak ukośnika odwrotnego (\\), <xref:System.Windows.Forms.TreeNode.FullPath%2A> właściwość ma wartość "Country\Region\State".  
  
   
  
## Examples  
 Poniższy kod ustawia przykład <xref:System.Windows.Forms.TreeView.PathSeparator%2A> właściwość <xref:System.Windows.Forms.TreeView> i wyświetla liczbę węzłów drzewa podrzędnych, które są zawarte w <xref:System.Windows.Forms.TreeNodeCollection> z <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. Wartość procentowa węzła drzewa podrzędnego do drzewa łączna liczba węzłów w kontrolce widok drzewa jest również wyświetlany. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.Button>, a <xref:System.Windows.Forms.TreeView> kontrolką <xref:System.Windows.Forms.TreeNodeCollection> ma kilka <xref:System.Windows.Forms.TreeNode> obiektów (najlepiej z co najmniej trzy poziomy).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Węzeł nie jest zawarta w <see cref="T:System.Windows.Forms.TreeView" />.</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberSignature Language="F#" Value="member this.GetNodeCount : bool -&gt; int" Usage="treeNode.GetNodeCount includeSubTrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees">
          <see langword="true" /> Jeśli liczba wynikowy zawiera wszystkie węzły drzewa pośrednio dostęp do konta root, w tym węźle drzewa; w przeciwnym razie <see langword="false" />.</param>
        <summary>Zwraca liczbę węzłów w drzewie podrzędnych.</summary>
        <returns>Liczba węzłów drzew podrzędnych przypisane do <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod ustawia przykład <xref:System.Windows.Forms.TreeView.PathSeparator%2A> właściwość <xref:System.Windows.Forms.TreeView> i wyświetla liczbę węzłów drzewa podrzędnych, które są zawarte w <xref:System.Windows.Forms.TreeNodeCollection> z <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. Wartość procentowa węzła drzewa podrzędnego do drzewa łączna liczba węzłów w kontrolce widok drzewa jest również wyświetlany. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.Button>, a <xref:System.Windows.Forms.TreeView> kontrolką <xref:System.Windows.Forms.TreeNodeCollection> ma kilka <xref:System.Windows.Forms.TreeNode> obiektów (najlepiej z co najmniej trzy poziomy).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Nodes" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.TreeNode.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera uchwyt węzła drzewa.</summary>
        <value>Dojście węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli uchwyt nie została wcześniej utworzona podczas <xref:System.Windows.Forms.TreeNode.Handle%2A> odwołuje się do właściwości, jest on tworzony.  
  
   
  
## Examples  
 Poniższy kod pobiera przykład <xref:System.Windows.Forms.TreeNode> sbalil i tworzy kopię go za pomocą jego <xref:System.Windows.Forms.TreeNode.Handle%2A> właściwości. Oryginalny <xref:System.Windows.Forms.TreeNode> zostanie usunięty z <xref:System.Windows.Forms.TreeNodeCollection>, a kopia jest dodawany do kolekcji. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> kontroli na nim. <xref:System.Windows.Forms.TreeView> Formant powinien mieć co najmniej dwa węzły główne, każde posiada co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia listę wartość indeksu obrazu obrazu wyświetlanego, gdy węzeł drzewa jest w stanie niezaznaczone.</summary>
        <value>Wartość od zera indeks, która reprezentuje pozycja obrazu w przypisanych <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> Wartość jest wartością indeksu <xref:System.Drawing.Image> przechowywane w <xref:System.Windows.Forms.ImageList> przypisane do <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> właściwości.  
  
> [!NOTE]
>  Wartość domyślna <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> właściwości jest taka sama jak <xref:System.Windows.Forms.TreeView.ImageIndex%2A> właściwość <xref:System.Windows.Forms.TreeView> kontrolkę, która <xref:System.Windows.Forms.TreeNode> przypisano do.  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> i <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> właściwości wzajemnie się wykluczają; w związku z tym, jeśli jedna właściwość jest ustawiona, druga jest ignorowana. Jeśli ustawisz <xref:System.Windows.Forms.TreeNode.ImageKey%2A> właściwości <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> właściwość jest automatycznie ustawiona na wartość -1. Alternatywnie Jeśli ustawisz <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> jest automatycznie ustawiana na ciąg pusty ("").  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i przypisuje <xref:System.Windows.Forms.ImageList> do <xref:System.Windows.Forms.TreeView> kontroli i wypełnienia <xref:System.Windows.Forms.TreeView> kontrolką <xref:System.Windows.Forms.TreeNode> obiektów. Węzły drzewa są przypisywane obrazów z <xref:System.Windows.Forms.ImageList> która jest wyświetlana, gdy węzeł drzewa jest w stanie zaznaczony lub niezaznaczony. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.TreeView>i <xref:System.Collections.ArrayList> zawierający `Customer` obiektów, każdy zawiera `Order` obiektów. Wymaga również, aby `Customer` i `Order` obiekty są zdefiniowane.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz dla obrazu skojarzonego z tego węzła drzewa, gdy węzeł jest w stanie niezaznaczone.</summary>
        <value>Klucz dla obrazu skojarzonego z tego węzła drzewa, gdy węzeł jest w stanie niezaznaczone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz obraz zwracane przez tę właściwość znajduje się w <xref:System.Windows.Forms.TreeView.ImageList%2A> właściwości zawierającego <xref:System.Windows.Forms.TreeView> kontroli.  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> Jest rozróżniana wielkość liter.  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> i <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> właściwości wzajemnie się wykluczają; jedna właściwość jest ustawiona, druga jest ignorowana. Jeśli ustawisz <xref:System.Windows.Forms.TreeNode.ImageKey%2A> właściwości <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> właściwość jest automatycznie ustawiona na wartość -1. Alternatywnie Jeśli ustawisz <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> jest automatycznie ustawiana na ciąg pusty ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.TreeNode.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Pozycja węzła drzewa w kolekcji węzła drzewa.</summary>
        <value>Wartość od zera indeks, która reprezentuje Pozycja węzła drzewa w <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.Windows.Forms.TreeNode.Text%2A> i <xref:System.Windows.Forms.TreeNode.Index%2A> wartości właściwości <xref:System.Windows.Forms.TreeNode> reprezentowany przez <xref:System.Windows.Forms.TreeNode.Parent%2A> właściwość <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> kontroli na nim. <xref:System.Windows.Forms.TreeView> Powinien mieć co najmniej dwa węzły główne, każde posiada co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditing">
      <MemberSignature Language="C#" Value="public bool IsEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditing : bool" Usage="System.Windows.Forms.TreeNode.IsEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł drzewa jest w stanie edycji.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł drzewa jest w stanie można edytować; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu umożliwia użytkownikowi edytować węzły drzewa nonroot przy użyciu <xref:System.Windows.Forms.ContextMenu>. Kliknięcie prawym przyciskiem myszy, <xref:System.Windows.Forms.TreeNode> , położenie ustalone i przechowywane w zmiennej o nazwie `mySelectedNode`. Jeśli węzeł drzewa nonroot został wybrany, zostanie ono przełączone do stanu można edytować, przez użytkownika, Edytuj etykietę węzła. Po użytkownik zatrzymuje edycję etykiety węzła drzewa, nowy tekst etykiety jest obliczane i zapisany. W tym przykładzie kilku znaków są uważane za nieprawidłowe w tekst etykiety. Jeśli jeden z niedozwolonych znaków znajduje się w ciąg znaków etykiety lub jest on pusty, użytkownik jest powiadamiany o błędzie i etykiety są zwracane do jego poprzedniego tekstu.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExpanded : bool" Usage="System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł drzewa jest w stanie rozwiniętym.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł drzewa jest w stanie rozwiniętym; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przełącza zaznaczony węzeł, po kliknięciu przycisku. Jeśli wybrany węzeł jest zwinięte, jest ona rozwinięta, jeśli jest rozwinięta, wywołując <xref:System.Windows.Forms.TreeNode.Expand%2A> metody jest zwinięte, wywołując <xref:System.Windows.Forms.TreeNode.Collapse%2A> metody. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formant, który ma co najmniej jedną <xref:System.Windows.Forms.TreeNode> z co najmniej jeden element podrzędny <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Windows.Forms.TreeNode.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł drzewa jest w stanie wybrania.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł drzewa jest w stanie wybrania.; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Wybiera odpowiednią klasę w poniższym przykładzie kodu <xref:System.Windows.Forms.TreeNode> po ustaleniu, jeśli <xref:System.Windows.Forms.TreeNode> przekazany na jest wybrany, które <xref:System.Windows.Forms.TreeNode> do wybrania. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formantu, który ma <xref:System.Windows.Forms.TreeNodeCollection> zawierającą kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymaga to również, że masz <xref:System.Windows.Forms.ComboBox> z następującymi elementami: "Wstecz", "PreviousVisible", "Dalej", "NextVisible", "Pierwszy" i "Ostatni".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.Forms.TreeNode.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy węzeł drzewa jest widoczny czy częściowo widoczny.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł drzewa jest widoczny czy częściowo visible; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wnosi ostatnim elementem podrzędnym węzła drzewa ostatniego węzła głównego w drzewie do widoku w widoku drzewa po kliknięciu przycisku. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form> zawiera zbiór <xref:System.Windows.Forms.TreeNode> obiektów, a <xref:System.Windows.Forms.Button>. Powinno być wystarczająco dużo węzłów drzewa, aby nie były wszystkie widoczne w kontrolce widoku drzewa.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="LastNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode LastNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode LastNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.LastNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ LastNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.LastNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ostatni element podrzędny węzła drzewa.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentująca ostatni węzeł podrzędny w drzewie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.LastNode%2A> Jest ostatnim elementem podrzędnym <xref:System.Windows.Forms.TreeNode> w <xref:System.Windows.Forms.TreeNodeCollection> przechowywane w <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwości bieżącego węzła drzewa. Jeśli <xref:System.Windows.Forms.TreeNode> ma Brak węzła podrzędnego <xref:System.Windows.Forms.TreeNode.LastNode%2A> właściwość zwraca `null`.  
  
   
  
## Examples  
 Wybiera odpowiednią klasę w poniższym przykładzie kodu <xref:System.Windows.Forms.TreeNode> po ustaleniu, jeśli <xref:System.Windows.Forms.TreeNode> przekazany na jest wybrany, które <xref:System.Windows.Forms.TreeNode> do wybrania. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formantu, który ma <xref:System.Windows.Forms.TreeNodeCollection> zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymaga to również, że masz <xref:System.Windows.Forms.ComboBox> z następującymi elementami: "Wstecz", "PreviousVisible", "Dalej", "NextVisible", "Pierwszy" i "Ostatni".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : int" Usage="System.Windows.Forms.TreeNode.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera głębokość liczony od zera węzła drzewa w <see cref="T:System.Windows.Forms.TreeView" /> kontroli.</summary>
        <value>Liczony od zera głębokość węzła drzewa w <see cref="T:System.Windows.Forms.TreeView" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać <xref:System.Windows.Forms.TreeNode.Level%2A> właściwości węzła głównego jest traktowana jako pierwszy poziom zagnieżdżenia i zwraca wartość 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.TreeNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę węzła drzewa.</summary>
        <value>A <see cref="T:System.String" /> reprezentujący nazwę węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> z <xref:System.Windows.Forms.TreeNode> jest również klucza podrzędnego, gdy węzeł jest częścią <xref:System.Windows.Forms.TreeNodeCollection>. Jeśli węzeł nie ma nazwy <xref:System.Windows.Forms.TreeNode.Name%2A> zwraca pusty ciąg ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera następny element równorzędny węzeł drzewa.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentująca następny element równorzędny węzeł drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.NextNode%2A> Jest następny element równorzędny <xref:System.Windows.Forms.TreeNode> w <xref:System.Windows.Forms.TreeNodeCollection> przechowywane w <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwość węzeł drzewa nadrzędnego <xref:System.Windows.Forms.TreeNode>. Jeśli nie kolejnego węzła drzewa <xref:System.Windows.Forms.TreeNode.NextNode%2A> właściwość zwraca `null`.  
  
   
  
## Examples  
 Wybiera odpowiednią klasę w poniższym przykładzie kodu <xref:System.Windows.Forms.TreeNode> po ustaleniu, jeśli <xref:System.Windows.Forms.TreeNode> przekazany na jest wybrany, które <xref:System.Windows.Forms.TreeNode> do wybrania. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formantu, który ma <xref:System.Windows.Forms.TreeNodeCollection> zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymaga to również, że masz <xref:System.Windows.Forms.ComboBox> z następującymi elementami: "Wstecz", "PreviousVisible", "Dalej", "NextVisible", "Pierwszy" i "Ostatni".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="NextVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera następny węzeł drzewa widoczne.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentujący kolejnego węzła drzewa widoczne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> Może być elementem podrzędnym, element równorzędny lub węzeł drzewa z innej gałęzi. Jeśli nie kolejnego węzła drzewa <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> właściwość zwraca `null`.  
  
   
  
## Examples  
 Wybiera odpowiednią klasę w poniższym przykładzie kodu <xref:System.Windows.Forms.TreeNode> po ustaleniu, jeśli <xref:System.Windows.Forms.TreeNode> przekazany na jest wybrany, które <xref:System.Windows.Forms.TreeNode> do wybrania. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formantu, który ma <xref:System.Windows.Forms.TreeNodeCollection> zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymaga to również, że masz <xref:System.Windows.Forms.ComboBox> z następującymi elementami: "Wstecz", "PreviousVisible", "Dalej", "NextVisible", "Pierwszy" i "Ostatni".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="NodeFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font NodeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font NodeFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NodeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ NodeFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NodeFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.TreeNode.NodeFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę, która jest używana do wyświetlania tekstu w etykiecie węzła drzewa.</summary>
        <value>
          <see cref="T:System.Drawing.Font" /> Używany do wyświetlania tekstu w etykiecie węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `null`, <xref:System.Drawing.Font> używany jest <xref:System.Windows.Forms.Control.Font%2A> wartość właściwości <xref:System.Windows.Forms.TreeView> formant, który jest powiązany ten węzeł.  
  
> [!NOTE]
>  Jeśli czcionki węzła jest większy niż <xref:System.Windows.Forms.Control.Font%2A> wartości właściwości, który jest ustawiony w <xref:System.Windows.Forms.TreeView> kontrolki tekstu etykiety węzła drzewa zostanie obcięta.  
  
   
  
## Examples  
 Poniższy przykład kodu zmienia rozmiar <xref:System.Windows.Forms.TreeNode.NodeFont%2A> z określonym rozmiarem i dopasowuje <xref:System.Windows.Forms.TreeView.ItemHeight%2A> węzeł drzewa nadrzędnego <xref:System.Windows.Forms.TreeView> kontroli. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formant, który zawiera zbiór <xref:System.Windows.Forms.TreeNode> obiektów, a <xref:System.Windows.Forms.ComboBox> zawierający rozmiary czcionek.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Windows.Forms.TreeNodeCollection" Usage="System.Windows.Forms.TreeNode.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Forms.TreeNode" /> obiektów przypisane do bieżącego węzła drzewa.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNodeCollection" /> reprezentujący węzły drzewa, przypisany do bieżącego węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Nodes%2A> Właściwość może zawierać zbiór innych <xref:System.Windows.Forms.TreeNode> obiektów. Każdy węzeł drzewa w kolekcji ma <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwość, która może zawierać własne <xref:System.Windows.Forms.TreeNodeCollection>. Ta zagnieżdżenia węzłów drzewa może utrudnić Przejdź strukturę drzewa. <xref:System.Windows.Forms.TreeNode.FullPath%2A> Właściwość ułatwia określanie lokalizacji w drzewie.  
  
   
  
## Examples  
 Poniższy przykład kodu Usuwa zaznaczonego węzła drzewa z jednego <xref:System.Windows.Forms.TreeView> i dodaje go do innego, jeśli obie kolekcje węzła drzewa nie są tylko do odczytu. Gdy <xref:System.Windows.Forms.Button> po kliknięciu <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> zostanie usunięty z jednego <xref:System.Windows.Forms.TreeView> przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> — metoda i dodane do innego <xref:System.Windows.Forms.TreeView> przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> metody. W tym przykładzie wymaga, że masz dwa <xref:System.Windows.Forms.TreeView> kontrolki o nazwie `treeView1` i `treeView2`, a <xref:System.Windows.Forms.Button> na <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Parent { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element nadrzędny węzła drzewa w bieżącego węzła drzewa.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentujący element nadrzędny bieżącego węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli węzeł drzewa jest na poziomie głównym <xref:System.Windows.Forms.TreeNode.Parent%2A> właściwość zwraca `null`.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.Windows.Forms.TreeNode.Text%2A> i <xref:System.Windows.Forms.TreeNode.Index%2A> wartości właściwości <xref:System.Windows.Forms.TreeNode> reprezentowany przez <xref:System.Windows.Forms.TreeNode.Parent%2A> właściwość <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> kontroli na nim. <xref:System.Windows.Forms.TreeView> Powinien mieć co najmniej dwa węzły główne, każde posiada co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poprzedni element równorzędny węzeł drzewa.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentujący poprzedniego element równorzędny węzeł drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.PrevNode%2A> Jest poprzedni element równorzędny <xref:System.Windows.Forms.TreeNode> w <xref:System.Windows.Forms.TreeNodeCollection> przechowywane w <xref:System.Windows.Forms.TreeNode.Nodes%2A> właściwość węzeł drzewa nadrzędnego <xref:System.Windows.Forms.TreeNode>. Jeśli nie poprzedniego węzła drzewa <xref:System.Windows.Forms.TreeNode.PrevNode%2A> właściwość zwraca `null`.  
  
   
  
## Examples  
 Wybiera odpowiednią klasę w poniższym przykładzie kodu <xref:System.Windows.Forms.TreeNode> po ustaleniu, jeśli <xref:System.Windows.Forms.TreeNode> przekazany na jest wybrany, które <xref:System.Windows.Forms.TreeNode> do wybrania. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formantu, który ma <xref:System.Windows.Forms.TreeNodeCollection> zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymaga to również, że masz <xref:System.Windows.Forms.ComboBox> z następującymi elementami: "Wstecz", "PreviousVisible", "Dalej", "NextVisible", "Pierwszy" i "Ostatni".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="PrevVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poprzedniego węzła drzewa widoczne.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> reprezentujący poprzedniego węzła drzewa widoczne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> Może być elementem podrzędnym, element równorzędny lub węzeł drzewa z innej gałęzi. Jeśli nie poprzedniego węzła drzewa <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> właściwość zwraca `null`.  
  
   
  
## Examples  
 Wybiera odpowiednią klasę w poniższym przykładzie kodu <xref:System.Windows.Forms.TreeNode> po ustaleniu, jeśli <xref:System.Windows.Forms.TreeNode> przekazany na jest wybrany, które <xref:System.Windows.Forms.TreeNode> do wybrania. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formantu, który ma <xref:System.Windows.Forms.TreeNodeCollection> zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymaga to również, że masz <xref:System.Windows.Forms.ComboBox> z następującymi elementami: "Wstecz", "PreviousVisible", "Dalej", "NextVisible", "Pierwszy" i "Ostatni".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="treeNode.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa bieżącego węzła drzewa z kontrolki widoku drzewa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Forms.TreeNode.Remove%2A> metoda jest wywoływana, węzeł drzewa, a wszystkie węzły drzewa podrzędne, które są przypisane do <xref:System.Windows.Forms.TreeNode>, są usuwane z <xref:System.Windows.Forms.TreeView>. Węzły podrzędne usunięte zostaną usunięte z <xref:System.Windows.Forms.TreeView> , ale nadal są dołączone do tego węzła drzewa.  
  
   
  
## Examples  
 Poniższy kod usuwa przykład <xref:System.Windows.Forms.TreeNode> po użytkownik kliknie prawym przyciskiem myszy wskaźnik myszy nad nim i go Włącza/wyłącza rozwinięte do zwinięte, gdy użytkownik kliknie kółka myszy nad nim. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> kontroli na nim. <xref:System.Windows.Forms.TreeView> Powinien mieć co najmniej dwa węzły drzewa katalogu głównego, każde posiada co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość indeksu obrazu listy obrazu, który jest wyświetlane, gdy węzeł drzewa jest w stanie wybrania.</summary>
        <value>Wartość od zera indeks, która reprezentuje pozycja obrazu w <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> Wartość jest wartością indeksu <xref:System.Drawing.Image> przechowywane w <xref:System.Windows.Forms.ImageList> przypisane do <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> właściwości.  
  
> [!NOTE]
>  Wartość domyślna <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> właściwości jest taka sama jak <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> właściwość <xref:System.Windows.Forms.TreeView> kontrolkę, która <xref:System.Windows.Forms.TreeNode> przypisano do.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy i przypisuje <xref:System.Windows.Forms.ImageList> do <xref:System.Windows.Forms.TreeView> kontroli i wypełnienia <xref:System.Windows.Forms.TreeView> kontrolką <xref:System.Windows.Forms.TreeNode> obiektów. Węzły drzewa są przypisywane obrazów z <xref:System.Windows.Forms.ImageList> która jest wyświetlana, gdy węzeł drzewa jest w stanie zaznaczony lub niezaznaczony. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> zawierający <xref:System.Windows.Forms.TreeView>i <xref:System.Collections.ArrayList> zawierający `Customer` obiektów, każdy zawiera `Order` obiektów. Wymaga również, aby `Customer` i `Order` obiekty są zdefiniowane.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz obrazu wyświetlanego w węźle drzewa, gdy jest on w stanie wybrania.</summary>
        <value>Klucz obrazu wyświetlanego, gdy węzeł drzewa jest w stanie wybrania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz obraz zwracane przez tę właściwość znajduje się w <xref:System.Windows.Forms.TreeView.ImageList%2A> właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView> kontroli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Serialize (si, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Opisujący <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> Wskazujące stan strumienia podczas serializacji.</param>
        <summary>Zapisuje stan <see cref="T:System.Windows.Forms.TreeNode" /> określonej <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla usług serializacji. Wyliczenie skojarzone: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks obrazu, który jest używany do wskazania stanu <see cref="T:System.Windows.Forms.TreeNode" /> po nadrzędnej <see cref="T:System.Windows.Forms.TreeView" /> ma jego <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> właściwością <see langword="false" />.</summary>
        <value>Indeks obrazu, który służy do wskazywania stanu <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indeks obrazu, który jest zwracany przez właściwość ta jest zawarta w <xref:System.Windows.Forms.TreeView.StateImageList%2A> właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView> kontroli.  
  
 Jeśli element nadrzędny <xref:System.Windows.Forms.TreeView> jest zaznaczone, pola wyboru <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> jest ignorowany i węzeł będzie wyświetlany obraz pierwszej lub drugiej w <xref:System.Windows.Forms.TreeView.StateImageList%2A> Ustawianie nadrzędnej <xref:System.Windows.Forms.TreeView> do wskazywania stanu usunięcia zaznaczenia lub zaznaczone, odpowiednio. Przełączanie <xref:System.Windows.Forms.TreeNode.Checked%2A> właściwość nie ma wpływu na wartość <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>.  
  
 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> Zwraca wartość -1 Jeśli nieustawiona. <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> i <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> właściwości wykluczają się wzajemnie, co oznacza, jeśli jest on ustawiony, druga jest ignorowana. Jeśli ustawisz <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> właściwości <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> właściwość jest automatycznie ustawiona na wartość -1. Alternatywnie Jeśli ustawisz <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> jest automatycznie ustawiana na ciąg pusty ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony indeks jest mniejsza niż -1 lub większa niż 14.</exception>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageKey" />
      </Docs>
    </Member>
    <Member MemberName="StateImageKey">
      <MemberSignature Language="C#" Value="public string StateImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz obrazu, który jest używany do wskazania stanu <see cref="T:System.Windows.Forms.TreeNode" /> po nadrzędnej <see cref="T:System.Windows.Forms.TreeView" /> ma jego <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> właściwością <see langword="false" />.</summary>
        <value>Klucz obraz, który jest używany do wskazania stanu <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz obrazu, który jest zwracany przez tę właściwość znajduje się w <xref:System.Windows.Forms.TreeView.StateImageList%2A> właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView> kontroli.  
  
 Jeśli element nadrzędny <xref:System.Windows.Forms.TreeView> jest zaznaczone, pola wyboru <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> jest ignorowany i węzeł będzie wyświetlany obraz pierwszej lub drugiej w <xref:System.Windows.Forms.TreeView.StateImageList%2A> Ustawianie nadrzędnej <xref:System.Windows.Forms.TreeView> do wskazywania stanu usunięcia zaznaczenia lub zaznaczone, odpowiednio. Przełączanie <xref:System.Windows.Forms.TreeNode.Checked%2A> właściwość nie ma wpływu na wartość <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>.  
  
 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> i <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> właściwości wykluczają się wzajemnie, co oznacza, jeśli jest on ustawiony, druga jest ignorowana. Jeśli ustawisz <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> właściwości <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> właściwość jest automatycznie ustawiona na wartość -1. Alternatywnie Jeśli ustawisz <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> jest automatycznie ustawiana na ciąg pusty (""). Należy ustawić <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> do obrazu z zakresu od 0 do 14 odpowiedni indeks. Możesz ustawić <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> do obrazu z indeksem wartość większą niż 14 (wyjątek nie zostanie zgłoszony), ale obraz może nie być wyświetlany  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> zawierający dane do serializacji <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">Element <see cref="T:System.Runtime.Serialization.StreamingContext" /> zawierający informacje docelowy dla tej serializacji.</param>
        <summary>Wypełnia obiekt informacji o serializacji dane potrzebne do serializacji <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">dla usług serializacji. Wyliczenie skojarzone: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.TreeNode.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera dane dotyczące węzła drzewa.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane dotyczące węzła drzewa. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszelkie <xref:System.Object> typu pochodnego można przypisać do tej właściwości. Jeśli ta właściwość jest ustawiana za pomocą projektanta Windows Forms, można przypisać tylko tekst.  
  
> [!CAUTION]
>  <xref:System.Windows.Forms.TreeNode.Clone%2A> Metoda wykonuje płytką kopię węzła. Jeśli wartość <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwość jest typem referencyjnym, oryginalne i sklonowanej kopii wskaże w tym samym pojedynczego wystąpienia <xref:System.Windows.Forms.TreeNode.Tag%2A> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy węzeł główny drzewa można przypisać podrzędnych węzłów drzewa. Węzeł drzewa podrzędnego dla każdego `Customer` obiektu <xref:System.Collections.ArrayList> zostanie dodany do węzła głównego drzewa, a także węzła drzewa podrzędnego dla każdego `Order` przypisane do obiektu `Customer` obiektu. `Customer` Przypisany jest obiekt <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwość i węzły drzewa reprezentujący `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstu. W tym przykładzie wymaga, że masz `Customer` i `Order` zdefiniowanego obiektu <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form>i <xref:System.Collections.ArrayList> o nazwie `customerArray` zawierający `Customer` obiektów.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany w etykiecie węzła drzewa.</summary>
        <value>Tekst wyświetlany w etykiecie węzła drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maksymalna liczba znaków, które <xref:System.Windows.Forms.TreeNode> można 259 są wyświetlane. Jeśli <xref:System.String> ma więcej niż 259 znaków jest przypisany do tej właściwości, wyświetlane są tylko pierwsze 259 znaków.  
  
 Nie można ustawić tej właściwości przez użytkownika, jeśli <xref:System.Windows.Forms.TreeView.LabelEdit%2A> właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView> ustawiono `false`. Alternatywa jawne ustawienie tej właściwości jest utworzenie węzła drzewa za pomocą jednego z <xref:System.Windows.Forms.TreeNode.%23ctor%2A> konstruktorów, które ma parametr typu ciąg, który reprezentuje <xref:System.Windows.Forms.TreeNode.Text%2A> właściwości. Etykieta jest wyświetlana obok <xref:System.Windows.Forms.TreeNode> obrazu, jeśli wyświetlony zostanie jeden.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy węzeł główny drzewa można przypisać podrzędnych węzłów drzewa. Węzeł drzewa podrzędnego dla każdego `Customer` obiektu <xref:System.Collections.ArrayList> zostanie dodany do węzła głównego drzewa, a także węzła drzewa podrzędnego dla każdego `Order` przypisane do obiektu `Customer` obiektu. `Customer` Przypisany jest obiekt <xref:System.Windows.Forms.TreeNode.Tag%2A> właściwość i węzły drzewa reprezentujący `Customer` obiekty są wyświetlane z <xref:System.Drawing.Color.Orange%2A> tekstu. W tym przykładzie wymaga, że masz `Customer` i `Order` zdefiniowanego obiektu <xref:System.Windows.Forms.TreeView> kontrolować na <xref:System.Windows.Forms.Form>i <xref:System.Collections.ArrayList> o nazwie `customerArray` zawierający `Customer` obiektów.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.LabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public void Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Toggle" />
      <MemberSignature Language="VB.NET" Value="Public Sub Toggle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Toggle();" />
      <MemberSignature Language="F#" Value="member this.Toggle : unit -&gt; unit" Usage="treeNode.Toggle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przełącza węzeł drzewa do jednej stanie rozwiniętym czy zwinięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Węzeł drzewa jest przełączane do stanu przeciwne swojego bieżącego stanu albo rozwinięta czy zwinięta.  
  
> [!NOTE]
>  Stan <xref:System.Windows.Forms.TreeNode> jest trwały. Na przykład, jeśli następny poziom węzłów podrzędnych nie sbalil wcześniej, gdy <xref:System.Windows.Forms.TreeNode.Expand%2A> metoda jest wywoływana, węzły podrzędne są wyświetlane w stanie rozwiniętym wcześniej.  
  
   
  
## Examples  
 Poniższy kod usuwa przykład <xref:System.Windows.Forms.TreeNode> po użytkownik kliknie prawym przyciskiem myszy wskaźnik myszy nad nim i go Włącza/wyłącza rozwinięte do zwinięte, gdy użytkownik kliknie kółka myszy nad nim. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> kontroli na nim. <xref:System.Windows.Forms.TreeView> Powinien mieć co najmniej dwa węzły drzewa katalogu głównego, każde posiada co najmniej jeden węzeł podrzędny.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który pojawia się po zatrzymaniu wskaźnika myszy nad <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>Pobiera tekst, który pojawia się po zatrzymaniu wskaźnika myszy nad <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView> do `true` dla <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> mają być wyświetlane w czasie wykonywania.  
  
 Jeśli <xref:System.Windows.Forms.TreeView> kontroli ma etykietka narzędzia, a także <xref:System.Windows.Forms.TreeNode> zawierający <xref:System.Windows.Forms.ToolTip>, tylko <xref:System.Windows.Forms.ToolTip> dla węzła będą wyświetlane.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> i <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> właściwości. Aby uruchomić ten przykład, wklej następujący kod do formularza Windows, a wywołanie `InitializeTreeViewWithToolTips` z konstruktora formularza lub <xref:System.Windows.Forms.Form.Load> programu obsługi zdarzeń.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg, który reprezentuje bieżący obiekt.</summary>
        <returns>Ciąg, który reprezentuje bieżący obiekt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeView TreeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeView TreeView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.TreeView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TreeView As TreeView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeView ^ TreeView { System::Windows::Forms::TreeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TreeView : System.Windows.Forms.TreeView" Usage="System.Windows.Forms.TreeNode.TreeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element nadrzędny widok drzewa, przypisany do węzła drzewa.</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeView" /> reprezentujący widok drzewa nadrzędnego, przypisany do węzła drzewa lub <see langword="null" /> Jeśli węzeł nie został przypisany do widoku drzewa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Wybiera odpowiednią klasę w poniższym przykładzie kodu <xref:System.Windows.Forms.TreeNode> po ustaleniu, jeśli <xref:System.Windows.Forms.TreeNode> przekazany na jest wybrany, które <xref:System.Windows.Forms.TreeNode> do wybrania. W tym przykładzie wymaga, że masz <xref:System.Windows.Forms.Form> z <xref:System.Windows.Forms.TreeView> formantu, który ma <xref:System.Windows.Forms.TreeNodeCollection> zawiera kilka <xref:System.Windows.Forms.TreeNode> obiektów. Wymaga to również, że masz <xref:System.Windows.Forms.ComboBox> z następującymi elementami: "Wstecz", "PreviousVisible", "Dalej", "NextVisible", "Pierwszy" i "Ostatni".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>