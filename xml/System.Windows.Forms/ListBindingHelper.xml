<Type Name="ListBindingHelper" FullName="System.Windows.Forms.ListBindingHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3f7ff5de55e274bd65cdc8470e83223c08c26ba" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37510091" /></Metadata><TypeSignature Language="C#" Value="public static class ListBindingHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ListBindingHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBindingHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBindingHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBindingHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type ListBindingHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferuje funkcje, aby dowiedzieć się, może być powiązana lista i właściwości elementów zawartych w wykazie, gdy będą się różnić od publiczne właściwości obiektu, do którego mogą powiązać.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana przez klasy, takie jak <xref:System.Windows.Forms.BindingSource>.  
  
 Należy pamiętać, że dla aplikacji na Smartfonie, ta klasa wymaga oprogramowania Windows Mobile w wersji 5.0 dla Smartfonów.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetList">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca listę skojarzone ze źródłem danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public static object GetList (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetList(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetList(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetList (list As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetList(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetList : obj -&gt; obj" Usage="System.Windows.Forms.ListBindingHelper.GetList list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">Źródło danych, aby zbadać jego listy źródłowej.</param>
        <summary>Zwraca listę skojarzone z określonym źródłem danych.</summary>
        <returns><see cref="T:System.Object" /> Reprezentujący listę podstawowych, jeśli istnieje; w przeciwnym razie oryginalnego źródła danych są określone przez <paramref name="list" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli źródło danych określone przez `list` implementuje parametr <xref:System.ComponentModel.IListSource> interfejsu, a następnie <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> metoda zwróci obiekt typu <xref:System.Collections.IList> reprezentujący skojarzonej listy. W przeciwnym razie ta metoda po prostu zwróci z określonym źródłem danych ponieważ nie istnieje żadna lista podstawowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public static object GetList (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetList(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetList(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetList (dataSource As Object, dataMember As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetList(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="static member GetList : obj * string -&gt; obj" Usage="System.Windows.Forms.ListBindingHelper.GetList (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych, z której można znaleźć na liście.</param>
        <param name="dataMember">Nazwa właściwości źródła danych, który zawiera listę. Może to być <see langword="null" />.</param>
        <summary>Zwraca obiekt, zwykle listę, z wersji ewaluacyjnej określonego źródła danych i element członkowski danych opcjonalne.</summary>
        <returns><see cref="T:System.Object" /> Reprezentujący listę podstawowych, jeśli został on znaleziony; w przeciwnym razie wartość <paramref name="dataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli element członkowski danych jest `null` ani być pustym ciągiem (""), <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> metoda zwraca `dataSource`.  
  
 Jeśli `dataSource` nie jest to lista <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> zwraca wartość `dataSource` właściwość, która odpowiada `dataMember` wartość.  
  
 Jeśli `dataSource` jest listą, w tym implementuje on <xref:System.Windows.Forms.ICurrencyManagerProvider> lub <xref:System.Collections.IEnumerable> interfejsy podstawowa lista są pobierane przez wybranie elementu z listy i wykonywanie zapytań ten element jako wartość właściwości o nazwie określonej przez `dataMember`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nazwa elementu członkowskiego określone dane nie były zgodne dowolne z właściwości znaleziono dla źródła danych.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetListItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , który opisuje właściwości elementów znajdujących się na liście lub samej listy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (list As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">Źródło danych, aby sprawdzić, aby uzyskać informacje o właściwościach.</param>
        <summary>Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , który opisuje właściwości typu elementów zawartych w określonym źródłem danych lub właściwości z określonym źródłem danych.</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Zawierający właściwości elementów znajdujących się w <paramref name="list" />, lub właściwości <paramref name="list." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> Metoda służy do sprawdzenia zbiór właściwości źródła danych. Akcja ta metoda jest zależna od rzeczywisty typ `list` parametru, zgodnie z poniższą tabelą:  
  
|Typ parametru|Akcja|  
|--------------------|------------|  
|Typ, który jest lista lub kolekcję elementów.|Zwraca <xref:System.ComponentModel.PropertyDescriptorCollection> opisujący właściwości tego typu elementu znajdujących się na liście.|  
|Typ, który nie jest lista lub kolekcji.|Zwraca <xref:System.ComponentModel.PropertyDescriptorCollection> opisujący właściwości tego typu.|  
|`null`|Zwraca pustą <xref:System.ComponentModel.PropertyDescriptorCollection>.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object list, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object list, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (list As Object, listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ list, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj * System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties (list, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="list">Źródło danych pod względem informacji o właściwościach.</param>
        <param name="listAccessors"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Tablica zawierająca opis właściwości, które danych źródłowych do sprawdzenia. Może to być <see langword="null" />.</param>
        <summary>Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , który opisuje właściwości typu elementów zawartych w kolekcji właściwości źródła danych. Używa określonego <see cref="T:System.ComponentModel.PropertyDescriptor" /> tablicy, aby wskazać, które właściwości do sprawdzenia.</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Opisujący właściwości tego typu elementu zawarte w kolekcji właściwości źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> Metoda jest przydatna, gdy źródło danych ma właściwości, które są kolekcję elementów i musisz znać właściwości typu elementu w kolekcji, a nie właściwości typu kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object dataSource, string dataMember, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object dataSource, string dataMember, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object,System.String,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (dataSource As Object, dataMember As String, listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ dataSource, System::String ^ dataMember, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj * string * System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties (dataSource, dataMember, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych pod względem informacji o właściwościach.</param>
        <param name="dataMember">Element opcjonalnymi danymi do badania, aby uzyskać informacje o właściwościach. Może to być <see langword="null" />.</param>
        <param name="listAccessors"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Tablica zawierająca opis właściwości, które składowej danych, aby zbadać. Może to być <see langword="null" />.</param>
        <summary>Zwraca <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , który opisuje właściwości typu elementów zawartych w elemencie członkowskim określone dane, które źródła danych. Używa określonego <see cref="T:System.ComponentModel.PropertyDescriptor" /> tablicy, aby wskazać, które właściwości do sprawdzenia.</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Opisujący właściwości typu elementu zawartych we właściwości kolekcji z określonym źródłem danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `dataMember` Parametr może być `null`, w którym to przypadku <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> metoda zwróci opisy właściwości przy użyciu źródła danych i <xref:System.ComponentModel.PropertyDescriptor> tablicy.  
  
 <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> jest przydatne, gdy element członkowski danych ma właściwości, które są kolekcję elementów, trzeba znać właściwości typu elementu w kolekcji, a nie właściwości typu kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie można odnaleźć elementu członkowskiego określone dane w określonym źródłem danych.</exception>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetListItemType">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca typ elementu znajdujących się na liście lub kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetListItemType">
      <MemberSignature Language="C#" Value="public static Type GetListItemType (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetListItemType(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemType (list As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetListItemType(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetListItemType : obj -&gt; Type" Usage="System.Windows.Forms.ListBindingHelper.GetListItemType list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">Na liście, aby być sprawdzany pod kątem informacji o typie.</param>
        <summary>Zwraca typ danych elementów na liście.</summary>
        <returns><see cref="T:System.Type" /> Elementów znajdujących się na liście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `list` parametr nie jest listy lub tablicy, typ zwracany będzie `list` parametru sam.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListItemType">
      <MemberSignature Language="C#" Value="public static Type GetListItemType (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetListItemType(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemType(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemType (dataSource As Object, dataMember As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetListItemType(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="static member GetListItemType : obj * string -&gt; Type" Usage="System.Windows.Forms.ListBindingHelper.GetListItemType (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych, aby zbadać elementów.</param>
        <param name="dataMember">Opcjonalna nazwa właściwości w źródle danych, który ma być używany jako element członkowski danych. Może to być <see langword="null" />.</param>
        <summary>Zwraca typ danych elementów w określonym źródłem danych.</summary>
        <returns>Złożone powiązanie danych, aby uzyskać <see cref="T:System.Type" /> elementów, reprezentowane przez <paramref name="dataMember" /> w źródle danych; w przeciwnym razie <see cref="T:System.Type" /> elementu w samej listy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListBindingHelper.GetListItemType%2A> metoda jest używana do określenia typu elementów używanych w złożonych lub prostych systemów powiązanie danych. Ta metoda statyczna może być przydatne w określaniu, czy proponowane schemat powiązania danych jest odpowiednia, przed podjęciem próby jego wykonania.  
  
 Jeśli `dataSource` jest `null`, nie można odnaleźć deskryptorów właściwości dla elementów listy składowej danych określony lub jest deskryptora właściwości elementu listy <xref:System.ComponentModel.ICustomTypeDescriptor>, wówczas ta metoda zwraca typ <xref:System.Object> klasy.  
  
 Jeśli `dataMember` jest `null` lub jest pusty, ta metoda zwraca <xref:System.Type> elementów w źródle danych, jeśli jest to lista; w przeciwnym razie ta metoda zwraca <xref:System.Type> danych źródłowych sam.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public static string GetListName (object list, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetListName(object list, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListName(System.Object,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListName (list As Object, listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetListName(System::Object ^ list, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListName : obj * System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="System.Windows.Forms.ListBindingHelper.GetListName (list, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="list">Źródło danych, aby sprawdzić nazwę listy.</param>
        <param name="listAccessors">Tablica <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektu do znalezienia w źródle danych. Może to być <see langword="null" />.</param>
        <summary>Zwraca nazwę odpowiednią listę danego źródła danych i opcjonalnych <see cref="T:System.ComponentModel.PropertyDescriptor" /> tablicy.</summary>
        <returns>Nazwa listy w źródle danych, zgodnie z opisem w <paramref name="listAccessors" />, lub nazwę typu źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `listAccessors` jest `null` lub jest pusty, <xref:System.Windows.Forms.ListBindingHelper.GetListName%2A> metoda zwraca nazwę typu źródła danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
  </Members>
</Type>