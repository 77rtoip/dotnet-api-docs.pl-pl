<Type Name="ListBindingHelper" FullName="System.Windows.Forms.ListBindingHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1aa35b5455790549f2803d74c12ff34586fd9e47" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69185646" /></Metadata><TypeSignature Language="C#" Value="public static class ListBindingHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ListBindingHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBindingHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBindingHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBindingHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type ListBindingHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferuje funkcje do wykrywania listy możliwej do powiązania i właściwości elementów znajdujących się na liście, jeśli różnią się one od właściwości publicznych obiektu, z którym są powiązane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana przez klasy takie jak <xref:System.Windows.Forms.BindingSource>.  
  
 Należy pamiętać, że w przypadku aplikacji Smartphone Ta klasa wymaga oprogramowania Windows Mobile w wersji 5,0 dla telefonów Smartphone.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetList">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca listę skojarzoną ze źródłem danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public static object GetList (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetList(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetList(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetList (list As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetList(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetList : obj -&gt; obj" Usage="System.Windows.Forms.ListBindingHelper.GetList list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">Źródło danych do sprawdzenia dla swojej podstawowej listy.</param>
        <summary>Zwraca listę skojarzoną z określonym źródłem danych.</summary>
        <returns>Reprezentuje podstawową listę, jeśli istnieje; w przeciwnym razie oryginalne źródło danych określone przez <paramref name="list" />. <see cref="T:System.Object" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli źródło danych określone `list` przez parametr <xref:System.ComponentModel.IListSource> implementuje interfejs, <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> Metoda zwróci obiekt typu <xref:System.Collections.IList> , który reprezentuje skojarzoną listę. W przeciwnym razie ta metoda będzie po prostu zwracać określone źródło danych, ponieważ nie istnieje lista podstawowa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public static object GetList (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetList(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetList(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetList (dataSource As Object, dataMember As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetList(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="static member GetList : obj * string -&gt; obj" Usage="System.Windows.Forms.ListBindingHelper.GetList (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych, z którego ma zostać znaleziona lista.</param>
        <param name="dataMember">Nazwa właściwości źródła danych, która zawiera listę. Może to być <see langword="null" />.</param>
        <summary>Zwraca obiekt, zazwyczaj listę, z oceny określonego źródła danych i opcjonalnego elementu członkowskiego danych.</summary>
        <returns>Reprezentuje podstawową listę, <paramref name="dataSource" />jeśli została znaleziona; w przeciwnym razie. <see cref="T:System.Object" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli składowa danych jest `null` lub jest pustym ciągiem ("") <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> , metoda zwraca `dataSource`.  
  
 Jeśli `dataSource` nie jest listą, <xref:System.Windows.Forms.ListBindingHelper.GetList%2A> `dataSource` zwraca wartość właściwości, która pasuje do `dataMember` wartości.  
  
 Jeśli `dataSource` jest listą, w tym, że implementuje <xref:System.Windows.Forms.ICurrencyManagerProvider> ona interfejsy <xref:System.Collections.IEnumerable> lub, to podstawowa lista jest uzyskiwana przez wybranie elementu z listy i zbadanie tego elementu `dataMember`dla wartości właściwości o nazwie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określona nazwa elementu członkowskiego danych nie jest zgodna z żadną właściwością znalezioną dla źródła danych.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetListItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Zwraca, który opisuje właściwości elementów znajdujących się na liście lub samej liście.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (list As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">Źródło danych do sprawdzenia informacji o właściwościach.</param>
        <summary>Zwraca, <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> który opisuje właściwości typu elementu zawartego w określonym źródle danych lub właściwości określonego źródła danych.</summary>
        <returns>Zawiera właściwości elementów zawartych w <paramref name="list" />lub właściwości <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /><paramref name="list." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> Metoda jest używana do badania kolekcji właściwości dla źródła danych. Akcja tej metody zależy od rzeczywistego typu `list` parametru zgodnie z poniższą tabelą:  
  
|Typ parametru|Akcja|  
|--------------------|------------|  
|Typ, który jest listą lub kolekcją elementów.|<xref:System.ComponentModel.PropertyDescriptorCollection> Zwraca opis właściwości typu elementu znajdującego się na liście.|  
|Typ, który nie jest listą ani kolekcją.|<xref:System.ComponentModel.PropertyDescriptorCollection> Zwraca opis właściwości typu.|  
|`null`|Zwraca wartość pustą <xref:System.ComponentModel.PropertyDescriptorCollection>.|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object list, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object list, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (list As Object, listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ list, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj * System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties (list, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="list">Źródło danych, które ma zostać zbadane pod kątem informacji o właściwościach.</param>
        <param name="listAccessors"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Tablica opisująca właściwości źródła danych do sprawdzenia. Może to być <see langword="null" />.</param>
        <summary>Zwraca, <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> który opisuje właściwości typu elementu zawarte we właściwości kolekcji źródła danych. Używa określonej <see cref="T:System.ComponentModel.PropertyDescriptor" /> tablicy, aby wskazać, które właściwości mają być badane.</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Opis właściwości typu elementu zawartego we właściwości kolekcji źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A> Metoda jest przydatna, gdy źródło danych ma właściwości, które są kolekcją elementów i należy znać właściwości typu elementu w kolekcji, a nie właściwości typu kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListItemProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetListItemProperties (object dataSource, string dataMember, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetListItemProperties(object dataSource, string dataMember, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemProperties(System.Object,System.String,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemProperties (dataSource As Object, dataMember As String, listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetListItemProperties(System::Object ^ dataSource, System::String ^ dataMember, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListItemProperties : obj * string * System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.Windows.Forms.ListBindingHelper.GetListItemProperties (dataSource, dataMember, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych, które ma zostać zbadane pod kątem informacji o właściwościach.</param>
        <param name="dataMember">Opcjonalny element członkowski danych do zbadania w celu uzyskania informacji o właściwościach. Może to być <see langword="null" />.</param>
        <param name="listAccessors"><see cref="T:System.ComponentModel.PropertyDescriptor" /> Tablica opisująca właściwości elementu członkowskiego danych do sprawdzenia. Może to być <see langword="null" />.</param>
        <summary>Zwraca, <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> który opisuje właściwości typu elementu zawartego w określonym elemencie członkowskim danych źródła danych. Używa określonej <see cref="T:System.ComponentModel.PropertyDescriptor" /> tablicy, aby wskazać, które właściwości mają być badane.</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> Opis właściwości typu elementu zawartego we właściwości kolekcji określonego źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr `dataMember` może mieć `null`wartość ,w<xref:System.ComponentModel.PropertyDescriptor> tym przypadku Metodazwróciopisywłaściwościprzyużyciuźródładanychitablicy.<xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A>  
  
 <xref:System.Windows.Forms.ListBindingHelper.GetListItemProperties%2A>jest przydatne, gdy element członkowski danych ma właściwości, które są kolekcją elementów i należy znać właściwości typu elementu w kolekcji, a nie właściwości typu kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie można odnaleźć określonego elementu członkowskiego danych w określonym źródle danych.</exception>
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetListItemType">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca typ elementu zawartego w liście lub kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetListItemType">
      <MemberSignature Language="C#" Value="public static Type GetListItemType (object list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetListItemType(object list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemType (list As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetListItemType(System::Object ^ list);" />
      <MemberSignature Language="F#" Value="static member GetListItemType : obj -&gt; Type" Usage="System.Windows.Forms.ListBindingHelper.GetListItemType list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="list">Lista, która ma zostać zbadana pod kątem informacji o typie.</param>
        <summary>Zwraca typ danych elementów z określonej listy.</summary>
        <returns><see cref="T:System.Type" /> Elementy znajdujące się na liście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli parametr nie jest listą ani tablicą, zwracany typ będzie `list` sam parametru. `list`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListItemType">
      <MemberSignature Language="C#" Value="public static Type GetListItemType (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetListItemType(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListItemType(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListItemType (dataSource As Object, dataMember As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetListItemType(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="static member GetListItemType : obj * string -&gt; Type" Usage="System.Windows.Forms.ListBindingHelper.GetListItemType (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych do sprawdzenia dla elementów.</param>
        <param name="dataMember">Opcjonalna nazwa właściwości w źródle danych, która ma być używana jako element członkowski danych. Może to być <see langword="null" />.</param>
        <summary>Zwraca typ danych elementów w określonym źródle danych.</summary>
        <returns>W przypadku złożonych powiązań <see cref="T:System.Type" /> danych elementy reprezentowane <paramref name="dataMember" /> przez <see cref="T:System.Type" /> źródło danych; w przeciwnym razie, elementu na liście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wersja <xref:System.Windows.Forms.ListBindingHelper.GetListItemType%2A> metody służy do określania typu elementów używanych w złożonych lub prostych schematach powiązań danych. Ta metoda statyczna może być przydatna w ustaleniu, czy proponowany schemat powiązań danych jest odpowiedni przed podjęciem próby.  
  
 Jeśli `dataSource` <xref:System.ComponentModel.ICustomTypeDescriptor> <xref:System.Object> tak `null`, nie można odnaleźć deskryptorów właściwości dla elementów listy określonego elementu członkowskiego danych lub deskryptora właściwości dla elementu listy jest, a następnie metoda zwraca typ klasy.  
  
 Jeśli `dataMember` <xref:System.Type> <xref:System.Type> jest `null` lub puste, Metoda ta zwraca elementy w źródle danych, jeśli jest to lista; w przeciwnym razie ta metoda zwraca źródło danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public static string GetListName (object list, System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetListName(object list, class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBindingHelper.GetListName(System.Object,System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetListName (list As Object, listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetListName(System::Object ^ list, cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="static member GetListName : obj * System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="System.Windows.Forms.ListBindingHelper.GetListName (list, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Object" />
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="list">Źródło danych, które ma zostać sprawdzone pod kątem nazwy listy.</param>
        <param name="listAccessors">Tablica <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektów do znalezienia w źródle danych. Może to być <see langword="null" />.</param>
        <summary>Zwraca nazwę podstawowej listy, z uwzględnieniem źródła danych i tablicy opcjonalnej <see cref="T:System.ComponentModel.PropertyDescriptor" /> .</summary>
        <returns>Nazwa listy w źródle danych, zgodnie z opisem <paramref name="listAccessors" />lub nazwą typu źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `listAccessors` <xref:System.Windows.Forms.ListBindingHelper.GetListName%2A> jest `null` lub puste, metoda zwraca nazwę typu źródła danych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
  </Members>
</Type>
