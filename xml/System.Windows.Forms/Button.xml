<Type Name="Button" FullName="System.Windows.Forms.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4b67e3a8c75952388c829699e52b6c9e542ea23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Windows.Forms.ButtonBase, System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Windows.Forms.ButtonBase implements class System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase&#xA;Implements IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Forms::ButtonBase, System::Windows::Forms::IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eefb8-101">Reprezentuje kontrolkę przycisku systemu Windows.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eefb8-101">Represents a Windows button control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-102">A <xref:System.Windows.Forms.Button> kliknięcie za pomocą myszy, klawisz ENTER lub spacji, gdy przycisk ma fokus.</span><span class="sxs-lookup"><span data-stu-id="eefb8-102">A <xref:System.Windows.Forms.Button> can be clicked by using the mouse, ENTER key, or SPACEBAR if the button has focus.</span></span>  
  
 <span data-ttu-id="eefb8-103">Ustaw <xref:System.Windows.Forms.Form.AcceptButton%2A> lub <xref:System.Windows.Forms.Form.CancelButton%2A> właściwość <xref:System.Windows.Forms.Form> pozwoli użytkownikom na przycisk, naciskając klawisz ENTER lub ESC kluczy, nawet wtedy, gdy przycisk ma fokus.</span><span class="sxs-lookup"><span data-stu-id="eefb8-103">Set the <xref:System.Windows.Forms.Form.AcceptButton%2A> or <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form> to allow users to click a button by pressing the ENTER or ESC keys even if the button does not have focus.</span></span> <span data-ttu-id="eefb8-104">Dzięki temu formularza zachowanie okna dialogowego.</span><span class="sxs-lookup"><span data-stu-id="eefb8-104">This gives the form the behavior of a dialog box.</span></span>  
  
 <span data-ttu-id="eefb8-105">Po wyświetleniu formularza za pomocą <xref:System.Windows.Forms.Form.ShowDialog%2A> metody, można użyć <xref:System.Windows.Forms.Button.DialogResult%2A> właściwość przycisk, aby określić wartość zwracaną <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="eefb8-105">When you display a form using the <xref:System.Windows.Forms.Form.ShowDialog%2A> method, you can use the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a button to specify the return value of <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="eefb8-106">Można zmienić wygląd przycisku.</span><span class="sxs-lookup"><span data-stu-id="eefb8-106">You can change the button's appearance.</span></span> <span data-ttu-id="eefb8-107">Na przykład można wydawać płaski wygląd sieci Web, należy ustawić <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> właściwości <xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eefb8-107">For example, to make it appear flat for a Web look, set the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property to <xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eefb8-108"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> Można również ustawić właściwość <xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType>, widocznego płaskiej dopóki wskaźnik myszy przesuwa się nad przycisk; a następnie przycisk przejmuje standardowe wygląd przycisku systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="eefb8-108">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property can also be set to <xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType>, which appears flat until the mouse pointer passes over the button; then the button takes on the standard Windows button appearance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eefb8-109">Formant, który ma fokus akceptuje i przetwarza naciśnięcie klawisza ENTER <xref:System.Windows.Forms.Button> nie przetwarza.</span><span class="sxs-lookup"><span data-stu-id="eefb8-109">If the control that has focus accepts and processes the ENTER key press, the <xref:System.Windows.Forms.Button> does not process it.</span></span> <span data-ttu-id="eefb8-110">Na przykład, jeśli w wielowierszowym formancie <xref:System.Windows.Forms.TextBox> lub inny przycisk ma fokus, że formant przetwarza naciśnięcie klawisza ENTER zamiast na przycisk Akceptuj.</span><span class="sxs-lookup"><span data-stu-id="eefb8-110">For example, if a multiline <xref:System.Windows.Forms.TextBox> or another button has focus, that control processes the ENTER key press instead of the accept button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eefb8-111">Poniższy przykład kodu tworzy <xref:System.Windows.Forms.Button>, ustawia jego <xref:System.Windows.Forms.Button.DialogResult%2A> właściwości <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>i dodaje go do <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="eefb8-111">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.Button.DialogResult%2A> property to <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ButtonBase" />
    <altmember cref="T:System.Windows.Forms.RadioButton" />
    <altmember cref="T:System.Windows.Forms.CheckBox" />
    <altmember cref="T:System.Windows.Forms.IButtonControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eefb8-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.Button" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.Button" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-113">Domyślnie <xref:System.Windows.Forms.Button> Wyświetla bez podpisu.</span><span class="sxs-lookup"><span data-stu-id="eefb8-113">By default the <xref:System.Windows.Forms.Button> displays no caption.</span></span> <span data-ttu-id="eefb8-114">Aby tekst podpisu, ustaw <xref:System.Windows.Forms.Control.Text%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="eefb8-114">To specify the caption text, set the <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eefb8-115">Poniższy przykład kodu tworzy <xref:System.Windows.Forms.Button>, ustawia jego <xref:System.Windows.Forms.Button.DialogResult%2A> właściwości `OK` wartość <xref:System.Windows.Forms.DialogResult>i dodaje go do <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="eefb8-115">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.Button.DialogResult%2A> property to the `OK` value of <xref:System.Windows.Forms.DialogResult>, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eefb8-116">Pobiera lub ustawia tryb, za pomocą którego <see cref="T:System.Windows.Forms.Button" /> automatycznie samodzielnie zmienia rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-116">Gets or sets the mode by which the <see cref="T:System.Windows.Forms.Button" /> automatically resizes itself.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eefb8-117">Jeden z <see cref="T:System.Windows.Forms.AutoSizeMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-117">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span>
          </span>
          <span data-ttu-id="eefb8-118">Wartość domyślna to <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-118">The default value is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eefb8-119">Pobiera <see cref="T:System.Windows.Forms.CreateParams" /> dla klasy podstawowej podczas tworzenia okna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-119">Gets a <see cref="T:System.Windows.Forms.CreateParams" /> on the base class when creating a window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eefb8-120">A <see cref="T:System.Windows.Forms.CreateParams" /> obiektu dla klasy podstawowej podczas tworzenia okna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-120">A <see cref="T:System.Windows.Forms.CreateParams" /> object on the base class when creating a window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-121">Dziedziczenie klas mogą zastąpić tę właściwość, aby dodać dodatkowe funkcje, ale najpierw należy wywołać <xref:System.Windows.Forms.CreateParams> konstruktora dla klasy podstawowej, aby sprawdzić, czy formant w dalszym ciągu działać poprawnie.</span><span class="sxs-lookup"><span data-stu-id="eefb8-121">Inheriting classes can override this property to add extra functionality, but must first call the <xref:System.Windows.Forms.CreateParams> constructor on the base class to verify that the control continues to work correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IButtonControl.DialogResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eefb8-122">Pobiera lub ustawia wartość, która jest zwracana do formularza nadrzędnego, gdy przycisk zostanie kliknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-122">Gets or sets a value that is returned to the parent form when the button is clicked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eefb8-123">Jeden z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-123">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
          <span data-ttu-id="eefb8-124">Wartość domyślna to <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-124">The default value is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-125">Jeśli <xref:System.Windows.Forms.DialogResult> dla tej właściwości jest ustawiony na niczego innych niż `None`, a jeśli formularz nadrzędny został wyświetlony przez <xref:System.Windows.Forms.Form.ShowDialog%2A> metody, klikając przycisk zamyka formularz nadrzędny bez konieczności podpinanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="eefb8-125">If the <xref:System.Windows.Forms.DialogResult> for this property is set to anything other than `None`, and if the parent form was displayed through the <xref:System.Windows.Forms.Form.ShowDialog%2A> method, clicking the button closes the parent form without your having to hook up any events.</span></span> <span data-ttu-id="eefb8-126">Formularza <xref:System.Windows.Forms.Form.DialogResult%2A> następnie ustawioną właściwość <xref:System.Windows.Forms.DialogResult> przycisku po kliknięciu przycisku.</span><span class="sxs-lookup"><span data-stu-id="eefb8-126">The form's <xref:System.Windows.Forms.Form.DialogResult%2A> property is then set to the <xref:System.Windows.Forms.DialogResult> of the button when the button is clicked.</span></span>  
  
 <span data-ttu-id="eefb8-127">Na przykład, aby utworzyć okno dialogowe "Yes/No/Anuluj", po prostu Dodaj trzy przyciski i ustawić ich <xref:System.Windows.Forms.DialogResult> właściwości `Yes`, `No`, i `Cancel`.</span><span class="sxs-lookup"><span data-stu-id="eefb8-127">For example, to create a "Yes/No/Cancel" dialog box, simply add three buttons and set their <xref:System.Windows.Forms.DialogResult> properties to `Yes`, `No`, and `Cancel`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eefb8-128">Poniższy przykład kodu tworzy <xref:System.Windows.Forms.Button>, ustawia jego <xref:System.Windows.Forms.DialogResult> właściwości `OK`i dodaje go do <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="eefb8-128">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.DialogResult> property to `OK`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="eefb8-129">Wartość przypisana nie jest jednym z <see cref="T:System.Windows.Forms.DialogResult" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-129">The value assigned is not one of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Button.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eefb8-130">Występuje, gdy użytkownik kliknie dwukrotnie <see cref="T:System.Windows.Forms.Button" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-130">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-131">Domyślnie <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> i <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> styl bity są ustawione na `false` dla <xref:System.Windows.Forms.Button> kontroli i <xref:System.Windows.Forms.Button.DoubleClick> nie zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eefb8-131">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.Button> control, and the <xref:System.Windows.Forms.Button.DoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="eefb8-132">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="eefb8-132">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eefb8-133">Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="eefb8-133">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="eefb8-134">W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Button.DoubleClick> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="eefb8-134">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Button.DoubleClick> event.</span></span> <span data-ttu-id="eefb8-135">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="eefb8-135">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="eefb8-136">Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="eefb8-136">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="eefb8-137">Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.Button> o nazwie `Button1`.</span><span class="sxs-lookup"><span data-stu-id="eefb8-137">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="eefb8-138">Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Button.DoubleClick> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="eefb8-138">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Button.DoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#137](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#137)]
 [!code-vb[System.Windows.Forms.EventExamples#137](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#137)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Button.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eefb8-139">Występuje, gdy użytkownik kliknie dwukrotnie <see cref="T:System.Windows.Forms.Button" /> formantu przy użyciu myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-139">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control with the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-140">Domyślnie <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> i <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> styl bity są ustawione na `false` dla <xref:System.Windows.Forms.Button> kontroli i <xref:System.Windows.Forms.Button.MouseDoubleClick> nie zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eefb8-140">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.Button> control, and the <xref:System.Windows.Forms.Button.MouseDoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="eefb8-141">Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="eefb8-141">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eefb8-142">Poniższy przykład kodu pokazuje użycie tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="eefb8-142">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="eefb8-143">W tym przykładzie program obsługi zdarzeń raportów w przypadku wystąpienia <xref:System.Windows.Forms.Button.MouseDoubleClick> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="eefb8-143">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Button.MouseDoubleClick> event.</span></span> <span data-ttu-id="eefb8-144">Ten raport pomaga, aby dowiedzieć się, gdy zdarzenie występuje i mogą pomóc w debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="eefb8-144">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="eefb8-145">Aby raport wiele zdarzeń lub zdarzeń, które występuje często, rozważ zastąpienie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> z <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> lub dołączanie wiadomości w wielowierszowym <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="eefb8-145">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="eefb8-146">Aby uruchomić przykładowy kod, wklej go do projektu, który zawiera wystąpienie typu <xref:System.Windows.Forms.Button> o nazwie `Button1`.</span><span class="sxs-lookup"><span data-stu-id="eefb8-146">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="eefb8-147">Następnie upewnij się, że program obsługi zdarzeń jest skojarzony z <xref:System.Windows.Forms.Button.MouseDoubleClick> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="eefb8-147">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Button.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#138](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#138)]
 [!code-vb[System.Windows.Forms.EventExamples#138](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#138)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public virtual void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyDefault(bool value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="eefb8-148">
            <see langword="true" /> Jeśli przycisk ma mieć wygląd przycisku domyślne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-148">
              <see langword="true" /> if the button is to have the appearance of the default button; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-149">Powiadamia <see cref="T:System.Windows.Forms.Button" /> czy przycisk domyślny jest tak, aby go odpowiednio zmienić jego wyglądu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-149">Notifies the <see cref="T:System.Windows.Forms.Button" /> whether it is the default button so that it can adjust its appearance accordingly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-150">Ta metoda jest wywoływana przez formularz nadrzędny powiadomiono <xref:System.Windows.Forms.Button> czy go powinien mieć ustawioną jako przycisk domyślny i aby umożliwić jego wygląd odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="eefb8-150">This method is called by the parent form to notify the <xref:System.Windows.Forms.Button> that it should be set as the default button and to allow it to adjust its appearance accordingly.</span></span> <span data-ttu-id="eefb8-151">Zazwyczaj przycisku, który jest przycisk domyślny w formularzu ma obramowanie grubszy niż inne przyciski w formularzu.</span><span class="sxs-lookup"><span data-stu-id="eefb8-151">Typically, a button that is the default button for a form has a thicker border than other buttons on the form.</span></span>  
  
 <span data-ttu-id="eefb8-152">Wywoływanie <xref:System.Windows.Forms.Button.NotifyDefault%2A> metody tylko rysuje przycisk jako przycisk domyślny; nie powoduje zmiany zachowania.</span><span class="sxs-lookup"><span data-stu-id="eefb8-152">Calling the <xref:System.Windows.Forms.Button.NotifyDefault%2A> method only draws the button as a default button; it does not change its behavior.</span></span> <span data-ttu-id="eefb8-153">Aby przycisk zachowywać się jak przycisk domyślny, musi być przypisany do <xref:System.Windows.Forms.Form.AcceptButton%2A> właściwość <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="eefb8-153">To make the button behave like a default button, it must be assigned to the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the <xref:System.Windows.Forms.Form>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eefb8-154">W przypadku przesłaniania <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eefb8-154">When overriding <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="eefb8-155">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-155">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-156">Zgłasza <see cref="E:System.Windows.Forms.Control.Click" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-156">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="eefb8-157">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-157">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-158">Zgłasza <see cref="E:System.Windows.Forms.Control.FontChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-158">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-159">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="eefb8-159">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="eefb8-160">Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="eefb8-160">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="eefb8-161"><xref:System.Windows.Forms.Button.OnFontChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata.</span><span class="sxs-lookup"><span data-stu-id="eefb8-161">The <xref:System.Windows.Forms.Button.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="eefb8-162">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="eefb8-162">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eefb8-163">W przypadku przesłaniania <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eefb8-163">When overriding <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="eefb8-164">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-164">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-165">Zgłasza <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-165">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="eefb8-166">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-166">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-167">Zgłasza <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-167">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="eefb8-168">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-168">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-169">Zgłasza <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-169">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-170">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="eefb8-170">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="eefb8-171">Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="eefb8-171">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="eefb8-172"><xref:System.Windows.Forms.Button.OnMouseUp%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata.</span><span class="sxs-lookup"><span data-stu-id="eefb8-172">The <xref:System.Windows.Forms.Button.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="eefb8-173">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="eefb8-173">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eefb8-174">W przypadku przesłaniania <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eefb8-174">When overriding <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="eefb8-175">
            <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-175">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-176">Zgłasza <see cref="E:System.Windows.Forms.Control.TextChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-176">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-177">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="eefb8-177">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="eefb8-178">Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span><span class="sxs-lookup"><span data-stu-id="eefb8-178">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="eefb8-179"><xref:System.Windows.Forms.Button.OnTextChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata.</span><span class="sxs-lookup"><span data-stu-id="eefb8-179">The <xref:System.Windows.Forms.Button.OnTextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="eefb8-180">Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="eefb8-180">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eefb8-181">W przypadku przesłaniania <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eefb8-181">When overriding <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformClick();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.PerformClick</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eefb8-182">Generuje <see cref="E:System.Windows.Forms.Control.Click" /> zdarzenia dla przycisku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-182">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for a button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-183">Tę metodę można wywołać podnieść <xref:System.Windows.Forms.Control.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="eefb8-183">This method can be called to raise the <xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eefb8-184">Poniższy przykład kodu generuje <xref:System.Windows.Forms.Control.Click> zdarzenie <xref:System.Windows.Forms.Button> w naprzemiennych <xref:System.Windows.Forms.Control.Click> zdarzenia inny przycisk.</span><span class="sxs-lookup"><span data-stu-id="eefb8-184">The following code example generates a <xref:System.Windows.Forms.Control.Click> event of a <xref:System.Windows.Forms.Button> on alternating <xref:System.Windows.Forms.Control.Click> events of another button.</span></span> <span data-ttu-id="eefb8-185">Ten kod przyjęto założenie, że dwa <xref:System.Windows.Forms.Button> formanty zostały utworzone w formularzu i zmiennej elementu członkowskiego o nazwie `myVar` został zadeklarowany jako 32-bitowej podpisanej liczby całkowitej należące do klasy.</span><span class="sxs-lookup"><span data-stu-id="eefb8-185">This code assumes that two <xref:System.Windows.Forms.Button> controls have been instantiated on a form and that a member variable named `myVar` has been declared as a 32-bit signed integer within the class.</span></span>  
  
 [!code-cpp[Classic Button.PerformClick Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.PerformClick Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.PerformClick Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.PerformClick Example/CS/source.cs#1)]
 [!code-vb[Classic Button.PerformClick Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.PerformClick Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="eefb8-186">Znak skrótu wprowadzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-186">The mnemonic character entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-187">Przetwarza znak skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-187">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eefb8-188">
            <see langword="true" /> Jeśli został przetworzony mnemonik; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-188">
              <see langword="true" /> if the mnemonic was processed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eefb8-189">W przypadku przesłaniania <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> w klasie pochodnej, należy wywołać klasy podstawowej <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> aby upewnić się, że podstawowa funkcjonalność pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="eefb8-189">When overriding <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> in a derived class, be sure to call the base class's <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> to ensure that basic functionality remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eefb8-190">Zwraca <see cref="T:System.String" /> zawierające nazwę <see cref="T:System.ComponentModel.Component" />, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-190">Returns a <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any.</span>
          </span>
          <span data-ttu-id="eefb8-191">Ta metoda nie powinna zostać zastąpiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-191">This method should not be overridden.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eefb8-192">A <see cref="T:System.String" /> zawierające nazwę <see cref="T:System.ComponentModel.Component" />, jeśli istnieje, lub <see langword="null" /> Jeśli <see cref="T:System.ComponentModel.Component" /> jest bez nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-192">A <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any, or <see langword="null" /> if the <see cref="T:System.ComponentModel.Component" /> is unnamed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="eefb8-193">Systemu Windows <see cref="T:System.Windows.Forms.Message" /> do procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-193">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eefb8-194">Przetwarza wiadomości systemu Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eefb8-194">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>