<Type Name="DrawTreeNodeEventArgs" FullName="System.Windows.Forms.DrawTreeNodeEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="454050a4259a9ccb9ac81d109fd22512df2bcf00" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703586" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawTreeNodeEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawTreeNodeEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawTreeNodeEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.TreeView.DrawNode" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.TreeView.DrawNode> zdarzeń, aby dostosować wygląd węzłów w <xref:System.Windows.Forms.TreeView> formantu przy użyciu Rysowanie przez właściciela.  
  
 <xref:System.Windows.Forms.TreeView.DrawNode> Zdarzenie jest wywoływane przez <xref:System.Windows.Forms.TreeView> decyduje o jego <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType> lub <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType> i węzeł jest wyświetlany lub aktualizowane. <xref:System.Windows.Forms.DrawTreeNodeEventArgs> Przekazany do zdarzenia obsługi zawiera informacje o węźle do rysowania, a także udostępnia metody, aby narysować węzeł.  
  
 Użyj <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> lub <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> właściwości, aby pobrać informacje o węźle do rysowania. Użyj <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> nie rzeczywista z zakresu określonego przez właściwość <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> właściwości. Aby narysować węzeł, który musi być rysowane przez właściciela systemu operacyjnego, ustaw <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwości `true`.  
  
 Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>, obszarze wskazywanym przez <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> właściwości zawiera etykiety część tylko węzeł. Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>, <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> obszar obejmuje całą węzła, w tym obszarze zwykle używany w przypadku ikony, pola wyboru, plus lub minus znaków i linie łączące węzły.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób dostosowywania <xref:System.Windows.Forms.TreeView> formantu przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontrola w przykładzie Wyświetla tagi węzeł opcjonalny obok etykiety standardowe węzła. Węzeł tagi są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również kolorów niestandardowych, w tym kolorów niestandardowych wyróżnienia.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolory przez ustawienie kolor właściwości, ale kolor wyróżnienia wybór nie jest dostępny jako właściwość. Ponadto prostokąta zaznaczenia domyślna obejmuje tylko etykiety węzła. Rysowanie przez właściciela należy użyć, aby narysować tagi węzła i do rysowania dostosowane prostokąta wystarczająco duże, aby dołączyć tag węzła.  
  
 W tym przykładzie obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń tagi węzła i zaznaczenie niestandardowe Wyróżnij ręcznie. Niezaznaczone węzłów nie jest konieczne dostosowanie. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> ma ustawioną wartość właściwości `true` , dzięki czemu będzie rysowany przez system operacyjny.  
  
 Ponadto program obsługi <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> zdarzeń zapewnia testowanie trafień. Domyślnie można wybrać węzła klikając region wokół jego etykiety. <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> Program obsługi zdarzeń wybiera węzeł, który zostanie kliknięty dowolne miejsce w tym regionie lub w obrębie regionu wokół tag węzła, jeśli jest obecny.  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
    <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
    <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.TreeNode node, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.TreeNodeStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawTreeNodeEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::TreeNode ^ node, System::Drawing::Rectangle bounds, System::Windows::Forms::TreeNodeStates state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.TreeNodeStates" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Powierzchni, na którym ma zostać narysowany.</param>
        <param name="node">
          <see cref="T:System.Windows.Forms.TreeNode" /> Do rysowania.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> w ramach którego ma zostać narysowany.</param>
        <param name="state">Bitowe połączenie <see cref="T:System.Windows.Forms.TreeNodeStates" /> wartości wskazująca bieżący stan <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar i położenie <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący granice <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokalizacji określonej przez właściwość ta jest określana względem lewego górnego rogu <xref:System.Windows.Forms.TreeView> formantu.  
  
 Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>, określony przez obszar <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> właściwości to region, w którym węzeł można kliknąć, aby go zaznaczyć. Po narysowaniu poza tym regionie testu trafienia powinien zapewnić swoim własnym kodem do wybranie węzła, gdy zostanie kliknięty ich widoczny obszar. Można również podać własne testu trafienia kodu, gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>. W tym trybie <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> właściwości węzła całego obejmuje wchodzące w skład szerokość całego <xref:System.Windows.Forms.TreeView> kontrolować, zamiast region sam test.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób dostosowywania <xref:System.Windows.Forms.TreeView> formantu przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontrola w przykładzie Wyświetla tagi węzeł opcjonalny obok etykiety standardowe węzła. Węzeł tagi są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również kolorów niestandardowych, w tym kolorów niestandardowych wyróżnienia.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolory przez ustawienie kolor właściwości, ale kolor wyróżnienia wybór nie jest dostępny jako właściwość. Ponadto prostokąta zaznaczenia domyślna obejmuje tylko etykiety węzła. Rysowanie przez właściciela należy użyć, aby narysować tagi węzła i do rysowania dostosowane prostokąta wystarczająco duże, aby dołączyć tag węzła.  
  
 W tym przykładzie obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń tagi węzła i zaznaczenie niestandardowe Wyróżnij ręcznie. Niezaznaczone węzłów nie jest konieczne dostosowanie. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> ma ustawioną wartość właściwości `true` , dzięki czemu będzie rysowany przez system operacyjny.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Windows.Forms.TreeNode" /> ma być rysowany przez system operacyjny, a nie są rysowane przez właściciela.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł ma być rysowany przez system operacyjny; <see langword="false" /> Jeśli węzeł zostanie narysowana programu obsługi zdarzeń. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest ustawiana `true` dla węzłów, które chcesz dostosować w przypadku obsługi <xref:System.Windows.Forms.TreeView.DrawNode> zdarzeń. Na przykład jest to przydatne, gdy chcesz dostosować tylko węzły, które znajdują się w określonym stanie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie tej właściwości. W tym przykładzie obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> zdarzeń rysuje tag węzła i niestandardowego Wyróżnij kolor ręcznie dla wybranego węzła. Węzły, które nie są wybrane nie jest konieczne dostosowanie. Dla węzłów niezaznaczone <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość jest ustawiona na `true` , aby mogli będzie rysowany przez system operacyjny i nie będą miały dostosowanego wyglądu.  
  
> [!NOTE]
>  Jeśli narysować węzeł ręcznie, a także ustawić <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwości `true`, niektórych lub wszystkich podczas rysowania mogą zostać nadpisane przez system operacyjny.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Drawing.Graphics" /> obiekt używany do rysowania <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>A <see cref="T:System.Drawing.Graphics" /> używany do rysowania <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> Klasa udostępnia właściwości i metody, które są przydatne do rysowania na urządzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób dostosowywania <xref:System.Windows.Forms.TreeView> formantu przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontrola w przykładzie Wyświetla tagi węzeł opcjonalny obok etykiety standardowe węzła. Węzeł tagi są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również kolorów niestandardowych, w tym kolorów niestandardowych wyróżnienia.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolory przez ustawienie kolor właściwości, ale kolor wyróżnienia wybór nie jest dostępny jako właściwość. Ponadto prostokąta zaznaczenia domyślna obejmuje tylko etykiety węzła. Rysowanie przez właściciela należy użyć, aby narysować tagi węzła i do rysowania dostosowane prostokąta wystarczająco duże, aby dołączyć tag węzła.  
  
 W tym przykładzie obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń tagi węzła i zaznaczenie niestandardowe Wyróżnij ręcznie. Niezaznaczone węzłów nie jest konieczne dostosowanie. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> ma ustawioną wartość właściwości `true` , dzięki czemu będzie rysowany przez system operacyjny.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> Do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do uzyskania dostępu <xref:System.Windows.Forms.TreeNode> obiektu do rysowania. Jest to przydatne podczas <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> właściwość nie ma wystarczających informacji do własnych potrzeb. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Właściwość zapewnia tylko podstawowe informacje o stanie pomocne, na przykład, aby ustalić, czy węzeł jest zaznaczona, zaznaczone lub fokus. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> Właściwości, z drugiej strony, zezwala na dostęp do wszystkich elementów członkowskich <xref:System.Windows.Forms.TreeNode> obiektu. Należy uruchomić węzeł bezpośrednio, na przykład, jeśli chcesz określić jego stanu rozszerzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób dostosowywania <xref:System.Windows.Forms.TreeView> formantu przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontrola w przykładzie Wyświetla tagi węzeł opcjonalny obok etykiety standardowe węzła. Węzeł tagi są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również kolorów niestandardowych, w tym kolorów niestandardowych wyróżnienia.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolory przez ustawienie kolor właściwości, ale kolor wyróżnienia wybór nie jest dostępny jako właściwość. Ponadto prostokąta zaznaczenia domyślna obejmuje tylko etykiety węzła. Rysowanie przez właściciela należy użyć, aby narysować tagi węzła i do rysowania dostosowane prostokąta wystarczająco duże, aby dołączyć tag węzła.  
  
 W tym przykładzie obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń tagi węzła i zaznaczenie niestandardowe Wyróżnij ręcznie. Niezaznaczone węzłów nie jest konieczne dostosowanie. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> ma ustawioną wartość właściwości `true` , dzięki czemu będzie rysowany przez system operacyjny.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeNodeStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As TreeNodeStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeStates State { System::Windows::Forms::TreeNodeStates get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</summary>
        <value>Bitowe połączenie <see cref="T:System.Windows.Forms.TreeNodeStates" /> wartości wskazująca bieżący stan <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby sprawdzić czy <xref:System.Windows.Forms.TreeNode> obiekt do rysowania znajduje się w określonym stanie. Ta właściwość zapewnia tylko podstawowe informacje o stanie dotyczące węzła. Tej właściwości, na przykład służy do sprawdzenia, czy węzeł jest zaznaczone, zaznaczone, fokus. Jeśli potrzebujesz dowiedzieć się więcej, należy pobrać węzła za pośrednictwem <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> właściwości. Na przykład, aby ustalić, czy węzeł jest rozwinięty, należy pobrać węzeł i sprawdź <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=nameWithType> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób dostosowywania <xref:System.Windows.Forms.TreeView> formantu przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontrola w przykładzie Wyświetla tagi węzeł opcjonalny obok etykiety standardowe węzła. Węzeł tagi są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również kolorów niestandardowych, w tym kolorów niestandardowych wyróżnienia.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolory przez ustawienie kolor właściwości, ale kolor wyróżnienia wybór nie jest dostępny jako właściwość. Ponadto prostokąta zaznaczenia domyślna obejmuje tylko etykiety węzła. Rysowanie przez właściciela należy użyć, aby narysować tagi węzła i do rysowania dostosowane prostokąta wystarczająco duże, aby dołączyć tag węzła.  
  
 W tym przykładzie obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń tagi węzła i zaznaczenie niestandardowe Wyróżnij ręcznie. Niezaznaczone węzłów nie jest konieczne dostosowanie. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> ma ustawioną wartość właściwości `true` , dzięki czemu będzie rysowany przez system operacyjny.  
  
 Aby uzyskać pełny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>