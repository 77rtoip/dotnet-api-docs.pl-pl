<Type Name="DrawTreeNodeEventArgs" FullName="System.Windows.Forms.DrawTreeNodeEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="109c5ca8bc266f19092fc923bfb98f04726dc75c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37511944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawTreeNodeEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawTreeNodeEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawTreeNodeEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.TreeView.DrawNode" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.Forms.TreeView.DrawNode> zdarzenie, aby dostosować wygląd węzłów w <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu Rysowanie przez właściciela.  
  
 <xref:System.Windows.Forms.TreeView.DrawNode> Wydarzenie jest podniesione przez <xref:System.Windows.Forms.TreeView> decyduje o jego <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType> lub <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType> i węzłem są wyświetlane lub aktualizowane. <xref:System.Windows.Forms.DrawTreeNodeEventArgs> Przekazywane do zdarzenia obsługi zawiera informacje o węzeł, aby narysować zapewnia metody pomagające Rysowanie węzła.  
  
 Użyj <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> lub <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> właściwości, aby pobrać informacje o węźle do rysowania. Użyj <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> się tym rzeczywista z zakresu określonego przez właściwość <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> właściwości. Aby narysować węzeł, który musi być rysowana właściciela systemu operacyjnego, ustaw <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość `true`.  
  
 Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>, obszaru wskazywanym przez <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> właściwość zawiera części etykieta tylko węzeł. Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>, <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> obszaru obejmuje cały węzła, w tym obszarze zwykle używany w przypadku ikony, pole wyboru, plus lub minus znaków i linii łączenia węzłów.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontroli w przykładzie Wyświetla węzeł opcjonalny znaczniki obok etykiety węźle standardowy. Węzeł tagów są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również niestandardowych kolorów, w tym kolor wyróżnienia niestandardowych.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolorów, ustawiając wartość color właściwości, ale kolor wyróżnienia wybór nie jest dostępna jako właściwość. Ponadto prostokąt wyróżnienie wybór domyślny obejmuje tylko Etykieta węzła. Rysowanie przez właściciela należy użyć, aby rysować znaczniki węzła i aby narysować prostokąt dostosowane wyróżnienia wystarczająco duży, aby dołączyć tag węzła.  
  
 W tym przykładzie program obsługi <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń węzłów znaczniki i Niestandardowy wybór wyróżnienia się ręcznie. Węzły niezaznaczone dostosowanie nie jest konieczne. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość jest ustawiona na `true` , dzięki czemu będą rysowane przez system operacyjny.  
  
 Ponadto program obsługi <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> zdarzeń zapewnia testowanie trafień. Domyślnie można wybrać węzła klikając obszaru wokół jego etykiety. <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> Program obsługi zdarzeń wybiera węzeł, który kliknięto dowolne miejsce w tym regionie lub w obrębie regionu wokół tag węzła, jeśli jest obecny.  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
    <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
    <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.TreeNode node, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.TreeNodeStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawTreeNodeEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::TreeNode ^ node, System::Drawing::Rectangle bounds, System::Windows::Forms::TreeNodeStates state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawTreeNodeEventArgs : System.Drawing.Graphics * System.Windows.Forms.TreeNode * System.Drawing.Rectangle * System.Windows.Forms.TreeNodeStates -&gt; System.Windows.Forms.DrawTreeNodeEventArgs" Usage="new System.Windows.Forms.DrawTreeNodeEventArgs (graphics, node, bounds, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.TreeNodeStates" />
      </Parameters>
      <Docs>
        <param name="graphics">
          <see cref="T:System.Drawing.Graphics" /> Na do rysowania.</param>
        <param name="node">
          <see cref="T:System.Windows.Forms.TreeNode" /> Do rysowania.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> w ramach którego do rysowania.</param>
        <param name="state">Bitowa kombinacja <see cref="T:System.Windows.Forms.TreeNodeStates" /> wartości oznaczają bieżący stan <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar i położenie <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> reprezentujący granice <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W lokalizacji określonej przez tę właściwość, jest określana względem lewego górnego rogu <xref:System.Windows.Forms.TreeView> kontroli.  
  
 Gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>, z zakresu określonego przez <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> właściwości jest to region, w którym węzeł można kliknąć, aby go zaznaczyć. Jeśli narysujesz poza tym regionem testu trafienia powinien przewidywać wybranie węzła, po kliknięciu ich widoczny obszar własnego kodu. Możesz również podać test trafień kodu, gdy <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>. W tym trybie <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> właściwość obejmuje cały węzeł na całą szerokość <xref:System.Windows.Forms.TreeView> kontrolować, zamiast region sam test.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontroli w przykładzie Wyświetla węzeł opcjonalny znaczniki obok etykiety węźle standardowy. Węzeł tagów są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również niestandardowych kolorów, w tym kolor wyróżnienia niestandardowych.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolorów, ustawiając wartość color właściwości, ale kolor wyróżnienia wybór nie jest dostępna jako właściwość. Ponadto prostokąt wyróżnienie wybór domyślny obejmuje tylko Etykieta węzła. Rysowanie przez właściciela należy użyć, aby rysować znaczniki węzła i aby narysować prostokąt dostosowane wyróżnienia wystarczająco duży, aby dołączyć tag węzła.  
  
 W tym przykładzie program obsługi <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń węzłów znaczniki i Niestandardowy wybór wyróżnienia się ręcznie. Węzły niezaznaczone dostosowanie nie jest konieczne. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość jest ustawiona na `true` , dzięki czemu będą rysowane przez system operacyjny.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Windows.Forms.TreeNode" /> ma być rysowany przez system operacyjny, a nie jako właściciel rysowania.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł ma być rysowany przez system operacyjny; <see langword="false" /> Jeśli węzeł zostanie narysowana programu obsługi zdarzeń. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na `true` dla węzłów, których nie chcesz dostosować podczas obsługi <xref:System.Windows.Forms.TreeView.DrawNode> zdarzeń. Na przykład jest to przydatne, gdy chcesz dostosować tylko węzły, które znajdują się w określonym stanie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tej właściwości. W tym przykładzie program obsługi <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> zdarzeń rysuje tag węzła niestandardowy kolor światła i ręcznie dla wybranego węzła. Węzły, które nie są wybrane nie ma potrzeby dostosowywania. Dla węzły niezaznaczone <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość jest ustawiona na `true` dzięki czemu będą rysowane przez system operacyjny i nie będzie miał dostosowanego wyglądu.  
  
> [!NOTE]
>  Jeśli narysujesz węzła ręcznie, a także ustawić <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwości `true`, niektórych lub wszystkich podczas rysowania, które mogą zostać nadpisane przez system operacyjny.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Drawing.Graphics" /> obiekt używany do rysowania <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>A <see cref="T:System.Drawing.Graphics" /> używany do rysowania <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> Klasa udostępnia właściwości i metody, które są przydatne do rysowania na urządzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontroli w przykładzie Wyświetla węzeł opcjonalny znaczniki obok etykiety węźle standardowy. Węzeł tagów są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również niestandardowych kolorów, w tym kolor wyróżnienia niestandardowych.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolorów, ustawiając wartość color właściwości, ale kolor wyróżnienia wybór nie jest dostępna jako właściwość. Ponadto prostokąt wyróżnienie wybór domyślny obejmuje tylko Etykieta węzła. Rysowanie przez właściciela należy użyć, aby rysować znaczniki węzła i aby narysować prostokąt dostosowane wyróżnienia wystarczająco duży, aby dołączyć tag węzła.  
  
 W tym przykładzie program obsługi <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń węzłów znaczniki i Niestandardowy wybór wyróżnienia się ręcznie. Węzły niezaznaczone dostosowanie nie jest konieczne. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość jest ustawiona na `true` , dzięki czemu będą rysowane przez system operacyjny.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> Do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do uzyskania dostępu <xref:System.Windows.Forms.TreeNode> obiektu do rysowania. To jest przydatne, gdy <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> właściwości dostarcza wystarczających informacji do własnych potrzeb. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Właściwość udostępnia tylko podstawowe informacje o stanie używanej, na przykład, czy węzeł jest zaznaczone, zaznaczone czy fokus. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> Właściwości, z drugiej strony, zezwala na dostęp do wszystkich elementów członkowskich <xref:System.Windows.Forms.TreeNode> obiektu. Możesz musi węzeł bezpośredni dostęp, na przykład, jeśli chcesz określić jego stan rozszerzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontroli w przykładzie Wyświetla węzeł opcjonalny znaczniki obok etykiety węźle standardowy. Węzeł tagów są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również niestandardowych kolorów, w tym kolor wyróżnienia niestandardowych.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolorów, ustawiając wartość color właściwości, ale kolor wyróżnienia wybór nie jest dostępna jako właściwość. Ponadto prostokąt wyróżnienie wybór domyślny obejmuje tylko Etykieta węzła. Rysowanie przez właściciela należy użyć, aby rysować znaczniki węzła i aby narysować prostokąt dostosowane wyróżnienia wystarczająco duży, aby dołączyć tag węzła.  
  
 W tym przykładzie program obsługi <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń węzłów znaczniki i Niestandardowy wybór wyróżnienia się ręcznie. Węzły niezaznaczone dostosowanie nie jest konieczne. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość jest ustawiona na `true` , dzięki czemu będą rysowane przez system operacyjny.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeNodeStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As TreeNodeStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeStates State { System::Windows::Forms::TreeNodeStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.TreeNodeStates" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Windows.Forms.TreeNodeStates" /> wartości oznaczają bieżący stan <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do Sprawdź, czy <xref:System.Windows.Forms.TreeNode> obiektu, aby narysować znajduje się w określonym stanie. Ta właściwość zapewnia tylko podstawowe informacje o stanie węzła. Za pomocą tej właściwości, na przykład, czy węzeł jest zaznaczone, zaznaczone czy fokus. Jeśli potrzebujesz dowiedzieć się więcej, należy pobrać węzeł za pośrednictwem <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> właściwości. Na przykład, aby ustalić, czy węzeł jest rozwinięty, należy pobrać węzeł i sprawdź <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=nameWithType> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu Rysowanie przez właściciela. <xref:System.Windows.Forms.TreeView> Kontroli w przykładzie Wyświetla węzeł opcjonalny znaczniki obok etykiety węźle standardowy. Węzeł tagów są określane za pomocą <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontroli używa również niestandardowych kolorów, w tym kolor wyróżnienia niestandardowych.  
  
 Można dostosować większość <xref:System.Windows.Forms.TreeView> kolorów, ustawiając wartość color właściwości, ale kolor wyróżnienia wybór nie jest dostępna jako właściwość. Ponadto prostokąt wyróżnienie wybór domyślny obejmuje tylko Etykieta węzła. Rysowanie przez właściciela należy użyć, aby rysować znaczniki węzła i aby narysować prostokąt dostosowane wyróżnienia wystarczająco duży, aby dołączyć tag węzła.  
  
 W tym przykładzie program obsługi <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> rysuje zdarzeń węzłów znaczniki i Niestandardowy wybór wyróżnienia się ręcznie. Węzły niezaznaczone dostosowanie nie jest konieczne. W tym przypadku <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość jest ustawiona na `true` , dzięki czemu będą rysowane przez system operacyjny.  
  
 Aby uzyskać kompletny przykład, zobacz <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temat odwołania.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>