<Type Name="DrawTreeNodeEventArgs" FullName="System.Windows.Forms.DrawTreeNodeEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f3333f59867573483c04118ab3f42902e8d7708" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69189304" /></Metadata><TypeSignature Language="C#" Value="public class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawTreeNodeEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawTreeNodeEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawTreeNodeEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.TreeView.DrawNode" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj zdarzenia, aby dostosować wygląd węzłów <xref:System.Windows.Forms.TreeView> w kontrolce przy użyciu rysowania przez właściciela. <xref:System.Windows.Forms.TreeView.DrawNode>  
  
 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType> Zdarzenie jest wywoływane przez kontrolkę, gdy jej właściwość jest ustawiona na lub <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType> , a węzeł jest wyświetlany lub aktualizowany. <xref:System.Windows.Forms.TreeView.DrawNode> <xref:System.Windows.Forms.DrawTreeNodeEventArgs> Przekazanie do procedury obsługi zdarzeń zawiera informacje o węźle do rysowania, a także metody ułatwiające narysowanie węzła.  
  
 Użyj właściwości <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> lub, aby pobrać informacje o węźle do narysowania. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Użyj właściwości, aby wykonać rzeczywiste Rysowanie w obszarze określonym <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> przez właściwość. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> Aby system operacyjny narysować węzeł, który nie musi być rysowany przez właściciela, ustaw <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość na. `true`  
  
 Gdy właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>, obszar wskazywany przez <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> Właściwość zawiera część etykiety tylko węzła. <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> Gdy właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>, <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> obszar obejmuje cały węzeł, łącznie z obszarem zwykle używanym do ikon, pól wyboru, znakami plus i minus oraz linii łączących węzły. <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu rysowania właściciela. <xref:System.Windows.Forms.TreeView> Kontrolka w przykładzie wyświetla opcjonalne Tagi węzłów obok standardowych etykiet węzłów. Tagi węzłów są określane przy użyciu <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontrolka używa również kolorów niestandardowych, w tym koloru wyróżnienia niestandardowego.  
  
 Większość <xref:System.Windows.Forms.TreeView> kolorów można dostosować, ustawiając właściwości koloru, ale kolor wyróżnienia zaznaczenia nie jest dostępny jako właściwość. Dodatkowo prostokąt wyróżniania zaznaczenia jest rozciągany tylko wokół etykiety węzła. Rysowanie właściciela musi być używane do rysowania tagów węzła oraz do rysowania dostosowanego prostokąta wyróżnienia wystarczająco duże, aby uwzględnić tag węzła.  
  
 W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> zdarzenia rysuje znaczniki węzła i wybór niestandardowy ręcznie. Niewybrane węzły nie wymagają dostosowania. Dla tych <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwości właściwość jest ustawiona na `true` tak, aby były rysowane przez system operacyjny.  
  
 Ponadto program obsługi <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> zdarzenia zapewnia Testy trafień. Domyślnie węzeł można wybrać tylko przez kliknięcie regionu wokół jego etykiety. Program <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> obsługi zdarzeń wybiera węzeł, który jest kliknięty w dowolnym miejscu w tym regionie lub w regionie wokół znacznika węzła, jeśli jest obecny.  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
    <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
    <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.TreeNode node, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.TreeNodeStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawTreeNodeEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::TreeNode ^ node, System::Drawing::Rectangle bounds, System::Windows::Forms::TreeNodeStates state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawTreeNodeEventArgs : System.Drawing.Graphics * System.Windows.Forms.TreeNode * System.Drawing.Rectangle * System.Windows.Forms.TreeNodeStates -&gt; System.Windows.Forms.DrawTreeNodeEventArgs" Usage="new System.Windows.Forms.DrawTreeNodeEventArgs (graphics, node, bounds, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.TreeNodeStates" />
      </Parameters>
      <Docs>
        <param name="graphics">Powierzchnia <see cref="T:System.Drawing.Graphics" /> , na której należy narysować.</param>
        <param name="node"><see cref="T:System.Windows.Forms.TreeNode" /> Do rysowania.</param>
        <param name="bounds">, <see cref="T:System.Drawing.Rectangle" /> W którym ma zostać narysowany rysunek.</param>
        <param name="state">Bitowa kombinacja <see cref="T:System.Windows.Forms.TreeNodeStates" /> wartości wskazujących bieżący stan <see cref="T:System.Windows.Forms.TreeNode" /> elementu do rysowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozmiar i lokalizację <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> Reprezentuje granice<see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokalizacja określona przez tę właściwość jest określana względem lewego górnego rogu <xref:System.Windows.Forms.TreeView> kontrolki.  
  
 Gdy właściwość jest ustawiona na <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>, obszar określony przez <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> Właściwość to region, w którym można kliknąć węzeł, aby go zaznaczyć. <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> Jeśli narysujesz poza tym regionem testu trafień, należy podać własny kod umożliwiający wybranie węzła po kliknięciu jego widocznego obszaru. Możesz również podać własny kod testu trafień, <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> gdy właściwość jest ustawiona na. <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll> W tym trybie <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> Właściwość obejmuje cały węzeł całej szerokości <xref:System.Windows.Forms.TreeView> kontrolki, a nie tylko region testu, który trafi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu rysowania właściciela. <xref:System.Windows.Forms.TreeView> Kontrolka w przykładzie wyświetla opcjonalne Tagi węzłów obok standardowych etykiet węzłów. Tagi węzłów są określane przy użyciu <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontrolka używa również kolorów niestandardowych, w tym koloru wyróżnienia niestandardowego.  
  
 Większość <xref:System.Windows.Forms.TreeView> kolorów można dostosować, ustawiając właściwości koloru, ale kolor wyróżnienia zaznaczenia nie jest dostępny jako właściwość. Dodatkowo prostokąt wyróżniania zaznaczenia jest rozciągany tylko wokół etykiety węzła. Rysowanie właściciela musi być używane do rysowania tagów węzła oraz do rysowania dostosowanego prostokąta wyróżnienia wystarczająco duże, aby uwzględnić tag węzła.  
  
 W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> zdarzenia rysuje znaczniki węzła i wybór niestandardowy ręcznie. Niewybrane węzły nie wymagają dostosowania. Dla tych <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwości właściwość jest ustawiona na `true` tak, aby były rysowane przez system operacyjny.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temacie Omówienie referencyjne.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Forms.TreeNode" /> powinien być rysowany przez system operacyjny, a nie przez właściciela.</summary>
        <value><see langword="true" />Jeśli węzeł powinien być rysowany przez system operacyjny; <see langword="false" /> Jeśli węzeł zostanie narysowany w programie obsługi zdarzeń. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na `true` dla węzłów, które nie mają być dostosowywane po <xref:System.Windows.Forms.TreeView.DrawNode> obsłudze zdarzenia. Na przykład jest to przydatne, gdy chcesz dostosować tylko węzły, które znajdują się w określonym stanie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tej właściwości. W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> zdarzenia rysuje tag węzła i kolor niestandardowego wyróżnienia ręcznie dla wybranego węzła. Węzły, które nie są wybrane, nie wymagają dostosowania. W przypadku węzłów <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> niezaznaczonych właściwość jest ustawiona na `true` tak, aby były one rysowane przez system operacyjny i nie będzie mieć dostosowanego wyglądu.  
  
> [!NOTE]
>  Jeśli narysujesz węzeł ręcznie, a także ustawisz <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwość na `true`, niektóre lub wszystkie narysowane elementy mogą zostać zastąpione przez system operacyjny.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temacie Omówienie referencyjne.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt używany do <see cref="T:System.Windows.Forms.TreeNode" />rysowania. <see cref="T:System.Drawing.Graphics" /></summary>
        <value><see cref="T:System.Drawing.Graphics" /> Używany do <see cref="T:System.Windows.Forms.TreeNode" />rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics> Klasa zawiera właściwości i metody przydatne do rysowania na urządzeniu wyświetlającym.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu rysowania właściciela. <xref:System.Windows.Forms.TreeView> Kontrolka w przykładzie wyświetla opcjonalne Tagi węzłów obok standardowych etykiet węzłów. Tagi węzłów są określane przy użyciu <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontrolka używa również kolorów niestandardowych, w tym koloru wyróżnienia niestandardowego.  
  
 Większość <xref:System.Windows.Forms.TreeView> kolorów można dostosować, ustawiając właściwości koloru, ale kolor wyróżnienia zaznaczenia nie jest dostępny jako właściwość. Dodatkowo prostokąt wyróżniania zaznaczenia jest rozciągany tylko wokół etykiety węzła. Rysowanie właściciela musi być używane do rysowania tagów węzła oraz do rysowania dostosowanego prostokąta wyróżnienia wystarczająco duże, aby uwzględnić tag węzła.  
  
 W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> zdarzenia rysuje znaczniki węzła i wybór niestandardowy ręcznie. Niewybrane węzły nie wymagają dostosowania. Dla tych <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwości właściwość jest ustawiona na `true` tak, aby były rysowane przez system operacyjny.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temacie Omówienie referencyjne.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.TreeNode" /> Pobiera do rysowania.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> Do rysowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby uzyskać <xref:System.Windows.Forms.TreeNode> dostęp do obiektu do rysowania. Jest to przydatne, <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> gdy właściwość nie dostarcza odpowiednich informacji, które spełniają Twoje potrzeby. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Właściwość zawiera tylko podstawowe informacje o stanie, których można użyć, na przykład w celu ustalenia, czy węzeł jest zaznaczony, zaznaczony lub skoncentrowany. Właściwość z drugiej strony umożliwia dostęp do wszystkich elementów członkowskich <xref:System.Windows.Forms.TreeNode> obiektu. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> Aby określić stan rozwinięcia, należy uzyskać bezpośredni dostęp do węzła.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu rysowania właściciela. <xref:System.Windows.Forms.TreeView> Kontrolka w przykładzie wyświetla opcjonalne Tagi węzłów obok standardowych etykiet węzłów. Tagi węzłów są określane przy użyciu <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontrolka używa również kolorów niestandardowych, w tym koloru wyróżnienia niestandardowego.  
  
 Większość <xref:System.Windows.Forms.TreeView> kolorów można dostosować, ustawiając właściwości koloru, ale kolor wyróżnienia zaznaczenia nie jest dostępny jako właściwość. Dodatkowo prostokąt wyróżniania zaznaczenia jest rozciągany tylko wokół etykiety węzła. Rysowanie właściciela musi być używane do rysowania tagów węzła oraz do rysowania dostosowanego prostokąta wyróżnienia wystarczająco duże, aby uwzględnić tag węzła.  
  
 W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> zdarzenia rysuje znaczniki węzła i wybór niestandardowy ręcznie. Niewybrane węzły nie wymagają dostosowania. Dla tych <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwości właściwość jest ustawiona na `true` tak, aby były rysowane przez system operacyjny.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temacie Omówienie referencyjne.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeNodeStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As TreeNodeStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeStates State { System::Windows::Forms::TreeNodeStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.TreeNodeStates" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan elementu <see cref="T:System.Windows.Forms.TreeNode" /> do rysowania.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Windows.Forms.TreeNodeStates" /> wartości wskazujących bieżący stan <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby sprawdzić, <xref:System.Windows.Forms.TreeNode> czy obiekt do rysowania znajduje się w określonym stanie. Ta właściwość zawiera tylko podstawowe informacje o stanie węzła. Można użyć tej właściwości, na przykład, aby określić, czy węzeł jest zaznaczony, sprawdzony lub skoncentrowany. Jeśli potrzebujesz dowiedzieć się więcej, Pobierz węzeł za pomocą <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> właściwości. Na przykład, aby określić, czy węzeł jest rozwinięty, należy pobrać węzeł i sprawdzić <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=nameWithType> właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób dostosowywania <xref:System.Windows.Forms.TreeView> kontrolki przy użyciu rysowania właściciela. <xref:System.Windows.Forms.TreeView> Kontrolka w przykładzie wyświetla opcjonalne Tagi węzłów obok standardowych etykiet węzłów. Tagi węzłów są określane przy użyciu <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Forms.TreeView> Kontrolka używa również kolorów niestandardowych, w tym koloru wyróżnienia niestandardowego.  
  
 Większość <xref:System.Windows.Forms.TreeView> kolorów można dostosować, ustawiając właściwości koloru, ale kolor wyróżnienia zaznaczenia nie jest dostępny jako właściwość. Dodatkowo prostokąt wyróżniania zaznaczenia jest rozciągany tylko wokół etykiety węzła. Rysowanie właściciela musi być używane do rysowania tagów węzła oraz do rysowania dostosowanego prostokąta wyróżnienia wystarczająco duże, aby uwzględnić tag węzła.  
  
 W tym przykładzie procedura obsługi dla <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> zdarzenia rysuje znaczniki węzła i wybór niestandardowy ręcznie. Niewybrane węzły nie wymagają dostosowania. Dla tych <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> właściwości właściwość jest ustawiona na `true` tak, aby były rysowane przez system operacyjny.  
  
 Pełny przykład można znaleźć w <xref:System.Windows.Forms.DrawTreeNodeEventArgs> temacie Omówienie referencyjne.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>
