<Type Name="FolderBrowserDialog" FullName="System.Windows.Forms.FolderBrowserDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a1f3c17736c1ecd406384c2208a09657fd00602" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36521831" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FolderBrowserDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FolderBrowserDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FolderBrowserDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FolderBrowserDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class FolderBrowserDialog sealed : System::Windows::Forms::CommonDialog" />
  <TypeSignature Language="F#" Value="type FolderBrowserDialog = class&#xA;    inherit CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("HelpRequest")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectedPath")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FolderBrowserDialogDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Monituje użytkownika o wybranie folderu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa umożliwia monit, aby przeglądać, Utwórz i ostatecznie wybierz folder. Jeśli chcesz zezwolić użytkownikowi na wybranie folderów, plików nie należy używać tej klasy. Przeglądanie folderów jest realizowane za pomocą formantu drzewa. Można wybrać tylko folderów z systemu plików; Nie można foldery wirtualne.  
  
 Zwykle po tworzenia nowego <xref:System.Windows.Forms.FolderBrowserDialog>, możesz ustawić <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> do lokalizacji, w którym należy rozpocząć przeglądanie. Opcjonalnie można ustawić <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> ścieżkę bezwzględną podfolderem <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> która będzie początkowo wybrana. Można również ustawić <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A> właściwości, aby zapewnić dodatkowe instrukcje dla użytkownika. Na koniec wywołania <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> metodę, aby wyświetlić okno dialogowe dla użytkownika. Po zamknięciu okna dialogowego i okno dialogowe, w wyniku <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> jest <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>, <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> będzie ciąg zawierający ścieżka do wybranego folderu.  
  
 Można użyć <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A> właściwości formantu, jeśli użytkownik ma możliwość tworzenia nowych folderów z **nowy Folder** przycisku.  
  
 <xref:System.Windows.Forms.FolderBrowserDialog> to modalne okno dialogowe; w związku z tym gdy pokazano, blokuje reszty aplikacji dopóki użytkownik wybrał folderu. Gdy okno dialogowe jest wyświetlane w trybie modalnym, nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem do obiektów w oknie dialogowym. Program należy ukryć lub zamknij okno dialogowe (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed dane wejściowe, aby program wywołujący może wystąpić.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy aplikację, która umożliwia użytkownikowi otwieranie plików tekstu sformatowanego (RTF) w ramach <xref:System.Windows.Forms.RichTextBox> formantu.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
    <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
    <altmember cref="M:System.Windows.Forms.CommonDialog.ShowDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FolderBrowserDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FolderBrowserDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.FolderBrowserDialog" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor domyślny inicjuje właściwości do wartości domyślnych.  
  
 Podczas tworzenia nowego <xref:System.Windows.Forms.FolderBrowserDialog> utworzeniu <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> właściwość jest ustawiona na <xref:System.Environment.SpecialFolder.Desktop?displayProperty=nameWithType>, <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A> właściwość jest ustawiona na ciąg pusty (""), <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> właściwość jest ustawiona na pusty ciąg i <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A> właściwość jest ustawiona na `true`.  
  
 Zwykle po tworzenia nowego <xref:System.Windows.Forms.FolderBrowserDialog>, możesz ustawić <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> do lokalizacji, w którym należy rozpocząć przeglądanie. Opcjonalnie można ustawić <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> do ścieżki podfolderem <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> która będzie początkowo wybrana. Można również ustawić <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A> właściwości, aby zapewnić dodatkowe instrukcje dla użytkownika. Na koniec wywołania <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> metodę, aby wyświetlić okno dialogowe dla użytkownika. Po zamknięciu okna dialogowego i okna dialogowe, w wyniku <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> jest <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>, <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> będzie ciąg zawierający ścieżka do wybranego folderu.  
  
 <xref:System.Windows.Forms.FolderBrowserDialog> to modalne okno dialogowe; w związku z tym gdy pokazano, blokuje reszty aplikacji dopóki użytkownik wybrał folderu. Gdy okno dialogowe jest wyświetlane w trybie modalnym, nie wprowadzono (kliknij klawiatury lub myszy) może wystąpić z wyjątkiem do obiektów w oknie dialogowym. Program należy ukryć lub zamknij okno dialogowe (zazwyczaj w odpowiedzi na niektóre akcje użytkownika) przed dane wejściowe, aby program wywołujący może wystąpić.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy aplikację, która umożliwia użytkownikowi otwieranie plików tekstu sformatowanego (RTF) w ramach <xref:System.Windows.Forms.RichTextBox> formantu.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst opisowy wyświetlany nad formantem widoku drzewa w oknie dialogowym.</summary>
        <value>Opis do wyświetlenia. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A> Właściwości może służyć do określenia dodatkowych informacji niezbędnych do użytkownika, takie jak instrukcje.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy aplikację, która umożliwia użytkownikowi otwieranie plików tekstu sformatowanego (RTF) w ramach <xref:System.Windows.Forms.RichTextBox> formantu.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.FolderBrowserDialog.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie ** przycisk pomocy ** w oknie dialogowym.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="folderBrowserDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje właściwości do wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Resetuje <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A>, <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A>, <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> i <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> właściwości do wartości domyślnych. Aby uzyskać listę wartości domyślne, zobacz <xref:System.Windows.Forms.FolderBrowserDialog.%23ctor%2A> konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootFolder">
      <MemberSignature Language="C#" Value="public Environment.SpecialFolder RootFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Environment/SpecialFolder RootFolder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property RootFolder As Environment.SpecialFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Environment::SpecialFolder RootFolder { Environment::SpecialFolder get(); void set(Environment::SpecialFolder value); };" />
      <MemberSignature Language="F#" Value="member this.RootFolder : Environment.SpecialFolder with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.SpecialFolderEnumConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Environment+SpecialFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia folderu głównego, w którym przeglądanie rozpoczyna się od.</summary>
        <value>Jeden z <see cref="T:System.Environment.SpecialFolder" /> wartości. Wartość domyślna to <see langword="Desktop" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko określony folder i wszystkie podfoldery znajdujące się poniżej zostanie wyświetlone w oknie dialogowym i można wybrać. <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> Właściwości, wraz z <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>, określa widok, co będzie wybranego folderu, gdy okno dialogowe jest wyświetlane, tak długo, jak <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> jest ścieżką bezwzględną, który jest podfolderem <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> (lub bardziej dokładnie, punkty do podfolderu przestrzeń nazw powłoki reprezentowany przez <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>).  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy aplikację, która umożliwia użytkownikowi otwieranie plików tekstu sformatowanego (RTF) w ramach <xref:System.Windows.Forms.RichTextBox> formantu.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość przypisana nie jest jednym z <see cref="T:System.Environment.SpecialFolder" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hWndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hWndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hWndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hWndOwner);" />
      <MemberSignature Language="F#" Value="override this.RunDialog : nativeint -&gt; bool" Usage="folderBrowserDialog.RunDialog hWndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWndOwner">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPath">
      <MemberSignature Language="C#" Value="public string SelectedPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPath : string with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.SelectedPathEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę wybrane przez użytkownika.</summary>
        <value>Ścieżka folderu wybranego jako pierwszy w oknie dialogowym lub ostatni folder wybrane przez użytkownika. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> właściwość jest ustawiona przed pokazaniem okna dialogowego, folder o tej ścieżce będzie wybranego folderu, tak długo, jak <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> jest ustawiona na ścieżkę bezwzględną, który jest podfolderem <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> (lub bardziej dokładnie, punkty do podfolderu powłoki przestrzeń nazw jest reprezentowany przez <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>).  
  
 Jeśli <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> zwraca <xref:System.Windows.Forms.DialogResult.OK>, czyli użytkownik kliknął **OK** przycisku <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> właściwość zwraca ciąg zawierający ścieżka do wybranego folderu. Jeśli <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> zwraca <xref:System.Windows.Forms.DialogResult.Cancel>, czyli użytkownik anulowana poza okno dialogowe, ta właściwość będzie mieć taką samą wartość, która jest używana przed wyświetleniem okna dialogowego. Jeśli użytkownik wybierze folderu, który nie ma ścieżki fizycznej (na przykład Mój komputer), **OK** przycisk w oknie dialogowym zostanie wyłączone.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy aplikację, która umożliwia użytkownikowi otwieranie plików tekstu sformatowanego (RTF) w ramach <xref:System.Windows.Forms.RichTextBox> formantu.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">uzyskiwania ścieżki. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      </Docs>
    </Member>
    <Member MemberName="ShowNewFolderButton">
      <MemberSignature Language="C#" Value="public bool ShowNewFolderButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowNewFolderButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowNewFolderButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowNewFolderButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowNewFolderButton : bool with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy ** przycisk Nowy Folder ** jest wyświetlany w oknie dialogowym przeglądarki folderu.</summary>
        <value>
          <see langword="true" /> Jeśli ** przycisk Nowy Folder ** jest wyświetlany w oknie dialogowym. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A> jest `true`, **nowy Folder** przycisk jest widoczny, która umożliwia użytkownikowi możliwość tworzenia folderu. Po kliknięciu przez użytkownika **nowy Folder** przycisk, tworzony jest nowy folder i użytkownik jest proszony o podanie nazwy folderu. Wybrany węzeł w drzewie staje się nowego folderu nadrzędnego. Rzeczywisty podpis **nowy Folder** przycisk może się różnić w zależności od systemu operacyjnego  
  
> [!IMPORTANT]
>  Ustawienie <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A> do `false` nie działa w systemie Windows 2000.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy aplikację, która umożliwia użytkownikowi otwieranie plików tekstu sformatowanego (RTF) w ramach <xref:System.Windows.Forms.RichTextBox> formantu.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>