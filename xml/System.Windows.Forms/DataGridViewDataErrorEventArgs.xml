<Type Name="DataGridViewDataErrorEventArgs" FullName="System.Windows.Forms.DataGridViewDataErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07424dd07417db23cdbec88dd22f5097f25643bc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30703169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewDataErrorEventArgs : System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewDataErrorEventArgs extends System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewDataErrorEventArgs&#xA;Inherits DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewDataErrorEventArgs : System::Windows::Forms::DataGridViewCellCancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCellCancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Forms.DataGridView.DataError" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Windows.Forms.DataGridView.DataError> zdarzenie pozwala obsługi wyjątków zgłaszanych przez kod poza formantu (na przykład przez zewnętrznego źródła danych). Użyj <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> właściwości w celu określenia stanu <xref:System.Windows.Forms.DataGridView> w czasie wystąpienia wyjątku. Użyj <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> właściwość, aby pobrać Dane wyjątku. Do obsługi wyjątku przez programy obsługi zdarzeń dodatkowe, należy ustawić <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> właściwości `true`.  
  
 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> i <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A> właściwości zwykle wskazują komórki, w którym wystąpił błąd danych. Po wystąpieniu błędu w zewnętrznym źródłem danych, jednak źródła danych może nie zawiera kolumny, w którym wystąpił błąd. W takim przypadku <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> właściwość zwykle wskazuje kolumny bieżącej komórki w chwili wystąpienia błędu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak odpowiedzieć na informacje o <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs> klasy. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> temat klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewDataErrorEventArgs (Exception exception, int columnIndex, int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, int32 columnIndex, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewDataErrorEventArgs.#ctor(System.Exception,System.Int32,System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewDataErrorEventArgs(Exception ^ exception, int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="exception">Wyjątek, który wystąpił.</param>
        <param name="columnIndex">Indeks kolumny komórki, która wywołała <see cref="E:System.Windows.Forms.DataGridView.DataError" />.</param>
        <param name="rowIndex">Indeks wiersza komórki, która wywołała <see cref="E:System.Windows.Forms.DataGridView.DataError" />.</param>
        <param name="context">Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> wartości, wskazując kontekst, w którym wystąpił błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewDataErrorContexts Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewDataErrorContexts Context" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As DataGridViewDataErrorContexts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewDataErrorContexts Context { System::Windows::Forms::DataGridViewDataErrorContexts get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorContexts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szczegóły dotyczące stanu <see cref="T:System.Windows.Forms.DataGridView" /> wystąpienia błędu.</summary>
        <value>Bitowe połączenie <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> wartości, które określa kontekst, w którym wystąpił błąd.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy członkowskie <xref:System.Windows.Forms.DataGridViewDataErrorContexts> wyliczenia mogą być łączone przy użyciu operatora testu koniunkcji `OR` operator do reprezentowania stanu z danymi <xref:System.Windows.Forms.DataGridView> gdy wystąpił błąd danych. Na przykład, jeśli użytkownik wprowadzi wartość komórki nieprawidłowe (na przykład w komórce, która wymaga datę, wprowadzając nazwę), a następnie wybiera inną komórkę <xref:System.Windows.Forms.DataGridView> spróbuje przekazać wartość komórki nieprawidłowy. W przypadku awarii zatwierdzenia <xref:System.Windows.Forms.DataGridView> zgłosi <xref:System.Windows.Forms.DataGridView.DataError> zdarzeń których <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> właściwość będzie mieć wartość <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> i <xref:System.Windows.Forms.DataGridViewDataErrorContexts.CurrentCellChange>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak do sprawdzania, czy kontekst błędu. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> temat klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek, który reprezentuje błąd.</summary>
        <value>
          <see cref="T:System.Exception" /> Reprezentujący błąd.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do obsługi wyjątku przez więcej niż jedną <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>, zgłosić wyjątek ponownie po zakończeniu obsługi przez ustawienie <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> właściwości `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sprawdzanie <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> właściwości. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> temat klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ma zostać zgłoszony wyjątek po <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" /> zakończeniu delegata działania z nim.</summary>
        <value>
          <see langword="true" /> Jeśli wyjątek powinien zostać zgłoszony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tą właściwość na `false` Jeśli <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> prowadzonych wyjątek reprezentowany przez <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> właściwości, a nie chcesz propagowanie wyjątku do innego <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> która może obsłużyć <xref:System.Windows.Forms.DataGridView.DataError> zdarzeń.  
  
 Na potrzeby debugowania, może być przydatne do propagowanie wyjątku i przejrzyj ślad stosu, aby uzyskać informacje dotyczące kontekstu błędu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> Właściwość wskazująca, czy wyjątek nie powinien zostać zgłoszony. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> temat klasy.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Gdy ustawienie dla tej właściwości <see langword="true" />, <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" /> wartość właściwości jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
  </Members>
</Type>