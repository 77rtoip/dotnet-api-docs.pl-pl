<Type Name="DataGridViewDataErrorEventArgs" FullName="System.Windows.Forms.DataGridViewDataErrorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9eef11168651be3292466dabfe8b1b3fd7e58f26" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69191744" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewDataErrorEventArgs : System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewDataErrorEventArgs extends System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewDataErrorEventArgs&#xA;Inherits DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewDataErrorEventArgs : System::Windows::Forms::DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewDataErrorEventArgs = class&#xA;    inherit DataGridViewCellCancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCellCancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Forms.DataGridView.DataError" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.DataError> Obsługa zdarzenia umożliwia obsługę wyjątków zgłaszanych przez kod poza formantem (na przykład przez zewnętrzne źródło danych). Użyj właściwości, aby określić stan <xref:System.Windows.Forms.DataGridView> w momencie wyjątku. <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> Użyj właściwości, aby pobrać dane wyjątku. Jeśli chcesz obsłużyć wyjątek przez dodatkowe procedury obsługi zdarzeń, ustaw <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> właściwość na. `true`  
  
 Właściwości <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> i<xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A> zwykle wskazują komórkę, w której wystąpił błąd danych. Gdy błąd wystąpi w zewnętrznym źródle danych, źródło danych może nie podawać kolumny, w której wystąpił błąd. W tym przypadku <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> Właściwość zwykle wskazuje kolumnę bieżącej komórki w momencie błędu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak odpowiedzieć na informacje dostarczone przez <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs> klasę. Ten przykład jest częścią większego przykładu dostępnego w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> temacie Omówienie klas.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewDataErrorEventArgs (Exception exception, int columnIndex, int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, int32 columnIndex, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewDataErrorEventArgs.#ctor(System.Exception,System.Int32,System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewDataErrorEventArgs(Exception ^ exception, int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewDataErrorEventArgs : Exception * int * int * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; System.Windows.Forms.DataGridViewDataErrorEventArgs" Usage="new System.Windows.Forms.DataGridViewDataErrorEventArgs (exception, columnIndex, rowIndex, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="exception">Wyjątek, który wystąpił.</param>
        <param name="columnIndex">Indeks kolumny komórki, która wywołała <see cref="E:System.Windows.Forms.DataGridView.DataError" />.</param>
        <param name="rowIndex">Indeks wiersza komórki, która wywołała <see cref="E:System.Windows.Forms.DataGridView.DataError" />.</param>
        <param name="context">Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> wartości wskazujących kontekst, w którym wystąpił błąd.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewDataErrorContexts Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewDataErrorContexts Context" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As DataGridViewDataErrorContexts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewDataErrorContexts Context { System::Windows::Forms::DataGridViewDataErrorContexts get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Windows.Forms.DataGridViewDataErrorContexts" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorContexts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szczegółowe informacje o stanie <see cref="T:System.Windows.Forms.DataGridView" /> wystąpienia błędu.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> wartości, które określają kontekst, w którym wystąpił błąd.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy członkowskie `OR` <xref:System.Windows.Forms.DataGridView> wyliczenia można łączyć za pomocą operatora bitowego, aby reprezentować stan związany z danymi, gdy wystąpił błąd danych. <xref:System.Windows.Forms.DataGridViewDataErrorContexts> Na przykład, jeśli użytkownik wprowadzi nieprawidłową wartość komórki (na przykład wprowadzając nazwę w komórce wymagającej daty), a następnie wybierze inną komórkę, <xref:System.Windows.Forms.DataGridView> spróbuje zatwierdzić nieprawidłową wartość komórki. Gdy zatwierdzenie nie powiedzie <xref:System.Windows.Forms.DataGridView> się, zostanie <xref:System.Windows.Forms.DataGridView.DataError> zgłoszone <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> zdarzenie, którego właściwość będzie miała <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> wartość <xref:System.Windows.Forms.DataGridViewDataErrorContexts.CurrentCellChange>i.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zbadać kontekst błędu. Ten przykład jest częścią większego przykładu dostępnego w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> temacie Omówienie klas.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek, który reprezentuje błąd.</summary>
        <value><see cref="T:System.Exception" /> Reprezentuje błąd.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby obsłużyć wyjątek przez więcej niż <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>jeden, Zgłoś wyjątek ponownie na końcu procedury obsługi przez <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> ustawienie właściwości na `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sprawdzanie <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> właściwości. Ten przykład jest częścią większego przykładu dostępnego w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> temacie Omówienie klas.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThrowException : bool with get, set" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zgłosić wyjątek po <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" /> zakończeniu delegata.</summary>
        <value><see langword="true" />Jeśli wyjątek powinien być zgłoszony; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na `false` , <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> Jeśli ma ona reprezentację wyjątku reprezentowanego przez <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> Właściwość i nie chcesz propagować wyjątku do innego <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> , który może obsłużyć <xref:System.Windows.Forms.DataGridView.DataError> zdarzenie.  
  
 Na potrzeby debugowania pomocne może być propagowanie wyjątku i zbadanie śladu stosu w celu uzyskania informacji dotyczących kontekstu błędu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> właściwości, aby wskazać, że wyjątku nie należy zgłaszać. Ten przykład jest częścią większego przykładu dostępnego w <xref:System.Windows.Forms.DataGridViewComboBoxColumn> temacie Omówienie klas.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">W <see langword="null" /> <see langword="true" /> przypadkuustawieniatejwłaściwościna<see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" /> wartość właściwość jest.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
  </Members>
</Type>
